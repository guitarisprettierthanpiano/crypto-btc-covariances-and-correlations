"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
var load_script_1 = __importDefault(require("load-script"));
var react_1 = __importDefault(require("react"));
exports.defaultContext = {
    input: 'ascii',
    get MathJax() { return window.MathJax; },
};
exports.Provider = (_a = react_1.default.createContext(exports.defaultContext), _a.Provider), exports.Consumer = _a.Consumer;
var Context = (function (_super) {
    __extends(Context, _super);
    function Context(props) {
        var _this = _super.call(this, props) || this;
        _this.state = { loaded: false };
        _this.onLoad = _this.onLoad.bind(_this);
        return _this;
    }
    Context.prototype.componentDidMount = function () {
        var script = this.props.script;
        if (!script) {
            return this.onLoad();
        }
        load_script_1.default(script, this.onLoad);
    };
    Context.prototype.onLoad = function () {
        var _this = this;
        var options = this.props.options;
        var MathJax = window.MathJax;
        MathJax.Hub.Config(options);
        MathJax.Hub.Register.StartupHook('End', function () {
            MathJax.Hub.processSectionDelay = _this.props.delay;
            if (_this.props.didFinishTypeset) {
                _this.props.didFinishTypeset();
            }
            if (_this.props.onLoad) {
                _this.props.onLoad();
            }
            _this.setState({
                loaded: true
            });
        });
        MathJax.Hub.Register.MessageHook('Math Processing Error', function (message) {
            if (_this.props.onError) {
                _this.props.onError(MathJax, message);
            }
        });
    };
    Context.prototype.render = function () {
        if (!this.state.loaded && !this.props.noGate) {
            return this.props.loading;
        }
        return react_1.default.createElement(exports.Provider, { value: {
                input: 'ascii',
                MathJax: window.MathJax
            } }, this.props.children);
    };
    Context.defaultProps = {
        script: 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML',
        input: 'ascii',
        delay: 0,
        options: {},
        loading: null,
        noGate: false
    };
    return Context;
}(react_1.default.Component));
exports.default = Context;
//# sourceMappingURL=Context.js.map