"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var Context_1 = require("./Context");
var types = {
    ascii: 'asciimath',
    tex: 'tex'
};
var Node = (function (_super) {
    __extends(Node, _super);
    function Node() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.span = react_1.default.createRef();
        return _this;
    }
    Node.prototype.componentDidMount = function () {
        this.typeset();
    };
    Node.prototype.componentDidUpdate = function (prevProps) {
        var forceUpdate = prevProps.inline !== this.props.inline || prevProps.children !== this.props.children;
        this.typeset(forceUpdate);
    };
    Node.prototype.shouldComponentUpdate = function (nextProps, nextState, nextContext) {
        return (nextProps.children !== this.props.children ||
            nextProps.inline !== this.props.inline);
    };
    Node.prototype.componentWillUnmount = function () {
        this.clear();
    };
    Node.prototype.clear = function () {
        var MathJax = this.props.context.MathJax;
        if (!this.script) {
            return;
        }
        var jax = MathJax.Hub.getJaxFor(this.script);
        if (jax) {
            jax.Remove();
        }
    };
    Node.prototype.typeset = function (forceUpdate) {
        var MathJax = this.props.context.MathJax;
        if (!MathJax) {
            throw Error('Could not find MathJax while attempting typeset! Probably MathJax script hasn\'t been loaded or MathJax.Context is not in the hierarchy');
        }
        var text = this.props.children;
        if (forceUpdate) {
            this.clear();
        }
        if (forceUpdate || !this.script) {
            this.setScriptText(text);
        }
        MathJax.Hub.Queue(MathJax.Hub.Reprocess(this.script, this.props.onRender));
    };
    Node.prototype.setScriptText = function (text) {
        var inline = this.props.inline;
        var type = types[this.context.input];
        if (!this.script) {
            this.script = document.createElement('script');
            this.script.type = "math/" + type + "; " + (inline ? '' : 'mode=display');
            this.span.current.appendChild(this.script);
        }
        this.script.text = text;
    };
    Node.prototype.render = function () {
        return react_1.default.createElement("span", { ref: this.span });
    };
    Node.defaultProps = {
        inline: false,
        onRender: function () { return ({}); },
    };
    return Node;
}(react_1.default.Component));
exports.default = (function (props) { return (react_1.default.createElement(Context_1.Consumer, null, function (context) { return (react_1.default.createElement(Node, __assign({}, props, { context: context }))); })); });
//# sourceMappingURL=Node.js.map