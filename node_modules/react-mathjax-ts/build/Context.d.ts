import { IContext, Input, MathJaxUnknown } from '.';
import React from 'react';
export declare const defaultContext: {
    input: Input;
    readonly MathJax: any;
};
export declare const Provider: React.ProviderExoticComponent<React.ProviderProps<IContext>>, Consumer: React.ExoticComponent<React.ConsumerProps<IContext>>;
interface IProps {
    children: React.ReactNode;
    didFinishTypeset?: (...args: any[]) => any;
    script?: string | false;
    input?: Input;
    delay?: number;
    options?: {};
    loading?: React.ReactNode;
    noGate?: boolean;
    onLoad: (...args: any[]) => any;
    onError: (MathJax: MathJaxUnknown, error: any) => any;
}
interface IState {
    loaded: boolean;
}
declare class Context extends React.Component<IProps, IState> {
    static defaultProps: {
        script: string;
        input: string;
        delay: number;
        options: {};
        loading: null;
        noGate: boolean;
    };
    constructor(props: any);
    componentDidMount(): void;
    onLoad(): void;
    render(): {} | null | undefined;
}
export default Context;
