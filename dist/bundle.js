/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={28:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(537),a=t.n(r),o=t(645),i=t.n(o)()(a());i.push([e.id,"body{\r\n    overflow-y: scroll!important;\r\n}\r\n*{\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n                                             \r\n    transition: all .05s ease-in-out; \r\n\r\n    font-family: 'Lato', 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode';\r\n    \r\n    color: rgb(71, 13, 33);\r\n}\r\np, span, button, input, textarea, label, a, td, th, li{\r\n    font-size: 18px;\r\n    text-align: justify;\r\n    text-justify: center;\r\n    \r\n    line-height: 1.50;\r\n}\r\ntd, th{\r\n    text-align: end;\r\n    text-transform: uppercase;\r\n\r\n    padding: 2px;\r\n    padding-left: 18px;\r\n    padding-right: 18px;\r\n}\r\n\r\n/*the container*/\r\n#root{\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: repeat(auto auto);\r\n    max-width: 100vw;\r\n\r\n    background-color:rgb(20, 20, 20)\r\n}\r\nbody, html{\r\n    background-color:rgb(20, 20, 20)\r\n}\r\n \r\n/* nav */\r\nnav{\r\n    height: 30px;\r\n    background-color:rgb(71, 13, 33);\r\n}\r\nnav ul{\r\n    display: grid;\r\n    grid-template-columns: 1fr auto auto auto 1fr;\r\n    grid-template-rows: 1fr;\r\n    background-color:rgb(71, 13, 33);\r\n}\r\nnav ul a li{\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n    font-weight: 500;\r\n    font-size: 20px;\r\n    list-style-type: none;\r\n    text-decoration: underline rgba(255, 166, 0, 0);\r\n    color: rgb(249, 228, 212);\r\n    border: 0px;\r\n    line-height: 1.4;\r\n}\r\n\r\n/*the main data page*/\r\n\r\n#main-container{\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: repeat(auto,auto);\r\n\r\n    justify-items: center;\r\n\r\n    background-color: #dfa57c;\r\n}\r\n#main-container h1{\r\n    margin-top: 20px;\r\n    letter-spacing: 2px;\r\n    text-transform: uppercase;\r\n    font-weight: 600;\r\n\r\n    color: rgb(71, 13, 33);\r\n    text-shadow: 1px 1px rgb(71, 13, 33);\r\n}\r\n#main-container h4{\r\n    font-weight: 500;\r\n    color: rgb(71, 13, 33);\r\n}\r\n\r\nbutton{\r\n    background-color: rgba(255, 166, 0, 0);\r\n    width: 30px;\r\n    height: 30px;\r\n    text-align: center;\r\n    font-size: 24px;\r\n\r\n\r\n    border: none;\r\n\r\n    cursor: pointer;\r\n    align-self: center;\r\n}\r\n\r\n\r\n/*this is from https://codepen.io/teerapuch/pen/vLJXeR */\r\nbutton:hover{\r\n    animation-name: spin;\r\n    animation-duration: 1000ms;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear; \r\n    /* transform: rotate(3deg); */\r\n     /* transform: rotate(0.3rad);/ */\r\n     /* transform: rotate(3grad); */ \r\n     /* transform: rotate(.03turn);  */\r\n  }\r\n  @keyframes spin {\r\n      from {\r\n          transform:rotate(0deg);\r\n      }\r\n      to {\r\n          transform:rotate(360deg);\r\n    }\r\n}\r\n\r\ntable{\r\n    border-collapse: collapse;\r\n    border: 1px solid rgb(214, 125, 62);\r\n\r\n    border-radius: 4px;\r\n    box-shadow: 0 1px 1px rgba(71, 13, 33, 0.3),\r\n                0 1px 1px rgba(71, 13, 33, 0.6);\r\n\r\n    margin: 10px;\r\n    margin-top: 4px;\r\n    margin-bottom: 0px;\r\n\r\n    background-color: rgb(156, 41, 87);\r\n}\r\nth{\r\n    text-align: center;\r\n    padding: 2px;\r\n    padding-left: 8px;\r\n    padding-right: 8px;\r\n    font-weight: 500;\r\n}\r\n.rank, .ranks, .symbols, .name{\r\n    text-align: center!important;\r\n}\r\n.tr1{\r\n    background-color: rgb(71, 13, 33)!important;\r\n}\r\n.tr1 *{\r\n    color: rgb(249, 228, 212);\r\n}\r\n\r\n\r\ntr:nth-child(2n){\r\n    background-color: rgb(255, 255, 255, 0);\r\n    z-index: -2;\r\n}\r\ntr:nth-child(2n+1){\r\n    background-color: rgba(196, 196, 196, 0);\r\n    z-index: -2;\r\n} \r\n\r\n.usd-coin, .compound-usd-coin, .binance-usd, .tether, .dai, .internet-computer{\r\n    /*background-color: rgba(255, 166, 0, 0.1)!important;*/\r\n    text-transform: uppercase;\r\n}\r\ntd:nth-child(3), td:nth-child(4), td:nth-child(5), td:nth-child(6), td:nth-child(7), td:nth-child(8), td:nth-child(9){\r\n    text-align: end;\r\n}\r\n#main-container span{\r\n    margin-left: 10px;\r\n    margin-bottom: 20px;\r\n}\r\na{\r\n    cursor: pointer;\r\n    font-weight: 500;\r\n}\r\n\r\n\r\n/* I got this code from\r\nhttps://jsfiddle.net/zinoui/FSpds/ */\r\ntd{\r\n    cursor: crosshair;\r\n    color: rgb(249, 228, 212, 0.9);\r\n}\r\ntable{\r\n    overflow: hidden;\r\n    z-index: 1;\r\n}\r\ntable tbody td, table thead th {\r\n    position: relative;\r\n}\r\ntd:hover::before {\r\n    background-color: rgba(71, 13, 33, 0.5);\r\n    content:'';\r\n    height: 100%;\r\n    left: -5000px;\r\n    position: absolute;\r\n    top: 0;\r\n    width: 10000px;\r\n    z-index: -1; \r\n}\r\ntd:hover::after {\r\n    background-color: rgba(71, 13, 33, 0.5);\r\n    content:'';\r\n    color: black;\r\n    height: 10000px;\r\n    left: 0;\r\n    position: absolute;\r\n    top: -5000px; \r\n    width: 100%;\r\n    z-index: -1;\r\n}\r\ntd:hover{\r\n    background-color: rgb(20, 20, 20, 0.1);\r\n}\r\n\r\n/* faq */\r\n#faq-container{\r\n    display: grid;\r\n    grid-template-columns: 200px auto;\r\n    grid-template-rows: auto 1fr;\r\n\r\n    height: calc(100vh - 30px);\r\n    overflow: hidden;\r\n    background-color: rgb(255, 240, 222);\r\n}\r\n.sticky-sidebar{\r\n    grid-row: 1 / span 2;\r\n    grid-column: 1;\r\n    height: 100%;\r\n\r\n    width: 200px;\r\n    overflow-x: hidden;\r\n    position: fixed;\r\n\r\n    z-index: 1;\r\n    background-color:rgb(71, 13, 33);\r\n\r\n    display: grid;\r\n    align-content: center;\r\n    justify-content: center;\r\n}\r\n.sticky-sidebar ul{\r\n    list-style-type: none;\r\n    width: 200px;\r\n}\r\n.sticky-sidebar ul li{\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    line-height: 1.4;\r\n\r\n    width: 100%;\r\n    text-indent: 30px;\r\n    color: rgb(249, 228, 212);\r\n\r\n    text-transform: uppercase;\r\n}\r\n.none:hover{\r\n    background-color: rgb(156, 15, 72);\r\n    color: rgb(249, 228, 212);\r\n}\r\n.li-header{\r\n    text-indent: 10px!important;\r\n    text-transform: uppercase;\r\n    cursor:auto!important;\r\n    margin-top: 10px;\r\n    text-decoration: underline rgb(214, 125, 62);\r\n}\r\n.current{\r\n    cursor:default!important;\r\n    color: rgb(249, 228, 212)!important;\r\n    background-color: rgb(156, 15, 72)!important;\r\n}\r\n\r\n\r\n.faq-h1{\r\n    grid-row: 1;\r\n    grid-column: 1 / span 2;\r\n    margin-top: 20px;\r\n    margin-left: 10px;\r\n\r\n    max-width: 1000px;\r\n    justify-self: center;\r\n}\r\n.faq-h1 h1{\r\n    letter-spacing: 1px;\r\n    font-weight: 500;\r\n    max-width: 1000px;\r\n    margin-bottom: 20px;\r\n}\r\n.faq-subcontainer{\r\n    grid-row: 2;\r\n    grid-column: 2;\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 1fr;\r\n}\r\n.desc-mean, .desc-var, .desc-vol, .desc-cov, .desc-cor, .desc-data, .desc-ex{\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: repeat(auto, auto);\r\n\r\n    justify-self: center;\r\n\r\n    padding: 20px;\r\n\r\n    max-width: 1000px;\r\n    border-radius: 2px;\r\n\r\n    border-top: 1px solid rgb(197, 197, 197);\r\n}\r\n.faq-subcontainer * .MathJax{\r\n    padding-left:30px;\r\n    padding-right: 30px;\r\n    max-width: 1200px;\r\n}\r\n.faq-subcontainer * ul{\r\n    margin-left: 60px;\r\n    margin-right: 60px;\r\n    max-width: 1200px;\r\n}\r\n.faq-subcontainer * h2{\r\n    margin-bottom: 4px;\r\n    font-weight: 500;\r\n}\r\n.faq-subcontainer * p{\r\n    max-width: 1200px;\r\n}\r\n.faq-subcontainer * p *{\r\n    margin: 0px!important;\r\n    padding: 0px!important;\r\n}\r\n.faq-subcontainer * .mjs, .faq-subcontainer * .mjs *{\r\n    font-size: 28px;\r\n    color: rgb(24, 24, 24);\r\n}\r\n\r\n/* ABOUT */\r\n#about-container{\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: auto auto 1fr;\r\n\r\n    min-height: 92vh;\r\n}\r\n#about-container .about-h1{\r\n    margin-top: 20px;\r\n    margin-left: 10px;\r\n    margin-bottom: 20px;\r\n\r\n    max-width: 1200px;\r\n    justify-self: center;\r\n}\r\n.about-h1 h1{\r\n    letter-spacing: 1px;\r\n    font-weight: 500;\r\n}\r\n.p-container{\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: repeat(auto, auto);\r\n\r\n    justify-self: center;\r\n\r\n    padding: 20px;\r\n    max-width: 1200px;\r\n    border-radius: 2px;\r\n\r\n    border-top: 1px solid rgb(218, 218, 218);\r\n    background-color: #f7931a;\r\n    \r\n}\r\n.p-container p{\r\n    margin: 10px;\r\n}\r\n\r\n\r\n/* LAPTOP SIZE */\r\n@media screen and (max-width: 1440px){\r\n    .mjs, .mjs *{\r\n        font-size: 22px!important;\r\n    }\r\n}\r\n\r\n/* IPAD SIZE */\r\n@media screen and (max-width: 1023px){\r\n    p, span, button, input, textarea, label, a, td, th, li{\r\n        font-size: 16px;\r\n    }\r\n    h1{\r\n        font-size: 30px;\r\n    }\r\n    .mjs, .mjs *{\r\n        font-size: 20px!important;\r\n    }\r\n    th, td{\r\n        padding: 2px;\r\n        padding-left: 4px;\r\n        padding-right: 4px;\r\n    }\r\n    table{\r\n        margin: 4px;\r\n    }\r\n    .faq-h1{\r\n        padding-left: 50px;\r\n    }\r\n}\r\n\r\n/* h1 too long */\r\n@media screen and (max-width: 711px){\r\n    table{\r\n        \r\n    overflow-x: scroll;\r\n    overflow-y: scroll;\r\n    }\r\n    h1{\r\n        font-size: 20px;\r\n    }\r\n    h4, h2{\r\n        font-size: 12px;\r\n    }\r\n    p, .faq-subcontainer * li{\r\n        font-size: 12px;\r\n    }\r\n    .mjs, .mjs *{\r\n        font-size: 16px!important;\r\n    }\r\n\r\n    .faq-h1{\r\n        grid-row: 1;\r\n        grid-column: 1 / span 2;\r\n        text-align: center;\r\n        text-justify: center;\r\n\r\n        width: 70vw;\r\n        justify-self: center;\r\n    }\r\n    .faq-h1 h1{\r\n        letter-spacing: 2px;\r\n        font-weight: 500;\r\n        margin-bottom: 4px;\r\n        margin-left: 12px;\r\n        align-self: center;\r\n        justify-self: center;\r\n    }\r\n    .desc-mean, .desc-var, .desc-vol, .desc-cov, .desc-cor, .desc-data, .desc-ex{\r\n        padding: 2px;\r\n        width: 100%;\r\n        overflow-wrap: break-word;\r\n        justify-self: center;\r\n    }\r\n\r\n    #faq-container{\r\n        grid-template-columns: auto auto;\r\n        grid-template-rows: auto 1fr;\r\n    }\r\n    .faq-subcontainer * .MathJax{\r\n        margin-left: 2px;\r\n        margin-right: 2px;\r\n        max-width: 60vw;\r\n        overflow-wrap: break-word;\r\n        display: none;\r\n    }\r\n    .faq-subcontainer * ul{\r\n        margin-left: 2px;\r\n        margin-right: 2px;\r\n        max-width: 50vw;\r\n        display: none;\r\n    }\r\n    .faq-subcontainer * p{\r\n        max-width: 60vw;\r\n        padding-left: 4px;\r\n    }\r\n\r\n    table tbody td, table thead th {\r\n        position: relative;\r\n    }\r\n    td:hover::before {\r\n        background-color: rgba(235, 235, 235, 0);\r\n        content:'';\r\n        height: 0%;\r\n        left: 0px;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 0px;\r\n        z-index: -1; \r\n        display: none;\r\n    }\r\n    td:hover::after {\r\n        background-color: rgba(235, 235, 235, 0);\r\n        content:'';\r\n        color: rgba(0, 0, 0, 0);\r\n        height: 10000px;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0px; \r\n        width: 0%;\r\n        z-index: -1;\r\n        display: none;\r\n    }\r\n    td:hover{\r\n        background-color: rgba(215, 215, 215, 0);\r\n        display: none;\r\n    }\r\n\r\n\r\n    .sticky-sidebar{\r\n        grid-row: 1 / span 2;\r\n        grid-column: 1;\r\n        height: 100%;\r\n    \r\n        width: 30vw;\r\n    }\r\n    .sticky-sidebar ul{\r\n        width: 30vw;\r\n    }\r\n    .sticky-sidebar ul li{\r\n        font-size: 12px;\r\n        line-height: 1.4;\r\n    \r\n        text-indent: 16px;\r\n    }\r\n    .li-header{\r\n        text-indent: 2px!important;\r\n    }\r\n    #hideonsmall{\r\n        display:none\r\n    }\r\n    \r\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,4BAA4B;AAChC;AACA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;;IAEV,gCAAgC;;IAEhC,iGAAiG;;IAEjG,sBAAsB;AAC1B;AACA;IACI,eAAe;IACf,mBAAmB;IACnB,oBAAoB;;IAEpB,iBAAiB;AACrB;AACA;IACI,eAAe;IACf,yBAAyB;;IAEzB,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA,gBAAgB;AAChB;IACI,aAAa;IACb,0BAA0B;IAC1B,qCAAqC;IACrC,gBAAgB;;IAEhB;AACJ;AACA;IACI;AACJ;;AAEA,QAAQ;AACR;IACI,YAAY;IACZ,gCAAgC;AACpC;AACA;IACI,aAAa;IACb,6CAA6C;IAC7C,uBAAuB;IACvB,gCAAgC;AACpC;AACA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,gBAAgB;IAChB,eAAe;IACf,qBAAqB;IACrB,+CAA+C;IAC/C,yBAAyB;IACzB,WAAW;IACX,gBAAgB;AACpB;;AAEA,qBAAqB;;AAErB;IACI,aAAa;IACb,0BAA0B;IAC1B,qCAAqC;;IAErC,qBAAqB;;IAErB,yBAAyB;AAC7B;AACA;IACI,gBAAgB;IAChB,mBAAmB;IACnB,yBAAyB;IACzB,gBAAgB;;IAEhB,sBAAsB;IACtB,oCAAoC;AACxC;AACA;IACI,gBAAgB;IAChB,sBAAsB;AAC1B;;AAEA;IACI,sCAAsC;IACtC,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,eAAe;;;IAGf,YAAY;;IAEZ,eAAe;IACf,kBAAkB;AACtB;;;AAGA,wDAAwD;AACxD;IACI,oBAAoB;IACpB,0BAA0B;IAC1B,mCAAmC;IACnC,iCAAiC;IACjC,6BAA6B;KAC5B,gCAAgC;KAChC,8BAA8B;KAC9B,iCAAiC;EACpC;EACA;MACI;UACI,sBAAsB;MAC1B;MACA;UACI,wBAAwB;IAC9B;AACJ;;AAEA;IACI,yBAAyB;IACzB,mCAAmC;;IAEnC,kBAAkB;IAClB;+CAC2C;;IAE3C,YAAY;IACZ,eAAe;IACf,kBAAkB;;IAElB,kCAAkC;AACtC;AACA;IACI,kBAAkB;IAClB,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;IAClB,gBAAgB;AACpB;AACA;IACI,4BAA4B;AAChC;AACA;IACI,2CAA2C;AAC/C;AACA;IACI,yBAAyB;AAC7B;;;AAGA;IACI,uCAAuC;IACvC,WAAW;AACf;AACA;IACI,wCAAwC;IACxC,WAAW;AACf;;AAEA;IACI,sDAAsD;IACtD,yBAAyB;AAC7B;AACA;IACI,eAAe;AACnB;AACA;IACI,iBAAiB;IACjB,mBAAmB;AACvB;AACA;IACI,eAAe;IACf,gBAAgB;AACpB;;;AAGA;oCACoC;AACpC;IACI,iBAAiB;IACjB,8BAA8B;AAClC;AACA;IACI,gBAAgB;IAChB,UAAU;AACd;AACA;IACI,kBAAkB;AACtB;AACA;IACI,uCAAuC;IACvC,UAAU;IACV,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,MAAM;IACN,cAAc;IACd,WAAW;AACf;AACA;IACI,uCAAuC;IACvC,UAAU;IACV,YAAY;IACZ,eAAe;IACf,OAAO;IACP,kBAAkB;IAClB,YAAY;IACZ,WAAW;IACX,WAAW;AACf;AACA;IACI,sCAAsC;AAC1C;;AAEA,QAAQ;AACR;IACI,aAAa;IACb,iCAAiC;IACjC,4BAA4B;;IAE5B,0BAA0B;IAC1B,gBAAgB;IAChB,oCAAoC;AACxC;AACA;IACI,oBAAoB;IACpB,cAAc;IACd,YAAY;;IAEZ,YAAY;IACZ,kBAAkB;IAClB,eAAe;;IAEf,UAAU;IACV,gCAAgC;;IAEhC,aAAa;IACb,qBAAqB;IACrB,uBAAuB;AAC3B;AACA;IACI,qBAAqB;IACrB,YAAY;AAChB;AACA;IACI,eAAe;IACf,eAAe;IACf,gBAAgB;;IAEhB,WAAW;IACX,iBAAiB;IACjB,yBAAyB;;IAEzB,yBAAyB;AAC7B;AACA;IACI,kCAAkC;IAClC,yBAAyB;AAC7B;AACA;IACI,2BAA2B;IAC3B,yBAAyB;IACzB,qBAAqB;IACrB,gBAAgB;IAChB,4CAA4C;AAChD;AACA;IACI,wBAAwB;IACxB,mCAAmC;IACnC,4CAA4C;AAChD;;;AAGA;IACI,WAAW;IACX,uBAAuB;IACvB,gBAAgB;IAChB,iBAAiB;;IAEjB,iBAAiB;IACjB,oBAAoB;AACxB;AACA;IACI,mBAAmB;IACnB,gBAAgB;IAChB,iBAAiB;IACjB,mBAAmB;AACvB;AACA;IACI,WAAW;IACX,cAAc;IACd,aAAa;IACb,0BAA0B;IAC1B,uBAAuB;AAC3B;AACA;IACI,aAAa;IACb,0BAA0B;IAC1B,sCAAsC;;IAEtC,oBAAoB;;IAEpB,aAAa;;IAEb,iBAAiB;IACjB,kBAAkB;;IAElB,wCAAwC;AAC5C;AACA;IACI,iBAAiB;IACjB,mBAAmB;IACnB,iBAAiB;AACrB;AACA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,iBAAiB;AACrB;AACA;IACI,kBAAkB;IAClB,gBAAgB;AACpB;AACA;IACI,iBAAiB;AACrB;AACA;IACI,qBAAqB;IACrB,sBAAsB;AAC1B;AACA;IACI,eAAe;IACf,sBAAsB;AAC1B;;AAEA,UAAU;AACV;IACI,aAAa;IACb,0BAA0B;IAC1B,iCAAiC;;IAEjC,gBAAgB;AACpB;AACA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,mBAAmB;;IAEnB,iBAAiB;IACjB,oBAAoB;AACxB;AACA;IACI,mBAAmB;IACnB,gBAAgB;AACpB;AACA;IACI,aAAa;IACb,0BAA0B;IAC1B,sCAAsC;;IAEtC,oBAAoB;;IAEpB,aAAa;IACb,iBAAiB;IACjB,kBAAkB;;IAElB,wCAAwC;IACxC,yBAAyB;;AAE7B;AACA;IACI,YAAY;AAChB;;;AAGA,gBAAgB;AAChB;IACI;QACI,yBAAyB;IAC7B;AACJ;;AAEA,cAAc;AACd;IACI;QACI,eAAe;IACnB;IACA;QACI,eAAe;IACnB;IACA;QACI,yBAAyB;IAC7B;IACA;QACI,YAAY;QACZ,iBAAiB;QACjB,kBAAkB;IACtB;IACA;QACI,WAAW;IACf;IACA;QACI,kBAAkB;IACtB;AACJ;;AAEA,gBAAgB;AAChB;IACI;;IAEA,kBAAkB;IAClB,kBAAkB;IAClB;IACA;QACI,eAAe;IACnB;IACA;QACI,eAAe;IACnB;IACA;QACI,eAAe;IACnB;IACA;QACI,yBAAyB;IAC7B;;IAEA;QACI,WAAW;QACX,uBAAuB;QACvB,kBAAkB;QAClB,oBAAoB;;QAEpB,WAAW;QACX,oBAAoB;IACxB;IACA;QACI,mBAAmB;QACnB,gBAAgB;QAChB,kBAAkB;QAClB,iBAAiB;QACjB,kBAAkB;QAClB,oBAAoB;IACxB;IACA;QACI,YAAY;QACZ,WAAW;QACX,yBAAyB;QACzB,oBAAoB;IACxB;;IAEA;QACI,gCAAgC;QAChC,4BAA4B;IAChC;IACA;QACI,gBAAgB;QAChB,iBAAiB;QACjB,eAAe;QACf,yBAAyB;QACzB,aAAa;IACjB;IACA;QACI,gBAAgB;QAChB,iBAAiB;QACjB,eAAe;QACf,aAAa;IACjB;IACA;QACI,eAAe;QACf,iBAAiB;IACrB;;IAEA;QACI,kBAAkB;IACtB;IACA;QACI,wCAAwC;QACxC,UAAU;QACV,UAAU;QACV,SAAS;QACT,kBAAkB;QAClB,MAAM;QACN,UAAU;QACV,WAAW;QACX,aAAa;IACjB;IACA;QACI,wCAAwC;QACxC,UAAU;QACV,uBAAuB;QACvB,eAAe;QACf,OAAO;QACP,kBAAkB;QAClB,QAAQ;QACR,SAAS;QACT,WAAW;QACX,aAAa;IACjB;IACA;QACI,wCAAwC;QACxC,aAAa;IACjB;;;IAGA;QACI,oBAAoB;QACpB,cAAc;QACd,YAAY;;QAEZ,WAAW;IACf;IACA;QACI,WAAW;IACf;IACA;QACI,eAAe;QACf,gBAAgB;;QAEhB,iBAAiB;IACrB;IACA;QACI,0BAA0B;IAC9B;IACA;QACI;IACJ;;AAEJ",sourcesContent:["body{\r\n    overflow-y: scroll!important;\r\n}\r\n*{\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n                                             \r\n    transition: all .05s ease-in-out; \r\n\r\n    font-family: 'Lato', 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode';\r\n    \r\n    color: rgb(71, 13, 33);\r\n}\r\np, span, button, input, textarea, label, a, td, th, li{\r\n    font-size: 18px;\r\n    text-align: justify;\r\n    text-justify: center;\r\n    \r\n    line-height: 1.50;\r\n}\r\ntd, th{\r\n    text-align: end;\r\n    text-transform: uppercase;\r\n\r\n    padding: 2px;\r\n    padding-left: 18px;\r\n    padding-right: 18px;\r\n}\r\n\r\n/*the container*/\r\n#root{\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: repeat(auto auto);\r\n    max-width: 100vw;\r\n\r\n    background-color:rgb(20, 20, 20)\r\n}\r\nbody, html{\r\n    background-color:rgb(20, 20, 20)\r\n}\r\n \r\n/* nav */\r\nnav{\r\n    height: 30px;\r\n    background-color:rgb(71, 13, 33);\r\n}\r\nnav ul{\r\n    display: grid;\r\n    grid-template-columns: 1fr auto auto auto 1fr;\r\n    grid-template-rows: 1fr;\r\n    background-color:rgb(71, 13, 33);\r\n}\r\nnav ul a li{\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n    font-weight: 500;\r\n    font-size: 20px;\r\n    list-style-type: none;\r\n    text-decoration: underline rgba(255, 166, 0, 0);\r\n    color: rgb(249, 228, 212);\r\n    border: 0px;\r\n    line-height: 1.4;\r\n}\r\n\r\n/*the main data page*/\r\n\r\n#main-container{\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: repeat(auto,auto);\r\n\r\n    justify-items: center;\r\n\r\n    background-color: #dfa57c;\r\n}\r\n#main-container h1{\r\n    margin-top: 20px;\r\n    letter-spacing: 2px;\r\n    text-transform: uppercase;\r\n    font-weight: 600;\r\n\r\n    color: rgb(71, 13, 33);\r\n    text-shadow: 1px 1px rgb(71, 13, 33);\r\n}\r\n#main-container h4{\r\n    font-weight: 500;\r\n    color: rgb(71, 13, 33);\r\n}\r\n\r\nbutton{\r\n    background-color: rgba(255, 166, 0, 0);\r\n    width: 30px;\r\n    height: 30px;\r\n    text-align: center;\r\n    font-size: 24px;\r\n\r\n\r\n    border: none;\r\n\r\n    cursor: pointer;\r\n    align-self: center;\r\n}\r\n\r\n\r\n/*this is from https://codepen.io/teerapuch/pen/vLJXeR */\r\nbutton:hover{\r\n    animation-name: spin;\r\n    animation-duration: 1000ms;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear; \r\n    /* transform: rotate(3deg); */\r\n     /* transform: rotate(0.3rad);/ */\r\n     /* transform: rotate(3grad); */ \r\n     /* transform: rotate(.03turn);  */\r\n  }\r\n  @keyframes spin {\r\n      from {\r\n          transform:rotate(0deg);\r\n      }\r\n      to {\r\n          transform:rotate(360deg);\r\n    }\r\n}\r\n\r\ntable{\r\n    border-collapse: collapse;\r\n    border: 1px solid rgb(214, 125, 62);\r\n\r\n    border-radius: 4px;\r\n    box-shadow: 0 1px 1px rgba(71, 13, 33, 0.3),\r\n                0 1px 1px rgba(71, 13, 33, 0.6);\r\n\r\n    margin: 10px;\r\n    margin-top: 4px;\r\n    margin-bottom: 0px;\r\n\r\n    background-color: rgb(156, 41, 87);\r\n}\r\nth{\r\n    text-align: center;\r\n    padding: 2px;\r\n    padding-left: 8px;\r\n    padding-right: 8px;\r\n    font-weight: 500;\r\n}\r\n.rank, .ranks, .symbols, .name{\r\n    text-align: center!important;\r\n}\r\n.tr1{\r\n    background-color: rgb(71, 13, 33)!important;\r\n}\r\n.tr1 *{\r\n    color: rgb(249, 228, 212);\r\n}\r\n\r\n\r\ntr:nth-child(2n){\r\n    background-color: rgb(255, 255, 255, 0);\r\n    z-index: -2;\r\n}\r\ntr:nth-child(2n+1){\r\n    background-color: rgba(196, 196, 196, 0);\r\n    z-index: -2;\r\n} \r\n\r\n.usd-coin, .compound-usd-coin, .binance-usd, .tether, .dai, .internet-computer{\r\n    /*background-color: rgba(255, 166, 0, 0.1)!important;*/\r\n    text-transform: uppercase;\r\n}\r\ntd:nth-child(3), td:nth-child(4), td:nth-child(5), td:nth-child(6), td:nth-child(7), td:nth-child(8), td:nth-child(9){\r\n    text-align: end;\r\n}\r\n#main-container span{\r\n    margin-left: 10px;\r\n    margin-bottom: 20px;\r\n}\r\na{\r\n    cursor: pointer;\r\n    font-weight: 500;\r\n}\r\n\r\n\r\n/* I got this code from\r\nhttps://jsfiddle.net/zinoui/FSpds/ */\r\ntd{\r\n    cursor: crosshair;\r\n    color: rgb(249, 228, 212, 0.9);\r\n}\r\ntable{\r\n    overflow: hidden;\r\n    z-index: 1;\r\n}\r\ntable tbody td, table thead th {\r\n    position: relative;\r\n}\r\ntd:hover::before {\r\n    background-color: rgba(71, 13, 33, 0.5);\r\n    content:'';\r\n    height: 100%;\r\n    left: -5000px;\r\n    position: absolute;\r\n    top: 0;\r\n    width: 10000px;\r\n    z-index: -1; \r\n}\r\ntd:hover::after {\r\n    background-color: rgba(71, 13, 33, 0.5);\r\n    content:'';\r\n    color: black;\r\n    height: 10000px;\r\n    left: 0;\r\n    position: absolute;\r\n    top: -5000px; \r\n    width: 100%;\r\n    z-index: -1;\r\n}\r\ntd:hover{\r\n    background-color: rgb(20, 20, 20, 0.1);\r\n}\r\n\r\n/* faq */\r\n#faq-container{\r\n    display: grid;\r\n    grid-template-columns: 200px auto;\r\n    grid-template-rows: auto 1fr;\r\n\r\n    height: calc(100vh - 30px);\r\n    overflow: hidden;\r\n    background-color: rgb(255, 240, 222);\r\n}\r\n.sticky-sidebar{\r\n    grid-row: 1 / span 2;\r\n    grid-column: 1;\r\n    height: 100%;\r\n\r\n    width: 200px;\r\n    overflow-x: hidden;\r\n    position: fixed;\r\n\r\n    z-index: 1;\r\n    background-color:rgb(71, 13, 33);\r\n\r\n    display: grid;\r\n    align-content: center;\r\n    justify-content: center;\r\n}\r\n.sticky-sidebar ul{\r\n    list-style-type: none;\r\n    width: 200px;\r\n}\r\n.sticky-sidebar ul li{\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    line-height: 1.4;\r\n\r\n    width: 100%;\r\n    text-indent: 30px;\r\n    color: rgb(249, 228, 212);\r\n\r\n    text-transform: uppercase;\r\n}\r\n.none:hover{\r\n    background-color: rgb(156, 15, 72);\r\n    color: rgb(249, 228, 212);\r\n}\r\n.li-header{\r\n    text-indent: 10px!important;\r\n    text-transform: uppercase;\r\n    cursor:auto!important;\r\n    margin-top: 10px;\r\n    text-decoration: underline rgb(214, 125, 62);\r\n}\r\n.current{\r\n    cursor:default!important;\r\n    color: rgb(249, 228, 212)!important;\r\n    background-color: rgb(156, 15, 72)!important;\r\n}\r\n\r\n\r\n.faq-h1{\r\n    grid-row: 1;\r\n    grid-column: 1 / span 2;\r\n    margin-top: 20px;\r\n    margin-left: 10px;\r\n\r\n    max-width: 1000px;\r\n    justify-self: center;\r\n}\r\n.faq-h1 h1{\r\n    letter-spacing: 1px;\r\n    font-weight: 500;\r\n    max-width: 1000px;\r\n    margin-bottom: 20px;\r\n}\r\n.faq-subcontainer{\r\n    grid-row: 2;\r\n    grid-column: 2;\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 1fr;\r\n}\r\n.desc-mean, .desc-var, .desc-vol, .desc-cov, .desc-cor, .desc-data, .desc-ex{\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: repeat(auto, auto);\r\n\r\n    justify-self: center;\r\n\r\n    padding: 20px;\r\n\r\n    max-width: 1000px;\r\n    border-radius: 2px;\r\n\r\n    border-top: 1px solid rgb(197, 197, 197);\r\n}\r\n.faq-subcontainer * .MathJax{\r\n    padding-left:30px;\r\n    padding-right: 30px;\r\n    max-width: 1200px;\r\n}\r\n.faq-subcontainer * ul{\r\n    margin-left: 60px;\r\n    margin-right: 60px;\r\n    max-width: 1200px;\r\n}\r\n.faq-subcontainer * h2{\r\n    margin-bottom: 4px;\r\n    font-weight: 500;\r\n}\r\n.faq-subcontainer * p{\r\n    max-width: 1200px;\r\n}\r\n.faq-subcontainer * p *{\r\n    margin: 0px!important;\r\n    padding: 0px!important;\r\n}\r\n.faq-subcontainer * .mjs, .faq-subcontainer * .mjs *{\r\n    font-size: 28px;\r\n    color: rgb(24, 24, 24);\r\n}\r\n\r\n/* ABOUT */\r\n#about-container{\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: auto auto 1fr;\r\n\r\n    min-height: 92vh;\r\n}\r\n#about-container .about-h1{\r\n    margin-top: 20px;\r\n    margin-left: 10px;\r\n    margin-bottom: 20px;\r\n\r\n    max-width: 1200px;\r\n    justify-self: center;\r\n}\r\n.about-h1 h1{\r\n    letter-spacing: 1px;\r\n    font-weight: 500;\r\n}\r\n.p-container{\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: repeat(auto, auto);\r\n\r\n    justify-self: center;\r\n\r\n    padding: 20px;\r\n    max-width: 1200px;\r\n    border-radius: 2px;\r\n\r\n    border-top: 1px solid rgb(218, 218, 218);\r\n    background-color: #f7931a;\r\n    \r\n}\r\n.p-container p{\r\n    margin: 10px;\r\n}\r\n\r\n\r\n/* LAPTOP SIZE */\r\n@media screen and (max-width: 1440px){\r\n    .mjs, .mjs *{\r\n        font-size: 22px!important;\r\n    }\r\n}\r\n\r\n/* IPAD SIZE */\r\n@media screen and (max-width: 1023px){\r\n    p, span, button, input, textarea, label, a, td, th, li{\r\n        font-size: 16px;\r\n    }\r\n    h1{\r\n        font-size: 30px;\r\n    }\r\n    .mjs, .mjs *{\r\n        font-size: 20px!important;\r\n    }\r\n    th, td{\r\n        padding: 2px;\r\n        padding-left: 4px;\r\n        padding-right: 4px;\r\n    }\r\n    table{\r\n        margin: 4px;\r\n    }\r\n    .faq-h1{\r\n        padding-left: 50px;\r\n    }\r\n}\r\n\r\n/* h1 too long */\r\n@media screen and (max-width: 711px){\r\n    table{\r\n        \r\n    overflow-x: scroll;\r\n    overflow-y: scroll;\r\n    }\r\n    h1{\r\n        font-size: 20px;\r\n    }\r\n    h4, h2{\r\n        font-size: 12px;\r\n    }\r\n    p, .faq-subcontainer * li{\r\n        font-size: 12px;\r\n    }\r\n    .mjs, .mjs *{\r\n        font-size: 16px!important;\r\n    }\r\n\r\n    .faq-h1{\r\n        grid-row: 1;\r\n        grid-column: 1 / span 2;\r\n        text-align: center;\r\n        text-justify: center;\r\n\r\n        width: 70vw;\r\n        justify-self: center;\r\n    }\r\n    .faq-h1 h1{\r\n        letter-spacing: 2px;\r\n        font-weight: 500;\r\n        margin-bottom: 4px;\r\n        margin-left: 12px;\r\n        align-self: center;\r\n        justify-self: center;\r\n    }\r\n    .desc-mean, .desc-var, .desc-vol, .desc-cov, .desc-cor, .desc-data, .desc-ex{\r\n        padding: 2px;\r\n        width: 100%;\r\n        overflow-wrap: break-word;\r\n        justify-self: center;\r\n    }\r\n\r\n    #faq-container{\r\n        grid-template-columns: auto auto;\r\n        grid-template-rows: auto 1fr;\r\n    }\r\n    .faq-subcontainer * .MathJax{\r\n        margin-left: 2px;\r\n        margin-right: 2px;\r\n        max-width: 60vw;\r\n        overflow-wrap: break-word;\r\n        display: none;\r\n    }\r\n    .faq-subcontainer * ul{\r\n        margin-left: 2px;\r\n        margin-right: 2px;\r\n        max-width: 50vw;\r\n        display: none;\r\n    }\r\n    .faq-subcontainer * p{\r\n        max-width: 60vw;\r\n        padding-left: 4px;\r\n    }\r\n\r\n    table tbody td, table thead th {\r\n        position: relative;\r\n    }\r\n    td:hover::before {\r\n        background-color: rgba(235, 235, 235, 0);\r\n        content:'';\r\n        height: 0%;\r\n        left: 0px;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 0px;\r\n        z-index: -1; \r\n        display: none;\r\n    }\r\n    td:hover::after {\r\n        background-color: rgba(235, 235, 235, 0);\r\n        content:'';\r\n        color: rgba(0, 0, 0, 0);\r\n        height: 10000px;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0px; \r\n        width: 0%;\r\n        z-index: -1;\r\n        display: none;\r\n    }\r\n    td:hover{\r\n        background-color: rgba(215, 215, 215, 0);\r\n        display: none;\r\n    }\r\n\r\n\r\n    .sticky-sidebar{\r\n        grid-row: 1 / span 2;\r\n        grid-column: 1;\r\n        height: 100%;\r\n    \r\n        width: 30vw;\r\n    }\r\n    .sticky-sidebar ul{\r\n        width: 30vw;\r\n    }\r\n    .sticky-sidebar ul li{\r\n        font-size: 12px;\r\n        line-height: 1.4;\r\n    \r\n        text-indent: 16px;\r\n    }\r\n    .li-header{\r\n        text-indent: 2px!important;\r\n    }\r\n    #hideonsmall{\r\n        display:none\r\n    }\r\n    \r\n}"],sourceRoot:""}]);const l=i},645:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var l=0;l<this.length;l++){var u=this[l][0];null!=u&&(i[u]=!0)}for(var c=0;c<e.length;c++){var s=[].concat(e[c]);r&&i[s[0]]||(void 0!==o&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=o),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),a&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=a):s[4]="".concat(a)),n.push(s))}},n}},537:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([o]).join("\n")}return[n].join("\n")}},679:(e,n,t)=>{"use strict";var r=t(864),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?i:l[e.$$typeof]||a}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=i;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(n,t,r){if("string"!=typeof t){if(h){var a=p(t);a&&a!==h&&e(n,a,r)}var i=s(t);f&&(i=i.concat(f(t)));for(var l=u(n),m=u(t),g=0;g<i.length;++g){var v=i[g];if(!(o[v]||r&&r[v]||m&&m[v]||l&&l[v])){var A=d(t,v);try{c(n,v,A)}catch(e){}}}}return n}},418:e=>{"use strict";var n=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var n={},t=0;t<10;t++)n["_"+String.fromCharCode(t)]=t;if("0123456789"!==Object.getOwnPropertyNames(n).map((function(e){return n[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,o){for(var i,l,u=a(e),c=1;c<arguments.length;c++){for(var s in i=Object(arguments[c]))t.call(i,s)&&(u[s]=i[s]);if(n){l=n(i);for(var f=0;f<l.length;f++)r.call(i,l[f])&&(u[l[f]]=i[l[f]])}}return u}},779:(e,n,t)=>{var r=t(173);e.exports=function e(n,t,a){return r(t)||(a=t||a,t=[]),a=a||{},n instanceof RegExp?function(e,n){var t=e.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)n.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,n)}(n,t):r(n)?function(n,t,r){for(var a=[],o=0;o<n.length;o++)a.push(e(n[o],t,r).source);return s(new RegExp("(?:"+a.join("|")+")",f(r)),t)}(n,t,a):function(e,n,t){return d(o(e,t),n,t)}(n,t,a)},e.exports.parse=o,e.exports.compile=function(e,n){return l(o(e,n),n)},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=d;var a=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function o(e,n){for(var t,r=[],o=0,i=0,l="",s=n&&n.delimiter||"/";null!=(t=a.exec(e));){var f=t[0],d=t[1],p=t.index;if(l+=e.slice(i,p),i=p+f.length,d)l+=d[1];else{var h=e[i],m=t[2],g=t[3],v=t[4],A=t[5],y=t[6],b=t[7];l&&(r.push(l),l="");var C=null!=m&&null!=h&&h!==m,w="+"===y||"*"===y,x="?"===y||"*"===y,k=t[2]||s,E=v||A;r.push({name:g||o++,prefix:m||"",delimiter:k,optional:x,repeat:w,partial:C,asterisk:!!b,pattern:E?c(E):b?".*":"[^"+u(k)+"]+?"})}}return i<e.length&&(l+=e.substr(i)),l&&r.push(l),r}function i(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function l(e,n){for(var t=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(t[a]=new RegExp("^(?:"+e[a].pattern+")$",f(n)));return function(n,a){for(var o="",l=n||{},u=(a||{}).pretty?i:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,d=l[s.name];if(null==d){if(s.optional){s.partial&&(o+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!t[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");o+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!t[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');o+=s.prefix+f}}else o+=s}return o}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,n){return e.keys=n,e}function f(e){return e&&e.sensitive?"":"i"}function d(e,n,t){r(n)||(t=n||t,n=[]);for(var a=(t=t||{}).strict,o=!1!==t.end,i="",l=0;l<e.length;l++){var c=e[l];if("string"==typeof c)i+=u(c);else{var d=u(c.prefix),p="(?:"+c.pattern+")";n.push(c),c.repeat&&(p+="(?:"+d+p+")*"),i+=p=c.optional?c.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var h=u(t.delimiter||"/"),m=i.slice(-h.length)===h;return a||(i=(m?i.slice(0,-h.length):i)+"(?:"+h+"(?=$))?"),i+=o?"$":a&&m?"":"(?="+h+"|$)",s(new RegExp("^"+i,f(t)),n)}},173:e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},703:(e,n,t)=>{"use strict";var r=t(414);function a(){}function o(){}o.resetWarningCache=a,e.exports=function(){function e(e,n,t,a,o,i){if(i!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function n(){return e}e.isRequired=e;var t={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:n,element:e,elementType:e,instanceOf:n,node:e,objectOf:n,oneOf:n,oneOfType:n,shape:n,exact:n,checkPropTypes:o,resetWarningCache:a};return t.PropTypes=t,t}},697:(e,n,t)=>{e.exports=t(703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},448:(e,n,t)=>{"use strict";var r=t(294),a=t(418),o=t(840);function i(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(i(227));var l=new Set,u={};function c(e,n){s(e,n),s(e+"Capture",n)}function s(e,n){for(u[e]=n,e=0;e<n.length;e++)l.add(n[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},m={};function g(e,n,t,r,a,o,i){this.acceptsBooleans=2===n||3===n||4===n,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=t,this.propertyName=e,this.type=n,this.sanitizeURL=o,this.removeEmptyString=i}var v={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){v[e]=new g(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var n=e[0];v[n]=new g(n,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){v[e]=new g(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){v[e]=new g(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){v[e]=new g(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){v[e]=new g(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){v[e]=new g(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){v[e]=new g(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){v[e]=new g(e,5,!1,e.toLowerCase(),null,!1,!1)}));var A=/[\-:]([a-z])/g;function y(e){return e[1].toUpperCase()}function b(e,n,t,r){var a=v.hasOwnProperty(n)?v[n]:null;(null!==a?0===a.type:!r&&2<n.length&&("o"===n[0]||"O"===n[0])&&("n"===n[1]||"N"===n[1]))||(function(e,n,t,r){if(null==n||function(e,n,t,r){if(null!==t&&0===t.type)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==t?!t.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,n,t,r))return!0;if(r)return!1;if(null!==t)switch(t.type){case 3:return!n;case 4:return!1===n;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}(n,t,a,r)&&(t=null),r||null===a?function(e){return!!p.call(m,e)||!p.call(h,e)&&(d.test(e)?m[e]=!0:(h[e]=!0,!1))}(n)&&(null===t?e.removeAttribute(n):e.setAttribute(n,""+t)):a.mustUseProperty?e[a.propertyName]=null===t?3!==a.type&&"":t:(n=a.attributeName,r=a.attributeNamespace,null===t?e.removeAttribute(n):(t=3===(a=a.type)||4===a&&!0===t?"":""+t,r?e.setAttributeNS(r,n,t):e.setAttribute(n,t))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var n=e.replace(A,y);v[n]=new g(n,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var n=e.replace(A,y);v[n]=new g(n,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var n=e.replace(A,y);v[n]=new g(n,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){v[e]=new g(e,1,!1,e.toLowerCase(),null,!1,!1)})),v.xlinkHref=new g("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){v[e]=new g(e,1,!1,e.toLowerCase(),null,!0,!0)}));var C=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=60103,x=60106,k=60107,E=60108,B=60114,I=60109,S=60110,_=60112,P=60113,T=60120,O=60115,N=60116,z=60121,L=60128,M=60129,j=60130,R=60131;if("function"==typeof Symbol&&Symbol.for){var U=Symbol.for;w=U("react.element"),x=U("react.portal"),k=U("react.fragment"),E=U("react.strict_mode"),B=U("react.profiler"),I=U("react.provider"),S=U("react.context"),_=U("react.forward_ref"),P=U("react.suspense"),T=U("react.suspense_list"),O=U("react.memo"),N=U("react.lazy"),z=U("react.block"),U("react.scope"),L=U("react.opaque.id"),M=U("react.debug_trace_mode"),j=U("react.offscreen"),R=U("react.legacy_hidden")}var D,F="function"==typeof Symbol&&Symbol.iterator;function Q(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=F&&e[F]||e["@@iterator"])?e:null}function $(e){if(void 0===D)try{throw Error()}catch(e){var n=e.stack.trim().match(/\n( *(at )?)/);D=n&&n[1]||""}return"\n"+D+e}var q=!1;function V(e,n){if(!e||q)return"";q=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(e){var r=e}Reflect.construct(e,[],n)}else{try{n.call()}catch(e){r=e}e.call(n.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),o=r.stack.split("\n"),i=a.length-1,l=o.length-1;1<=i&&0<=l&&a[i]!==o[l];)l--;for(;1<=i&&0<=l;i--,l--)if(a[i]!==o[l]){if(1!==i||1!==l)do{if(i--,0>--l||a[i]!==o[l])return"\n"+a[i].replace(" at new "," at ")}while(1<=i&&0<=l);break}}}finally{q=!1,Error.prepareStackTrace=t}return(e=e?e.displayName||e.name:"")?$(e):""}function W(e){switch(e.tag){case 5:return $(e.type);case 16:return $("Lazy");case 13:return $("Suspense");case 19:return $("SuspenseList");case 0:case 2:case 15:return V(e.type,!1);case 11:return V(e.type.render,!1);case 22:return V(e.type._render,!1);case 1:return V(e.type,!0);default:return""}}function H(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case k:return"Fragment";case x:return"Portal";case B:return"Profiler";case E:return"StrictMode";case P:return"Suspense";case T:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case S:return(e.displayName||"Context")+".Consumer";case I:return(e._context.displayName||"Context")+".Provider";case _:var n=e.render;return n=n.displayName||n.name||"",e.displayName||(""!==n?"ForwardRef("+n+")":"ForwardRef");case O:return H(e.type);case z:return H(e._render);case N:n=e._payload,e=e._init;try{return H(e(n))}catch(e){}}return null}function X(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Y(e){var n=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===n||"radio"===n)}function K(e){e._valueTracker||(e._valueTracker=function(e){var n=Y(e)?"checked":"value",t=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),r=""+e[n];if(!e.hasOwnProperty(n)&&void 0!==t&&"function"==typeof t.get&&"function"==typeof t.set){var a=t.get,o=t.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,n,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}(e))}function Z(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var t=n.getValue(),r="";return e&&(r=Y(e)?e.checked?"true":"false":e.value),(e=r)!==t&&(n.setValue(e),!0)}function G(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(n){return e.body}}function J(e,n){var t=n.checked;return a({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:e._wrapperState.initialChecked})}function ee(e,n){var t=null==n.defaultValue?"":n.defaultValue,r=null!=n.checked?n.checked:n.defaultChecked;t=X(null!=n.value?n.value:t),e._wrapperState={initialChecked:r,initialValue:t,controlled:"checkbox"===n.type||"radio"===n.type?null!=n.checked:null!=n.value}}function ne(e,n){null!=(n=n.checked)&&b(e,"checked",n,!1)}function te(e,n){ne(e,n);var t=X(n.value),r=n.type;if(null!=t)"number"===r?(0===t&&""===e.value||e.value!=t)&&(e.value=""+t):e.value!==""+t&&(e.value=""+t);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");n.hasOwnProperty("value")?ae(e,n.type,t):n.hasOwnProperty("defaultValue")&&ae(e,n.type,X(n.defaultValue)),null==n.checked&&null!=n.defaultChecked&&(e.defaultChecked=!!n.defaultChecked)}function re(e,n,t){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var r=n.type;if(!("submit"!==r&&"reset"!==r||void 0!==n.value&&null!==n.value))return;n=""+e._wrapperState.initialValue,t||n===e.value||(e.value=n),e.defaultValue=n}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==t&&(e.name=t)}function ae(e,n,t){"number"===n&&G(e.ownerDocument)===e||(null==t?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+t&&(e.defaultValue=""+t))}function oe(e,n){return e=a({children:void 0},n),(n=function(e){var n="";return r.Children.forEach(e,(function(e){null!=e&&(n+=e)})),n}(n.children))&&(e.children=n),e}function ie(e,n,t,r){if(e=e.options,n){n={};for(var a=0;a<t.length;a++)n["$"+t[a]]=!0;for(t=0;t<e.length;t++)a=n.hasOwnProperty("$"+e[t].value),e[t].selected!==a&&(e[t].selected=a),a&&r&&(e[t].defaultSelected=!0)}else{for(t=""+X(t),n=null,a=0;a<e.length;a++){if(e[a].value===t)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==n||e[a].disabled||(n=e[a])}null!==n&&(n.selected=!0)}}function le(e,n){if(null!=n.dangerouslySetInnerHTML)throw Error(i(91));return a({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,n){var t=n.value;if(null==t){if(t=n.children,n=n.defaultValue,null!=t){if(null!=n)throw Error(i(92));if(Array.isArray(t)){if(!(1>=t.length))throw Error(i(93));t=t[0]}n=t}null==n&&(n=""),t=n}e._wrapperState={initialValue:X(t)}}function ce(e,n){var t=X(n.value),r=X(n.defaultValue);null!=t&&((t=""+t)!==e.value&&(e.value=t),null==n.defaultValue&&e.defaultValue!==t&&(e.defaultValue=t)),null!=r&&(e.defaultValue=""+r)}function se(e){var n=e.textContent;n===e._wrapperState.initialValue&&""!==n&&null!==n&&(e.value=n)}var fe="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,n){return null==e||"http://www.w3.org/1999/xhtml"===e?de(n):"http://www.w3.org/2000/svg"===e&&"foreignObject"===n?"http://www.w3.org/1999/xhtml":e}var he,me,ge=(me=function(e,n){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=n;else{for((he=he||document.createElement("div")).innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=he.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;n.firstChild;)e.appendChild(n.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,t,r){MSApp.execUnsafeLocalFunction((function(){return me(e,n)}))}:me);function ve(e,n){if(n){var t=e.firstChild;if(t&&t===e.lastChild&&3===t.nodeType)return void(t.nodeValue=n)}e.textContent=n}var Ae={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ye=["Webkit","ms","Moz","O"];function be(e,n,t){return null==n||"boolean"==typeof n||""===n?"":t||"number"!=typeof n||0===n||Ae.hasOwnProperty(e)&&Ae[e]?(""+n).trim():n+"px"}function Ce(e,n){for(var t in e=e.style,n)if(n.hasOwnProperty(t)){var r=0===t.indexOf("--"),a=be(t,n[t],r);"float"===t&&(t="cssFloat"),r?e.setProperty(t,a):e[t]=a}}Object.keys(Ae).forEach((function(e){ye.forEach((function(n){n=n+e.charAt(0).toUpperCase()+e.substring(1),Ae[n]=Ae[e]}))}));var we=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function xe(e,n){if(n){if(we[e]&&(null!=n.children||null!=n.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=n.dangerouslySetInnerHTML){if(null!=n.children)throw Error(i(60));if("object"!=typeof n.dangerouslySetInnerHTML||!("__html"in n.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=n.style&&"object"!=typeof n.style)throw Error(i(62))}}function ke(e,n){if(-1===e.indexOf("-"))return"string"==typeof n.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Ee(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Be=null,Ie=null,Se=null;function _e(e){if(e=Jr(e)){if("function"!=typeof Be)throw Error(i(280));var n=e.stateNode;n&&(n=na(n),Be(e.stateNode,e.type,n))}}function Pe(e){Ie?Se?Se.push(e):Se=[e]:Ie=e}function Te(){if(Ie){var e=Ie,n=Se;if(Se=Ie=null,_e(e),n)for(e=0;e<n.length;e++)_e(n[e])}}function Oe(e,n){return e(n)}function Ne(e,n,t,r,a){return e(n,t,r,a)}function ze(){}var Le=Oe,Me=!1,je=!1;function Re(){null===Ie&&null===Se||(ze(),Te())}function Ue(e,n){var t=e.stateNode;if(null===t)return null;var r=na(t);if(null===r)return null;t=r[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(t&&"function"!=typeof t)throw Error(i(231,n,typeof t));return t}var De=!1;if(f)try{var Fe={};Object.defineProperty(Fe,"passive",{get:function(){De=!0}}),window.addEventListener("test",Fe,Fe),window.removeEventListener("test",Fe,Fe)}catch(me){De=!1}function Qe(e,n,t,r,a,o,i,l,u){var c=Array.prototype.slice.call(arguments,3);try{n.apply(t,c)}catch(e){this.onError(e)}}var $e=!1,qe=null,Ve=!1,We=null,He={onError:function(e){$e=!0,qe=e}};function Xe(e,n,t,r,a,o,i,l,u){$e=!1,qe=null,Qe.apply(He,arguments)}function Ye(e){var n=e,t=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{0!=(1026&(n=e).flags)&&(t=n.return),e=n.return}while(e)}return 3===n.tag?t:null}function Ke(e){if(13===e.tag){var n=e.memoizedState;if(null===n&&null!==(e=e.alternate)&&(n=e.memoizedState),null!==n)return n.dehydrated}return null}function Ze(e){if(Ye(e)!==e)throw Error(i(188))}function Ge(e){if(!(e=function(e){var n=e.alternate;if(!n){if(null===(n=Ye(e)))throw Error(i(188));return n!==e?null:e}for(var t=e,r=n;;){var a=t.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){t=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===t)return Ze(a),e;if(o===r)return Ze(a),n;o=o.sibling}throw Error(i(188))}if(t.return!==r.return)t=a,r=o;else{for(var l=!1,u=a.child;u;){if(u===t){l=!0,t=a,r=o;break}if(u===r){l=!0,r=a,t=o;break}u=u.sibling}if(!l){for(u=o.child;u;){if(u===t){l=!0,t=o,r=a;break}if(u===r){l=!0,r=o,t=a;break}u=u.sibling}if(!l)throw Error(i(189))}}if(t.alternate!==r)throw Error(i(190))}if(3!==t.tag)throw Error(i(188));return t.stateNode.current===t?e:n}(e)))return null;for(var n=e;;){if(5===n.tag||6===n.tag)return n;if(n.child)n.child.return=n,n=n.child;else{if(n===e)break;for(;!n.sibling;){if(!n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}}return null}function Je(e,n){for(var t=e.alternate;null!==n;){if(n===e||n===t)return!0;n=n.return}return!1}var en,nn,tn,rn,an=!1,on=[],ln=null,un=null,cn=null,sn=new Map,fn=new Map,dn=[],pn="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function hn(e,n,t,r,a){return{blockedOn:e,domEventName:n,eventSystemFlags:16|t,nativeEvent:a,targetContainers:[r]}}function mn(e,n){switch(e){case"focusin":case"focusout":ln=null;break;case"dragenter":case"dragleave":un=null;break;case"mouseover":case"mouseout":cn=null;break;case"pointerover":case"pointerout":sn.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":fn.delete(n.pointerId)}}function gn(e,n,t,r,a,o){return null===e||e.nativeEvent!==o?(e=hn(n,t,r,a,o),null!==n&&null!==(n=Jr(n))&&nn(n),e):(e.eventSystemFlags|=r,n=e.targetContainers,null!==a&&-1===n.indexOf(a)&&n.push(a),e)}function vn(e){var n=Gr(e.target);if(null!==n){var t=Ye(n);if(null!==t)if(13===(n=t.tag)){if(null!==(n=Ke(t)))return e.blockedOn=n,void rn(e.lanePriority,(function(){o.unstable_runWithPriority(e.priority,(function(){tn(t)}))}))}else if(3===n&&t.stateNode.hydrate)return void(e.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}e.blockedOn=null}function An(e){if(null!==e.blockedOn)return!1;for(var n=e.targetContainers;0<n.length;){var t=Jn(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t)return null!==(n=Jr(t))&&nn(n),e.blockedOn=t,!1;n.shift()}return!0}function yn(e,n,t){An(e)&&t.delete(n)}function bn(){for(an=!1;0<on.length;){var e=on[0];if(null!==e.blockedOn){null!==(e=Jr(e.blockedOn))&&en(e);break}for(var n=e.targetContainers;0<n.length;){var t=Jn(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t){e.blockedOn=t;break}n.shift()}null===e.blockedOn&&on.shift()}null!==ln&&An(ln)&&(ln=null),null!==un&&An(un)&&(un=null),null!==cn&&An(cn)&&(cn=null),sn.forEach(yn),fn.forEach(yn)}function Cn(e,n){e.blockedOn===n&&(e.blockedOn=null,an||(an=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,bn)))}function wn(e){function n(n){return Cn(n,e)}if(0<on.length){Cn(on[0],e);for(var t=1;t<on.length;t++){var r=on[t];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==ln&&Cn(ln,e),null!==un&&Cn(un,e),null!==cn&&Cn(cn,e),sn.forEach(n),fn.forEach(n),t=0;t<dn.length;t++)(r=dn[t]).blockedOn===e&&(r.blockedOn=null);for(;0<dn.length&&null===(t=dn[0]).blockedOn;)vn(t),null===t.blockedOn&&dn.shift()}function xn(e,n){var t={};return t[e.toLowerCase()]=n.toLowerCase(),t["Webkit"+e]="webkit"+n,t["Moz"+e]="moz"+n,t}var kn={animationend:xn("Animation","AnimationEnd"),animationiteration:xn("Animation","AnimationIteration"),animationstart:xn("Animation","AnimationStart"),transitionend:xn("Transition","TransitionEnd")},En={},Bn={};function In(e){if(En[e])return En[e];if(!kn[e])return e;var n,t=kn[e];for(n in t)if(t.hasOwnProperty(n)&&n in Bn)return En[e]=t[n];return e}f&&(Bn=document.createElement("div").style,"AnimationEvent"in window||(delete kn.animationend.animation,delete kn.animationiteration.animation,delete kn.animationstart.animation),"TransitionEvent"in window||delete kn.transitionend.transition);var Sn=In("animationend"),_n=In("animationiteration"),Pn=In("animationstart"),Tn=In("transitionend"),On=new Map,Nn=new Map,zn=["abort","abort",Sn,"animationEnd",_n,"animationIteration",Pn,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Tn,"transitionEnd","waiting","waiting"];function Ln(e,n){for(var t=0;t<e.length;t+=2){var r=e[t],a=e[t+1];a="on"+(a[0].toUpperCase()+a.slice(1)),Nn.set(r,n),On.set(r,a),c(a,[r])}}(0,o.unstable_now)();var Mn=8;function jn(e){if(0!=(1&e))return Mn=15,1;if(0!=(2&e))return Mn=14,2;if(0!=(4&e))return Mn=13,4;var n=24&e;return 0!==n?(Mn=12,n):0!=(32&e)?(Mn=11,32):0!=(n=192&e)?(Mn=10,n):0!=(256&e)?(Mn=9,256):0!=(n=3584&e)?(Mn=8,n):0!=(4096&e)?(Mn=7,4096):0!=(n=4186112&e)?(Mn=6,n):0!=(n=62914560&e)?(Mn=5,n):67108864&e?(Mn=4,67108864):0!=(134217728&e)?(Mn=3,134217728):0!=(n=805306368&e)?(Mn=2,n):0!=(1073741824&e)?(Mn=1,1073741824):(Mn=8,e)}function Rn(e,n){var t=e.pendingLanes;if(0===t)return Mn=0;var r=0,a=0,o=e.expiredLanes,i=e.suspendedLanes,l=e.pingedLanes;if(0!==o)r=o,a=Mn=15;else if(0!=(o=134217727&t)){var u=o&~i;0!==u?(r=jn(u),a=Mn):0!=(l&=o)&&(r=jn(l),a=Mn)}else 0!=(o=t&~i)?(r=jn(o),a=Mn):0!==l&&(r=jn(l),a=Mn);if(0===r)return 0;if(r=t&((0>(r=31-qn(r))?0:1<<r)<<1)-1,0!==n&&n!==r&&0==(n&i)){if(jn(n),a<=Mn)return n;Mn=a}if(0!==(n=e.entangledLanes))for(e=e.entanglements,n&=r;0<n;)a=1<<(t=31-qn(n)),r|=e[t],n&=~a;return r}function Un(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Dn(e,n){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Fn(24&~n))?Dn(10,n):e;case 10:return 0===(e=Fn(192&~n))?Dn(8,n):e;case 8:return 0===(e=Fn(3584&~n))&&0===(e=Fn(4186112&~n))&&(e=512),e;case 2:return 0===(n=Fn(805306368&~n))&&(n=268435456),n}throw Error(i(358,e))}function Fn(e){return e&-e}function Qn(e){for(var n=[],t=0;31>t;t++)n.push(e);return n}function $n(e,n,t){e.pendingLanes|=n;var r=n-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[n=31-qn(n)]=t}var qn=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Vn(e)/Wn|0)|0},Vn=Math.log,Wn=Math.LN2,Hn=o.unstable_UserBlockingPriority,Xn=o.unstable_runWithPriority,Yn=!0;function Kn(e,n,t,r){Me||ze();var a=Gn,o=Me;Me=!0;try{Ne(a,e,n,t,r)}finally{(Me=o)||Re()}}function Zn(e,n,t,r){Xn(Hn,Gn.bind(null,e,n,t,r))}function Gn(e,n,t,r){var a;if(Yn)if((a=0==(4&n))&&0<on.length&&-1<pn.indexOf(e))e=hn(null,e,n,t,r),on.push(e);else{var o=Jn(e,n,t,r);if(null===o)a&&mn(e,r);else{if(a){if(-1<pn.indexOf(e))return e=hn(o,e,n,t,r),void on.push(e);if(function(e,n,t,r,a){switch(n){case"focusin":return ln=gn(ln,e,n,t,r,a),!0;case"dragenter":return un=gn(un,e,n,t,r,a),!0;case"mouseover":return cn=gn(cn,e,n,t,r,a),!0;case"pointerover":var o=a.pointerId;return sn.set(o,gn(sn.get(o)||null,e,n,t,r,a)),!0;case"gotpointercapture":return o=a.pointerId,fn.set(o,gn(fn.get(o)||null,e,n,t,r,a)),!0}return!1}(o,e,n,t,r))return;mn(e,r)}Tr(e,n,r,null,t)}}}function Jn(e,n,t,r){var a=Ee(r);if(null!==(a=Gr(a))){var o=Ye(a);if(null===o)a=null;else{var i=o.tag;if(13===i){if(null!==(a=Ke(o)))return a;a=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;a=null}else o!==a&&(a=null)}}return Tr(e,n,r,a,t),null}var et=null,nt=null,tt=null;function rt(){if(tt)return tt;var e,n,t=nt,r=t.length,a="value"in et?et.value:et.textContent,o=a.length;for(e=0;e<r&&t[e]===a[e];e++);var i=r-e;for(n=1;n<=i&&t[r-n]===a[o-n];n++);return tt=a.slice(e,1<n?1-n:void 0)}function at(e){var n=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===n&&(e=13):e=n,10===e&&(e=13),32<=e||13===e?e:0}function ot(){return!0}function it(){return!1}function lt(e){function n(n,t,r,a,o){for(var i in this._reactName=n,this._targetInst=r,this.type=t,this.nativeEvent=a,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(i)&&(n=e[i],this[i]=n?n(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?ot:it,this.isPropagationStopped=it,this}return a(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ot)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ot)},persist:function(){},isPersistent:ot}),n}var ut,ct,st,ft={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dt=lt(ft),pt=a({},ft,{view:0,detail:0}),ht=lt(pt),mt=a({},pt,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Bt,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==st&&(st&&"mousemove"===e.type?(ut=e.screenX-st.screenX,ct=e.screenY-st.screenY):ct=ut=0,st=e),ut)},movementY:function(e){return"movementY"in e?e.movementY:ct}}),gt=lt(mt),vt=lt(a({},mt,{dataTransfer:0})),At=lt(a({},pt,{relatedTarget:0})),yt=lt(a({},ft,{animationName:0,elapsedTime:0,pseudoElement:0})),bt=lt(a({},ft,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),Ct=lt(a({},ft,{data:0})),wt={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},xt={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},kt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Et(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):!!(e=kt[e])&&!!n[e]}function Bt(){return Et}var It=lt(a({},pt,{key:function(e){if(e.key){var n=wt[e.key]||e.key;if("Unidentified"!==n)return n}return"keypress"===e.type?13===(e=at(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?xt[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Bt,charCode:function(e){return"keypress"===e.type?at(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?at(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),St=lt(a({},mt,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),_t=lt(a({},pt,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Bt})),Pt=lt(a({},ft,{propertyName:0,elapsedTime:0,pseudoElement:0})),Tt=lt(a({},mt,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),Ot=[9,13,27,32],Nt=f&&"CompositionEvent"in window,zt=null;f&&"documentMode"in document&&(zt=document.documentMode);var Lt=f&&"TextEvent"in window&&!zt,Mt=f&&(!Nt||zt&&8<zt&&11>=zt),jt=String.fromCharCode(32),Rt=!1;function Ut(e,n){switch(e){case"keyup":return-1!==Ot.indexOf(n.keyCode);case"keydown":return 229!==n.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Dt(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Ft=!1,Qt={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function $t(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===n?!!Qt[e.type]:"textarea"===n}function qt(e,n,t,r){Pe(r),0<(n=Nr(n,"onChange")).length&&(t=new dt("onChange","change",null,t,r),e.push({event:t,listeners:n}))}var Vt=null,Wt=null;function Ht(e){Er(e,0)}function Xt(e){if(Z(ea(e)))return e}function Yt(e,n){if("change"===e)return n}var Kt=!1;if(f){var Zt;if(f){var Gt="oninput"in document;if(!Gt){var Jt=document.createElement("div");Jt.setAttribute("oninput","return;"),Gt="function"==typeof Jt.oninput}Zt=Gt}else Zt=!1;Kt=Zt&&(!document.documentMode||9<document.documentMode)}function er(){Vt&&(Vt.detachEvent("onpropertychange",nr),Wt=Vt=null)}function nr(e){if("value"===e.propertyName&&Xt(Wt)){var n=[];if(qt(n,Wt,e,Ee(e)),e=Ht,Me)e(n);else{Me=!0;try{Oe(e,n)}finally{Me=!1,Re()}}}}function tr(e,n,t){"focusin"===e?(er(),Wt=t,(Vt=n).attachEvent("onpropertychange",nr)):"focusout"===e&&er()}function rr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Xt(Wt)}function ar(e,n){if("click"===e)return Xt(n)}function or(e,n){if("input"===e||"change"===e)return Xt(n)}var ir="function"==typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e==1/n)||e!=e&&n!=n},lr=Object.prototype.hasOwnProperty;function ur(e,n){if(ir(e,n))return!0;if("object"!=typeof e||null===e||"object"!=typeof n||null===n)return!1;var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++)if(!lr.call(n,t[r])||!ir(e[t[r]],n[t[r]]))return!1;return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function sr(e,n){var t,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(t=e+r.textContent.length,e<=n&&t>=n)return{node:r,offset:n-e};e=t}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function fr(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?fr(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}function dr(){for(var e=window,n=G();n instanceof e.HTMLIFrameElement;){try{var t="string"==typeof n.contentWindow.location.href}catch(e){t=!1}if(!t)break;n=G((e=n.contentWindow).document)}return n}function pr(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===n||"true"===e.contentEditable)}var hr=f&&"documentMode"in document&&11>=document.documentMode,mr=null,gr=null,vr=null,Ar=!1;function yr(e,n,t){var r=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;Ar||null==mr||mr!==G(r)||(r="selectionStart"in(r=mr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},vr&&ur(vr,r)||(vr=r,0<(r=Nr(gr,"onSelect")).length&&(n=new dt("onSelect","select",null,n,t),e.push({event:n,listeners:r}),n.target=mr)))}Ln("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Ln("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Ln(zn,2);for(var br="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Cr=0;Cr<br.length;Cr++)Nn.set(br[Cr],0);s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var wr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),xr=new Set("cancel close invalid load scroll toggle".split(" ").concat(wr));function kr(e,n,t){var r=e.type||"unknown-event";e.currentTarget=t,function(e,n,t,r,a,o,l,u,c){if(Xe.apply(this,arguments),$e){if(!$e)throw Error(i(198));var s=qe;$e=!1,qe=null,Ve||(Ve=!0,We=s)}}(r,n,void 0,e),e.currentTarget=null}function Er(e,n){n=0!=(4&n);for(var t=0;t<e.length;t++){var r=e[t],a=r.event;r=r.listeners;e:{var o=void 0;if(n)for(var i=r.length-1;0<=i;i--){var l=r[i],u=l.instance,c=l.currentTarget;if(l=l.listener,u!==o&&a.isPropagationStopped())break e;kr(a,l,c),o=u}else for(i=0;i<r.length;i++){if(u=(l=r[i]).instance,c=l.currentTarget,l=l.listener,u!==o&&a.isPropagationStopped())break e;kr(a,l,c),o=u}}}if(Ve)throw e=We,Ve=!1,We=null,e}function Br(e,n){var t=ta(n),r=e+"__bubble";t.has(r)||(Pr(n,e,2,!1),t.add(r))}var Ir="_reactListening"+Math.random().toString(36).slice(2);function Sr(e){e[Ir]||(e[Ir]=!0,l.forEach((function(n){xr.has(n)||_r(n,!1,e,null),_r(n,!0,e,null)})))}function _r(e,n,t,r){var a=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,o=t;if("selectionchange"===e&&9!==t.nodeType&&(o=t.ownerDocument),null!==r&&!n&&xr.has(e)){if("scroll"!==e)return;a|=2,o=r}var i=ta(o),l=e+"__"+(n?"capture":"bubble");i.has(l)||(n&&(a|=4),Pr(o,e,a,n),i.add(l))}function Pr(e,n,t,r){var a=Nn.get(n);switch(void 0===a?2:a){case 0:a=Kn;break;case 1:a=Zn;break;default:a=Gn}t=a.bind(null,n,t,e),a=void 0,!De||"touchstart"!==n&&"touchmove"!==n&&"wheel"!==n||(a=!0),r?void 0!==a?e.addEventListener(n,t,{capture:!0,passive:a}):e.addEventListener(n,t,!0):void 0!==a?e.addEventListener(n,t,{passive:a}):e.addEventListener(n,t,!1)}function Tr(e,n,t,r,a){var o=r;if(0==(1&n)&&0==(2&n)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var l=r.stateNode.containerInfo;if(l===a||8===l.nodeType&&l.parentNode===a)break;if(4===i)for(i=r.return;null!==i;){var u=i.tag;if((3===u||4===u)&&((u=i.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;i=i.return}for(;null!==l;){if(null===(i=Gr(l)))return;if(5===(u=i.tag)||6===u){r=o=i;continue e}l=l.parentNode}}r=r.return}!function(e,n,t){if(je)return e();je=!0;try{Le(e,n,t)}finally{je=!1,Re()}}((function(){var r=o,a=Ee(t),i=[];e:{var l=On.get(e);if(void 0!==l){var u=dt,c=e;switch(e){case"keypress":if(0===at(t))break e;case"keydown":case"keyup":u=It;break;case"focusin":c="focus",u=At;break;case"focusout":c="blur",u=At;break;case"beforeblur":case"afterblur":u=At;break;case"click":if(2===t.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=gt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=vt;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=_t;break;case Sn:case _n:case Pn:u=yt;break;case Tn:u=Pt;break;case"scroll":u=ht;break;case"wheel":u=Tt;break;case"copy":case"cut":case"paste":u=bt;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=St}var s=0!=(4&n),f=!s&&"scroll"===e,d=s?null!==l?l+"Capture":null:l;s=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&null!=(m=Ue(h,d))&&s.push(Or(h,m,p))),f)break;h=h.return}0<s.length&&(l=new u(l,c,null,t,a),i.push({event:l,listeners:s}))}}if(0==(7&n)){if(u="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||0!=(16&n)||!(c=t.relatedTarget||t.fromElement)||!Gr(c)&&!c[Kr])&&(u||l)&&(l=a.window===a?a:(l=a.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=r,null!==(c=(c=t.relatedTarget||t.toElement)?Gr(c):null)&&(c!==(f=Ye(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=r),u!==c)){if(s=gt,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(s=St,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?l:ea(u),p=null==c?l:ea(c),(l=new s(m,h+"leave",u,t,a)).target=f,l.relatedTarget=p,m=null,Gr(a)===r&&((s=new s(d,h+"enter",c,t,a)).target=p,s.relatedTarget=f,m=s),f=m,u&&c)e:{for(d=c,h=0,p=s=u;p;p=zr(p))h++;for(p=0,m=d;m;m=zr(m))p++;for(;0<h-p;)s=zr(s),h--;for(;0<p-h;)d=zr(d),p--;for(;h--;){if(s===d||null!==d&&s===d.alternate)break e;s=zr(s),d=zr(d)}s=null}else s=null;null!==u&&Lr(i,l,u,s,!1),null!==c&&null!==f&&Lr(i,f,c,s,!0)}if("select"===(u=(l=r?ea(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var g=Yt;else if($t(l))if(Kt)g=or;else{g=rr;var v=tr}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(g=ar);switch(g&&(g=g(e,r))?qt(i,g,t,a):(v&&v(e,l,r),"focusout"===e&&(v=l._wrapperState)&&v.controlled&&"number"===l.type&&ae(l,"number",l.value)),v=r?ea(r):window,e){case"focusin":($t(v)||"true"===v.contentEditable)&&(mr=v,gr=r,vr=null);break;case"focusout":vr=gr=mr=null;break;case"mousedown":Ar=!0;break;case"contextmenu":case"mouseup":case"dragend":Ar=!1,yr(i,t,a);break;case"selectionchange":if(hr)break;case"keydown":case"keyup":yr(i,t,a)}var A;if(Nt)e:{switch(e){case"compositionstart":var y="onCompositionStart";break e;case"compositionend":y="onCompositionEnd";break e;case"compositionupdate":y="onCompositionUpdate";break e}y=void 0}else Ft?Ut(e,t)&&(y="onCompositionEnd"):"keydown"===e&&229===t.keyCode&&(y="onCompositionStart");y&&(Mt&&"ko"!==t.locale&&(Ft||"onCompositionStart"!==y?"onCompositionEnd"===y&&Ft&&(A=rt()):(nt="value"in(et=a)?et.value:et.textContent,Ft=!0)),0<(v=Nr(r,y)).length&&(y=new Ct(y,e,null,t,a),i.push({event:y,listeners:v}),(A||null!==(A=Dt(t)))&&(y.data=A))),(A=Lt?function(e,n){switch(e){case"compositionend":return Dt(n);case"keypress":return 32!==n.which?null:(Rt=!0,jt);case"textInput":return(e=n.data)===jt&&Rt?null:e;default:return null}}(e,t):function(e,n){if(Ft)return"compositionend"===e||!Nt&&Ut(e,n)?(e=rt(),tt=nt=et=null,Ft=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return Mt&&"ko"!==n.locale?null:n.data;default:return null}}(e,t))&&0<(r=Nr(r,"onBeforeInput")).length&&(a=new Ct("onBeforeInput","beforeinput",null,t,a),i.push({event:a,listeners:r}),a.data=A)}Er(i,n)}))}function Or(e,n,t){return{instance:e,listener:n,currentTarget:t}}function Nr(e,n){for(var t=n+"Capture",r=[];null!==e;){var a=e,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=Ue(e,t))&&r.unshift(Or(e,o,a)),null!=(o=Ue(e,n))&&r.push(Or(e,o,a))),e=e.return}return r}function zr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Lr(e,n,t,r,a){for(var o=n._reactName,i=[];null!==t&&t!==r;){var l=t,u=l.alternate,c=l.stateNode;if(null!==u&&u===r)break;5===l.tag&&null!==c&&(l=c,a?null!=(u=Ue(t,o))&&i.unshift(Or(t,u,l)):a||null!=(u=Ue(t,o))&&i.push(Or(t,u,l))),t=t.return}0!==i.length&&e.push({event:n,listeners:i})}function Mr(){}var jr=null,Rr=null;function Ur(e,n){switch(e){case"button":case"input":case"select":case"textarea":return!!n.autoFocus}return!1}function Dr(e,n){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof n.children||"number"==typeof n.children||"object"==typeof n.dangerouslySetInnerHTML&&null!==n.dangerouslySetInnerHTML&&null!=n.dangerouslySetInnerHTML.__html}var Fr="function"==typeof setTimeout?setTimeout:void 0,Qr="function"==typeof clearTimeout?clearTimeout:void 0;function $r(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function qr(e){for(;null!=e;e=e.nextSibling){var n=e.nodeType;if(1===n||3===n)break}return e}function Vr(e){e=e.previousSibling;for(var n=0;e;){if(8===e.nodeType){var t=e.data;if("$"===t||"$!"===t||"$?"===t){if(0===n)return e;n--}else"/$"===t&&n++}e=e.previousSibling}return null}var Wr=0,Hr=Math.random().toString(36).slice(2),Xr="__reactFiber$"+Hr,Yr="__reactProps$"+Hr,Kr="__reactContainer$"+Hr,Zr="__reactEvents$"+Hr;function Gr(e){var n=e[Xr];if(n)return n;for(var t=e.parentNode;t;){if(n=t[Kr]||t[Xr]){if(t=n.alternate,null!==n.child||null!==t&&null!==t.child)for(e=Vr(e);null!==e;){if(t=e[Xr])return t;e=Vr(e)}return n}t=(e=t).parentNode}return null}function Jr(e){return!(e=e[Xr]||e[Kr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ea(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function na(e){return e[Yr]||null}function ta(e){var n=e[Zr];return void 0===n&&(n=e[Zr]=new Set),n}var ra=[],aa=-1;function oa(e){return{current:e}}function ia(e){0>aa||(e.current=ra[aa],ra[aa]=null,aa--)}function la(e,n){aa++,ra[aa]=e.current,e.current=n}var ua={},ca=oa(ua),sa=oa(!1),fa=ua;function da(e,n){var t=e.type.contextTypes;if(!t)return ua;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===n)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in t)o[a]=n[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=o),o}function pa(e){return null!=e.childContextTypes}function ha(){ia(sa),ia(ca)}function ma(e,n,t){if(ca.current!==ua)throw Error(i(168));la(ca,n),la(sa,t)}function ga(e,n,t){var r=e.stateNode;if(e=n.childContextTypes,"function"!=typeof r.getChildContext)return t;for(var o in r=r.getChildContext())if(!(o in e))throw Error(i(108,H(n)||"Unknown",o));return a({},t,r)}function va(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ua,fa=ca.current,la(ca,e),la(sa,sa.current),!0}function Aa(e,n,t){var r=e.stateNode;if(!r)throw Error(i(169));t?(e=ga(e,n,fa),r.__reactInternalMemoizedMergedChildContext=e,ia(sa),ia(ca),la(ca,e)):ia(sa),la(sa,t)}var ya=null,ba=null,Ca=o.unstable_runWithPriority,wa=o.unstable_scheduleCallback,xa=o.unstable_cancelCallback,ka=o.unstable_shouldYield,Ea=o.unstable_requestPaint,Ba=o.unstable_now,Ia=o.unstable_getCurrentPriorityLevel,Sa=o.unstable_ImmediatePriority,_a=o.unstable_UserBlockingPriority,Pa=o.unstable_NormalPriority,Ta=o.unstable_LowPriority,Oa=o.unstable_IdlePriority,Na={},za=void 0!==Ea?Ea:function(){},La=null,Ma=null,ja=!1,Ra=Ba(),Ua=1e4>Ra?Ba:function(){return Ba()-Ra};function Da(){switch(Ia()){case Sa:return 99;case _a:return 98;case Pa:return 97;case Ta:return 96;case Oa:return 95;default:throw Error(i(332))}}function Fa(e){switch(e){case 99:return Sa;case 98:return _a;case 97:return Pa;case 96:return Ta;case 95:return Oa;default:throw Error(i(332))}}function Qa(e,n){return e=Fa(e),Ca(e,n)}function $a(e,n,t){return e=Fa(e),wa(e,n,t)}function qa(){if(null!==Ma){var e=Ma;Ma=null,xa(e)}Va()}function Va(){if(!ja&&null!==La){ja=!0;var e=0;try{var n=La;Qa(99,(function(){for(;e<n.length;e++){var t=n[e];do{t=t(!0)}while(null!==t)}})),La=null}catch(n){throw null!==La&&(La=La.slice(e+1)),wa(Sa,qa),n}finally{ja=!1}}}var Wa=C.ReactCurrentBatchConfig;function Ha(e,n){if(e&&e.defaultProps){for(var t in n=a({},n),e=e.defaultProps)void 0===n[t]&&(n[t]=e[t]);return n}return n}var Xa=oa(null),Ya=null,Ka=null,Za=null;function Ga(){Za=Ka=Ya=null}function Ja(e){var n=Xa.current;ia(Xa),e.type._context._currentValue=n}function eo(e,n){for(;null!==e;){var t=e.alternate;if((e.childLanes&n)===n){if(null===t||(t.childLanes&n)===n)break;t.childLanes|=n}else e.childLanes|=n,null!==t&&(t.childLanes|=n);e=e.return}}function no(e,n){Ya=e,Za=Ka=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&n)&&(Ni=!0),e.firstContext=null)}function to(e,n){if(Za!==e&&!1!==n&&0!==n)if("number"==typeof n&&1073741823!==n||(Za=e,n=1073741823),n={context:e,observedBits:n,next:null},null===Ka){if(null===Ya)throw Error(i(308));Ka=n,Ya.dependencies={lanes:0,firstContext:n,responders:null}}else Ka=Ka.next=n;return e._currentValue}var ro=!1;function ao(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function oo(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function io(e,n){return{eventTime:e,lane:n,tag:0,payload:null,callback:null,next:null}}function lo(e,n){if(null!==(e=e.updateQueue)){var t=(e=e.shared).pending;null===t?n.next=n:(n.next=t.next,t.next=n),e.pending=n}}function uo(e,n){var t=e.updateQueue,r=e.alternate;if(null!==r&&t===(r=r.updateQueue)){var a=null,o=null;if(null!==(t=t.firstBaseUpdate)){do{var i={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};null===o?a=o=i:o=o.next=i,t=t.next}while(null!==t);null===o?a=o=n:o=o.next=n}else a=o=n;return t={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=t)}null===(e=t.lastBaseUpdate)?t.firstBaseUpdate=n:e.next=n,t.lastBaseUpdate=n}function co(e,n,t,r){var o=e.updateQueue;ro=!1;var i=o.firstBaseUpdate,l=o.lastBaseUpdate,u=o.shared.pending;if(null!==u){o.shared.pending=null;var c=u,s=c.next;c.next=null,null===l?i=s:l.next=s,l=c;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==l&&(null===d?f.firstBaseUpdate=s:d.next=s,f.lastBaseUpdate=c)}}if(null!==i){for(d=o.baseState,l=0,f=s=c=null;;){u=i.lane;var p=i.eventTime;if((r&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var h=e,m=i;switch(u=n,p=t,m.tag){case 1:if("function"==typeof(h=m.payload)){d=h.call(p,d,u);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null==(u="function"==typeof(h=m.payload)?h.call(p,d,u):h))break e;d=a({},d,u);break e;case 2:ro=!0}}null!==i.callback&&(e.flags|=32,null===(u=o.effects)?o.effects=[i]:u.push(i))}else p={eventTime:p,lane:u,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===f?(s=f=p,c=d):f=f.next=p,l|=u;if(null===(i=i.next)){if(null===(u=o.shared.pending))break;i=u.next,u.next=null,o.lastBaseUpdate=u,o.shared.pending=null}}null===f&&(c=d),o.baseState=c,o.firstBaseUpdate=s,o.lastBaseUpdate=f,Ll|=l,e.lanes=l,e.memoizedState=d}}function so(e,n,t){if(e=n.effects,n.effects=null,null!==e)for(n=0;n<e.length;n++){var r=e[n],a=r.callback;if(null!==a){if(r.callback=null,r=t,"function"!=typeof a)throw Error(i(191,a));a.call(r)}}}var fo=(new r.Component).refs;function po(e,n,t,r){t=null==(t=t(r,n=e.memoizedState))?n:a({},n,t),e.memoizedState=t,0===e.lanes&&(e.updateQueue.baseState=t)}var ho={isMounted:function(e){return!!(e=e._reactInternals)&&Ye(e)===e},enqueueSetState:function(e,n,t){e=e._reactInternals;var r=iu(),a=lu(e),o=io(r,a);o.payload=n,null!=t&&(o.callback=t),lo(e,o),uu(e,a,r)},enqueueReplaceState:function(e,n,t){e=e._reactInternals;var r=iu(),a=lu(e),o=io(r,a);o.tag=1,o.payload=n,null!=t&&(o.callback=t),lo(e,o),uu(e,a,r)},enqueueForceUpdate:function(e,n){e=e._reactInternals;var t=iu(),r=lu(e),a=io(t,r);a.tag=2,null!=n&&(a.callback=n),lo(e,a),uu(e,r,t)}};function mo(e,n,t,r,a,o,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,i):!(n.prototype&&n.prototype.isPureReactComponent&&ur(t,r)&&ur(a,o))}function go(e,n,t){var r=!1,a=ua,o=n.contextType;return"object"==typeof o&&null!==o?o=to(o):(a=pa(n)?fa:ca.current,o=(r=null!=(r=n.contextTypes))?da(e,a):ua),n=new n(t,o),e.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,n.updater=ho,e.stateNode=n,n._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),n}function vo(e,n,t,r){e=n.state,"function"==typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(t,r),"function"==typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(t,r),n.state!==e&&ho.enqueueReplaceState(n,n.state,null)}function Ao(e,n,t,r){var a=e.stateNode;a.props=t,a.state=e.memoizedState,a.refs=fo,ao(e);var o=n.contextType;"object"==typeof o&&null!==o?a.context=to(o):(o=pa(n)?fa:ca.current,a.context=da(e,o)),co(e,t,a,r),a.state=e.memoizedState,"function"==typeof(o=n.getDerivedStateFromProps)&&(po(e,n,o,t),a.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(n=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),n!==a.state&&ho.enqueueReplaceState(a,a.state,null),co(e,t,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4)}var yo=Array.isArray;function bo(e,n,t){if(null!==(e=t.ref)&&"function"!=typeof e&&"object"!=typeof e){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(i(309));var r=t.stateNode}if(!r)throw Error(i(147,e));var a=""+e;return null!==n&&null!==n.ref&&"function"==typeof n.ref&&n.ref._stringRef===a?n.ref:((n=function(e){var n=r.refs;n===fo&&(n=r.refs={}),null===e?delete n[a]:n[a]=e})._stringRef=a,n)}if("string"!=typeof e)throw Error(i(284));if(!t._owner)throw Error(i(290,e))}return e}function Co(e,n){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(n)?"object with keys {"+Object.keys(n).join(", ")+"}":n))}function wo(e){function n(n,t){if(e){var r=n.lastEffect;null!==r?(r.nextEffect=t,n.lastEffect=t):n.firstEffect=n.lastEffect=t,t.nextEffect=null,t.flags=8}}function t(t,r){if(!e)return null;for(;null!==r;)n(t,r),r=r.sibling;return null}function r(e,n){for(e=new Map;null!==n;)null!==n.key?e.set(n.key,n):e.set(n.index,n),n=n.sibling;return e}function a(e,n){return(e=Du(e,n)).index=0,e.sibling=null,e}function o(n,t,r){return n.index=r,e?null!==(r=n.alternate)?(r=r.index)<t?(n.flags=2,t):r:(n.flags=2,t):t}function l(n){return e&&null===n.alternate&&(n.flags=2),n}function u(e,n,t,r){return null===n||6!==n.tag?((n=qu(t,e.mode,r)).return=e,n):((n=a(n,t)).return=e,n)}function c(e,n,t,r){return null!==n&&n.elementType===t.type?((r=a(n,t.props)).ref=bo(e,n,t),r.return=e,r):((r=Fu(t.type,t.key,t.props,null,e.mode,r)).ref=bo(e,n,t),r.return=e,r)}function s(e,n,t,r){return null===n||4!==n.tag||n.stateNode.containerInfo!==t.containerInfo||n.stateNode.implementation!==t.implementation?((n=Vu(t,e.mode,r)).return=e,n):((n=a(n,t.children||[])).return=e,n)}function f(e,n,t,r,o){return null===n||7!==n.tag?((n=Qu(t,e.mode,r,o)).return=e,n):((n=a(n,t)).return=e,n)}function d(e,n,t){if("string"==typeof n||"number"==typeof n)return(n=qu(""+n,e.mode,t)).return=e,n;if("object"==typeof n&&null!==n){switch(n.$$typeof){case w:return(t=Fu(n.type,n.key,n.props,null,e.mode,t)).ref=bo(e,null,n),t.return=e,t;case x:return(n=Vu(n,e.mode,t)).return=e,n}if(yo(n)||Q(n))return(n=Qu(n,e.mode,t,null)).return=e,n;Co(e,n)}return null}function p(e,n,t,r){var a=null!==n?n.key:null;if("string"==typeof t||"number"==typeof t)return null!==a?null:u(e,n,""+t,r);if("object"==typeof t&&null!==t){switch(t.$$typeof){case w:return t.key===a?t.type===k?f(e,n,t.props.children,r,a):c(e,n,t,r):null;case x:return t.key===a?s(e,n,t,r):null}if(yo(t)||Q(t))return null!==a?null:f(e,n,t,r,null);Co(e,t)}return null}function h(e,n,t,r,a){if("string"==typeof r||"number"==typeof r)return u(n,e=e.get(t)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case w:return e=e.get(null===r.key?t:r.key)||null,r.type===k?f(n,e,r.props.children,a,r.key):c(n,e,r,a);case x:return s(n,e=e.get(null===r.key?t:r.key)||null,r,a)}if(yo(r)||Q(r))return f(n,e=e.get(t)||null,r,a,null);Co(n,r)}return null}function m(a,i,l,u){for(var c=null,s=null,f=i,m=i=0,g=null;null!==f&&m<l.length;m++){f.index>m?(g=f,f=null):g=f.sibling;var v=p(a,f,l[m],u);if(null===v){null===f&&(f=g);break}e&&f&&null===v.alternate&&n(a,f),i=o(v,i,m),null===s?c=v:s.sibling=v,s=v,f=g}if(m===l.length)return t(a,f),c;if(null===f){for(;m<l.length;m++)null!==(f=d(a,l[m],u))&&(i=o(f,i,m),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(a,f);m<l.length;m++)null!==(g=h(f,a,m,l[m],u))&&(e&&null!==g.alternate&&f.delete(null===g.key?m:g.key),i=o(g,i,m),null===s?c=g:s.sibling=g,s=g);return e&&f.forEach((function(e){return n(a,e)})),c}function g(a,l,u,c){var s=Q(u);if("function"!=typeof s)throw Error(i(150));if(null==(u=s.call(u)))throw Error(i(151));for(var f=s=null,m=l,g=l=0,v=null,A=u.next();null!==m&&!A.done;g++,A=u.next()){m.index>g?(v=m,m=null):v=m.sibling;var y=p(a,m,A.value,c);if(null===y){null===m&&(m=v);break}e&&m&&null===y.alternate&&n(a,m),l=o(y,l,g),null===f?s=y:f.sibling=y,f=y,m=v}if(A.done)return t(a,m),s;if(null===m){for(;!A.done;g++,A=u.next())null!==(A=d(a,A.value,c))&&(l=o(A,l,g),null===f?s=A:f.sibling=A,f=A);return s}for(m=r(a,m);!A.done;g++,A=u.next())null!==(A=h(m,a,g,A.value,c))&&(e&&null!==A.alternate&&m.delete(null===A.key?g:A.key),l=o(A,l,g),null===f?s=A:f.sibling=A,f=A);return e&&m.forEach((function(e){return n(a,e)})),s}return function(e,r,o,u){var c="object"==typeof o&&null!==o&&o.type===k&&null===o.key;c&&(o=o.props.children);var s="object"==typeof o&&null!==o;if(s)switch(o.$$typeof){case w:e:{for(s=o.key,c=r;null!==c;){if(c.key===s){switch(c.tag){case 7:if(o.type===k){t(e,c.sibling),(r=a(c,o.props.children)).return=e,e=r;break e}break;default:if(c.elementType===o.type){t(e,c.sibling),(r=a(c,o.props)).ref=bo(e,c,o),r.return=e,e=r;break e}}t(e,c);break}n(e,c),c=c.sibling}o.type===k?((r=Qu(o.props.children,e.mode,u,o.key)).return=e,e=r):((u=Fu(o.type,o.key,o.props,null,e.mode,u)).ref=bo(e,r,o),u.return=e,e=u)}return l(e);case x:e:{for(c=o.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){t(e,r.sibling),(r=a(r,o.children||[])).return=e,e=r;break e}t(e,r);break}n(e,r),r=r.sibling}(r=Vu(o,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof o||"number"==typeof o)return o=""+o,null!==r&&6===r.tag?(t(e,r.sibling),(r=a(r,o)).return=e,e=r):(t(e,r),(r=qu(o,e.mode,u)).return=e,e=r),l(e);if(yo(o))return m(e,r,o,u);if(Q(o))return g(e,r,o,u);if(s&&Co(e,o),void 0===o&&!c)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,H(e.type)||"Component"))}return t(e,r)}}var xo=wo(!0),ko=wo(!1),Eo={},Bo=oa(Eo),Io=oa(Eo),So=oa(Eo);function _o(e){if(e===Eo)throw Error(i(174));return e}function Po(e,n){switch(la(So,n),la(Io,e),la(Bo,Eo),e=n.nodeType){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:pe(null,"");break;default:n=pe(n=(e=8===e?n.parentNode:n).namespaceURI||null,e=e.tagName)}ia(Bo),la(Bo,n)}function To(){ia(Bo),ia(Io),ia(So)}function Oo(e){_o(So.current);var n=_o(Bo.current),t=pe(n,e.type);n!==t&&(la(Io,e),la(Bo,t))}function No(e){Io.current===e&&(ia(Bo),ia(Io))}var zo=oa(0);function Lo(e){for(var n=e;null!==n;){if(13===n.tag){var t=n.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||"$?"===t.data||"$!"===t.data))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(0!=(64&n.flags))return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var Mo=null,jo=null,Ro=!1;function Uo(e,n){var t=Ru(5,null,null,0);t.elementType="DELETED",t.type="DELETED",t.stateNode=n,t.return=e,t.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=t,e.lastEffect=t):e.firstEffect=e.lastEffect=t}function Do(e,n){switch(e.tag){case 5:var t=e.type;return null!==(n=1!==n.nodeType||t.toLowerCase()!==n.nodeName.toLowerCase()?null:n)&&(e.stateNode=n,!0);case 6:return null!==(n=""===e.pendingProps||3!==n.nodeType?null:n)&&(e.stateNode=n,!0);case 13:default:return!1}}function Fo(e){if(Ro){var n=jo;if(n){var t=n;if(!Do(e,n)){if(!(n=qr(t.nextSibling))||!Do(e,n))return e.flags=-1025&e.flags|2,Ro=!1,void(Mo=e);Uo(Mo,t)}Mo=e,jo=qr(n.firstChild)}else e.flags=-1025&e.flags|2,Ro=!1,Mo=e}}function Qo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Mo=e}function $o(e){if(e!==Mo)return!1;if(!Ro)return Qo(e),Ro=!0,!1;var n=e.type;if(5!==e.tag||"head"!==n&&"body"!==n&&!Dr(n,e.memoizedProps))for(n=jo;n;)Uo(e,n),n=qr(n.nextSibling);if(Qo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType){var t=e.data;if("/$"===t){if(0===n){jo=qr(e.nextSibling);break e}n--}else"$"!==t&&"$!"!==t&&"$?"!==t||n++}e=e.nextSibling}jo=null}}else jo=Mo?qr(e.stateNode.nextSibling):null;return!0}function qo(){jo=Mo=null,Ro=!1}var Vo=[];function Wo(){for(var e=0;e<Vo.length;e++)Vo[e]._workInProgressVersionPrimary=null;Vo.length=0}var Ho=C.ReactCurrentDispatcher,Xo=C.ReactCurrentBatchConfig,Yo=0,Ko=null,Zo=null,Go=null,Jo=!1,ei=!1;function ni(){throw Error(i(321))}function ti(e,n){if(null===n)return!1;for(var t=0;t<n.length&&t<e.length;t++)if(!ir(e[t],n[t]))return!1;return!0}function ri(e,n,t,r,a,o){if(Yo=o,Ko=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,Ho.current=null===e||null===e.memoizedState?_i:Pi,e=t(r,a),ei){o=0;do{if(ei=!1,!(25>o))throw Error(i(301));o+=1,Go=Zo=null,n.updateQueue=null,Ho.current=Ti,e=t(r,a)}while(ei)}if(Ho.current=Si,n=null!==Zo&&null!==Zo.next,Yo=0,Go=Zo=Ko=null,Jo=!1,n)throw Error(i(300));return e}function ai(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Go?Ko.memoizedState=Go=e:Go=Go.next=e,Go}function oi(){if(null===Zo){var e=Ko.alternate;e=null!==e?e.memoizedState:null}else e=Zo.next;var n=null===Go?Ko.memoizedState:Go.next;if(null!==n)Go=n,Zo=e;else{if(null===e)throw Error(i(310));e={memoizedState:(Zo=e).memoizedState,baseState:Zo.baseState,baseQueue:Zo.baseQueue,queue:Zo.queue,next:null},null===Go?Ko.memoizedState=Go=e:Go=Go.next=e}return Go}function ii(e,n){return"function"==typeof n?n(e):n}function li(e){var n=oi(),t=n.queue;if(null===t)throw Error(i(311));t.lastRenderedReducer=e;var r=Zo,a=r.baseQueue,o=t.pending;if(null!==o){if(null!==a){var l=a.next;a.next=o.next,o.next=l}r.baseQueue=a=o,t.pending=null}if(null!==a){a=a.next,r=r.baseState;var u=l=o=null,c=a;do{var s=c.lane;if((Yo&s)===s)null!==u&&(u=u.next={lane:0,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),r=c.eagerReducer===e?c.eagerState:e(r,c.action);else{var f={lane:s,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(l=u=f,o=r):u=u.next=f,Ko.lanes|=s,Ll|=s}c=c.next}while(null!==c&&c!==a);null===u?o=r:u.next=l,ir(r,n.memoizedState)||(Ni=!0),n.memoizedState=r,n.baseState=o,n.baseQueue=u,t.lastRenderedState=r}return[n.memoizedState,t.dispatch]}function ui(e){var n=oi(),t=n.queue;if(null===t)throw Error(i(311));t.lastRenderedReducer=e;var r=t.dispatch,a=t.pending,o=n.memoizedState;if(null!==a){t.pending=null;var l=a=a.next;do{o=e(o,l.action),l=l.next}while(l!==a);ir(o,n.memoizedState)||(Ni=!0),n.memoizedState=o,null===n.baseQueue&&(n.baseState=o),t.lastRenderedState=o}return[o,r]}function ci(e,n,t){var r=n._getVersion;r=r(n._source);var a=n._workInProgressVersionPrimary;if(null!==a?e=a===r:(e=e.mutableReadLanes,(e=(Yo&e)===e)&&(n._workInProgressVersionPrimary=r,Vo.push(n))),e)return t(n._source);throw Vo.push(n),Error(i(350))}function si(e,n,t,r){var a=Il;if(null===a)throw Error(i(349));var o=n._getVersion,l=o(n._source),u=Ho.current,c=u.useState((function(){return ci(a,n,t)})),s=c[1],f=c[0];c=Go;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,m=d.source;d=d.subscribe;var g=Ko;return e.memoizedState={refs:p,source:n,subscribe:r},u.useEffect((function(){p.getSnapshot=t,p.setSnapshot=s;var e=o(n._source);if(!ir(l,e)){e=t(n._source),ir(f,e)||(s(e),e=lu(g),a.mutableReadLanes|=e&a.pendingLanes),e=a.mutableReadLanes,a.entangledLanes|=e;for(var r=a.entanglements,i=e;0<i;){var u=31-qn(i),c=1<<u;r[u]|=e,i&=~c}}}),[t,n,r]),u.useEffect((function(){return r(n._source,(function(){var e=p.getSnapshot,t=p.setSnapshot;try{t(e(n._source));var r=lu(g);a.mutableReadLanes|=r&a.pendingLanes}catch(e){t((function(){throw e}))}}))}),[n,r]),ir(h,t)&&ir(m,n)&&ir(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:ii,lastRenderedState:f}).dispatch=s=Ii.bind(null,Ko,e),c.queue=e,c.baseQueue=null,f=ci(a,n,t),c.memoizedState=c.baseState=f),f}function fi(e,n,t){return si(oi(),e,n,t)}function di(e){var n=ai();return"function"==typeof e&&(e=e()),n.memoizedState=n.baseState=e,e=(e=n.queue={pending:null,dispatch:null,lastRenderedReducer:ii,lastRenderedState:e}).dispatch=Ii.bind(null,Ko,e),[n.memoizedState,e]}function pi(e,n,t,r){return e={tag:e,create:n,destroy:t,deps:r,next:null},null===(n=Ko.updateQueue)?(n={lastEffect:null},Ko.updateQueue=n,n.lastEffect=e.next=e):null===(t=n.lastEffect)?n.lastEffect=e.next=e:(r=t.next,t.next=e,e.next=r,n.lastEffect=e),e}function hi(e){return e={current:e},ai().memoizedState=e}function mi(){return oi().memoizedState}function gi(e,n,t,r){var a=ai();Ko.flags|=e,a.memoizedState=pi(1|n,t,void 0,void 0===r?null:r)}function vi(e,n,t,r){var a=oi();r=void 0===r?null:r;var o=void 0;if(null!==Zo){var i=Zo.memoizedState;if(o=i.destroy,null!==r&&ti(r,i.deps))return void pi(n,t,o,r)}Ko.flags|=e,a.memoizedState=pi(1|n,t,o,r)}function Ai(e,n){return gi(516,4,e,n)}function yi(e,n){return vi(516,4,e,n)}function bi(e,n){return vi(4,2,e,n)}function Ci(e,n){return"function"==typeof n?(e=e(),n(e),function(){n(null)}):null!=n?(e=e(),n.current=e,function(){n.current=null}):void 0}function wi(e,n,t){return t=null!=t?t.concat([e]):null,vi(4,2,Ci.bind(null,n,e),t)}function xi(){}function ki(e,n){var t=oi();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&ti(n,r[1])?r[0]:(t.memoizedState=[e,n],e)}function Ei(e,n){var t=oi();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&ti(n,r[1])?r[0]:(e=e(),t.memoizedState=[e,n],e)}function Bi(e,n){var t=Da();Qa(98>t?98:t,(function(){e(!0)})),Qa(97<t?97:t,(function(){var t=Xo.transition;Xo.transition=1;try{e(!1),n()}finally{Xo.transition=t}}))}function Ii(e,n,t){var r=iu(),a=lu(e),o={lane:a,action:t,eagerReducer:null,eagerState:null,next:null},i=n.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),n.pending=o,i=e.alternate,e===Ko||null!==i&&i===Ko)ei=Jo=!0;else{if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=n.lastRenderedReducer))try{var l=n.lastRenderedState,u=i(l,t);if(o.eagerReducer=i,o.eagerState=u,ir(u,l))return}catch(e){}uu(e,a,r)}}var Si={readContext:to,useCallback:ni,useContext:ni,useEffect:ni,useImperativeHandle:ni,useLayoutEffect:ni,useMemo:ni,useReducer:ni,useRef:ni,useState:ni,useDebugValue:ni,useDeferredValue:ni,useTransition:ni,useMutableSource:ni,useOpaqueIdentifier:ni,unstable_isNewReconciler:!1},_i={readContext:to,useCallback:function(e,n){return ai().memoizedState=[e,void 0===n?null:n],e},useContext:to,useEffect:Ai,useImperativeHandle:function(e,n,t){return t=null!=t?t.concat([e]):null,gi(4,2,Ci.bind(null,n,e),t)},useLayoutEffect:function(e,n){return gi(4,2,e,n)},useMemo:function(e,n){var t=ai();return n=void 0===n?null:n,e=e(),t.memoizedState=[e,n],e},useReducer:function(e,n,t){var r=ai();return n=void 0!==t?t(n):n,r.memoizedState=r.baseState=n,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:n}).dispatch=Ii.bind(null,Ko,e),[r.memoizedState,e]},useRef:hi,useState:di,useDebugValue:xi,useDeferredValue:function(e){var n=di(e),t=n[0],r=n[1];return Ai((function(){var n=Xo.transition;Xo.transition=1;try{r(e)}finally{Xo.transition=n}}),[e]),t},useTransition:function(){var e=di(!1),n=e[0];return hi(e=Bi.bind(null,e[1])),[e,n]},useMutableSource:function(e,n,t){var r=ai();return r.memoizedState={refs:{getSnapshot:n,setSnapshot:null},source:e,subscribe:t},si(r,e,n,t)},useOpaqueIdentifier:function(){if(Ro){var e=!1,n=function(e){return{$$typeof:L,toString:e,valueOf:e}}((function(){throw e||(e=!0,t("r:"+(Wr++).toString(36))),Error(i(355))})),t=di(n)[1];return 0==(2&Ko.mode)&&(Ko.flags|=516,pi(5,(function(){t("r:"+(Wr++).toString(36))}),void 0,null)),n}return di(n="r:"+(Wr++).toString(36)),n},unstable_isNewReconciler:!1},Pi={readContext:to,useCallback:ki,useContext:to,useEffect:yi,useImperativeHandle:wi,useLayoutEffect:bi,useMemo:Ei,useReducer:li,useRef:mi,useState:function(){return li(ii)},useDebugValue:xi,useDeferredValue:function(e){var n=li(ii),t=n[0],r=n[1];return yi((function(){var n=Xo.transition;Xo.transition=1;try{r(e)}finally{Xo.transition=n}}),[e]),t},useTransition:function(){var e=li(ii)[0];return[mi().current,e]},useMutableSource:fi,useOpaqueIdentifier:function(){return li(ii)[0]},unstable_isNewReconciler:!1},Ti={readContext:to,useCallback:ki,useContext:to,useEffect:yi,useImperativeHandle:wi,useLayoutEffect:bi,useMemo:Ei,useReducer:ui,useRef:mi,useState:function(){return ui(ii)},useDebugValue:xi,useDeferredValue:function(e){var n=ui(ii),t=n[0],r=n[1];return yi((function(){var n=Xo.transition;Xo.transition=1;try{r(e)}finally{Xo.transition=n}}),[e]),t},useTransition:function(){var e=ui(ii)[0];return[mi().current,e]},useMutableSource:fi,useOpaqueIdentifier:function(){return ui(ii)[0]},unstable_isNewReconciler:!1},Oi=C.ReactCurrentOwner,Ni=!1;function zi(e,n,t,r){n.child=null===e?ko(n,null,t,r):xo(n,e.child,t,r)}function Li(e,n,t,r,a){t=t.render;var o=n.ref;return no(n,a),r=ri(e,n,t,r,o,a),null===e||Ni?(n.flags|=1,zi(e,n,r,a),n.child):(n.updateQueue=e.updateQueue,n.flags&=-517,e.lanes&=~a,Ji(e,n,a))}function Mi(e,n,t,r,a,o){if(null===e){var i=t.type;return"function"!=typeof i||Uu(i)||void 0!==i.defaultProps||null!==t.compare||void 0!==t.defaultProps?((e=Fu(t.type,null,r,n,n.mode,o)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=i,ji(e,n,i,r,a,o))}return i=e.child,0==(a&o)&&(a=i.memoizedProps,(t=null!==(t=t.compare)?t:ur)(a,r)&&e.ref===n.ref)?Ji(e,n,o):(n.flags|=1,(e=Du(i,r)).ref=n.ref,e.return=n,n.child=e)}function ji(e,n,t,r,a,o){if(null!==e&&ur(e.memoizedProps,r)&&e.ref===n.ref){if(Ni=!1,0==(o&a))return n.lanes=e.lanes,Ji(e,n,o);0!=(16384&e.flags)&&(Ni=!0)}return Di(e,n,t,r,o)}function Ri(e,n,t){var r=n.pendingProps,a=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&n.mode))n.memoizedState={baseLanes:0},gu(0,t);else{if(0==(1073741824&t))return e=null!==o?o.baseLanes|t:t,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:e},gu(0,e),null;n.memoizedState={baseLanes:0},gu(0,null!==o?o.baseLanes:t)}else null!==o?(r=o.baseLanes|t,n.memoizedState=null):r=t,gu(0,r);return zi(e,n,a,t),n.child}function Ui(e,n){var t=n.ref;(null===e&&null!==t||null!==e&&e.ref!==t)&&(n.flags|=128)}function Di(e,n,t,r,a){var o=pa(t)?fa:ca.current;return o=da(n,o),no(n,a),t=ri(e,n,t,r,o,a),null===e||Ni?(n.flags|=1,zi(e,n,t,a),n.child):(n.updateQueue=e.updateQueue,n.flags&=-517,e.lanes&=~a,Ji(e,n,a))}function Fi(e,n,t,r,a){if(pa(t)){var o=!0;va(n)}else o=!1;if(no(n,a),null===n.stateNode)null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),go(n,t,r),Ao(n,t,r,a),r=!0;else if(null===e){var i=n.stateNode,l=n.memoizedProps;i.props=l;var u=i.context,c=t.contextType;c="object"==typeof c&&null!==c?to(c):da(n,c=pa(t)?fa:ca.current);var s=t.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==c)&&vo(n,i,r,c),ro=!1;var d=n.memoizedState;i.state=d,co(n,r,i,a),u=n.memoizedState,l!==r||d!==u||sa.current||ro?("function"==typeof s&&(po(n,t,s,r),u=n.memoizedState),(l=ro||mo(n,t,l,r,d,u,c))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(n.flags|=4)):("function"==typeof i.componentDidMount&&(n.flags|=4),n.memoizedProps=r,n.memoizedState=u),i.props=r,i.state=u,i.context=c,r=l):("function"==typeof i.componentDidMount&&(n.flags|=4),r=!1)}else{i=n.stateNode,oo(e,n),l=n.memoizedProps,c=n.type===n.elementType?l:Ha(n.type,l),i.props=c,f=n.pendingProps,d=i.context,u="object"==typeof(u=t.contextType)&&null!==u?to(u):da(n,u=pa(t)?fa:ca.current);var p=t.getDerivedStateFromProps;(s="function"==typeof p||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==f||d!==u)&&vo(n,i,r,u),ro=!1,d=n.memoizedState,i.state=d,co(n,r,i,a);var h=n.memoizedState;l!==f||d!==h||sa.current||ro?("function"==typeof p&&(po(n,t,p,r),h=n.memoizedState),(c=ro||mo(n,t,c,r,d,h,u))?(s||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,h,u),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof i.componentDidUpdate&&(n.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(n.flags|=256)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(n.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(n.flags|=256),n.memoizedProps=r,n.memoizedState=h),i.props=r,i.state=h,i.context=u,r=c):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(n.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(n.flags|=256),r=!1)}return Qi(e,n,t,r,o,a)}function Qi(e,n,t,r,a,o){Ui(e,n);var i=0!=(64&n.flags);if(!r&&!i)return a&&Aa(n,t,!1),Ji(e,n,o);r=n.stateNode,Oi.current=n;var l=i&&"function"!=typeof t.getDerivedStateFromError?null:r.render();return n.flags|=1,null!==e&&i?(n.child=xo(n,e.child,null,o),n.child=xo(n,null,l,o)):zi(e,n,l,o),n.memoizedState=r.state,a&&Aa(n,t,!0),n.child}function $i(e){var n=e.stateNode;n.pendingContext?ma(0,n.pendingContext,n.pendingContext!==n.context):n.context&&ma(0,n.context,!1),Po(e,n.containerInfo)}var qi,Vi,Wi,Hi={dehydrated:null,retryLane:0};function Xi(e,n,t){var r,a=n.pendingProps,o=zo.current,i=!1;return(r=0!=(64&n.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&o)),r?(i=!0,n.flags&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(o|=1),la(zo,1&o),null===e?(void 0!==a.fallback&&Fo(n),e=a.children,o=a.fallback,i?(e=Yi(n,e,o,t),n.child.memoizedState={baseLanes:t},n.memoizedState=Hi,e):"number"==typeof a.unstable_expectedLoadTime?(e=Yi(n,e,o,t),n.child.memoizedState={baseLanes:t},n.memoizedState=Hi,n.lanes=33554432,e):((t=$u({mode:"visible",children:e},n.mode,t,null)).return=n,n.child=t)):(e.memoizedState,i?(a=function(e,n,t,r,a){var o=n.mode,i=e.child;e=i.sibling;var l={mode:"hidden",children:t};return 0==(2&o)&&n.child!==i?((t=n.child).childLanes=0,t.pendingProps=l,null!==(i=t.lastEffect)?(n.firstEffect=t.firstEffect,n.lastEffect=i,i.nextEffect=null):n.firstEffect=n.lastEffect=null):t=Du(i,l),null!==e?r=Du(e,r):(r=Qu(r,o,a,null)).flags|=2,r.return=n,t.return=n,t.sibling=r,n.child=t,r}(e,n,a.children,a.fallback,t),i=n.child,o=e.child.memoizedState,i.memoizedState=null===o?{baseLanes:t}:{baseLanes:o.baseLanes|t},i.childLanes=e.childLanes&~t,n.memoizedState=Hi,a):(t=function(e,n,t,r){var a=e.child;return e=a.sibling,t=Du(a,{mode:"visible",children:t}),0==(2&n.mode)&&(t.lanes=r),t.return=n,t.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,n.firstEffect=n.lastEffect=e),n.child=t}(e,n,a.children,t),n.memoizedState=null,t))}function Yi(e,n,t,r){var a=e.mode,o=e.child;return n={mode:"hidden",children:n},0==(2&a)&&null!==o?(o.childLanes=0,o.pendingProps=n):o=$u(n,a,0,null),t=Qu(t,a,r,null),o.return=e,t.return=e,o.sibling=t,e.child=o,t}function Ki(e,n){e.lanes|=n;var t=e.alternate;null!==t&&(t.lanes|=n),eo(e.return,n)}function Zi(e,n,t,r,a,o){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:r,tail:t,tailMode:a,lastEffect:o}:(i.isBackwards=n,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=t,i.tailMode=a,i.lastEffect=o)}function Gi(e,n,t){var r=n.pendingProps,a=r.revealOrder,o=r.tail;if(zi(e,n,r.children,t),0!=(2&(r=zo.current)))r=1&r|2,n.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ki(e,t);else if(19===e.tag)Ki(e,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(la(zo,r),0==(2&n.mode))n.memoizedState=null;else switch(a){case"forwards":for(t=n.child,a=null;null!==t;)null!==(e=t.alternate)&&null===Lo(e)&&(a=t),t=t.sibling;null===(t=a)?(a=n.child,n.child=null):(a=t.sibling,t.sibling=null),Zi(n,!1,a,t,o,n.lastEffect);break;case"backwards":for(t=null,a=n.child,n.child=null;null!==a;){if(null!==(e=a.alternate)&&null===Lo(e)){n.child=a;break}e=a.sibling,a.sibling=t,t=a,a=e}Zi(n,!0,t,null,o,n.lastEffect);break;case"together":Zi(n,!1,null,null,void 0,n.lastEffect);break;default:n.memoizedState=null}return n.child}function Ji(e,n,t){if(null!==e&&(n.dependencies=e.dependencies),Ll|=n.lanes,0!=(t&n.childLanes)){if(null!==e&&n.child!==e.child)throw Error(i(153));if(null!==n.child){for(t=Du(e=n.child,e.pendingProps),n.child=t,t.return=n;null!==e.sibling;)e=e.sibling,(t=t.sibling=Du(e,e.pendingProps)).return=n;t.sibling=null}return n.child}return null}function el(e,n){if(!Ro)switch(e.tailMode){case"hidden":n=e.tail;for(var t=null;null!==n;)null!==n.alternate&&(t=n),n=n.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?n||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function nl(e,n,t){var r=n.pendingProps;switch(n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return pa(n.type)&&ha(),null;case 3:return To(),ia(sa),ia(ca),Wo(),(r=n.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||($o(n)?n.flags|=4:r.hydrate||(n.flags|=256)),null;case 5:No(n);var o=_o(So.current);if(t=n.type,null!==e&&null!=n.stateNode)Vi(e,n,t,r),e.ref!==n.ref&&(n.flags|=128);else{if(!r){if(null===n.stateNode)throw Error(i(166));return null}if(e=_o(Bo.current),$o(n)){r=n.stateNode,t=n.type;var l=n.memoizedProps;switch(r[Xr]=n,r[Yr]=l,t){case"dialog":Br("cancel",r),Br("close",r);break;case"iframe":case"object":case"embed":Br("load",r);break;case"video":case"audio":for(e=0;e<wr.length;e++)Br(wr[e],r);break;case"source":Br("error",r);break;case"img":case"image":case"link":Br("error",r),Br("load",r);break;case"details":Br("toggle",r);break;case"input":ee(r,l),Br("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Br("invalid",r);break;case"textarea":ue(r,l),Br("invalid",r)}for(var c in xe(t,l),e=null,l)l.hasOwnProperty(c)&&(o=l[c],"children"===c?"string"==typeof o?r.textContent!==o&&(e=["children",o]):"number"==typeof o&&r.textContent!==""+o&&(e=["children",""+o]):u.hasOwnProperty(c)&&null!=o&&"onScroll"===c&&Br("scroll",r));switch(t){case"input":K(r),re(r,l,!0);break;case"textarea":K(r),se(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=Mr)}r=e,n.updateQueue=r,null!==r&&(n.flags|=4)}else{switch(c=9===o.nodeType?o:o.ownerDocument,e===fe&&(e=de(t)),e===fe?"script"===t?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=c.createElement(t,{is:r.is}):(e=c.createElement(t),"select"===t&&(c=e,r.multiple?c.multiple=!0:r.size&&(c.size=r.size))):e=c.createElementNS(e,t),e[Xr]=n,e[Yr]=r,qi(e,n),n.stateNode=e,c=ke(t,r),t){case"dialog":Br("cancel",e),Br("close",e),o=r;break;case"iframe":case"object":case"embed":Br("load",e),o=r;break;case"video":case"audio":for(o=0;o<wr.length;o++)Br(wr[o],e);o=r;break;case"source":Br("error",e),o=r;break;case"img":case"image":case"link":Br("error",e),Br("load",e),o=r;break;case"details":Br("toggle",e),o=r;break;case"input":ee(e,r),o=J(e,r),Br("invalid",e);break;case"option":o=oe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},o=a({},r,{value:void 0}),Br("invalid",e);break;case"textarea":ue(e,r),o=le(e,r),Br("invalid",e);break;default:o=r}xe(t,o);var s=o;for(l in s)if(s.hasOwnProperty(l)){var f=s[l];"style"===l?Ce(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&ge(e,f):"children"===l?"string"==typeof f?("textarea"!==t||""!==f)&&ve(e,f):"number"==typeof f&&ve(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(u.hasOwnProperty(l)?null!=f&&"onScroll"===l&&Br("scroll",e):null!=f&&b(e,l,f,c))}switch(t){case"input":K(e),re(e,r,!1);break;case"textarea":K(e),se(e);break;case"option":null!=r.value&&e.setAttribute("value",""+X(r.value));break;case"select":e.multiple=!!r.multiple,null!=(l=r.value)?ie(e,!!r.multiple,l,!1):null!=r.defaultValue&&ie(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof o.onClick&&(e.onclick=Mr)}Ur(t,r)&&(n.flags|=4)}null!==n.ref&&(n.flags|=128)}return null;case 6:if(e&&null!=n.stateNode)Wi(0,n,e.memoizedProps,r);else{if("string"!=typeof r&&null===n.stateNode)throw Error(i(166));t=_o(So.current),_o(Bo.current),$o(n)?(r=n.stateNode,t=n.memoizedProps,r[Xr]=n,r.nodeValue!==t&&(n.flags|=4)):((r=(9===t.nodeType?t:t.ownerDocument).createTextNode(r))[Xr]=n,n.stateNode=r)}return null;case 13:return ia(zo),r=n.memoizedState,0!=(64&n.flags)?(n.lanes=t,n):(r=null!==r,t=!1,null===e?void 0!==n.memoizedProps.fallback&&$o(n):t=null!==e.memoizedState,r&&!t&&0!=(2&n.mode)&&(null===e&&!0!==n.memoizedProps.unstable_avoidThisFallback||0!=(1&zo.current)?0===Ol&&(Ol=3):(0!==Ol&&3!==Ol||(Ol=4),null===Il||0==(134217727&Ll)&&0==(134217727&Ml)||du(Il,_l))),(r||t)&&(n.flags|=4),null);case 4:return To(),null===e&&Sr(n.stateNode.containerInfo),null;case 10:return Ja(n),null;case 17:return pa(n.type)&&ha(),null;case 19:if(ia(zo),null===(r=n.memoizedState))return null;if(l=0!=(64&n.flags),null===(c=r.rendering))if(l)el(r,!1);else{if(0!==Ol||null!==e&&0!=(64&e.flags))for(e=n.child;null!==e;){if(null!==(c=Lo(e))){for(n.flags|=64,el(r,!1),null!==(l=c.updateQueue)&&(n.updateQueue=l,n.flags|=4),null===r.lastEffect&&(n.firstEffect=null),n.lastEffect=r.lastEffect,r=t,t=n.child;null!==t;)e=r,(l=t).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(c=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=c.childLanes,l.lanes=c.lanes,l.child=c.child,l.memoizedProps=c.memoizedProps,l.memoizedState=c.memoizedState,l.updateQueue=c.updateQueue,l.type=c.type,e=c.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),t=t.sibling;return la(zo,1&zo.current|2),n.child}e=e.sibling}null!==r.tail&&Ua()>Dl&&(n.flags|=64,l=!0,el(r,!1),n.lanes=33554432)}else{if(!l)if(null!==(e=Lo(c))){if(n.flags|=64,l=!0,null!==(t=e.updateQueue)&&(n.updateQueue=t,n.flags|=4),el(r,!0),null===r.tail&&"hidden"===r.tailMode&&!c.alternate&&!Ro)return null!==(n=n.lastEffect=r.lastEffect)&&(n.nextEffect=null),null}else 2*Ua()-r.renderingStartTime>Dl&&1073741824!==t&&(n.flags|=64,l=!0,el(r,!1),n.lanes=33554432);r.isBackwards?(c.sibling=n.child,n.child=c):(null!==(t=r.last)?t.sibling=c:n.child=c,r.last=c)}return null!==r.tail?(t=r.tail,r.rendering=t,r.tail=t.sibling,r.lastEffect=n.lastEffect,r.renderingStartTime=Ua(),t.sibling=null,n=zo.current,la(zo,l?1&n|2:1&n),t):null;case 23:case 24:return vu(),null!==e&&null!==e.memoizedState!=(null!==n.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(n.flags|=4),null}throw Error(i(156,n.tag))}function tl(e){switch(e.tag){case 1:pa(e.type)&&ha();var n=e.flags;return 4096&n?(e.flags=-4097&n|64,e):null;case 3:if(To(),ia(sa),ia(ca),Wo(),0!=(64&(n=e.flags)))throw Error(i(285));return e.flags=-4097&n|64,e;case 5:return No(e),null;case 13:return ia(zo),4096&(n=e.flags)?(e.flags=-4097&n|64,e):null;case 19:return ia(zo),null;case 4:return To(),null;case 10:return Ja(e),null;case 23:case 24:return vu(),null;default:return null}}function rl(e,n){try{var t="",r=n;do{t+=W(r),r=r.return}while(r);var a=t}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:n,stack:a}}function al(e,n){try{console.error(n.value)}catch(e){setTimeout((function(){throw e}))}}qi=function(e,n){for(var t=n.child;null!==t;){if(5===t.tag||6===t.tag)e.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},Vi=function(e,n,t,r){var o=e.memoizedProps;if(o!==r){e=n.stateNode,_o(Bo.current);var i,l=null;switch(t){case"input":o=J(e,o),r=J(e,r),l=[];break;case"option":o=oe(e,o),r=oe(e,r),l=[];break;case"select":o=a({},o,{value:void 0}),r=a({},r,{value:void 0}),l=[];break;case"textarea":o=le(e,o),r=le(e,r),l=[];break;default:"function"!=typeof o.onClick&&"function"==typeof r.onClick&&(e.onclick=Mr)}for(f in xe(t,r),t=null,o)if(!r.hasOwnProperty(f)&&o.hasOwnProperty(f)&&null!=o[f])if("style"===f){var c=o[f];for(i in c)c.hasOwnProperty(i)&&(t||(t={}),t[i]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?l||(l=[]):(l=l||[]).push(f,null));for(f in r){var s=r[f];if(c=null!=o?o[f]:void 0,r.hasOwnProperty(f)&&s!==c&&(null!=s||null!=c))if("style"===f)if(c){for(i in c)!c.hasOwnProperty(i)||s&&s.hasOwnProperty(i)||(t||(t={}),t[i]="");for(i in s)s.hasOwnProperty(i)&&c[i]!==s[i]&&(t||(t={}),t[i]=s[i])}else t||(l||(l=[]),l.push(f,t)),t=s;else"dangerouslySetInnerHTML"===f?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(l=l||[]).push(f,s)):"children"===f?"string"!=typeof s&&"number"!=typeof s||(l=l||[]).push(f,""+s):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=s&&"onScroll"===f&&Br("scroll",e),l||c===s||(l=[])):"object"==typeof s&&null!==s&&s.$$typeof===L?s.toString():(l=l||[]).push(f,s))}t&&(l=l||[]).push("style",t);var f=l;(n.updateQueue=f)&&(n.flags|=4)}},Wi=function(e,n,t,r){t!==r&&(n.flags|=4)};var ol="function"==typeof WeakMap?WeakMap:Map;function il(e,n,t){(t=io(-1,t)).tag=3,t.payload={element:null};var r=n.value;return t.callback=function(){ql||(ql=!0,Vl=r),al(0,n)},t}function ll(e,n,t){(t=io(-1,t)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=n.value;t.payload=function(){return al(0,n),r(a)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(t.callback=function(){"function"!=typeof r&&(null===Wl?Wl=new Set([this]):Wl.add(this),al(0,n));var e=n.stack;this.componentDidCatch(n.value,{componentStack:null!==e?e:""})}),t}var ul="function"==typeof WeakSet?WeakSet:Set;function cl(e){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){zu(e,n)}else n.current=null}function sl(e,n){switch(n.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&n.flags&&null!==e){var t=e.memoizedProps,r=e.memoizedState;n=(e=n.stateNode).getSnapshotBeforeUpdate(n.elementType===n.type?t:Ha(n.type,t),r),e.__reactInternalSnapshotBeforeUpdate=n}return;case 3:return void(256&n.flags&&$r(n.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(i(163))}function fl(e,n,t){switch(t.tag){case 0:case 11:case 15:case 22:if(null!==(n=null!==(n=t.updateQueue)?n.lastEffect:null)){e=n=n.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==n)}if(null!==(n=null!==(n=t.updateQueue)?n.lastEffect:null)){e=n=n.next;do{var a=e;r=a.next,0!=(4&(a=a.tag))&&0!=(1&a)&&(Tu(t,e),Pu(t,e)),e=r}while(e!==n)}return;case 1:return e=t.stateNode,4&t.flags&&(null===n?e.componentDidMount():(r=t.elementType===t.type?n.memoizedProps:Ha(t.type,n.memoizedProps),e.componentDidUpdate(r,n.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(n=t.updateQueue)&&so(t,n,e));case 3:if(null!==(n=t.updateQueue)){if(e=null,null!==t.child)switch(t.child.tag){case 5:e=t.child.stateNode;break;case 1:e=t.child.stateNode}so(t,n,e)}return;case 5:return e=t.stateNode,void(null===n&&4&t.flags&&Ur(t.type,t.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===t.memoizedState&&(t=t.alternate,null!==t&&(t=t.memoizedState,null!==t&&(t=t.dehydrated,null!==t&&wn(t)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(i(163))}function dl(e,n){for(var t=e;;){if(5===t.tag){var r=t.stateNode;if(n)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=t.stateNode;var a=t.memoizedProps.style;a=null!=a&&a.hasOwnProperty("display")?a.display:null,r.style.display=be("display",a)}}else if(6===t.tag)t.stateNode.nodeValue=n?"":t.memoizedProps;else if((23!==t.tag&&24!==t.tag||null===t.memoizedState||t===e)&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return}t.sibling.return=t.return,t=t.sibling}}function pl(e,n){if(ba&&"function"==typeof ba.onCommitFiberUnmount)try{ba.onCommitFiberUnmount(ya,n)}catch(e){}switch(n.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=n.updateQueue)&&null!==(e=e.lastEffect)){var t=e=e.next;do{var r=t,a=r.destroy;if(r=r.tag,void 0!==a)if(0!=(4&r))Tu(n,t);else{r=n;try{a()}catch(e){zu(r,e)}}t=t.next}while(t!==e)}break;case 1:if(cl(n),"function"==typeof(e=n.stateNode).componentWillUnmount)try{e.props=n.memoizedProps,e.state=n.memoizedState,e.componentWillUnmount()}catch(e){zu(n,e)}break;case 5:cl(n);break;case 4:yl(e,n)}}function hl(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function ml(e){return 5===e.tag||3===e.tag||4===e.tag}function gl(e){e:{for(var n=e.return;null!==n;){if(ml(n))break e;n=n.return}throw Error(i(160))}var t=n;switch(n=t.stateNode,t.tag){case 5:var r=!1;break;case 3:case 4:n=n.containerInfo,r=!0;break;default:throw Error(i(161))}16&t.flags&&(ve(n,""),t.flags&=-17);e:n:for(t=e;;){for(;null===t.sibling;){if(null===t.return||ml(t.return)){t=null;break e}t=t.return}for(t.sibling.return=t.return,t=t.sibling;5!==t.tag&&6!==t.tag&&18!==t.tag;){if(2&t.flags)continue n;if(null===t.child||4===t.tag)continue n;t.child.return=t,t=t.child}if(!(2&t.flags)){t=t.stateNode;break e}}r?vl(e,t,n):Al(e,t,n)}function vl(e,n,t){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,n?8===t.nodeType?t.parentNode.insertBefore(e,n):t.insertBefore(e,n):(8===t.nodeType?(n=t.parentNode).insertBefore(e,t):(n=t).appendChild(e),null!=(t=t._reactRootContainer)||null!==n.onclick||(n.onclick=Mr));else if(4!==r&&null!==(e=e.child))for(vl(e,n,t),e=e.sibling;null!==e;)vl(e,n,t),e=e.sibling}function Al(e,n,t){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,n?t.insertBefore(e,n):t.appendChild(e);else if(4!==r&&null!==(e=e.child))for(Al(e,n,t),e=e.sibling;null!==e;)Al(e,n,t),e=e.sibling}function yl(e,n){for(var t,r,a=n,o=!1;;){if(!o){o=a.return;e:for(;;){if(null===o)throw Error(i(160));switch(t=o.stateNode,o.tag){case 5:r=!1;break e;case 3:case 4:t=t.containerInfo,r=!0;break e}o=o.return}o=!0}if(5===a.tag||6===a.tag){e:for(var l=e,u=a,c=u;;)if(pl(l,c),null!==c.child&&4!==c.tag)c.child.return=c,c=c.child;else{if(c===u)break e;for(;null===c.sibling;){if(null===c.return||c.return===u)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}r?(l=t,u=a.stateNode,8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)):t.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){t=a.stateNode.containerInfo,r=!0,a.child.return=a,a=a.child;continue}}else if(pl(e,a),null!==a.child){a.child.return=a,a=a.child;continue}if(a===n)break;for(;null===a.sibling;){if(null===a.return||a.return===n)return;4===(a=a.return).tag&&(o=!1)}a.sibling.return=a.return,a=a.sibling}}function bl(e,n){switch(n.tag){case 0:case 11:case 14:case 15:case 22:var t=n.updateQueue;if(null!==(t=null!==t?t.lastEffect:null)){var r=t=t.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==t)}return;case 1:return;case 5:if(null!=(t=n.stateNode)){r=n.memoizedProps;var a=null!==e?e.memoizedProps:r;e=n.type;var o=n.updateQueue;if(n.updateQueue=null,null!==o){for(t[Yr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&ne(t,r),ke(e,a),n=ke(e,r),a=0;a<o.length;a+=2){var l=o[a],u=o[a+1];"style"===l?Ce(t,u):"dangerouslySetInnerHTML"===l?ge(t,u):"children"===l?ve(t,u):b(t,l,u,n)}switch(e){case"input":te(t,r);break;case"textarea":ce(t,r);break;case"select":e=t._wrapperState.wasMultiple,t._wrapperState.wasMultiple=!!r.multiple,null!=(o=r.value)?ie(t,!!r.multiple,o,!1):e!==!!r.multiple&&(null!=r.defaultValue?ie(t,!!r.multiple,r.defaultValue,!0):ie(t,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===n.stateNode)throw Error(i(162));return void(n.stateNode.nodeValue=n.memoizedProps);case 3:return void((t=n.stateNode).hydrate&&(t.hydrate=!1,wn(t.containerInfo)));case 12:return;case 13:return null!==n.memoizedState&&(Ul=Ua(),dl(n.child,!0)),void Cl(n);case 19:return void Cl(n);case 17:return;case 23:case 24:return void dl(n,null!==n.memoizedState)}throw Error(i(163))}function Cl(e){var n=e.updateQueue;if(null!==n){e.updateQueue=null;var t=e.stateNode;null===t&&(t=e.stateNode=new ul),n.forEach((function(n){var r=Mu.bind(null,e,n);t.has(n)||(t.add(n),n.then(r,r))}))}}function wl(e,n){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(n=n.memoizedState)&&null===n.dehydrated}var xl=Math.ceil,kl=C.ReactCurrentDispatcher,El=C.ReactCurrentOwner,Bl=0,Il=null,Sl=null,_l=0,Pl=0,Tl=oa(0),Ol=0,Nl=null,zl=0,Ll=0,Ml=0,jl=0,Rl=null,Ul=0,Dl=1/0;function Fl(){Dl=Ua()+500}var Ql,$l=null,ql=!1,Vl=null,Wl=null,Hl=!1,Xl=null,Yl=90,Kl=[],Zl=[],Gl=null,Jl=0,eu=null,nu=-1,tu=0,ru=0,au=null,ou=!1;function iu(){return 0!=(48&Bl)?Ua():-1!==nu?nu:nu=Ua()}function lu(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Da()?1:2;if(0===tu&&(tu=zl),0!==Wa.transition){0!==ru&&(ru=null!==Rl?Rl.pendingLanes:0),e=tu;var n=4186112&~ru;return 0==(n&=-n)&&0==(n=(e=4186112&~e)&-e)&&(n=8192),n}return e=Da(),e=Dn(0!=(4&Bl)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),tu)}function uu(e,n,t){if(50<Jl)throw Jl=0,eu=null,Error(i(185));if(null===(e=cu(e,n)))return null;$n(e,n,t),e===Il&&(Ml|=n,4===Ol&&du(e,_l));var r=Da();1===n?0!=(8&Bl)&&0==(48&Bl)?pu(e):(su(e,t),0===Bl&&(Fl(),qa())):(0==(4&Bl)||98!==r&&99!==r||(null===Gl?Gl=new Set([e]):Gl.add(e)),su(e,t)),Rl=e}function cu(e,n){e.lanes|=n;var t=e.alternate;for(null!==t&&(t.lanes|=n),t=e,e=e.return;null!==e;)e.childLanes|=n,null!==(t=e.alternate)&&(t.childLanes|=n),t=e,e=e.return;return 3===t.tag?t.stateNode:null}function su(e,n){for(var t=e.callbackNode,r=e.suspendedLanes,a=e.pingedLanes,o=e.expirationTimes,l=e.pendingLanes;0<l;){var u=31-qn(l),c=1<<u,s=o[u];if(-1===s){if(0==(c&r)||0!=(c&a)){s=n,jn(c);var f=Mn;o[u]=10<=f?s+250:6<=f?s+5e3:-1}}else s<=n&&(e.expiredLanes|=c);l&=~c}if(r=Rn(e,e===Il?_l:0),n=Mn,0===r)null!==t&&(t!==Na&&xa(t),e.callbackNode=null,e.callbackPriority=0);else{if(null!==t){if(e.callbackPriority===n)return;t!==Na&&xa(t)}15===n?(t=pu.bind(null,e),null===La?(La=[t],Ma=wa(Sa,Va)):La.push(t),t=Na):t=14===n?$a(99,pu.bind(null,e)):$a(t=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,e))}}(n),fu.bind(null,e)),e.callbackPriority=n,e.callbackNode=t}}function fu(e){if(nu=-1,ru=tu=0,0!=(48&Bl))throw Error(i(327));var n=e.callbackNode;if(_u()&&e.callbackNode!==n)return null;var t=Rn(e,e===Il?_l:0);if(0===t)return null;var r=t,a=Bl;Bl|=16;var o=bu();for(Il===e&&_l===r||(Fl(),Au(e,r));;)try{xu();break}catch(n){yu(e,n)}if(Ga(),kl.current=o,Bl=a,null!==Sl?r=0:(Il=null,_l=0,r=Ol),0!=(zl&Ml))Au(e,0);else if(0!==r){if(2===r&&(Bl|=64,e.hydrate&&(e.hydrate=!1,$r(e.containerInfo)),0!==(t=Un(e))&&(r=Cu(e,t))),1===r)throw n=Nl,Au(e,0),du(e,t),su(e,Ua()),n;switch(e.finishedWork=e.current.alternate,e.finishedLanes=t,r){case 0:case 1:throw Error(i(345));case 2:Bu(e);break;case 3:if(du(e,t),(62914560&t)===t&&10<(r=Ul+500-Ua())){if(0!==Rn(e,0))break;if(((a=e.suspendedLanes)&t)!==t){iu(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=Fr(Bu.bind(null,e),r);break}Bu(e);break;case 4:if(du(e,t),(4186112&t)===t)break;for(r=e.eventTimes,a=-1;0<t;){var l=31-qn(t);o=1<<l,(l=r[l])>a&&(a=l),t&=~o}if(t=a,10<(t=(120>(t=Ua()-t)?120:480>t?480:1080>t?1080:1920>t?1920:3e3>t?3e3:4320>t?4320:1960*xl(t/1960))-t)){e.timeoutHandle=Fr(Bu.bind(null,e),t);break}Bu(e);break;case 5:Bu(e);break;default:throw Error(i(329))}}return su(e,Ua()),e.callbackNode===n?fu.bind(null,e):null}function du(e,n){for(n&=~jl,n&=~Ml,e.suspendedLanes|=n,e.pingedLanes&=~n,e=e.expirationTimes;0<n;){var t=31-qn(n),r=1<<t;e[t]=-1,n&=~r}}function pu(e){if(0!=(48&Bl))throw Error(i(327));if(_u(),e===Il&&0!=(e.expiredLanes&_l)){var n=_l,t=Cu(e,n);0!=(zl&Ml)&&(t=Cu(e,n=Rn(e,n)))}else t=Cu(e,n=Rn(e,0));if(0!==e.tag&&2===t&&(Bl|=64,e.hydrate&&(e.hydrate=!1,$r(e.containerInfo)),0!==(n=Un(e))&&(t=Cu(e,n))),1===t)throw t=Nl,Au(e,0),du(e,n),su(e,Ua()),t;return e.finishedWork=e.current.alternate,e.finishedLanes=n,Bu(e),su(e,Ua()),null}function hu(e,n){var t=Bl;Bl|=1;try{return e(n)}finally{0===(Bl=t)&&(Fl(),qa())}}function mu(e,n){var t=Bl;Bl&=-2,Bl|=8;try{return e(n)}finally{0===(Bl=t)&&(Fl(),qa())}}function gu(e,n){la(Tl,Pl),Pl|=n,zl|=n}function vu(){Pl=Tl.current,ia(Tl)}function Au(e,n){e.finishedWork=null,e.finishedLanes=0;var t=e.timeoutHandle;if(-1!==t&&(e.timeoutHandle=-1,Qr(t)),null!==Sl)for(t=Sl.return;null!==t;){var r=t;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&ha();break;case 3:To(),ia(sa),ia(ca),Wo();break;case 5:No(r);break;case 4:To();break;case 13:case 19:ia(zo);break;case 10:Ja(r);break;case 23:case 24:vu()}t=t.return}Il=e,Sl=Du(e.current,null),_l=Pl=zl=n,Ol=0,Nl=null,jl=Ml=Ll=0}function yu(e,n){for(;;){var t=Sl;try{if(Ga(),Ho.current=Si,Jo){for(var r=Ko.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}Jo=!1}if(Yo=0,Go=Zo=Ko=null,ei=!1,El.current=null,null===t||null===t.return){Ol=1,Nl=n,Sl=null;break}e:{var o=e,i=t.return,l=t,u=n;if(n=_l,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var c=u;if(0==(2&l.mode)){var s=l.alternate;s?(l.updateQueue=s.updateQueue,l.memoizedState=s.memoizedState,l.lanes=s.lanes):(l.updateQueue=null,l.memoizedState=null)}var f=0!=(1&zo.current),d=i;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var m=d.memoizedProps;p=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!f)}}if(p){var g=d.updateQueue;if(null===g){var v=new Set;v.add(c),d.updateQueue=v}else g.add(c);if(0==(2&d.mode)){if(d.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var A=io(-1,1);A.tag=2,lo(l,A)}l.lanes|=1;break e}u=void 0,l=n;var y=o.pingCache;if(null===y?(y=o.pingCache=new ol,u=new Set,y.set(c,u)):void 0===(u=y.get(c))&&(u=new Set,y.set(c,u)),!u.has(l)){u.add(l);var b=Lu.bind(null,o,c,l);c.then(b,b)}d.flags|=4096,d.lanes=n;break e}d=d.return}while(null!==d);u=Error((H(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Ol&&(Ol=2),u=rl(u,l),d=i;do{switch(d.tag){case 3:o=u,d.flags|=4096,n&=-n,d.lanes|=n,uo(d,il(0,o,n));break e;case 1:o=u;var C=d.type,w=d.stateNode;if(0==(64&d.flags)&&("function"==typeof C.getDerivedStateFromError||null!==w&&"function"==typeof w.componentDidCatch&&(null===Wl||!Wl.has(w)))){d.flags|=4096,n&=-n,d.lanes|=n,uo(d,ll(d,o,n));break e}}d=d.return}while(null!==d)}Eu(t)}catch(e){n=e,Sl===t&&null!==t&&(Sl=t=t.return);continue}break}}function bu(){var e=kl.current;return kl.current=Si,null===e?Si:e}function Cu(e,n){var t=Bl;Bl|=16;var r=bu();for(Il===e&&_l===n||Au(e,n);;)try{wu();break}catch(n){yu(e,n)}if(Ga(),Bl=t,kl.current=r,null!==Sl)throw Error(i(261));return Il=null,_l=0,Ol}function wu(){for(;null!==Sl;)ku(Sl)}function xu(){for(;null!==Sl&&!ka();)ku(Sl)}function ku(e){var n=Ql(e.alternate,e,Pl);e.memoizedProps=e.pendingProps,null===n?Eu(e):Sl=n,El.current=null}function Eu(e){var n=e;do{var t=n.alternate;if(e=n.return,0==(2048&n.flags)){if(null!==(t=nl(t,n,Pl)))return void(Sl=t);if(24!==(t=n).tag&&23!==t.tag||null===t.memoizedState||0!=(1073741824&Pl)||0==(4&t.mode)){for(var r=0,a=t.child;null!==a;)r|=a.lanes|a.childLanes,a=a.sibling;t.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=n.firstEffect),null!==n.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=n.firstEffect),e.lastEffect=n.lastEffect),1<n.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=n:e.firstEffect=n,e.lastEffect=n))}else{if(null!==(t=tl(n)))return t.flags&=2047,void(Sl=t);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(n=n.sibling))return void(Sl=n);Sl=n=e}while(null!==n);0===Ol&&(Ol=5)}function Bu(e){var n=Da();return Qa(99,Iu.bind(null,e,n)),null}function Iu(e,n){do{_u()}while(null!==Xl);if(0!=(48&Bl))throw Error(i(327));var t=e.finishedWork;if(null===t)return null;if(e.finishedWork=null,e.finishedLanes=0,t===e.current)throw Error(i(177));e.callbackNode=null;var r=t.lanes|t.childLanes,a=r,o=e.pendingLanes&~a;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=a,e.mutableReadLanes&=a,e.entangledLanes&=a,a=e.entanglements;for(var l=e.eventTimes,u=e.expirationTimes;0<o;){var c=31-qn(o),s=1<<c;a[c]=0,l[c]=-1,u[c]=-1,o&=~s}if(null!==Gl&&0==(24&r)&&Gl.has(e)&&Gl.delete(e),e===Il&&(Sl=Il=null,_l=0),1<t.flags?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,null!==r){if(a=Bl,Bl|=32,El.current=null,jr=Yn,pr(l=dr())){if("selectionStart"in l)u={start:l.selectionStart,end:l.selectionEnd};else e:if(u=(u=l.ownerDocument)&&u.defaultView||window,(s=u.getSelection&&u.getSelection())&&0!==s.rangeCount){u=s.anchorNode,o=s.anchorOffset,c=s.focusNode,s=s.focusOffset;try{u.nodeType,c.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,h=0,m=0,g=l,v=null;n:for(;;){for(var A;g!==u||0!==o&&3!==g.nodeType||(d=f+o),g!==c||0!==s&&3!==g.nodeType||(p=f+s),3===g.nodeType&&(f+=g.nodeValue.length),null!==(A=g.firstChild);)v=g,g=A;for(;;){if(g===l)break n;if(v===u&&++h===o&&(d=f),v===c&&++m===s&&(p=f),null!==(A=g.nextSibling))break;v=(g=v).parentNode}g=A}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;Rr={focusedElem:l,selectionRange:u},Yn=!1,au=null,ou=!1,$l=r;do{try{Su()}catch(e){if(null===$l)throw Error(i(330));zu($l,e),$l=$l.nextEffect}}while(null!==$l);au=null,$l=r;do{try{for(l=e;null!==$l;){var y=$l.flags;if(16&y&&ve($l.stateNode,""),128&y){var b=$l.alternate;if(null!==b){var C=b.ref;null!==C&&("function"==typeof C?C(null):C.current=null)}}switch(1038&y){case 2:gl($l),$l.flags&=-3;break;case 6:gl($l),$l.flags&=-3,bl($l.alternate,$l);break;case 1024:$l.flags&=-1025;break;case 1028:$l.flags&=-1025,bl($l.alternate,$l);break;case 4:bl($l.alternate,$l);break;case 8:yl(l,u=$l);var w=u.alternate;hl(u),null!==w&&hl(w)}$l=$l.nextEffect}}catch(e){if(null===$l)throw Error(i(330));zu($l,e),$l=$l.nextEffect}}while(null!==$l);if(C=Rr,b=dr(),y=C.focusedElem,l=C.selectionRange,b!==y&&y&&y.ownerDocument&&fr(y.ownerDocument.documentElement,y)){null!==l&&pr(y)&&(b=l.start,void 0===(C=l.end)&&(C=b),"selectionStart"in y?(y.selectionStart=b,y.selectionEnd=Math.min(C,y.value.length)):(C=(b=y.ownerDocument||document)&&b.defaultView||window).getSelection&&(C=C.getSelection(),u=y.textContent.length,w=Math.min(l.start,u),l=void 0===l.end?w:Math.min(l.end,u),!C.extend&&w>l&&(u=l,l=w,w=u),u=sr(y,w),o=sr(y,l),u&&o&&(1!==C.rangeCount||C.anchorNode!==u.node||C.anchorOffset!==u.offset||C.focusNode!==o.node||C.focusOffset!==o.offset)&&((b=b.createRange()).setStart(u.node,u.offset),C.removeAllRanges(),w>l?(C.addRange(b),C.extend(o.node,o.offset)):(b.setEnd(o.node,o.offset),C.addRange(b))))),b=[];for(C=y;C=C.parentNode;)1===C.nodeType&&b.push({element:C,left:C.scrollLeft,top:C.scrollTop});for("function"==typeof y.focus&&y.focus(),y=0;y<b.length;y++)(C=b[y]).element.scrollLeft=C.left,C.element.scrollTop=C.top}Yn=!!jr,Rr=jr=null,e.current=t,$l=r;do{try{for(y=e;null!==$l;){var x=$l.flags;if(36&x&&fl(y,$l.alternate,$l),128&x){b=void 0;var k=$l.ref;if(null!==k){var E=$l.stateNode;switch($l.tag){case 5:b=E;break;default:b=E}"function"==typeof k?k(b):k.current=b}}$l=$l.nextEffect}}catch(e){if(null===$l)throw Error(i(330));zu($l,e),$l=$l.nextEffect}}while(null!==$l);$l=null,za(),Bl=a}else e.current=t;if(Hl)Hl=!1,Xl=e,Yl=n;else for($l=r;null!==$l;)n=$l.nextEffect,$l.nextEffect=null,8&$l.flags&&((x=$l).sibling=null,x.stateNode=null),$l=n;if(0===(r=e.pendingLanes)&&(Wl=null),1===r?e===eu?Jl++:(Jl=0,eu=e):Jl=0,t=t.stateNode,ba&&"function"==typeof ba.onCommitFiberRoot)try{ba.onCommitFiberRoot(ya,t,void 0,64==(64&t.current.flags))}catch(e){}if(su(e,Ua()),ql)throw ql=!1,e=Vl,Vl=null,e;return 0!=(8&Bl)||qa(),null}function Su(){for(;null!==$l;){var e=$l.alternate;ou||null===au||(0!=(8&$l.flags)?Je($l,au)&&(ou=!0):13===$l.tag&&wl(e,$l)&&Je($l,au)&&(ou=!0));var n=$l.flags;0!=(256&n)&&sl(e,$l),0==(512&n)||Hl||(Hl=!0,$a(97,(function(){return _u(),null}))),$l=$l.nextEffect}}function _u(){if(90!==Yl){var e=97<Yl?97:Yl;return Yl=90,Qa(e,Ou)}return!1}function Pu(e,n){Kl.push(n,e),Hl||(Hl=!0,$a(97,(function(){return _u(),null})))}function Tu(e,n){Zl.push(n,e),Hl||(Hl=!0,$a(97,(function(){return _u(),null})))}function Ou(){if(null===Xl)return!1;var e=Xl;if(Xl=null,0!=(48&Bl))throw Error(i(331));var n=Bl;Bl|=32;var t=Zl;Zl=[];for(var r=0;r<t.length;r+=2){var a=t[r],o=t[r+1],l=a.destroy;if(a.destroy=void 0,"function"==typeof l)try{l()}catch(e){if(null===o)throw Error(i(330));zu(o,e)}}for(t=Kl,Kl=[],r=0;r<t.length;r+=2){a=t[r],o=t[r+1];try{var u=a.create;a.destroy=u()}catch(e){if(null===o)throw Error(i(330));zu(o,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return Bl=n,qa(),!0}function Nu(e,n,t){lo(e,n=il(0,n=rl(t,n),1)),n=iu(),null!==(e=cu(e,1))&&($n(e,1,n),su(e,n))}function zu(e,n){if(3===e.tag)Nu(e,e,n);else for(var t=e.return;null!==t;){if(3===t.tag){Nu(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Wl||!Wl.has(r))){var a=ll(t,e=rl(n,e),1);if(lo(t,a),a=iu(),null!==(t=cu(t,1)))$n(t,1,a),su(t,a);else if("function"==typeof r.componentDidCatch&&(null===Wl||!Wl.has(r)))try{r.componentDidCatch(n,e)}catch(e){}break}}t=t.return}}function Lu(e,n,t){var r=e.pingCache;null!==r&&r.delete(n),n=iu(),e.pingedLanes|=e.suspendedLanes&t,Il===e&&(_l&t)===t&&(4===Ol||3===Ol&&(62914560&_l)===_l&&500>Ua()-Ul?Au(e,0):jl|=t),su(e,n)}function Mu(e,n){var t=e.stateNode;null!==t&&t.delete(n),0==(n=0)&&(0==(2&(n=e.mode))?n=1:0==(4&n)?n=99===Da()?1:2:(0===tu&&(tu=zl),0===(n=Fn(62914560&~tu))&&(n=4194304))),t=iu(),null!==(e=cu(e,n))&&($n(e,n,t),su(e,t))}function ju(e,n,t,r){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Ru(e,n,t,r){return new ju(e,n,t,r)}function Uu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Du(e,n){var t=e.alternate;return null===t?((t=Ru(e.tag,n,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=n,t.type=e.type,t.flags=0,t.nextEffect=null,t.firstEffect=null,t.lastEffect=null),t.childLanes=e.childLanes,t.lanes=e.lanes,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,n=e.dependencies,t.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t}function Fu(e,n,t,r,a,o){var l=2;if(r=e,"function"==typeof e)Uu(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case k:return Qu(t.children,a,o,n);case M:l=8,a|=16;break;case E:l=8,a|=1;break;case B:return(e=Ru(12,t,n,8|a)).elementType=B,e.type=B,e.lanes=o,e;case P:return(e=Ru(13,t,n,a)).type=P,e.elementType=P,e.lanes=o,e;case T:return(e=Ru(19,t,n,a)).elementType=T,e.lanes=o,e;case j:return $u(t,a,o,n);case R:return(e=Ru(24,t,n,a)).elementType=R,e.lanes=o,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case I:l=10;break e;case S:l=9;break e;case _:l=11;break e;case O:l=14;break e;case N:l=16,r=null;break e;case z:l=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(n=Ru(l,t,n,a)).elementType=e,n.type=r,n.lanes=o,n}function Qu(e,n,t,r){return(e=Ru(7,e,r,n)).lanes=t,e}function $u(e,n,t,r){return(e=Ru(23,e,r,n)).elementType=j,e.lanes=t,e}function qu(e,n,t){return(e=Ru(6,e,null,n)).lanes=t,e}function Vu(e,n,t){return(n=Ru(4,null!==e.children?e.children:[],e.key,n)).lanes=t,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function Wu(e,n,t){this.tag=n,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=t,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Qn(0),this.expirationTimes=Qn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Qn(0),this.mutableSourceEagerHydrationData=null}function Hu(e,n,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:x,key:null==r?null:""+r,children:e,containerInfo:n,implementation:t}}function Xu(e,n,t,r){var a=n.current,o=iu(),l=lu(a);e:if(t){n:{if(Ye(t=t._reactInternals)!==t||1!==t.tag)throw Error(i(170));var u=t;do{switch(u.tag){case 3:u=u.stateNode.context;break n;case 1:if(pa(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break n}}u=u.return}while(null!==u);throw Error(i(171))}if(1===t.tag){var c=t.type;if(pa(c)){t=ga(t,c,u);break e}}t=u}else t=ua;return null===n.context?n.context=t:n.pendingContext=t,(n=io(o,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(n.callback=r),lo(a,n),uu(a,l,o),l}function Yu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Ku(e,n){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var t=e.retryLane;e.retryLane=0!==t&&t<n?t:n}}function Zu(e,n){Ku(e,n),(e=e.alternate)&&Ku(e,n)}function Gu(e,n,t){var r=null!=t&&null!=t.hydrationOptions&&t.hydrationOptions.mutableSources||null;if(t=new Wu(e,n,null!=t&&!0===t.hydrate),n=Ru(3,null,null,2===n?7:1===n?3:0),t.current=n,n.stateNode=t,ao(n),e[Kr]=t.current,Sr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var a=(n=r[e])._getVersion;a=a(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,a]:t.mutableSourceEagerHydrationData.push(n,a)}this._internalRoot=t}function Ju(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function ec(e,n,t,r,a){var o=t._reactRootContainer;if(o){var i=o._internalRoot;if("function"==typeof a){var l=a;a=function(){var e=Yu(i);l.call(e)}}Xu(n,i,e,a)}else{if(o=t._reactRootContainer=function(e,n){if(n||(n=!(!(n=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==n.nodeType||!n.hasAttribute("data-reactroot"))),!n)for(var t;t=e.lastChild;)e.removeChild(t);return new Gu(e,0,n?{hydrate:!0}:void 0)}(t,r),i=o._internalRoot,"function"==typeof a){var u=a;a=function(){var e=Yu(i);u.call(e)}}mu((function(){Xu(n,i,e,a)}))}return Yu(i)}function nc(e,n){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Ju(n))throw Error(i(200));return Hu(e,n,null,t)}Ql=function(e,n,t){var r=n.lanes;if(null!==e)if(e.memoizedProps!==n.pendingProps||sa.current)Ni=!0;else{if(0==(t&r)){switch(Ni=!1,n.tag){case 3:$i(n),qo();break;case 5:Oo(n);break;case 1:pa(n.type)&&va(n);break;case 4:Po(n,n.stateNode.containerInfo);break;case 10:r=n.memoizedProps.value;var a=n.type._context;la(Xa,a._currentValue),a._currentValue=r;break;case 13:if(null!==n.memoizedState)return 0!=(t&n.child.childLanes)?Xi(e,n,t):(la(zo,1&zo.current),null!==(n=Ji(e,n,t))?n.sibling:null);la(zo,1&zo.current);break;case 19:if(r=0!=(t&n.childLanes),0!=(64&e.flags)){if(r)return Gi(e,n,t);n.flags|=64}if(null!==(a=n.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),la(zo,zo.current),r)break;return null;case 23:case 24:return n.lanes=0,Ri(e,n,t)}return Ji(e,n,t)}Ni=0!=(16384&e.flags)}else Ni=!1;switch(n.lanes=0,n.tag){case 2:if(r=n.type,null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),e=n.pendingProps,a=da(n,ca.current),no(n,t),a=ri(null,n,r,e,a,t),n.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(n.tag=1,n.memoizedState=null,n.updateQueue=null,pa(r)){var o=!0;va(n)}else o=!1;n.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,ao(n);var l=r.getDerivedStateFromProps;"function"==typeof l&&po(n,r,l,e),a.updater=ho,n.stateNode=a,a._reactInternals=n,Ao(n,r,e,t),n=Qi(null,n,r,!0,o,t)}else n.tag=0,zi(null,n,a,t),n=n.child;return n;case 16:a=n.elementType;e:{switch(null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),e=n.pendingProps,a=(o=a._init)(a._payload),n.type=a,o=n.tag=function(e){if("function"==typeof e)return Uu(e)?1:0;if(null!=e){if((e=e.$$typeof)===_)return 11;if(e===O)return 14}return 2}(a),e=Ha(a,e),o){case 0:n=Di(null,n,a,e,t);break e;case 1:n=Fi(null,n,a,e,t);break e;case 11:n=Li(null,n,a,e,t);break e;case 14:n=Mi(null,n,a,Ha(a.type,e),r,t);break e}throw Error(i(306,a,""))}return n;case 0:return r=n.type,a=n.pendingProps,Di(e,n,r,a=n.elementType===r?a:Ha(r,a),t);case 1:return r=n.type,a=n.pendingProps,Fi(e,n,r,a=n.elementType===r?a:Ha(r,a),t);case 3:if($i(n),r=n.updateQueue,null===e||null===r)throw Error(i(282));if(r=n.pendingProps,a=null!==(a=n.memoizedState)?a.element:null,oo(e,n),co(n,r,null,t),(r=n.memoizedState.element)===a)qo(),n=Ji(e,n,t);else{if((o=(a=n.stateNode).hydrate)&&(jo=qr(n.stateNode.containerInfo.firstChild),Mo=n,o=Ro=!0),o){if(null!=(e=a.mutableSourceEagerHydrationData))for(a=0;a<e.length;a+=2)(o=e[a])._workInProgressVersionPrimary=e[a+1],Vo.push(o);for(t=ko(n,null,r,t),n.child=t;t;)t.flags=-3&t.flags|1024,t=t.sibling}else zi(e,n,r,t),qo();n=n.child}return n;case 5:return Oo(n),null===e&&Fo(n),r=n.type,a=n.pendingProps,o=null!==e?e.memoizedProps:null,l=a.children,Dr(r,a)?l=null:null!==o&&Dr(r,o)&&(n.flags|=16),Ui(e,n),zi(e,n,l,t),n.child;case 6:return null===e&&Fo(n),null;case 13:return Xi(e,n,t);case 4:return Po(n,n.stateNode.containerInfo),r=n.pendingProps,null===e?n.child=xo(n,null,r,t):zi(e,n,r,t),n.child;case 11:return r=n.type,a=n.pendingProps,Li(e,n,r,a=n.elementType===r?a:Ha(r,a),t);case 7:return zi(e,n,n.pendingProps,t),n.child;case 8:case 12:return zi(e,n,n.pendingProps.children,t),n.child;case 10:e:{r=n.type._context,a=n.pendingProps,l=n.memoizedProps,o=a.value;var u=n.type._context;if(la(Xa,u._currentValue),u._currentValue=o,null!==l)if(u=l.value,0==(o=ir(u,o)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,o):1073741823))){if(l.children===a.children&&!sa.current){n=Ji(e,n,t);break e}}else for(null!==(u=n.child)&&(u.return=n);null!==u;){var c=u.dependencies;if(null!==c){l=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&o)){1===u.tag&&((s=io(-1,t&-t)).tag=2,lo(u,s)),u.lanes|=t,null!==(s=u.alternate)&&(s.lanes|=t),eo(u.return,t),c.lanes|=t;break}s=s.next}}else l=10===u.tag&&u.type===n.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===n){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}zi(e,n,a.children,t),n=n.child}return n;case 9:return a=n.type,r=(o=n.pendingProps).children,no(n,t),r=r(a=to(a,o.unstable_observedBits)),n.flags|=1,zi(e,n,r,t),n.child;case 14:return o=Ha(a=n.type,n.pendingProps),Mi(e,n,a,o=Ha(a.type,o),r,t);case 15:return ji(e,n,n.type,n.pendingProps,r,t);case 17:return r=n.type,a=n.pendingProps,a=n.elementType===r?a:Ha(r,a),null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),n.tag=1,pa(r)?(e=!0,va(n)):e=!1,no(n,t),go(n,r,a),Ao(n,r,a,t),Qi(null,n,r,!0,e,t);case 19:return Gi(e,n,t);case 23:case 24:return Ri(e,n,t)}throw Error(i(156,n.tag))},Gu.prototype.render=function(e){Xu(e,this._internalRoot,null,null)},Gu.prototype.unmount=function(){var e=this._internalRoot,n=e.containerInfo;Xu(null,e,null,(function(){n[Kr]=null}))},en=function(e){13===e.tag&&(uu(e,4,iu()),Zu(e,4))},nn=function(e){13===e.tag&&(uu(e,67108864,iu()),Zu(e,67108864))},tn=function(e){if(13===e.tag){var n=iu(),t=lu(e);uu(e,t,n),Zu(e,t)}},rn=function(e,n){return n()},Be=function(e,n,t){switch(n){case"input":if(te(e,t),n=t.name,"radio"===t.type&&null!=n){for(t=e;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<t.length;n++){var r=t[n];if(r!==e&&r.form===e.form){var a=na(r);if(!a)throw Error(i(90));Z(r),te(r,a)}}}break;case"textarea":ce(e,t);break;case"select":null!=(n=t.value)&&ie(e,!!t.multiple,n,!1)}},Oe=hu,Ne=function(e,n,t,r,a){var o=Bl;Bl|=4;try{return Qa(98,e.bind(null,n,t,r,a))}finally{0===(Bl=o)&&(Fl(),qa())}},ze=function(){0==(49&Bl)&&(function(){if(null!==Gl){var e=Gl;Gl=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,su(e,Ua())}))}qa()}(),_u())},Le=function(e,n){var t=Bl;Bl|=2;try{return e(n)}finally{0===(Bl=t)&&(Fl(),qa())}};var tc={Events:[Jr,ea,na,Pe,Te,_u,{current:!1}]},rc={findFiberByHostInstance:Gr,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},ac={bundleType:rc.bundleType,version:rc.version,rendererPackageName:rc.rendererPackageName,rendererConfig:rc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:C.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ge(e))?null:e.stateNode},findFiberByHostInstance:rc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var oc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!oc.isDisabled&&oc.supportsFiber)try{ya=oc.inject(ac),ba=oc}catch(me){}}n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tc,n.createPortal=nc,n.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var n=e._reactInternals;if(void 0===n){if("function"==typeof e.render)throw Error(i(188));throw Error(i(268,Object.keys(e)))}return null===(e=Ge(n))?null:e.stateNode},n.flushSync=function(e,n){var t=Bl;if(0!=(48&t))return e(n);Bl|=1;try{if(e)return Qa(99,e.bind(null,n))}finally{Bl=t,qa()}},n.hydrate=function(e,n,t){if(!Ju(n))throw Error(i(200));return ec(null,e,n,!0,t)},n.render=function(e,n,t){if(!Ju(n))throw Error(i(200));return ec(null,e,n,!1,t)},n.unmountComponentAtNode=function(e){if(!Ju(e))throw Error(i(40));return!!e._reactRootContainer&&(mu((function(){ec(null,null,e,!1,(function(){e._reactRootContainer=null,e[Kr]=null}))})),!0)},n.unstable_batchedUpdates=hu,n.unstable_createPortal=function(e,n){return nc(e,n,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},n.unstable_renderSubtreeIntoContainer=function(e,n,t,r){if(!Ju(t))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return ec(e,n,t,!1,r)},n.version="17.0.2"},935:(e,n,t)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=t(448)},921:(e,n)=>{"use strict";var t="function"==typeof Symbol&&Symbol.for,r=t?Symbol.for("react.element"):60103,a=t?Symbol.for("react.portal"):60106,o=t?Symbol.for("react.fragment"):60107,i=t?Symbol.for("react.strict_mode"):60108,l=t?Symbol.for("react.profiler"):60114,u=t?Symbol.for("react.provider"):60109,c=t?Symbol.for("react.context"):60110,s=t?Symbol.for("react.async_mode"):60111,f=t?Symbol.for("react.concurrent_mode"):60111,d=t?Symbol.for("react.forward_ref"):60112,p=t?Symbol.for("react.suspense"):60113,h=t?Symbol.for("react.suspense_list"):60120,m=t?Symbol.for("react.memo"):60115,g=t?Symbol.for("react.lazy"):60116,v=t?Symbol.for("react.block"):60121,A=t?Symbol.for("react.fundamental"):60117,y=t?Symbol.for("react.responder"):60118,b=t?Symbol.for("react.scope"):60119;function C(e){if("object"==typeof e&&null!==e){var n=e.$$typeof;switch(n){case r:switch(e=e.type){case s:case f:case o:case l:case i:case p:return e;default:switch(e=e&&e.$$typeof){case c:case d:case g:case m:case u:return e;default:return n}}case a:return n}}}function w(e){return C(e)===f}n.AsyncMode=s,n.ConcurrentMode=f,n.ContextConsumer=c,n.ContextProvider=u,n.Element=r,n.ForwardRef=d,n.Fragment=o,n.Lazy=g,n.Memo=m,n.Portal=a,n.Profiler=l,n.StrictMode=i,n.Suspense=p,n.isAsyncMode=function(e){return w(e)||C(e)===s},n.isConcurrentMode=w,n.isContextConsumer=function(e){return C(e)===c},n.isContextProvider=function(e){return C(e)===u},n.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},n.isForwardRef=function(e){return C(e)===d},n.isFragment=function(e){return C(e)===o},n.isLazy=function(e){return C(e)===g},n.isMemo=function(e){return C(e)===m},n.isPortal=function(e){return C(e)===a},n.isProfiler=function(e){return C(e)===l},n.isStrictMode=function(e){return C(e)===i},n.isSuspense=function(e){return C(e)===p},n.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===o||e===f||e===l||e===i||e===p||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===g||e.$$typeof===m||e.$$typeof===u||e.$$typeof===c||e.$$typeof===d||e.$$typeof===A||e.$$typeof===y||e.$$typeof===b||e.$$typeof===v)},n.typeOf=C},864:(e,n,t)=>{"use strict";e.exports=t(921)},427:(e,n,t)=>{"use strict";function r(e,n){return(r=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function a(e,n){e.prototype=Object.create(n.prototype),e.prototype.constructor=e,r(e,n)}t.r(n),t.d(n,{BrowserRouter:()=>ve,HashRouter:()=>Ae,Link:()=>ke,MemoryRouter:()=>H,NavLink:()=>Ie,Prompt:()=>Y,Redirect:()=>J,Route:()=>re,Router:()=>W,StaticRouter:()=>ce,Switch:()=>se,generatePath:()=>G,matchPath:()=>te,useHistory:()=>pe,useLocation:()=>he,useParams:()=>me,useRouteMatch:()=>ge,withRouter:()=>fe});var o=t(294),i=t(697),l=t.n(i);function u(){return(u=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function c(e){return"/"===e.charAt(0)}function s(e,n){for(var t=n,r=t+1,a=e.length;r<a;t+=1,r+=1)e[t]=e[r];e.pop()}function f(e){return e.valueOf?e.valueOf():Object.prototype.valueOf.call(e)}const d=function e(n,t){if(n===t)return!0;if(null==n||null==t)return!1;if(Array.isArray(n))return Array.isArray(t)&&n.length===t.length&&n.every((function(n,r){return e(n,t[r])}));if("object"==typeof n||"object"==typeof t){var r=f(n),a=f(t);return r!==n||a!==t?e(r,a):Object.keys(Object.assign({},n,t)).every((function(r){return e(n[r],t[r])}))}return!1};const p=function(e,n){if(!e)throw new Error("Invariant failed")};function h(e){return"/"===e.charAt(0)?e:"/"+e}function m(e){return"/"===e.charAt(0)?e.substr(1):e}function g(e,n){return function(e,n){return 0===e.toLowerCase().indexOf(n.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(n.length))}(e,n)?e.substr(n.length):e}function v(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function A(e){var n=e.pathname,t=e.search,r=e.hash,a=n||"/";return t&&"?"!==t&&(a+="?"===t.charAt(0)?t:"?"+t),r&&"#"!==r&&(a+="#"===r.charAt(0)?r:"#"+r),a}function y(e,n,t,r){var a;"string"==typeof e?(a=function(e){var n=e||"/",t="",r="",a=n.indexOf("#");-1!==a&&(r=n.substr(a),n=n.substr(0,a));var o=n.indexOf("?");return-1!==o&&(t=n.substr(o),n=n.substr(0,o)),{pathname:n,search:"?"===t?"":t,hash:"#"===r?"":r}}(e)).state=n:(void 0===(a=u({},e)).pathname&&(a.pathname=""),a.search?"?"!==a.search.charAt(0)&&(a.search="?"+a.search):a.search="",a.hash?"#"!==a.hash.charAt(0)&&(a.hash="#"+a.hash):a.hash="",void 0!==n&&void 0===a.state&&(a.state=n));try{a.pathname=decodeURI(a.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+a.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return t&&(a.key=t),r?a.pathname?"/"!==a.pathname.charAt(0)&&(a.pathname=function(e,n){void 0===n&&(n="");var t,r=e&&e.split("/")||[],a=n&&n.split("/")||[],o=e&&c(e),i=n&&c(n),l=o||i;if(e&&c(e)?a=r:r.length&&(a.pop(),a=a.concat(r)),!a.length)return"/";if(a.length){var u=a[a.length-1];t="."===u||".."===u||""===u}else t=!1;for(var f=0,d=a.length;d>=0;d--){var p=a[d];"."===p?s(a,d):".."===p?(s(a,d),f++):f&&(s(a,d),f--)}if(!l)for(;f--;f)a.unshift("..");!l||""===a[0]||a[0]&&c(a[0])||a.unshift("");var h=a.join("/");return t&&"/"!==h.substr(-1)&&(h+="/"),h}(a.pathname,r.pathname)):a.pathname=r.pathname:a.pathname||(a.pathname="/"),a}function b(){var e=null,n=[];return{setPrompt:function(n){return e=n,function(){e===n&&(e=null)}},confirmTransitionTo:function(n,t,r,a){if(null!=e){var o="function"==typeof e?e(n,t):e;"string"==typeof o?"function"==typeof r?r(o,a):a(!0):a(!1!==o)}else a(!0)},appendListener:function(e){var t=!0;function r(){t&&e.apply(void 0,arguments)}return n.push(r),function(){t=!1,n=n.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];n.forEach((function(e){return e.apply(void 0,t)}))}}}var C=!("undefined"==typeof window||!window.document||!window.document.createElement);function w(e,n){n(window.confirm(e))}var x="popstate",k="hashchange";function E(){try{return window.history.state||{}}catch(e){return{}}}function B(e){void 0===e&&(e={}),C||p(!1);var n,t=window.history,r=(-1===(n=window.navigator.userAgent).indexOf("Android 2.")&&-1===n.indexOf("Android 4.0")||-1===n.indexOf("Mobile Safari")||-1!==n.indexOf("Chrome")||-1!==n.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,a=!(-1===window.navigator.userAgent.indexOf("Trident")),o=e,i=o.forceRefresh,l=void 0!==i&&i,c=o.getUserConfirmation,s=void 0===c?w:c,f=o.keyLength,d=void 0===f?6:f,m=e.basename?v(h(e.basename)):"";function B(e){var n=e||{},t=n.key,r=n.state,a=window.location,o=a.pathname+a.search+a.hash;return m&&(o=g(o,m)),y(o,r,t)}function I(){return Math.random().toString(36).substr(2,d)}var S=b();function _(e){u(F,e),F.length=t.length,S.notifyListeners(F.location,F.action)}function P(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||N(B(e.state))}function T(){N(B(E()))}var O=!1;function N(e){O?(O=!1,_()):S.confirmTransitionTo(e,"POP",s,(function(n){n?_({action:"POP",location:e}):function(e){var n=F.location,t=L.indexOf(n.key);-1===t&&(t=0);var r=L.indexOf(e.key);-1===r&&(r=0);var a=t-r;a&&(O=!0,j(a))}(e)}))}var z=B(E()),L=[z.key];function M(e){return m+A(e)}function j(e){t.go(e)}var R=0;function U(e){1===(R+=e)&&1===e?(window.addEventListener(x,P),a&&window.addEventListener(k,T)):0===R&&(window.removeEventListener(x,P),a&&window.removeEventListener(k,T))}var D=!1,F={length:t.length,action:"POP",location:z,createHref:M,push:function(e,n){var a="PUSH",o=y(e,n,I(),F.location);S.confirmTransitionTo(o,a,s,(function(e){if(e){var n=M(o),i=o.key,u=o.state;if(r)if(t.pushState({key:i,state:u},null,n),l)window.location.href=n;else{var c=L.indexOf(F.location.key),s=L.slice(0,c+1);s.push(o.key),L=s,_({action:a,location:o})}else window.location.href=n}}))},replace:function(e,n){var a="REPLACE",o=y(e,n,I(),F.location);S.confirmTransitionTo(o,a,s,(function(e){if(e){var n=M(o),i=o.key,u=o.state;if(r)if(t.replaceState({key:i,state:u},null,n),l)window.location.replace(n);else{var c=L.indexOf(F.location.key);-1!==c&&(L[c]=o.key),_({action:a,location:o})}else window.location.replace(n)}}))},go:j,goBack:function(){j(-1)},goForward:function(){j(1)},block:function(e){void 0===e&&(e=!1);var n=S.setPrompt(e);return D||(U(1),D=!0),function(){return D&&(D=!1,U(-1)),n()}},listen:function(e){var n=S.appendListener(e);return U(1),function(){U(-1),n()}}};return F}var I="hashchange",S={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+m(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:m,decodePath:h},slash:{encodePath:h,decodePath:h}};function _(e){var n=e.indexOf("#");return-1===n?e:e.slice(0,n)}function P(){var e=window.location.href,n=e.indexOf("#");return-1===n?"":e.substring(n+1)}function T(e){window.location.replace(_(window.location.href)+"#"+e)}function O(e){void 0===e&&(e={}),C||p(!1);var n=window.history,t=(window.navigator.userAgent.indexOf("Firefox"),e),r=t.getUserConfirmation,a=void 0===r?w:r,o=t.hashType,i=void 0===o?"slash":o,l=e.basename?v(h(e.basename)):"",c=S[i],s=c.encodePath,f=c.decodePath;function d(){var e=f(P());return l&&(e=g(e,l)),y(e)}var m=b();function x(e){u(D,e),D.length=n.length,m.notifyListeners(D.location,D.action)}var k=!1,E=null;function B(){var e,n,t=P(),r=s(t);if(t!==r)T(r);else{var o=d(),i=D.location;if(!k&&(n=o,(e=i).pathname===n.pathname&&e.search===n.search&&e.hash===n.hash))return;if(E===A(o))return;E=null,function(e){if(k)k=!1,x();else{m.confirmTransitionTo(e,"POP",a,(function(n){n?x({action:"POP",location:e}):function(e){var n=D.location,t=L.lastIndexOf(A(n));-1===t&&(t=0);var r=L.lastIndexOf(A(e));-1===r&&(r=0);var a=t-r;a&&(k=!0,M(a))}(e)}))}}(o)}}var O=P(),N=s(O);O!==N&&T(N);var z=d(),L=[A(z)];function M(e){n.go(e)}var j=0;function R(e){1===(j+=e)&&1===e?window.addEventListener(I,B):0===j&&window.removeEventListener(I,B)}var U=!1,D={length:n.length,action:"POP",location:z,createHref:function(e){var n=document.querySelector("base"),t="";return n&&n.getAttribute("href")&&(t=_(window.location.href)),t+"#"+s(l+A(e))},push:function(e,n){var t="PUSH",r=y(e,void 0,void 0,D.location);m.confirmTransitionTo(r,t,a,(function(e){if(e){var n=A(r),a=s(l+n);if(P()!==a){E=n,function(e){window.location.hash=e}(a);var o=L.lastIndexOf(A(D.location)),i=L.slice(0,o+1);i.push(n),L=i,x({action:t,location:r})}else x()}}))},replace:function(e,n){var t="REPLACE",r=y(e,void 0,void 0,D.location);m.confirmTransitionTo(r,t,a,(function(e){if(e){var n=A(r),a=s(l+n);P()!==a&&(E=n,T(a));var o=L.indexOf(A(D.location));-1!==o&&(L[o]=n),x({action:t,location:r})}}))},go:M,goBack:function(){M(-1)},goForward:function(){M(1)},block:function(e){void 0===e&&(e=!1);var n=m.setPrompt(e);return U||(R(1),U=!0),function(){return U&&(U=!1,R(-1)),n()}},listen:function(e){var n=m.appendListener(e);return R(1),function(){R(-1),n()}}};return D}function N(e,n,t){return Math.min(Math.max(e,n),t)}function z(e){void 0===e&&(e={});var n=e,t=n.getUserConfirmation,r=n.initialEntries,a=void 0===r?["/"]:r,o=n.initialIndex,i=void 0===o?0:o,l=n.keyLength,c=void 0===l?6:l,s=b();function f(e){u(v,e),v.length=v.entries.length,s.notifyListeners(v.location,v.action)}function d(){return Math.random().toString(36).substr(2,c)}var p=N(i,0,a.length-1),h=a.map((function(e){return y(e,void 0,"string"==typeof e?d():e.key||d())})),m=A;function g(e){var n=N(v.index+e,0,v.entries.length-1),r=v.entries[n];s.confirmTransitionTo(r,"POP",t,(function(e){e?f({action:"POP",location:r,index:n}):f()}))}var v={length:h.length,action:"POP",location:h[p],index:p,entries:h,createHref:m,push:function(e,n){var r="PUSH",a=y(e,n,d(),v.location);s.confirmTransitionTo(a,r,t,(function(e){if(e){var n=v.index+1,t=v.entries.slice(0);t.length>n?t.splice(n,t.length-n,a):t.push(a),f({action:r,location:a,index:n,entries:t})}}))},replace:function(e,n){var r="REPLACE",a=y(e,n,d(),v.location);s.confirmTransitionTo(a,r,t,(function(e){e&&(v.entries[v.index]=a,f({action:r,location:a}))}))},go:g,goBack:function(){g(-1)},goForward:function(){g(1)},canGo:function(e){var n=v.index+e;return n>=0&&n<v.entries.length},block:function(e){return void 0===e&&(e=!1),s.setPrompt(e)},listen:function(e){return s.appendListener(e)}};return v}var L=1073741823,M="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==t.g?t.g:{};function j(e){var n=[];return{on:function(e){n.push(e)},off:function(e){n=n.filter((function(n){return n!==e}))},get:function(){return e},set:function(t,r){e=t,n.forEach((function(n){return n(e,r)}))}}}const R=o.createContext||function(e,n){var t,r,i,u="__create-react-context-"+((M[i="__global_unique_id__"]=(M[i]||0)+1)+"__"),c=function(e){function t(){var n;return(n=e.apply(this,arguments)||this).emitter=j(n.props.value),n}a(t,e);var r=t.prototype;return r.getChildContext=function(){var e;return(e={})[u]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var t,r=this.props.value,a=e.value;((o=r)===(i=a)?0!==o||1/o==1/i:o!=o&&i!=i)?t=0:(t="function"==typeof n?n(r,a):L,0!=(t|=0)&&this.emitter.set(e.value,t))}var o,i},r.render=function(){return this.props.children},t}(o.Component);c.childContextTypes=((t={})[u]=l().object.isRequired,t);var s=function(n){function t(){var e;return(e=n.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(n,t){0!=((0|e.observedBits)&t)&&e.setState({value:e.getValue()})},e}a(t,n);var r=t.prototype;return r.componentWillReceiveProps=function(e){var n=e.observedBits;this.observedBits=null==n?L:n},r.componentDidMount=function(){this.context[u]&&this.context[u].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?L:e},r.componentWillUnmount=function(){this.context[u]&&this.context[u].off(this.onUpdate)},r.getValue=function(){return this.context[u]?this.context[u].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},t}(o.Component);return s.contextTypes=((r={})[u]=l().object,r),{Provider:c,Consumer:s}};var U=t(779),D=t.n(U);function F(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}t(864);var Q=t(679),$=t.n(Q),q=function(e){var n=R();return n.displayName="Router-History",n}(),V=function(e){var n=R();return n.displayName="Router",n}(),W=function(e){function n(n){var t;return(t=e.call(this,n)||this).state={location:n.history.location},t._isMounted=!1,t._pendingLocation=null,n.staticContext||(t.unlisten=n.history.listen((function(e){t._isMounted?t.setState({location:e}):t._pendingLocation=e}))),t}a(n,e),n.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var t=n.prototype;return t.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},t.componentWillUnmount=function(){this.unlisten&&this.unlisten()},t.render=function(){return o.createElement(V.Provider,{value:{history:this.props.history,location:this.state.location,match:n.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},o.createElement(q.Provider,{children:this.props.children||null,value:this.props.history}))},n}(o.Component),H=function(e){function n(){for(var n,t=arguments.length,r=new Array(t),a=0;a<t;a++)r[a]=arguments[a];return(n=e.call.apply(e,[this].concat(r))||this).history=z(n.props),n}return a(n,e),n.prototype.render=function(){return o.createElement(W,{history:this.history,children:this.props.children})},n}(o.Component),X=function(e){function n(){return e.apply(this,arguments)||this}a(n,e);var t=n.prototype;return t.componentDidMount=function(){this.props.onMount&&this.props.onMount.call(this,this)},t.componentDidUpdate=function(e){this.props.onUpdate&&this.props.onUpdate.call(this,this,e)},t.componentWillUnmount=function(){this.props.onUnmount&&this.props.onUnmount.call(this,this)},t.render=function(){return null},n}(o.Component);function Y(e){var n=e.message,t=e.when,r=void 0===t||t;return o.createElement(V.Consumer,null,(function(e){if(e||p(!1),!r||e.staticContext)return null;var t=e.history.block;return o.createElement(X,{onMount:function(e){e.release=t(n)},onUpdate:function(e,r){r.message!==n&&(e.release(),e.release=t(n))},onUnmount:function(e){e.release()},message:n})}))}var K={},Z=0;function G(e,n){return void 0===e&&(e="/"),void 0===n&&(n={}),"/"===e?e:function(e){if(K[e])return K[e];var n=D().compile(e);return Z<1e4&&(K[e]=n,Z++),n}(e)(n,{pretty:!0})}function J(e){var n=e.computedMatch,t=e.to,r=e.push,a=void 0!==r&&r;return o.createElement(V.Consumer,null,(function(e){e||p(!1);var r=e.history,i=e.staticContext,l=a?r.push:r.replace,c=y(n?"string"==typeof t?G(t,n.params):u({},t,{pathname:G(t.pathname,n.params)}):t);return i?(l(c),null):o.createElement(X,{onMount:function(){l(c)},onUpdate:function(e,n){var t,r,a=y(n.to);t=a,r=u({},c,{key:a.key}),t.pathname===r.pathname&&t.search===r.search&&t.hash===r.hash&&t.key===r.key&&d(t.state,r.state)||l(c)},to:t})}))}var ee={},ne=0;function te(e,n){void 0===n&&(n={}),("string"==typeof n||Array.isArray(n))&&(n={path:n});var t=n,r=t.path,a=t.exact,o=void 0!==a&&a,i=t.strict,l=void 0!==i&&i,u=t.sensitive,c=void 0!==u&&u;return[].concat(r).reduce((function(n,t){if(!t&&""!==t)return null;if(n)return n;var r=function(e,n){var t=""+n.end+n.strict+n.sensitive,r=ee[t]||(ee[t]={});if(r[e])return r[e];var a=[],o={regexp:D()(e,a,n),keys:a};return ne<1e4&&(r[e]=o,ne++),o}(t,{end:o,strict:l,sensitive:c}),a=r.regexp,i=r.keys,u=a.exec(e);if(!u)return null;var s=u[0],f=u.slice(1),d=e===s;return o&&!d?null:{path:t,url:"/"===t&&""===s?"/":s,isExact:d,params:i.reduce((function(e,n,t){return e[n.name]=f[t],e}),{})}}),null)}var re=function(e){function n(){return e.apply(this,arguments)||this}return a(n,e),n.prototype.render=function(){var e=this;return o.createElement(V.Consumer,null,(function(n){n||p(!1);var t=e.props.location||n.location,r=u({},n,{location:t,match:e.props.computedMatch?e.props.computedMatch:e.props.path?te(t.pathname,e.props):n.match}),a=e.props,i=a.children,l=a.component,c=a.render;return Array.isArray(i)&&0===i.length&&(i=null),o.createElement(V.Provider,{value:r},r.match?i?"function"==typeof i?i(r):i:l?o.createElement(l,r):c?c(r):null:"function"==typeof i?i(r):null)}))},n}(o.Component);function ae(e){return"/"===e.charAt(0)?e:"/"+e}function oe(e,n){if(!e)return n;var t=ae(e);return 0!==n.pathname.indexOf(t)?n:u({},n,{pathname:n.pathname.substr(t.length)})}function ie(e){return"string"==typeof e?e:A(e)}function le(e){return function(){p(!1)}}function ue(){}var ce=function(e){function n(){for(var n,t=arguments.length,r=new Array(t),a=0;a<t;a++)r[a]=arguments[a];return(n=e.call.apply(e,[this].concat(r))||this).handlePush=function(e){return n.navigateTo(e,"PUSH")},n.handleReplace=function(e){return n.navigateTo(e,"REPLACE")},n.handleListen=function(){return ue},n.handleBlock=function(){return ue},n}a(n,e);var t=n.prototype;return t.navigateTo=function(e,n){var t=this.props,r=t.basename,a=void 0===r?"":r,o=t.context,i=void 0===o?{}:o;i.action=n,i.location=function(e,n){return e?u({},n,{pathname:ae(e)+n.pathname}):n}(a,y(e)),i.url=ie(i.location)},t.render=function(){var e=this.props,n=e.basename,t=void 0===n?"":n,r=e.context,a=void 0===r?{}:r,i=e.location,l=void 0===i?"/":i,c=F(e,["basename","context","location"]),s={createHref:function(e){return ae(t+ie(e))},action:"POP",location:oe(t,y(l)),push:this.handlePush,replace:this.handleReplace,go:le(),goBack:le(),goForward:le(),listen:this.handleListen,block:this.handleBlock};return o.createElement(W,u({},c,{history:s,staticContext:a}))},n}(o.Component),se=function(e){function n(){return e.apply(this,arguments)||this}return a(n,e),n.prototype.render=function(){var e=this;return o.createElement(V.Consumer,null,(function(n){n||p(!1);var t,r,a=e.props.location||n.location;return o.Children.forEach(e.props.children,(function(e){if(null==r&&o.isValidElement(e)){t=e;var i=e.props.path||e.props.from;r=i?te(a.pathname,u({},e.props,{path:i})):n.match}})),r?o.cloneElement(t,{location:a,computedMatch:r}):null}))},n}(o.Component);function fe(e){var n="withRouter("+(e.displayName||e.name)+")",t=function(n){var t=n.wrappedComponentRef,r=F(n,["wrappedComponentRef"]);return o.createElement(V.Consumer,null,(function(n){return n||p(!1),o.createElement(e,u({},r,n,{ref:t}))}))};return t.displayName=n,t.WrappedComponent=e,$()(t,e)}var de=o.useContext;function pe(){return de(q)}function he(){return de(V).location}function me(){var e=de(V).match;return e?e.params:{}}function ge(e){var n=he(),t=de(V).match;return e?te(n.pathname,e):t}var ve=function(e){function n(){for(var n,t=arguments.length,r=new Array(t),a=0;a<t;a++)r[a]=arguments[a];return(n=e.call.apply(e,[this].concat(r))||this).history=B(n.props),n}return a(n,e),n.prototype.render=function(){return o.createElement(W,{history:this.history,children:this.props.children})},n}(o.Component),Ae=function(e){function n(){for(var n,t=arguments.length,r=new Array(t),a=0;a<t;a++)r[a]=arguments[a];return(n=e.call.apply(e,[this].concat(r))||this).history=O(n.props),n}return a(n,e),n.prototype.render=function(){return o.createElement(W,{history:this.history,children:this.props.children})},n}(o.Component),ye=function(e,n){return"function"==typeof e?e(n):e},be=function(e,n){return"string"==typeof e?y(e,null,null,n):e},Ce=function(e){return e},we=o.forwardRef;void 0===we&&(we=Ce);var xe=we((function(e,n){var t=e.innerRef,r=e.navigate,a=e.onClick,i=F(e,["innerRef","navigate","onClick"]),l=i.target,c=u({},i,{onClick:function(e){try{a&&a(e)}catch(n){throw e.preventDefault(),n}e.defaultPrevented||0!==e.button||l&&"_self"!==l||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return c.ref=Ce!==we&&n||t,o.createElement("a",c)})),ke=we((function(e,n){var t=e.component,r=void 0===t?xe:t,a=e.replace,i=e.to,l=e.innerRef,c=F(e,["component","replace","to","innerRef"]);return o.createElement(V.Consumer,null,(function(e){e||p(!1);var t=e.history,s=be(ye(i,e.location),e.location),f=s?t.createHref(s):"",d=u({},c,{href:f,navigate:function(){var n=ye(i,e.location);(a?t.replace:t.push)(n)}});return Ce!==we?d.ref=n||l:d.innerRef=l,o.createElement(r,d)}))})),Ee=function(e){return e},Be=o.forwardRef;void 0===Be&&(Be=Ee);var Ie=Be((function(e,n){var t=e["aria-current"],r=void 0===t?"page":t,a=e.activeClassName,i=void 0===a?"active":a,l=e.activeStyle,c=e.className,s=e.exact,f=e.isActive,d=e.location,h=e.sensitive,m=e.strict,g=e.style,v=e.to,A=e.innerRef,y=F(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return o.createElement(V.Consumer,null,(function(e){e||p(!1);var t=d||e.location,a=be(ye(v,t),t),b=a.pathname,C=b&&b.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),w=C?te(t.pathname,{path:C,exact:s,sensitive:h,strict:m}):null,x=!!(f?f(w,t):w),k=x?function(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];return n.filter((function(e){return e})).join(" ")}(c,i):c,E=x?u({},g,{},l):g,B=u({"aria-current":x&&r||null,className:k,style:E,to:a},y);return Ee!==Be?B.ref=n||A:B.innerRef=A,o.createElement(ke,B)}))}))},408:(e,n,t)=>{"use strict";var r=t(418),a=60103,o=60106;n.Fragment=60107,n.StrictMode=60108,n.Profiler=60114;var i=60109,l=60110,u=60112;n.Suspense=60113;var c=60115,s=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;a=f("react.element"),o=f("react.portal"),n.Fragment=f("react.fragment"),n.StrictMode=f("react.strict_mode"),n.Profiler=f("react.profiler"),i=f("react.provider"),l=f("react.context"),u=f("react.forward_ref"),n.Suspense=f("react.suspense"),c=f("react.memo"),s=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function g(e,n,t){this.props=e,this.context=n,this.refs=m,this.updater=t||h}function v(){}function A(e,n,t){this.props=e,this.context=n,this.refs=m,this.updater=t||h}g.prototype.isReactComponent={},g.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,n,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=g.prototype;var y=A.prototype=new v;y.constructor=A,r(y,g.prototype),y.isPureReactComponent=!0;var b={current:null},C=Object.prototype.hasOwnProperty,w={key:!0,ref:!0,__self:!0,__source:!0};function x(e,n,t){var r,o={},i=null,l=null;if(null!=n)for(r in void 0!==n.ref&&(l=n.ref),void 0!==n.key&&(i=""+n.key),n)C.call(n,r)&&!w.hasOwnProperty(r)&&(o[r]=n[r]);var u=arguments.length-2;if(1===u)o.children=t;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:a,type:e,key:i,ref:l,props:o,_owner:b.current}}function k(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var E=/\/+/g;function B(e,n){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return n[e]}))}(""+e.key):n.toString(36)}function I(e,n,t,r,i){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var u=!1;if(null===e)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case a:case o:u=!0}}if(u)return i=i(u=e),e=""===r?"."+B(u,0):r,Array.isArray(i)?(t="",null!=e&&(t=e.replace(E,"$&/")+"/"),I(i,n,t,"",(function(e){return e}))):null!=i&&(k(i)&&(i=function(e,n){return{$$typeof:a,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(i,t+(!i.key||u&&u.key===i.key?"":(""+i.key).replace(E,"$&/")+"/")+e)),n.push(i)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var c=0;c<e.length;c++){var s=r+B(l=e[c],c);u+=I(l,n,t,s,i)}else if("function"==typeof(s=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=s.call(e),c=0;!(l=e.next()).done;)u+=I(l=l.value,n,t,s=r+B(l,c++),i);else if("object"===l)throw n=""+e,Error(p(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n));return u}function S(e,n,t){if(null==e)return e;var r=[],a=0;return I(e,r,"","",(function(e){return n.call(t,e,a++)})),r}function _(e){if(-1===e._status){var n=e._result;n=n(),e._status=0,e._result=n,n.then((function(n){0===e._status&&(n=n.default,e._status=1,e._result=n)}),(function(n){0===e._status&&(e._status=2,e._result=n)}))}if(1===e._status)return e._result;throw e._result}var P={current:null};function T(){var e=P.current;if(null===e)throw Error(p(321));return e}var O={ReactCurrentDispatcher:P,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:b,IsSomeRendererActing:{current:!1},assign:r};n.Children={map:S,forEach:function(e,n,t){S(e,(function(){n.apply(this,arguments)}),t)},count:function(e){var n=0;return S(e,(function(){n++})),n},toArray:function(e){return S(e,(function(e){return e}))||[]},only:function(e){if(!k(e))throw Error(p(143));return e}},n.Component=g,n.PureComponent=A,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=O,n.cloneElement=function(e,n,t){if(null==e)throw Error(p(267,e));var o=r({},e.props),i=e.key,l=e.ref,u=e._owner;if(null!=n){if(void 0!==n.ref&&(l=n.ref,u=b.current),void 0!==n.key&&(i=""+n.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in n)C.call(n,s)&&!w.hasOwnProperty(s)&&(o[s]=void 0===n[s]&&void 0!==c?c[s]:n[s])}var s=arguments.length-2;if(1===s)o.children=t;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];o.children=c}return{$$typeof:a,type:e.type,key:i,ref:l,props:o,_owner:u}},n.createContext=function(e,n){return void 0===n&&(n=null),(e={$$typeof:l,_calculateChangedBits:n,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},n.createElement=x,n.createFactory=function(e){var n=x.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:u,render:e}},n.isValidElement=k,n.lazy=function(e){return{$$typeof:s,_payload:{_status:-1,_result:e},_init:_}},n.memo=function(e,n){return{$$typeof:c,type:e,compare:void 0===n?null:n}},n.useCallback=function(e,n){return T().useCallback(e,n)},n.useContext=function(e,n){return T().useContext(e,n)},n.useDebugValue=function(){},n.useEffect=function(e,n){return T().useEffect(e,n)},n.useImperativeHandle=function(e,n,t){return T().useImperativeHandle(e,n,t)},n.useLayoutEffect=function(e,n){return T().useLayoutEffect(e,n)},n.useMemo=function(e,n){return T().useMemo(e,n)},n.useReducer=function(e,n,t){return T().useReducer(e,n,t)},n.useRef=function(e){return T().useRef(e)},n.useState=function(e){return T().useState(e)},n.version="17.0.2"},294:(e,n,t)=>{"use strict";e.exports=t(408)},53:(e,n)=>{"use strict";var t,r,a,o;if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;n.unstable_now=function(){return i.now()}}else{var l=Date,u=l.now();n.unstable_now=function(){return l.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,s=null,f=function(){if(null!==c)try{var e=n.unstable_now();c(!0,e),c=null}catch(e){throw setTimeout(f,0),e}};t=function(e){null!==c?setTimeout(t,0,e):(c=e,setTimeout(f,0))},r=function(e,n){s=setTimeout(e,n)},a=function(){clearTimeout(s)},n.unstable_shouldYield=function(){return!1},o=n.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var m=!1,g=null,v=-1,A=5,y=0;n.unstable_shouldYield=function(){return n.unstable_now()>=y},o=function(){},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):A=0<e?Math.floor(1e3/e):5};var b=new MessageChannel,C=b.port2;b.port1.onmessage=function(){if(null!==g){var e=n.unstable_now();y=e+A;try{g(!0,e)?C.postMessage(null):(m=!1,g=null)}catch(e){throw C.postMessage(null),e}}else m=!1},t=function(e){g=e,m||(m=!0,C.postMessage(null))},r=function(e,t){v=d((function(){e(n.unstable_now())}),t)},a=function(){p(v),v=-1}}function w(e,n){var t=e.length;e.push(n);e:for(;;){var r=t-1>>>1,a=e[r];if(!(void 0!==a&&0<E(a,n)))break e;e[r]=n,e[t]=a,t=r}}function x(e){return void 0===(e=e[0])?null:e}function k(e){var n=e[0];if(void 0!==n){var t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,a=e.length;r<a;){var o=2*(r+1)-1,i=e[o],l=o+1,u=e[l];if(void 0!==i&&0>E(i,t))void 0!==u&&0>E(u,i)?(e[r]=u,e[l]=t,r=l):(e[r]=i,e[o]=t,r=o);else{if(!(void 0!==u&&0>E(u,t)))break e;e[r]=u,e[l]=t,r=l}}}return n}return null}function E(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}var B=[],I=[],S=1,_=null,P=3,T=!1,O=!1,N=!1;function z(e){for(var n=x(I);null!==n;){if(null===n.callback)k(I);else{if(!(n.startTime<=e))break;k(I),n.sortIndex=n.expirationTime,w(B,n)}n=x(I)}}function L(e){if(N=!1,z(e),!O)if(null!==x(B))O=!0,t(M);else{var n=x(I);null!==n&&r(L,n.startTime-e)}}function M(e,t){O=!1,N&&(N=!1,a()),T=!0;var o=P;try{for(z(t),_=x(B);null!==_&&(!(_.expirationTime>t)||e&&!n.unstable_shouldYield());){var i=_.callback;if("function"==typeof i){_.callback=null,P=_.priorityLevel;var l=i(_.expirationTime<=t);t=n.unstable_now(),"function"==typeof l?_.callback=l:_===x(B)&&k(B),z(t)}else k(B);_=x(B)}if(null!==_)var u=!0;else{var c=x(I);null!==c&&r(L,c.startTime-t),u=!1}return u}finally{_=null,P=o,T=!1}}var j=o;n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){O||T||(O=!0,t(M))},n.unstable_getCurrentPriorityLevel=function(){return P},n.unstable_getFirstCallbackNode=function(){return x(B)},n.unstable_next=function(e){switch(P){case 1:case 2:case 3:var n=3;break;default:n=P}var t=P;P=n;try{return e()}finally{P=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=j,n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=P;P=e;try{return n()}finally{P=t}},n.unstable_scheduleCallback=function(e,o,i){var l=n.unstable_now();switch(i="object"==typeof i&&null!==i&&"number"==typeof(i=i.delay)&&0<i?l+i:l,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:S++,callback:o,priorityLevel:e,startTime:i,expirationTime:u=i+u,sortIndex:-1},i>l?(e.sortIndex=i,w(I,e),null===x(B)&&e===x(I)&&(N?a():N=!0,r(L,i-l))):(e.sortIndex=u,w(B,e),O||T||(O=!0,t(M))),e},n.unstable_wrapCallback=function(e){var n=P;return function(){var t=P;P=n;try{return e.apply(this,arguments)}finally{P=t}}}},840:(e,n,t)=>{"use strict";e.exports=t(53)},89:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>v});var r=t(379),a=t.n(r),o=t(795),i=t.n(o),l=t(569),u=t.n(l),c=t(565),s=t.n(c),f=t(216),d=t.n(f),p=t(589),h=t.n(p),m=t(28),g={};g.styleTagTransform=h(),g.setAttributes=s(),g.insert=u().bind(null,"head"),g.domAPI=i(),g.insertStyleElement=d(),a()(m.Z,g);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},379:e=>{"use strict";var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},i=[],l=0;l<e.length;l++){var u=e[l],c=r.base?u[0]+r.base:u[0],s=o[c]||0,f="".concat(c," ").concat(s);o[c]=s+1;var d=t(f),p={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==d)n[d].references++,n[d].updater(p);else{var h=a(p,r);r.byIndex=l,n.splice(l,0,{identifier:f,updater:h,references:1})}i.push(f)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var l=t(o[i]);n[l].references--}for(var u=r(e,a),c=0;c<o.length;c++){var s=t(o[c]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}o=u}}},569:e=>{"use strict";var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{"use strict";e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},632:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),a=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return a(n,e),n},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const l=o(t(294)),u=t(427),c=i(t(475)),s=i(t(682)),f=i(t(976));n.default=()=>l.createElement(u.HashRouter,null,l.createElement(s.default,null),l.createElement(u.Switch,null,l.createElement(u.Route,{exact:!0,path:"/",component:c.default}),l.createElement(u.Route,{path:"/faq",component:f.default})))},976:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),a=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return a(n,e),n};Object.defineProperty(n,"__esModule",{value:!0});const i=o(t(294)),l=t(294);n.default=()=>{const[e,n]=l.useState("current"),[t,r]=l.useState("none"),[a,o]=l.useState("none"),[u,c]=l.useState("none"),[s,f]=l.useState("none"),[d,p]=l.useState("none"),[h,m]=l.useState("none"),[g,v]=l.useState("inline"),[A,y]=l.useState("none"),[b,C]=l.useState("none"),[w,x]=l.useState("none"),[k,E]=l.useState("none"),[B,I]=l.useState("none"),[S,_]=l.useState("none");return i.createElement("div",{id:"faq-container"},i.createElement("div",{className:"sticky-sidebar"},i.createElement("ul",null,i.createElement("li",{className:"li-header"},"Variables"),i.createElement("li",{className:e,onClick:()=>{"none"===g&&(n("current"),r("none"),o("none"),c("none"),f("none"),p("none"),m("none"),v("inline"),y("none"),C("none"),x("none"),E("none"),I("none"),_("none"))},title:"Expected Value"},"Mean"),i.createElement("li",{className:t,onClick:()=>{"none"===A&&(n("none"),r("current"),o("none"),c("none"),f("none"),p("none"),m("none"),v("none"),y("inline"),C("none"),x("none"),E("none"),I("none"),_("none"))},title:"Variance"},"Var"),i.createElement("li",{className:a,onClick:()=>{"none"===b&&(n("none"),r("none"),o("current"),c("none"),f("none"),p("none"),m("none"),v("none"),y("none"),C("inline"),x("none"),E("none"),I("none"),_("none"))},title:"Volatility"},"Vol"),i.createElement("li",{className:u,onClick:()=>{"none"===w&&(n("none"),r("none"),o("none"),c("current"),f("none"),p("none"),m("none"),v("none"),y("none"),C("none"),x("inline"),E("none"),I("none"),_("none"))},title:"Covariance"},"Cov"),i.createElement("li",{className:s,onClick:()=>{"none"===k&&(n("none"),r("none"),o("none"),c("none"),f("current"),p("none"),m("none"),v("none"),y("none"),C("none"),x("none"),E("inline"),I("none"),_("none"))},title:"Correlation Coeffecient"},"Corr"),i.createElement("li",{className:"li-header"},"Application"),i.createElement("li",{className:d,onClick:()=>{"none"===B&&(n("none"),r("none"),o("none"),c("none"),f("none"),p("current"),m("none"),v("none"),y("none"),C("none"),x("none"),E("none"),I("inline"),_("none"))},title:"Correlation Coeffecient"},"Using Data"))),i.createElement("div",{className:"faq-h1"},i.createElement("h1",null,"Frequently Asked Questions")),i.createElement("div",{className:"faq-subcontainer"},i.createElement("div",{className:"desc-mean",style:{display:`${g}`}},i.createElement("h2",null,"What is Mean?"),i.createElement("p",null,"This represents the expected percent of gain or loss each day. It is the weighted average of recent returns. The mean it is calculated by summing the realized daily returns and dividing by the number of days. The returns are the percentage changes in the value of the asset per dollar initially invested. I am multiplying by 100 to get a number that looks like 2.00 rather than 0.02. Then dividing by 30 because I am calculating the mean over 30 days. I'm fetching 31 days of data because the formula uses  ","$i +1$","."),i.createElement("br",null),i.createElement("div",{className:"mjs"},"$E[X]=Mean[X]=\\frac{100}{30}⋅ \\sum_{i=1}^{30}\\frac{{X_{i+1}-{X_i}}}{X_i}$"),i.createElement("br",null),i.createElement("ul",null,i.createElement("li",null,"A positive number likely indicates an uptrend."),i.createElement("li",null,"A negative number likely indicates a downtrend."))),i.createElement("div",{className:"desc-var",style:{display:`${A}`}},i.createElement("h2",null,"What is Variance?"),i.createElement("p",null,"Variance is the expected squared deviation from the mean. It is a measure of the dispersion of returns. Although not used directly to make observations, it is used within the calculations of volatility, covariance and correlation. The variance and covariance of BTC are equal. Therefore the correlation will be 1, as expected."),i.createElement("br",null),i.createElement("div",{className:"mjs"},"$Var[X] = E[(X_{i}-E[X])^{2}]= E[X^{2}] - E[X]^{2}$"),i.createElement("br",null),i.createElement("div",{className:"mjs"},"$Cov[X, X] = E[(X_{i}-E[X])(X_{i}-E[X])] = E[(X_{i}-E[X])^{2}] = Var[X]$"),i.createElement("br",null),i.createElement("div",{className:"mjs"},"$ρ_{X, X}=Corr[X, X]=\\frac{Cov[X, X]}{σ_{X} σ_{X}} = \\frac{Var[X]}{Var[X]} = 1$")),i.createElement("div",{className:"desc-vol",style:{display:`${b}`}},i.createElement("h2",null,"What is Volatility?"),i.createElement("p",null,"Volatility, or standard deviation, is a measure of the dispersion of returns for an asset. It is the backbone of popular volatility market incidators such as bollinger bands and confidence intervals. It is calculated simply via the square root of the variance."),i.createElement("br",null),i.createElement("div",{className:"mjs"},"$σ_{X} = Vol[X] = \\sqrt{Var[X]}$"),i.createElement("br",null),i.createElement("ul",null,i.createElement("li",null,"High volatility indicates a wide price range while low volatility indicates a narrow price range."),i.createElement("li",null,"Volatility cannot be negative as it is the result of a square root calculation."))),i.createElement("div",{className:"desc-cov",style:{display:`${w}`}},i.createElement("h2",null,"What is Covariance?"),i.createElement("p",null,"Covariance measures the extent or magnitude to which two variables fluctuate or move together. It is not normalized so it could be hard to use the variable as it is."),i.createElement("br",null),i.createElement("div",{className:"mjs"},"$Cov[X,  BTC]=\\sum_{i=1}^{30}\\frac{{(X_i - E[X])}{(BTC_i - E[BTC])}}{30}$"),i.createElement("br",null),i.createElement("ul",null,i.createElement("li",null,"If the covariance is positive, then the two variables tend to move together. If the covariance is negative, then the two variables tend to move in opposite directions."),i.createElement("li",null,"If the covariance is 0, then there is no linear relationship between the two variables."))),i.createElement("div",{className:"desc-cor",style:{display:`${k}`}},i.createElement("h2",null,"What is Correlation?"),i.createElement("p",null,"Correlation, specifically the correlation coeffecient, is a unitless measure of the strength and direction of the linear relationship between two assets. It is dimensionless and normalized between -1 and 1. It is calculated by dividing the covariance of two assets by the product of their standard deviations."),i.createElement("br",null),i.createElement("div",{className:"mjs"},"$ρ_{X, BTC}=Corr[X, BTC]=\\frac{Cov[X, BTC]}{{\\sigma_X}{\\sigma_{BTC}}}$"),i.createElement("br",null),i.createElement("ul",null,i.createElement("li",null,"A correlation of 1 indicates perfect positive correlation between two assets. A correlation of -1 indicates perfect negative correlation. A correlation of 0 indicates no linear relationship."),i.createElement("li",null,"The closer to -1 or 1 it is, the more effect Bitcoin has on an asset's price action."))),i.createElement("div",{className:"desc-data",style:{display:`${B}`}},i.createElement("h2",null,"How To Use This Data?"),i.createElement("p",null,"I am surprised that there is not a simple webpage out there that shows correlations of large cap crypto assets against Bitcoin. There are strong relationships amongst these coins with Bitcoin, but how quantitatively strong? I am presenting one way to view those relationships."),i.createElement("br",null),i.createElement("p",null,"Although one might find the variances and covariances useful, I am more interested means, volatilities and correlations. They are calculated on the way to the correlations so I figured I would present them for anyone interested."),i.createElement("br",null),i.createElement("p",{id:"hideonsmall"},"Assets with smaller market caps often overreact to trending market moves. If I thought Bitcoin was going to make a move but wanted to take on additional risk without using leverage, I might look at something with higher volatility with high correlation coeffecient to diversify into.")),i.createElement("div",{className:"desc-ex",style:{display:`${S}`}},i.createElement("h2",null,"An Example"),i.createElement("p",null))))}},475:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),a=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return a(n,e),n};Object.defineProperty(n,"__esModule",{value:!0});const i=o(t(294)),l=t(294),u=t(427);n.default=()=>{let e=[],n=0,t=0,r=[],a=[],o=[],c=[],s=0,f=0,d=0,p=0,h=0,m=0;return l.useEffect((()=>{!async function(){await fetch("https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=50&page=1&sparkline=false").then((e=>e.json())).then((i=>{for(let l=0;l<50;l++){e.push(i[l].id);let u=document.createElement("tr");u.setAttribute("title",`${i[l].name}`);let g=document.createElement("td");g.innerText=i[l].market_cap_rank,g.classList.add("ranks"),u.appendChild(g);let v=document.createElement("td");v.innerText=i[l].symbol,v.classList.add("symbols"),u.classList.add(i[l].id),u.appendChild(v);let A=document.createElement("td");A.innerText=i[l].current_price.toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g,","),u.appendChild(A);let y=document.createElement("td");y.innerText=i[l].market_cap.toLocaleString(),u.appendChild(y),document.querySelector("tbody").appendChild(u),fetch(`https://api.coingecko.com/api/v3/coins/${i[l].id}/market_chart?vs_currency=usd&days=31&interval=daily`).then((e=>e.json())).then((u=>{if("compound-usd-coin"===i[l].id||"usd-coin"===i[l].id||"binance-usd"===i[l].id||"dai"===i[l].id||"tether"===i[l].id){for(let n=0;n<5;n++){let n=document.createElement("td");n.innerText="",document.querySelector(`.${e[l]}`).appendChild(n)}return!1}o=[];for(let e=0;e<31;e++)o.push(u.prices[e][1]);c=[];for(let e=0;e<30;e++){let n=(o[e+1]-o[e])/o[e]*100;c.push(n)}s=0;for(let e=0;e<30;e++)s+=c[e]/30;f=0;for(let e=0;e<30;e++)f+=Math.pow(c[e],2)/30;d=0,p=0,d=f-Math.pow(s,2),p=Math.sqrt(d);let g=document.createElement("td");g.innerText=s.toFixed(2).toString()+"%",document.querySelector(`.${e[l]}`).appendChild(g);let v=document.createElement("td");v.innerText=d.toFixed(2).toString(),document.querySelector(`.${e[l]}`).appendChild(v);let A=document.createElement("td");if(A.innerText=p.toFixed(2).toString()+"%",document.querySelector(`.${e[l]}`).appendChild(A),"bitcoin"===i[l].id){t=s,n=p,a=c;for(let e=0;e<30;e++)r.push(u.prices[e][1])}h=0,m=0;for(let e=0;e<30;e++)h+=(c[e]-s)*(a[e]-t)/30;m=h/(n*p);let y=document.createElement("td");y.innerText=h.toFixed(2).toString(),document.querySelector(`.${e[l]}`).appendChild(y);let b=document.createElement("td");b.innerText=m.toFixed(5).toString(),document.querySelector(`.${e[l]}`).appendChild(b)}))}}))}()}),[]),i.createElement("div",{id:"main-container"},i.createElement("h1",null,"Bitcoin Covariances and Correlations"),i.createElement("h4",null,"Calculated off of the last thirty daily closures"),i.createElement(u.NavLink,{exact:!0,activeClassname:"active",to:"/"},i.createElement("button",{onClick:()=>setTimeout((function(){location.reload()}),0),title:"Reload Page"},"⟳")),i.createElement("table",{className:"coin-table"},i.createElement("thead",null,i.createElement("tr",{className:"tr1"},i.createElement("th",{className:"rank",title:"Market Cap Rank"},"#"),i.createElement("th",{className:"name",title:"Ticker"},"Name"),i.createElement("th",{className:"price",title:"USD Price"},"Price"),i.createElement("th",{className:"market-cap",title:"Market Capitalization"},"Market Cap"),i.createElement("th",{className:"return",title:"Expected Value"},"Mean"),i.createElement("th",{className:"var",title:"Variance"},"Var"),i.createElement("th",{className:"sig",title:"Volatility"},"Vol"),i.createElement("th",{className:"covar",title:"Covariance"},"Cov"),i.createElement("th",{className:"cor",title:"Correlation Coefffecient"},"Corr"))),i.createElement("tbody",null)),i.createElement("div",{className:"span-container"},i.createElement("span",null,"*Price and Market Cap are in US Dollars."),i.createElement("br",null),i.createElement("span",null,"*'Stable Coins' do not have data calculated."),i.createElement("br",null),i.createElement("span",null,"*If you see NaN try ",i.createElement(u.NavLink,{exact:!0,activeClassname:"active",to:"/",onClick:()=>location.reload(),title:"Reload Data"},"refreshing the page. ⟳")),i.createElement("br",null),i.createElement("span",null,"*Assets like SHIB have nonzero prices.")))}},682:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),a=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return a(n,e),n};Object.defineProperty(n,"__esModule",{value:!0});const i=o(t(294)),l=t(427);n.default=()=>i.createElement("nav",null,i.createElement("ul",null,i.createElement("li",null),i.createElement(l.NavLink,{exact:!0,activeClassname:"active",to:"/"},i.createElement("li",null,"HOME")),i.createElement(l.NavLink,{activeclassName:"active",to:"/faq",onClick:()=>setTimeout((()=>location.reload()),10)},i.createElement("li",null,"FAQ"))))},629:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),a=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return a(n,e),n},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const l=o(t(294)),u=o(t(935));t(89);const c=i(t(632));u.render(l.createElement(c.default,null),document.querySelector("#root"))}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t(629)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,