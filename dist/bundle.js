/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={679:(e,t,n)=>{"use strict";var r=n(864),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},l={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},o={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},i={};function u(e){return r.isMemo(e)?o:i[e.$$typeof]||a}i[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},i[r.Memo]=o;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var a=p(n);a&&a!==h&&e(t,a,r)}var o=s(n);f&&(o=o.concat(f(n)));for(var i=u(t),m=u(n),v=0;v<o.length;++v){var y=o[v];if(!(l[y]||r&&r[y]||m&&m[y]||i&&i[y])){var g=d(n,y);try{c(t,y,g)}catch(e){}}}}return t}},418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,l){for(var o,i,u=a(e),c=1;c<arguments.length;c++){for(var s in o=Object(arguments[c]))n.call(o,s)&&(u[s]=o[s]);if(t){i=t(o);for(var f=0;f<i.length;f++)r.call(o,i[f])&&(u[i[f]]=o[i[f]])}}return u}},779:(e,t,n)=>{var r=n(173);e.exports=function e(t,n,a){return r(n)||(a=n||a,n=[]),a=a||{},t instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(t,n):r(t)?function(t,n,r){for(var a=[],l=0;l<t.length;l++)a.push(e(t[l],n,r).source);return s(new RegExp("(?:"+a.join("|")+")",f(r)),n)}(t,n,a):function(e,t,n){return d(l(e,n),t,n)}(t,n,a)},e.exports.parse=l,e.exports.compile=function(e,t){return i(l(e,t),t)},e.exports.tokensToFunction=i,e.exports.tokensToRegExp=d;var a=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function l(e,t){for(var n,r=[],l=0,o=0,i="",s=t&&t.delimiter||"/";null!=(n=a.exec(e));){var f=n[0],d=n[1],p=n.index;if(i+=e.slice(o,p),o=p+f.length,d)i+=d[1];else{var h=e[o],m=n[2],v=n[3],y=n[4],g=n[5],b=n[6],w=n[7];i&&(r.push(i),i="");var k=null!=m&&null!=h&&h!==m,E="+"===b||"*"===b,S="?"===b||"*"===b,x=n[2]||s,C=y||g;r.push({name:v||l++,prefix:m||"",delimiter:x,optional:S,repeat:E,partial:k,asterisk:!!w,pattern:C?c(C):w?".*":"[^"+u(x)+"]+?"})}}return o<e.length&&(i+=e.substr(o)),i&&r.push(i),r}function o(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function i(e,t){for(var n=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(n[a]=new RegExp("^(?:"+e[a].pattern+")$",f(t)));return function(t,a){for(var l="",i=t||{},u=(a||{}).pretty?o:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,d=i[s.name];if(null==d){if(s.optional){s.partial&&(l+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!n[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");l+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!n[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');l+=s.prefix+f}}else l+=s}return l}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e&&e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var a=(n=n||{}).strict,l=!1!==n.end,o="",i=0;i<e.length;i++){var c=e[i];if("string"==typeof c)o+=u(c);else{var d=u(c.prefix),p="(?:"+c.pattern+")";t.push(c),c.repeat&&(p+="(?:"+d+p+")*"),o+=p=c.optional?c.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var h=u(n.delimiter||"/"),m=o.slice(-h.length)===h;return a||(o=(m?o.slice(0,-h.length):o)+"(?:"+h+"(?=$))?"),o+=l?"$":a&&m?"":"(?="+h+"|$)",s(new RegExp("^"+o,f(n)),t)}},173:e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},703:(e,t,n)=>{"use strict";var r=n(414);function a(){}function l(){}l.resetWarningCache=a,e.exports=function(){function e(e,t,n,a,l,o){if(o!==r){var i=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw i.name="Invariant Violation",i}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:l,resetWarningCache:a};return n.PropTypes=n,n}},697:(e,t,n)=>{e.exports=n(703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},448:(e,t,n)=>{"use strict";var r=n(294),a=n(418),l=n(840);function o(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(o(227));var i=new Set,u={};function c(e,t){s(e,t),s(e+"Capture",t)}function s(e,t){for(u[e]=t,e=0;e<t.length;e++)i.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},m={};function v(e,t,n,r,a,l,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=l,this.removeEmptyString=o}var y={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){y[e]=new v(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];y[t]=new v(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){y[e]=new v(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){y[e]=new v(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){y[e]=new v(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){y[e]=new v(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){y[e]=new v(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){y[e]=new v(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){y[e]=new v(e,5,!1,e.toLowerCase(),null,!1,!1)}));var g=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,n,r){var a=y.hasOwnProperty(t)?y[t]:null;(null!==a?0===a.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!p.call(m,e)||!p.call(h,e)&&(d.test(e)?m[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){y[e]=new v(e,1,!1,e.toLowerCase(),null,!1,!1)})),y.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){y[e]=new v(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,E=60103,S=60106,x=60107,C=60108,_=60114,P=60109,T=60110,N=60112,O=60113,L=60120,R=60115,z=60116,M=60121,I=60128,F=60129,A=60130,D=60131;if("function"==typeof Symbol&&Symbol.for){var U=Symbol.for;E=U("react.element"),S=U("react.portal"),x=U("react.fragment"),C=U("react.strict_mode"),_=U("react.profiler"),P=U("react.provider"),T=U("react.context"),N=U("react.forward_ref"),O=U("react.suspense"),L=U("react.suspense_list"),R=U("react.memo"),z=U("react.lazy"),M=U("react.block"),U("react.scope"),I=U("react.opaque.id"),F=U("react.debug_trace_mode"),A=U("react.offscreen"),D=U("react.legacy_hidden")}var j,$="function"==typeof Symbol&&Symbol.iterator;function B(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=$&&e[$]||e["@@iterator"])?e:null}function V(e){if(void 0===j)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);j=t&&t[1]||""}return"\n"+j+e}var W=!1;function H(e,t){if(!e||W)return"";W=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),l=r.stack.split("\n"),o=a.length-1,i=l.length-1;1<=o&&0<=i&&a[o]!==l[i];)i--;for(;1<=o&&0<=i;o--,i--)if(a[o]!==l[i]){if(1!==o||1!==i)do{if(o--,0>--i||a[o]!==l[i])return"\n"+a[o].replace(" at new "," at ")}while(1<=o&&0<=i);break}}}finally{W=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?V(e):""}function q(e){switch(e.tag){case 5:return V(e.type);case 16:return V("Lazy");case 13:return V("Suspense");case 19:return V("SuspenseList");case 0:case 2:case 15:return H(e.type,!1);case 11:return H(e.type.render,!1);case 22:return H(e.type._render,!1);case 1:return H(e.type,!0);default:return""}}function Q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case x:return"Fragment";case S:return"Portal";case _:return"Profiler";case C:return"StrictMode";case O:return"Suspense";case L:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case T:return(e.displayName||"Context")+".Consumer";case P:return(e._context.displayName||"Context")+".Provider";case N:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case R:return Q(e.type);case M:return Q(e._render);case z:t=e._payload,e=e._init;try{return Q(e(t))}catch(e){}}return null}function X(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function K(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Y(e){e._valueTracker||(e._valueTracker=function(e){var t=K(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,l=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,l.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function G(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=K(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function J(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Z(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=X(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=X(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ae(e,t.type,n):t.hasOwnProperty("defaultValue")&&ae(e,t.type,X(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ae(e,t,n){"number"===t&&J(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function le(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function oe(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+X(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function ie(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(o(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(o(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(o(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:X(n)}}function ce(e,t){var n=X(t.value),r=X(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function se(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?de(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var he,me,ve=(me=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((he=he||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=he.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return me(e,t)}))}:me);function ye(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ge={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function we(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ge.hasOwnProperty(e)&&ge[e]?(""+t).trim():t+"px"}function ke(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=we(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(ge).forEach((function(e){be.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ge[t]=ge[e]}))}));var Ee=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Se(e,t){if(t){if(Ee[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(o(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(o(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(o(62))}}function xe(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Ce(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var _e=null,Pe=null,Te=null;function Ne(e){if(e=Zr(e)){if("function"!=typeof _e)throw Error(o(280));var t=e.stateNode;t&&(t=ta(t),_e(e.stateNode,e.type,t))}}function Oe(e){Pe?Te?Te.push(e):Te=[e]:Pe=e}function Le(){if(Pe){var e=Pe,t=Te;if(Te=Pe=null,Ne(e),t)for(e=0;e<t.length;e++)Ne(t[e])}}function Re(e,t){return e(t)}function ze(e,t,n,r,a){return e(t,n,r,a)}function Me(){}var Ie=Re,Fe=!1,Ae=!1;function De(){null===Pe&&null===Te||(Me(),Le())}function Ue(e,t){var n=e.stateNode;if(null===n)return null;var r=ta(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(o(231,t,typeof n));return n}var je=!1;if(f)try{var $e={};Object.defineProperty($e,"passive",{get:function(){je=!0}}),window.addEventListener("test",$e,$e),window.removeEventListener("test",$e,$e)}catch(me){je=!1}function Be(e,t,n,r,a,l,o,i,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var Ve=!1,We=null,He=!1,qe=null,Qe={onError:function(e){Ve=!0,We=e}};function Xe(e,t,n,r,a,l,o,i,u){Ve=!1,We=null,Be.apply(Qe,arguments)}function Ke(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ye(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ge(e){if(Ke(e)!==e)throw Error(o(188))}function Je(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ke(e)))throw Error(o(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var l=a.alternate;if(null===l){if(null!==(r=a.return)){n=r;continue}break}if(a.child===l.child){for(l=a.child;l;){if(l===n)return Ge(a),e;if(l===r)return Ge(a),t;l=l.sibling}throw Error(o(188))}if(n.return!==r.return)n=a,r=l;else{for(var i=!1,u=a.child;u;){if(u===n){i=!0,n=a,r=l;break}if(u===r){i=!0,r=a,n=l;break}u=u.sibling}if(!i){for(u=l.child;u;){if(u===n){i=!0,n=l,r=a;break}if(u===r){i=!0,r=l,n=a;break}u=u.sibling}if(!i)throw Error(o(189))}}if(n.alternate!==r)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Ze(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var et,tt,nt,rt,at=!1,lt=[],ot=null,it=null,ut=null,ct=new Map,st=new Map,ft=[],dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function pt(e,t,n,r,a){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:a,targetContainers:[r]}}function ht(e,t){switch(e){case"focusin":case"focusout":ot=null;break;case"dragenter":case"dragleave":it=null;break;case"mouseover":case"mouseout":ut=null;break;case"pointerover":case"pointerout":ct.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":st.delete(t.pointerId)}}function mt(e,t,n,r,a,l){return null===e||e.nativeEvent!==l?(e=pt(t,n,r,a,l),null!==t&&null!==(t=Zr(t))&&tt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function vt(e){var t=Jr(e.target);if(null!==t){var n=Ke(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ye(n)))return e.blockedOn=t,void rt(e.lanePriority,(function(){l.unstable_runWithPriority(e.priority,(function(){nt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function yt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Jt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Zr(n))&&tt(t),e.blockedOn=n,!1;t.shift()}return!0}function gt(e,t,n){yt(e)&&n.delete(t)}function bt(){for(at=!1;0<lt.length;){var e=lt[0];if(null!==e.blockedOn){null!==(e=Zr(e.blockedOn))&&et(e);break}for(var t=e.targetContainers;0<t.length;){var n=Jt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&lt.shift()}null!==ot&&yt(ot)&&(ot=null),null!==it&&yt(it)&&(it=null),null!==ut&&yt(ut)&&(ut=null),ct.forEach(gt),st.forEach(gt)}function wt(e,t){e.blockedOn===t&&(e.blockedOn=null,at||(at=!0,l.unstable_scheduleCallback(l.unstable_NormalPriority,bt)))}function kt(e){function t(t){return wt(t,e)}if(0<lt.length){wt(lt[0],e);for(var n=1;n<lt.length;n++){var r=lt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==ot&&wt(ot,e),null!==it&&wt(it,e),null!==ut&&wt(ut,e),ct.forEach(t),st.forEach(t),n=0;n<ft.length;n++)(r=ft[n]).blockedOn===e&&(r.blockedOn=null);for(;0<ft.length&&null===(n=ft[0]).blockedOn;)vt(n),null===n.blockedOn&&ft.shift()}function Et(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var St={animationend:Et("Animation","AnimationEnd"),animationiteration:Et("Animation","AnimationIteration"),animationstart:Et("Animation","AnimationStart"),transitionend:Et("Transition","TransitionEnd")},xt={},Ct={};function _t(e){if(xt[e])return xt[e];if(!St[e])return e;var t,n=St[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ct)return xt[e]=n[t];return e}f&&(Ct=document.createElement("div").style,"AnimationEvent"in window||(delete St.animationend.animation,delete St.animationiteration.animation,delete St.animationstart.animation),"TransitionEvent"in window||delete St.transitionend.transition);var Pt=_t("animationend"),Tt=_t("animationiteration"),Nt=_t("animationstart"),Ot=_t("transitionend"),Lt=new Map,Rt=new Map,zt=["abort","abort",Pt,"animationEnd",Tt,"animationIteration",Nt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ot,"transitionEnd","waiting","waiting"];function Mt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],a=e[n+1];a="on"+(a[0].toUpperCase()+a.slice(1)),Rt.set(r,t),Lt.set(r,a),c(a,[r])}}(0,l.unstable_now)();var It=8;function Ft(e){if(0!=(1&e))return It=15,1;if(0!=(2&e))return It=14,2;if(0!=(4&e))return It=13,4;var t=24&e;return 0!==t?(It=12,t):0!=(32&e)?(It=11,32):0!=(t=192&e)?(It=10,t):0!=(256&e)?(It=9,256):0!=(t=3584&e)?(It=8,t):0!=(4096&e)?(It=7,4096):0!=(t=4186112&e)?(It=6,t):0!=(t=62914560&e)?(It=5,t):67108864&e?(It=4,67108864):0!=(134217728&e)?(It=3,134217728):0!=(t=805306368&e)?(It=2,t):0!=(1073741824&e)?(It=1,1073741824):(It=8,e)}function At(e,t){var n=e.pendingLanes;if(0===n)return It=0;var r=0,a=0,l=e.expiredLanes,o=e.suspendedLanes,i=e.pingedLanes;if(0!==l)r=l,a=It=15;else if(0!=(l=134217727&n)){var u=l&~o;0!==u?(r=Ft(u),a=It):0!=(i&=l)&&(r=Ft(i),a=It)}else 0!=(l=n&~o)?(r=Ft(l),a=It):0!==i&&(r=Ft(i),a=It);if(0===r)return 0;if(r=n&((0>(r=31-Vt(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&o)){if(Ft(t),a<=It)return t;It=a}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-Vt(t)),r|=e[n],t&=~a;return r}function Dt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Ut(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=jt(24&~t))?Ut(10,t):e;case 10:return 0===(e=jt(192&~t))?Ut(8,t):e;case 8:return 0===(e=jt(3584&~t))&&0===(e=jt(4186112&~t))&&(e=512),e;case 2:return 0===(t=jt(805306368&~t))&&(t=268435456),t}throw Error(o(358,e))}function jt(e){return e&-e}function $t(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Bt(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-Vt(t)]=n}var Vt=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Wt(e)/Ht|0)|0},Wt=Math.log,Ht=Math.LN2,qt=l.unstable_UserBlockingPriority,Qt=l.unstable_runWithPriority,Xt=!0;function Kt(e,t,n,r){Fe||Me();var a=Gt,l=Fe;Fe=!0;try{ze(a,e,t,n,r)}finally{(Fe=l)||De()}}function Yt(e,t,n,r){Qt(qt,Gt.bind(null,e,t,n,r))}function Gt(e,t,n,r){var a;if(Xt)if((a=0==(4&t))&&0<lt.length&&-1<dt.indexOf(e))e=pt(null,e,t,n,r),lt.push(e);else{var l=Jt(e,t,n,r);if(null===l)a&&ht(e,r);else{if(a){if(-1<dt.indexOf(e))return e=pt(l,e,t,n,r),void lt.push(e);if(function(e,t,n,r,a){switch(t){case"focusin":return ot=mt(ot,e,t,n,r,a),!0;case"dragenter":return it=mt(it,e,t,n,r,a),!0;case"mouseover":return ut=mt(ut,e,t,n,r,a),!0;case"pointerover":var l=a.pointerId;return ct.set(l,mt(ct.get(l)||null,e,t,n,r,a)),!0;case"gotpointercapture":return l=a.pointerId,st.set(l,mt(st.get(l)||null,e,t,n,r,a)),!0}return!1}(l,e,t,n,r))return;ht(e,r)}Lr(e,t,r,null,n)}}}function Jt(e,t,n,r){var a=Ce(r);if(null!==(a=Jr(a))){var l=Ke(a);if(null===l)a=null;else{var o=l.tag;if(13===o){if(null!==(a=Ye(l)))return a;a=null}else if(3===o){if(l.stateNode.hydrate)return 3===l.tag?l.stateNode.containerInfo:null;a=null}else l!==a&&(a=null)}}return Lr(e,t,r,a,n),null}var Zt=null,en=null,tn=null;function nn(){if(tn)return tn;var e,t,n=en,r=n.length,a="value"in Zt?Zt.value:Zt.textContent,l=a.length;for(e=0;e<r&&n[e]===a[e];e++);var o=r-e;for(t=1;t<=o&&n[r-t]===a[l-t];t++);return tn=a.slice(e,1<t?1-t:void 0)}function rn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function an(){return!0}function ln(){return!1}function on(e){function t(t,n,r,a,l){for(var o in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=l,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(a):a[o]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?an:ln,this.isPropagationStopped=ln,this}return a(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=an)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=an)},persist:function(){},isPersistent:an}),t}var un,cn,sn,fn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dn=on(fn),pn=a({},fn,{view:0,detail:0}),hn=on(pn),mn=a({},pn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:_n,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==sn&&(sn&&"mousemove"===e.type?(un=e.screenX-sn.screenX,cn=e.screenY-sn.screenY):cn=un=0,sn=e),un)},movementY:function(e){return"movementY"in e?e.movementY:cn}}),vn=on(mn),yn=on(a({},mn,{dataTransfer:0})),gn=on(a({},pn,{relatedTarget:0})),bn=on(a({},fn,{animationName:0,elapsedTime:0,pseudoElement:0})),wn=on(a({},fn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),kn=on(a({},fn,{data:0})),En={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},xn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Cn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=xn[e])&&!!t[e]}function _n(){return Cn}var Pn=on(a({},pn,{key:function(e){if(e.key){var t=En[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=rn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Sn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:_n,charCode:function(e){return"keypress"===e.type?rn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?rn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),Tn=on(a({},mn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Nn=on(a({},pn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:_n})),On=on(a({},fn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Ln=on(a({},mn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),Rn=[9,13,27,32],zn=f&&"CompositionEvent"in window,Mn=null;f&&"documentMode"in document&&(Mn=document.documentMode);var In=f&&"TextEvent"in window&&!Mn,Fn=f&&(!zn||Mn&&8<Mn&&11>=Mn),An=String.fromCharCode(32),Dn=!1;function Un(e,t){switch(e){case"keyup":return-1!==Rn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function jn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var $n=!1,Bn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Bn[e.type]:"textarea"===t}function Wn(e,t,n,r){Oe(r),0<(t=zr(t,"onChange")).length&&(n=new dn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Hn=null,qn=null;function Qn(e){Cr(e,0)}function Xn(e){if(G(ea(e)))return e}function Kn(e,t){if("change"===e)return t}var Yn=!1;if(f){var Gn;if(f){var Jn="oninput"in document;if(!Jn){var Zn=document.createElement("div");Zn.setAttribute("oninput","return;"),Jn="function"==typeof Zn.oninput}Gn=Jn}else Gn=!1;Yn=Gn&&(!document.documentMode||9<document.documentMode)}function er(){Hn&&(Hn.detachEvent("onpropertychange",tr),qn=Hn=null)}function tr(e){if("value"===e.propertyName&&Xn(qn)){var t=[];if(Wn(t,qn,e,Ce(e)),e=Qn,Fe)e(t);else{Fe=!0;try{Re(e,t)}finally{Fe=!1,De()}}}}function nr(e,t,n){"focusin"===e?(er(),qn=n,(Hn=t).attachEvent("onpropertychange",tr)):"focusout"===e&&er()}function rr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Xn(qn)}function ar(e,t){if("click"===e)return Xn(t)}function lr(e,t){if("input"===e||"change"===e)return Xn(t)}var or="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},ir=Object.prototype.hasOwnProperty;function ur(e,t){if(or(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!ir.call(t,n[r])||!or(e[n[r]],t[n[r]]))return!1;return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function sr(e,t){var n,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function fr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?fr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function dr(){for(var e=window,t=J();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=J((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var hr=f&&"documentMode"in document&&11>=document.documentMode,mr=null,vr=null,yr=null,gr=!1;function br(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;gr||null==mr||mr!==J(r)||(r="selectionStart"in(r=mr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},yr&&ur(yr,r)||(yr=r,0<(r=zr(vr,"onSelect")).length&&(t=new dn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=mr)))}Mt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Mt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Mt(zt,2);for(var wr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),kr=0;kr<wr.length;kr++)Rt.set(wr[kr],0);s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Er="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Sr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Er));function xr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,l,i,u,c){if(Xe.apply(this,arguments),Ve){if(!Ve)throw Error(o(198));var s=We;Ve=!1,We=null,He||(He=!0,qe=s)}}(r,t,void 0,e),e.currentTarget=null}function Cr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var l=void 0;if(t)for(var o=r.length-1;0<=o;o--){var i=r[o],u=i.instance,c=i.currentTarget;if(i=i.listener,u!==l&&a.isPropagationStopped())break e;xr(a,i,c),l=u}else for(o=0;o<r.length;o++){if(u=(i=r[o]).instance,c=i.currentTarget,i=i.listener,u!==l&&a.isPropagationStopped())break e;xr(a,i,c),l=u}}}if(He)throw e=qe,He=!1,qe=null,e}function _r(e,t){var n=na(t),r=e+"__bubble";n.has(r)||(Or(t,e,2,!1),n.add(r))}var Pr="_reactListening"+Math.random().toString(36).slice(2);function Tr(e){e[Pr]||(e[Pr]=!0,i.forEach((function(t){Sr.has(t)||Nr(t,!1,e,null),Nr(t,!0,e,null)})))}function Nr(e,t,n,r){var a=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,l=n;if("selectionchange"===e&&9!==n.nodeType&&(l=n.ownerDocument),null!==r&&!t&&Sr.has(e)){if("scroll"!==e)return;a|=2,l=r}var o=na(l),i=e+"__"+(t?"capture":"bubble");o.has(i)||(t&&(a|=4),Or(l,e,a,t),o.add(i))}function Or(e,t,n,r){var a=Rt.get(t);switch(void 0===a?2:a){case 0:a=Kt;break;case 1:a=Yt;break;default:a=Gt}n=a.bind(null,t,n,e),a=void 0,!je||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Lr(e,t,n,r,a){var l=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var o=r.tag;if(3===o||4===o){var i=r.stateNode.containerInfo;if(i===a||8===i.nodeType&&i.parentNode===a)break;if(4===o)for(o=r.return;null!==o;){var u=o.tag;if((3===u||4===u)&&((u=o.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;o=o.return}for(;null!==i;){if(null===(o=Jr(i)))return;if(5===(u=o.tag)||6===u){r=l=o;continue e}i=i.parentNode}}r=r.return}!function(e,t,n){if(Ae)return e();Ae=!0;try{Ie(e,t,n)}finally{Ae=!1,De()}}((function(){var r=l,a=Ce(n),o=[];e:{var i=Lt.get(e);if(void 0!==i){var u=dn,c=e;switch(e){case"keypress":if(0===rn(n))break e;case"keydown":case"keyup":u=Pn;break;case"focusin":c="focus",u=gn;break;case"focusout":c="blur",u=gn;break;case"beforeblur":case"afterblur":u=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=vn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=yn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Nn;break;case Pt:case Tt:case Nt:u=bn;break;case Ot:u=On;break;case"scroll":u=hn;break;case"wheel":u=Ln;break;case"copy":case"cut":case"paste":u=wn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Tn}var s=0!=(4&t),f=!s&&"scroll"===e,d=s?null!==i?i+"Capture":null:i;s=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&null!=(m=Ue(h,d))&&s.push(Rr(h,m,p))),f)break;h=h.return}0<s.length&&(i=new u(i,c,null,n,a),o.push({event:i,listeners:s}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(c=n.relatedTarget||n.fromElement)||!Jr(c)&&!c[Yr])&&(u||i)&&(i=a.window===a?a:(i=a.ownerDocument)?i.defaultView||i.parentWindow:window,u?(u=r,null!==(c=(c=n.relatedTarget||n.toElement)?Jr(c):null)&&(c!==(f=Ke(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=r),u!==c)){if(s=vn,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(s=Tn,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?i:ea(u),p=null==c?i:ea(c),(i=new s(m,h+"leave",u,n,a)).target=f,i.relatedTarget=p,m=null,Jr(a)===r&&((s=new s(d,h+"enter",c,n,a)).target=p,s.relatedTarget=f,m=s),f=m,u&&c)e:{for(d=c,h=0,p=s=u;p;p=Mr(p))h++;for(p=0,m=d;m;m=Mr(m))p++;for(;0<h-p;)s=Mr(s),h--;for(;0<p-h;)d=Mr(d),p--;for(;h--;){if(s===d||null!==d&&s===d.alternate)break e;s=Mr(s),d=Mr(d)}s=null}else s=null;null!==u&&Ir(o,i,u,s,!1),null!==c&&null!==f&&Ir(o,f,c,s,!0)}if("select"===(u=(i=r?ea(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===u&&"file"===i.type)var v=Kn;else if(Vn(i))if(Yn)v=lr;else{v=rr;var y=nr}else(u=i.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(v=ar);switch(v&&(v=v(e,r))?Wn(o,v,n,a):(y&&y(e,i,r),"focusout"===e&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&ae(i,"number",i.value)),y=r?ea(r):window,e){case"focusin":(Vn(y)||"true"===y.contentEditable)&&(mr=y,vr=r,yr=null);break;case"focusout":yr=vr=mr=null;break;case"mousedown":gr=!0;break;case"contextmenu":case"mouseup":case"dragend":gr=!1,br(o,n,a);break;case"selectionchange":if(hr)break;case"keydown":case"keyup":br(o,n,a)}var g;if(zn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else $n?Un(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(Fn&&"ko"!==n.locale&&($n||"onCompositionStart"!==b?"onCompositionEnd"===b&&$n&&(g=nn()):(en="value"in(Zt=a)?Zt.value:Zt.textContent,$n=!0)),0<(y=zr(r,b)).length&&(b=new kn(b,e,null,n,a),o.push({event:b,listeners:y}),(g||null!==(g=jn(n)))&&(b.data=g))),(g=In?function(e,t){switch(e){case"compositionend":return jn(t);case"keypress":return 32!==t.which?null:(Dn=!0,An);case"textInput":return(e=t.data)===An&&Dn?null:e;default:return null}}(e,n):function(e,t){if($n)return"compositionend"===e||!zn&&Un(e,t)?(e=nn(),tn=en=Zt=null,$n=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Fn&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&0<(r=zr(r,"onBeforeInput")).length&&(a=new kn("onBeforeInput","beforeinput",null,n,a),o.push({event:a,listeners:r}),a.data=g)}Cr(o,t)}))}function Rr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function zr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,l=a.stateNode;5===a.tag&&null!==l&&(a=l,null!=(l=Ue(e,n))&&r.unshift(Rr(e,l,a)),null!=(l=Ue(e,t))&&r.push(Rr(e,l,a))),e=e.return}return r}function Mr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Ir(e,t,n,r,a){for(var l=t._reactName,o=[];null!==n&&n!==r;){var i=n,u=i.alternate,c=i.stateNode;if(null!==u&&u===r)break;5===i.tag&&null!==c&&(i=c,a?null!=(u=Ue(n,l))&&o.unshift(Rr(n,u,i)):a||null!=(u=Ue(n,l))&&o.push(Rr(n,u,i))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}function Fr(){}var Ar=null,Dr=null;function Ur(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function jr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var $r="function"==typeof setTimeout?setTimeout:void 0,Br="function"==typeof clearTimeout?clearTimeout:void 0;function Vr(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Wr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Hr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var qr=0,Qr=Math.random().toString(36).slice(2),Xr="__reactFiber$"+Qr,Kr="__reactProps$"+Qr,Yr="__reactContainer$"+Qr,Gr="__reactEvents$"+Qr;function Jr(e){var t=e[Xr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Yr]||n[Xr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Hr(e);null!==e;){if(n=e[Xr])return n;e=Hr(e)}return t}n=(e=n).parentNode}return null}function Zr(e){return!(e=e[Xr]||e[Yr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ea(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function ta(e){return e[Kr]||null}function na(e){var t=e[Gr];return void 0===t&&(t=e[Gr]=new Set),t}var ra=[],aa=-1;function la(e){return{current:e}}function oa(e){0>aa||(e.current=ra[aa],ra[aa]=null,aa--)}function ia(e,t){aa++,ra[aa]=e.current,e.current=t}var ua={},ca=la(ua),sa=la(!1),fa=ua;function da(e,t){var n=e.type.contextTypes;if(!n)return ua;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,l={};for(a in n)l[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=l),l}function pa(e){return null!=e.childContextTypes}function ha(){oa(sa),oa(ca)}function ma(e,t,n){if(ca.current!==ua)throw Error(o(168));ia(ca,t),ia(sa,n)}function va(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var l in r=r.getChildContext())if(!(l in e))throw Error(o(108,Q(t)||"Unknown",l));return a({},n,r)}function ya(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ua,fa=ca.current,ia(ca,e),ia(sa,sa.current),!0}function ga(e,t,n){var r=e.stateNode;if(!r)throw Error(o(169));n?(e=va(e,t,fa),r.__reactInternalMemoizedMergedChildContext=e,oa(sa),oa(ca),ia(ca,e)):oa(sa),ia(sa,n)}var ba=null,wa=null,ka=l.unstable_runWithPriority,Ea=l.unstable_scheduleCallback,Sa=l.unstable_cancelCallback,xa=l.unstable_shouldYield,Ca=l.unstable_requestPaint,_a=l.unstable_now,Pa=l.unstable_getCurrentPriorityLevel,Ta=l.unstable_ImmediatePriority,Na=l.unstable_UserBlockingPriority,Oa=l.unstable_NormalPriority,La=l.unstable_LowPriority,Ra=l.unstable_IdlePriority,za={},Ma=void 0!==Ca?Ca:function(){},Ia=null,Fa=null,Aa=!1,Da=_a(),Ua=1e4>Da?_a:function(){return _a()-Da};function ja(){switch(Pa()){case Ta:return 99;case Na:return 98;case Oa:return 97;case La:return 96;case Ra:return 95;default:throw Error(o(332))}}function $a(e){switch(e){case 99:return Ta;case 98:return Na;case 97:return Oa;case 96:return La;case 95:return Ra;default:throw Error(o(332))}}function Ba(e,t){return e=$a(e),ka(e,t)}function Va(e,t,n){return e=$a(e),Ea(e,t,n)}function Wa(){if(null!==Fa){var e=Fa;Fa=null,Sa(e)}Ha()}function Ha(){if(!Aa&&null!==Ia){Aa=!0;var e=0;try{var t=Ia;Ba(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Ia=null}catch(t){throw null!==Ia&&(Ia=Ia.slice(e+1)),Ea(Ta,Wa),t}finally{Aa=!1}}}var qa=k.ReactCurrentBatchConfig;function Qa(e,t){if(e&&e.defaultProps){for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Xa=la(null),Ka=null,Ya=null,Ga=null;function Ja(){Ga=Ya=Ka=null}function Za(e){var t=Xa.current;oa(Xa),e.type._context._currentValue=t}function el(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function tl(e,t){Ka=e,Ga=Ya=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(zo=!0),e.firstContext=null)}function nl(e,t){if(Ga!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Ga=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Ya){if(null===Ka)throw Error(o(308));Ya=t,Ka.dependencies={lanes:0,firstContext:t,responders:null}}else Ya=Ya.next=t;return e._currentValue}var rl=!1;function al(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ll(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function ol(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function il(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function ul(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,l=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===l?a=l=o:l=l.next=o,n=n.next}while(null!==n);null===l?a=l=t:l=l.next=t}else a=l=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:l,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function cl(e,t,n,r){var l=e.updateQueue;rl=!1;var o=l.firstBaseUpdate,i=l.lastBaseUpdate,u=l.shared.pending;if(null!==u){l.shared.pending=null;var c=u,s=c.next;c.next=null,null===i?o=s:i.next=s,i=c;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==i&&(null===d?f.firstBaseUpdate=s:d.next=s,f.lastBaseUpdate=c)}}if(null!==o){for(d=l.baseState,i=0,f=s=c=null;;){u=o.lane;var p=o.eventTime;if((r&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var h=e,m=o;switch(u=t,p=n,m.tag){case 1:if("function"==typeof(h=m.payload)){d=h.call(p,d,u);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null==(u="function"==typeof(h=m.payload)?h.call(p,d,u):h))break e;d=a({},d,u);break e;case 2:rl=!0}}null!==o.callback&&(e.flags|=32,null===(u=l.effects)?l.effects=[o]:u.push(o))}else p={eventTime:p,lane:u,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===f?(s=f=p,c=d):f=f.next=p,i|=u;if(null===(o=o.next)){if(null===(u=l.shared.pending))break;o=u.next,u.next=null,l.lastBaseUpdate=u,l.shared.pending=null}}null===f&&(c=d),l.baseState=c,l.firstBaseUpdate=s,l.lastBaseUpdate=f,Ii|=i,e.lanes=i,e.memoizedState=d}}function sl(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(o(191,a));a.call(r)}}}var fl=(new r.Component).refs;function dl(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:a({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var pl={isMounted:function(e){return!!(e=e._reactInternals)&&Ke(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=ou(),a=iu(e),l=ol(r,a);l.payload=t,null!=n&&(l.callback=n),il(e,l),uu(e,a,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=ou(),a=iu(e),l=ol(r,a);l.tag=1,l.payload=t,null!=n&&(l.callback=n),il(e,l),uu(e,a,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ou(),r=iu(e),a=ol(n,r);a.tag=2,null!=t&&(a.callback=t),il(e,a),uu(e,r,n)}};function hl(e,t,n,r,a,l,o){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,l,o):!(t.prototype&&t.prototype.isPureReactComponent&&ur(n,r)&&ur(a,l))}function ml(e,t,n){var r=!1,a=ua,l=t.contextType;return"object"==typeof l&&null!==l?l=nl(l):(a=pa(t)?fa:ca.current,l=(r=null!=(r=t.contextTypes))?da(e,a):ua),t=new t(n,l),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=pl,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=l),t}function vl(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&pl.enqueueReplaceState(t,t.state,null)}function yl(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=fl,al(e);var l=t.contextType;"object"==typeof l&&null!==l?a.context=nl(l):(l=pa(t)?fa:ca.current,a.context=da(e,l)),cl(e,n,a,r),a.state=e.memoizedState,"function"==typeof(l=t.getDerivedStateFromProps)&&(dl(e,t,l,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&pl.enqueueReplaceState(a,a.state,null),cl(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4)}var gl=Array.isArray;function bl(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(o(309));var r=n.stateNode}if(!r)throw Error(o(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:((t=function(e){var t=r.refs;t===fl&&(t=r.refs={}),null===e?delete t[a]:t[a]=e})._stringRef=a,t)}if("string"!=typeof e)throw Error(o(284));if(!n._owner)throw Error(o(290,e))}return e}function wl(e,t){if("textarea"!==e.type)throw Error(o(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function kl(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=ju(e,t)).index=0,e.sibling=null,e}function l(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function i(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Wu(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props)).ref=bl(e,t,n),r.return=e,r):((r=$u(n.type,n.key,n.props,null,e.mode,r)).ref=bl(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Hu(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function f(e,t,n,r,l){return null===t||7!==t.tag?((t=Bu(n,e.mode,r,l)).return=e,t):((t=a(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Wu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case E:return(n=$u(t.type,t.key,t.props,null,e.mode,n)).ref=bl(e,null,t),n.return=e,n;case S:return(t=Hu(t,e.mode,n)).return=e,t}if(gl(t)||B(t))return(t=Bu(t,e.mode,n,null)).return=e,t;wl(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==a?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case E:return n.key===a?n.type===x?f(e,t,n.props.children,r,a):c(e,t,n,r):null;case S:return n.key===a?s(e,t,n,r):null}if(gl(n)||B(n))return null!==a?null:f(e,t,n,r,null);wl(e,n)}return null}function h(e,t,n,r,a){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case E:return e=e.get(null===r.key?n:r.key)||null,r.type===x?f(t,e,r.props.children,a,r.key):c(t,e,r,a);case S:return s(t,e=e.get(null===r.key?n:r.key)||null,r,a)}if(gl(r)||B(r))return f(t,e=e.get(n)||null,r,a,null);wl(t,r)}return null}function m(a,o,i,u){for(var c=null,s=null,f=o,m=o=0,v=null;null!==f&&m<i.length;m++){f.index>m?(v=f,f=null):v=f.sibling;var y=p(a,f,i[m],u);if(null===y){null===f&&(f=v);break}e&&f&&null===y.alternate&&t(a,f),o=l(y,o,m),null===s?c=y:s.sibling=y,s=y,f=v}if(m===i.length)return n(a,f),c;if(null===f){for(;m<i.length;m++)null!==(f=d(a,i[m],u))&&(o=l(f,o,m),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(a,f);m<i.length;m++)null!==(v=h(f,a,m,i[m],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?m:v.key),o=l(v,o,m),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach((function(e){return t(a,e)})),c}function v(a,i,u,c){var s=B(u);if("function"!=typeof s)throw Error(o(150));if(null==(u=s.call(u)))throw Error(o(151));for(var f=s=null,m=i,v=i=0,y=null,g=u.next();null!==m&&!g.done;v++,g=u.next()){m.index>v?(y=m,m=null):y=m.sibling;var b=p(a,m,g.value,c);if(null===b){null===m&&(m=y);break}e&&m&&null===b.alternate&&t(a,m),i=l(b,i,v),null===f?s=b:f.sibling=b,f=b,m=y}if(g.done)return n(a,m),s;if(null===m){for(;!g.done;v++,g=u.next())null!==(g=d(a,g.value,c))&&(i=l(g,i,v),null===f?s=g:f.sibling=g,f=g);return s}for(m=r(a,m);!g.done;v++,g=u.next())null!==(g=h(m,a,v,g.value,c))&&(e&&null!==g.alternate&&m.delete(null===g.key?v:g.key),i=l(g,i,v),null===f?s=g:f.sibling=g,f=g);return e&&m.forEach((function(e){return t(a,e)})),s}return function(e,r,l,u){var c="object"==typeof l&&null!==l&&l.type===x&&null===l.key;c&&(l=l.props.children);var s="object"==typeof l&&null!==l;if(s)switch(l.$$typeof){case E:e:{for(s=l.key,c=r;null!==c;){if(c.key===s){switch(c.tag){case 7:if(l.type===x){n(e,c.sibling),(r=a(c,l.props.children)).return=e,e=r;break e}break;default:if(c.elementType===l.type){n(e,c.sibling),(r=a(c,l.props)).ref=bl(e,c,l),r.return=e,e=r;break e}}n(e,c);break}t(e,c),c=c.sibling}l.type===x?((r=Bu(l.props.children,e.mode,u,l.key)).return=e,e=r):((u=$u(l.type,l.key,l.props,null,e.mode,u)).ref=bl(e,r,l),u.return=e,e=u)}return i(e);case S:e:{for(c=l.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===l.containerInfo&&r.stateNode.implementation===l.implementation){n(e,r.sibling),(r=a(r,l.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Hu(l,e.mode,u)).return=e,e=r}return i(e)}if("string"==typeof l||"number"==typeof l)return l=""+l,null!==r&&6===r.tag?(n(e,r.sibling),(r=a(r,l)).return=e,e=r):(n(e,r),(r=Wu(l,e.mode,u)).return=e,e=r),i(e);if(gl(l))return m(e,r,l,u);if(B(l))return v(e,r,l,u);if(s&&wl(e,l),void 0===l&&!c)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(o(152,Q(e.type)||"Component"))}return n(e,r)}}var El=kl(!0),Sl=kl(!1),xl={},Cl=la(xl),_l=la(xl),Pl=la(xl);function Tl(e){if(e===xl)throw Error(o(174));return e}function Nl(e,t){switch(ia(Pl,t),ia(_l,e),ia(Cl,xl),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}oa(Cl),ia(Cl,t)}function Ol(){oa(Cl),oa(_l),oa(Pl)}function Ll(e){Tl(Pl.current);var t=Tl(Cl.current),n=pe(t,e.type);t!==n&&(ia(_l,e),ia(Cl,n))}function Rl(e){_l.current===e&&(oa(Cl),oa(_l))}var zl=la(0);function Ml(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Il=null,Fl=null,Al=!1;function Dl(e,t){var n=Du(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Ul(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function jl(e){if(Al){var t=Fl;if(t){var n=t;if(!Ul(e,t)){if(!(t=Wr(n.nextSibling))||!Ul(e,t))return e.flags=-1025&e.flags|2,Al=!1,void(Il=e);Dl(Il,n)}Il=e,Fl=Wr(t.firstChild)}else e.flags=-1025&e.flags|2,Al=!1,Il=e}}function $l(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Il=e}function Bl(e){if(e!==Il)return!1;if(!Al)return $l(e),Al=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!jr(t,e.memoizedProps))for(t=Fl;t;)Dl(e,t),t=Wr(t.nextSibling);if($l(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Fl=Wr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Fl=null}}else Fl=Il?Wr(e.stateNode.nextSibling):null;return!0}function Vl(){Fl=Il=null,Al=!1}var Wl=[];function Hl(){for(var e=0;e<Wl.length;e++)Wl[e]._workInProgressVersionPrimary=null;Wl.length=0}var ql=k.ReactCurrentDispatcher,Ql=k.ReactCurrentBatchConfig,Xl=0,Kl=null,Yl=null,Gl=null,Jl=!1,Zl=!1;function eo(){throw Error(o(321))}function to(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!or(e[n],t[n]))return!1;return!0}function no(e,t,n,r,a,l){if(Xl=l,Kl=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ql.current=null===e||null===e.memoizedState?No:Oo,e=n(r,a),Zl){l=0;do{if(Zl=!1,!(25>l))throw Error(o(301));l+=1,Gl=Yl=null,t.updateQueue=null,ql.current=Lo,e=n(r,a)}while(Zl)}if(ql.current=To,t=null!==Yl&&null!==Yl.next,Xl=0,Gl=Yl=Kl=null,Jl=!1,t)throw Error(o(300));return e}function ro(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Gl?Kl.memoizedState=Gl=e:Gl=Gl.next=e,Gl}function ao(){if(null===Yl){var e=Kl.alternate;e=null!==e?e.memoizedState:null}else e=Yl.next;var t=null===Gl?Kl.memoizedState:Gl.next;if(null!==t)Gl=t,Yl=e;else{if(null===e)throw Error(o(310));e={memoizedState:(Yl=e).memoizedState,baseState:Yl.baseState,baseQueue:Yl.baseQueue,queue:Yl.queue,next:null},null===Gl?Kl.memoizedState=Gl=e:Gl=Gl.next=e}return Gl}function lo(e,t){return"function"==typeof t?t(e):t}function oo(e){var t=ao(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=Yl,a=r.baseQueue,l=n.pending;if(null!==l){if(null!==a){var i=a.next;a.next=l.next,l.next=i}r.baseQueue=a=l,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var u=i=l=null,c=a;do{var s=c.lane;if((Xl&s)===s)null!==u&&(u=u.next={lane:0,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),r=c.eagerReducer===e?c.eagerState:e(r,c.action);else{var f={lane:s,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(i=u=f,l=r):u=u.next=f,Kl.lanes|=s,Ii|=s}c=c.next}while(null!==c&&c!==a);null===u?l=r:u.next=i,or(r,t.memoizedState)||(zo=!0),t.memoizedState=r,t.baseState=l,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function io(e){var t=ao(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,l=t.memoizedState;if(null!==a){n.pending=null;var i=a=a.next;do{l=e(l,i.action),i=i.next}while(i!==a);or(l,t.memoizedState)||(zo=!0),t.memoizedState=l,null===t.baseQueue&&(t.baseState=l),n.lastRenderedState=l}return[l,r]}function uo(e,t,n){var r=t._getVersion;r=r(t._source);var a=t._workInProgressVersionPrimary;if(null!==a?e=a===r:(e=e.mutableReadLanes,(e=(Xl&e)===e)&&(t._workInProgressVersionPrimary=r,Wl.push(t))),e)return n(t._source);throw Wl.push(t),Error(o(350))}function co(e,t,n,r){var a=Pi;if(null===a)throw Error(o(349));var l=t._getVersion,i=l(t._source),u=ql.current,c=u.useState((function(){return uo(a,t,n)})),s=c[1],f=c[0];c=Gl;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,m=d.source;d=d.subscribe;var v=Kl;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=s;var e=l(t._source);if(!or(i,e)){e=n(t._source),or(f,e)||(s(e),e=iu(v),a.mutableReadLanes|=e&a.pendingLanes),e=a.mutableReadLanes,a.entangledLanes|=e;for(var r=a.entanglements,o=e;0<o;){var u=31-Vt(o),c=1<<u;r[u]|=e,o&=~c}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=iu(v);a.mutableReadLanes|=r&a.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),or(h,n)&&or(m,t)&&or(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:lo,lastRenderedState:f}).dispatch=s=Po.bind(null,Kl,e),c.queue=e,c.baseQueue=null,f=uo(a,t,n),c.memoizedState=c.baseState=f),f}function so(e,t,n){return co(ao(),e,t,n)}function fo(e){var t=ro();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:lo,lastRenderedState:e}).dispatch=Po.bind(null,Kl,e),[t.memoizedState,e]}function po(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Kl.updateQueue)?(t={lastEffect:null},Kl.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function ho(e){return e={current:e},ro().memoizedState=e}function mo(){return ao().memoizedState}function vo(e,t,n,r){var a=ro();Kl.flags|=e,a.memoizedState=po(1|t,n,void 0,void 0===r?null:r)}function yo(e,t,n,r){var a=ao();r=void 0===r?null:r;var l=void 0;if(null!==Yl){var o=Yl.memoizedState;if(l=o.destroy,null!==r&&to(r,o.deps))return void po(t,n,l,r)}Kl.flags|=e,a.memoizedState=po(1|t,n,l,r)}function go(e,t){return vo(516,4,e,t)}function bo(e,t){return yo(516,4,e,t)}function wo(e,t){return yo(4,2,e,t)}function ko(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Eo(e,t,n){return n=null!=n?n.concat([e]):null,yo(4,2,ko.bind(null,t,e),n)}function So(){}function xo(e,t){var n=ao();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&to(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Co(e,t){var n=ao();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&to(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function _o(e,t){var n=ja();Ba(98>n?98:n,(function(){e(!0)})),Ba(97<n?97:n,(function(){var n=Ql.transition;Ql.transition=1;try{e(!1),t()}finally{Ql.transition=n}}))}function Po(e,t,n){var r=ou(),a=iu(e),l={lane:a,action:n,eagerReducer:null,eagerState:null,next:null},o=t.pending;if(null===o?l.next=l:(l.next=o.next,o.next=l),t.pending=l,o=e.alternate,e===Kl||null!==o&&o===Kl)Zl=Jl=!0;else{if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=t.lastRenderedReducer))try{var i=t.lastRenderedState,u=o(i,n);if(l.eagerReducer=o,l.eagerState=u,or(u,i))return}catch(e){}uu(e,a,r)}}var To={readContext:nl,useCallback:eo,useContext:eo,useEffect:eo,useImperativeHandle:eo,useLayoutEffect:eo,useMemo:eo,useReducer:eo,useRef:eo,useState:eo,useDebugValue:eo,useDeferredValue:eo,useTransition:eo,useMutableSource:eo,useOpaqueIdentifier:eo,unstable_isNewReconciler:!1},No={readContext:nl,useCallback:function(e,t){return ro().memoizedState=[e,void 0===t?null:t],e},useContext:nl,useEffect:go,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,vo(4,2,ko.bind(null,t,e),n)},useLayoutEffect:function(e,t){return vo(4,2,e,t)},useMemo:function(e,t){var n=ro();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=ro();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Po.bind(null,Kl,e),[r.memoizedState,e]},useRef:ho,useState:fo,useDebugValue:So,useDeferredValue:function(e){var t=fo(e),n=t[0],r=t[1];return go((function(){var t=Ql.transition;Ql.transition=1;try{r(e)}finally{Ql.transition=t}}),[e]),n},useTransition:function(){var e=fo(!1),t=e[0];return ho(e=_o.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=ro();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},co(r,e,t,n)},useOpaqueIdentifier:function(){if(Al){var e=!1,t=function(e){return{$$typeof:I,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(qr++).toString(36))),Error(o(355))})),n=fo(t)[1];return 0==(2&Kl.mode)&&(Kl.flags|=516,po(5,(function(){n("r:"+(qr++).toString(36))}),void 0,null)),t}return fo(t="r:"+(qr++).toString(36)),t},unstable_isNewReconciler:!1},Oo={readContext:nl,useCallback:xo,useContext:nl,useEffect:bo,useImperativeHandle:Eo,useLayoutEffect:wo,useMemo:Co,useReducer:oo,useRef:mo,useState:function(){return oo(lo)},useDebugValue:So,useDeferredValue:function(e){var t=oo(lo),n=t[0],r=t[1];return bo((function(){var t=Ql.transition;Ql.transition=1;try{r(e)}finally{Ql.transition=t}}),[e]),n},useTransition:function(){var e=oo(lo)[0];return[mo().current,e]},useMutableSource:so,useOpaqueIdentifier:function(){return oo(lo)[0]},unstable_isNewReconciler:!1},Lo={readContext:nl,useCallback:xo,useContext:nl,useEffect:bo,useImperativeHandle:Eo,useLayoutEffect:wo,useMemo:Co,useReducer:io,useRef:mo,useState:function(){return io(lo)},useDebugValue:So,useDeferredValue:function(e){var t=io(lo),n=t[0],r=t[1];return bo((function(){var t=Ql.transition;Ql.transition=1;try{r(e)}finally{Ql.transition=t}}),[e]),n},useTransition:function(){var e=io(lo)[0];return[mo().current,e]},useMutableSource:so,useOpaqueIdentifier:function(){return io(lo)[0]},unstable_isNewReconciler:!1},Ro=k.ReactCurrentOwner,zo=!1;function Mo(e,t,n,r){t.child=null===e?Sl(t,null,n,r):El(t,e.child,n,r)}function Io(e,t,n,r,a){n=n.render;var l=t.ref;return tl(t,a),r=no(e,t,n,r,l,a),null===e||zo?(t.flags|=1,Mo(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Zo(e,t,a))}function Fo(e,t,n,r,a,l){if(null===e){var o=n.type;return"function"!=typeof o||Uu(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=$u(n.type,null,r,t,t.mode,l)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,Ao(e,t,o,r,a,l))}return o=e.child,0==(a&l)&&(a=o.memoizedProps,(n=null!==(n=n.compare)?n:ur)(a,r)&&e.ref===t.ref)?Zo(e,t,l):(t.flags|=1,(e=ju(o,r)).ref=t.ref,e.return=t,t.child=e)}function Ao(e,t,n,r,a,l){if(null!==e&&ur(e.memoizedProps,r)&&e.ref===t.ref){if(zo=!1,0==(l&a))return t.lanes=e.lanes,Zo(e,t,l);0!=(16384&e.flags)&&(zo=!0)}return jo(e,t,n,r,l)}function Do(e,t,n){var r=t.pendingProps,a=r.children,l=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},vu(0,n);else{if(0==(1073741824&n))return e=null!==l?l.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},vu(0,e),null;t.memoizedState={baseLanes:0},vu(0,null!==l?l.baseLanes:n)}else null!==l?(r=l.baseLanes|n,t.memoizedState=null):r=n,vu(0,r);return Mo(e,t,a,n),t.child}function Uo(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function jo(e,t,n,r,a){var l=pa(n)?fa:ca.current;return l=da(t,l),tl(t,a),n=no(e,t,n,r,l,a),null===e||zo?(t.flags|=1,Mo(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Zo(e,t,a))}function $o(e,t,n,r,a){if(pa(n)){var l=!0;ya(t)}else l=!1;if(tl(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),ml(t,n,r),yl(t,n,r,a),r=!0;else if(null===e){var o=t.stateNode,i=t.memoizedProps;o.props=i;var u=o.context,c=n.contextType;c="object"==typeof c&&null!==c?nl(c):da(t,c=pa(n)?fa:ca.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof o.getSnapshotBeforeUpdate;f||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(i!==r||u!==c)&&vl(t,o,r,c),rl=!1;var d=t.memoizedState;o.state=d,cl(t,r,o,a),u=t.memoizedState,i!==r||d!==u||sa.current||rl?("function"==typeof s&&(dl(t,n,s,r),u=t.memoizedState),(i=rl||hl(t,n,i,r,d,u,c))?(f||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||("function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"==typeof o.componentDidMount&&(t.flags|=4)):("function"==typeof o.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),o.props=r,o.state=u,o.context=c,r=i):("function"==typeof o.componentDidMount&&(t.flags|=4),r=!1)}else{o=t.stateNode,ll(e,t),i=t.memoizedProps,c=t.type===t.elementType?i:Qa(t.type,i),o.props=c,f=t.pendingProps,d=o.context,u="object"==typeof(u=n.contextType)&&null!==u?nl(u):da(t,u=pa(n)?fa:ca.current);var p=n.getDerivedStateFromProps;(s="function"==typeof p||"function"==typeof o.getSnapshotBeforeUpdate)||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(i!==f||d!==u)&&vl(t,o,r,u),rl=!1,d=t.memoizedState,o.state=d,cl(t,r,o,a);var h=t.memoizedState;i!==f||d!==h||sa.current||rl?("function"==typeof p&&(dl(t,n,p,r),h=t.memoizedState),(c=rl||hl(t,n,c,r,d,h,u))?(s||"function"!=typeof o.UNSAFE_componentWillUpdate&&"function"!=typeof o.componentWillUpdate||("function"==typeof o.componentWillUpdate&&o.componentWillUpdate(r,h,u),"function"==typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof o.componentDidUpdate&&(t.flags|=4),"function"==typeof o.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=h),o.props=r,o.state=h,o.context=u,r=c):("function"!=typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),r=!1)}return Bo(e,t,n,r,l,a)}function Bo(e,t,n,r,a,l){Uo(e,t);var o=0!=(64&t.flags);if(!r&&!o)return a&&ga(t,n,!1),Zo(e,t,l);r=t.stateNode,Ro.current=t;var i=o&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&o?(t.child=El(t,e.child,null,l),t.child=El(t,null,i,l)):Mo(e,t,i,l),t.memoizedState=r.state,a&&ga(t,n,!0),t.child}function Vo(e){var t=e.stateNode;t.pendingContext?ma(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ma(0,t.context,!1),Nl(e,t.containerInfo)}var Wo,Ho,qo,Qo={dehydrated:null,retryLane:0};function Xo(e,t,n){var r,a=t.pendingProps,l=zl.current,o=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&l)),r?(o=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(l|=1),ia(zl,1&l),null===e?(void 0!==a.fallback&&jl(t),e=a.children,l=a.fallback,o?(e=Ko(t,e,l,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Qo,e):"number"==typeof a.unstable_expectedLoadTime?(e=Ko(t,e,l,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Qo,t.lanes=33554432,e):((n=Vu({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,o?(a=function(e,t,n,r,a){var l=t.mode,o=e.child;e=o.sibling;var i={mode:"hidden",children:n};return 0==(2&l)&&t.child!==o?((n=t.child).childLanes=0,n.pendingProps=i,null!==(o=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=o,o.nextEffect=null):t.firstEffect=t.lastEffect=null):n=ju(o,i),null!==e?r=ju(e,r):(r=Bu(r,l,a,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,a.children,a.fallback,n),o=t.child,l=e.child.memoizedState,o.memoizedState=null===l?{baseLanes:n}:{baseLanes:l.baseLanes|n},o.childLanes=e.childLanes&~n,t.memoizedState=Qo,a):(n=function(e,t,n,r){var a=e.child;return e=a.sibling,n=ju(a,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,a.children,n),t.memoizedState=null,n))}function Ko(e,t,n,r){var a=e.mode,l=e.child;return t={mode:"hidden",children:t},0==(2&a)&&null!==l?(l.childLanes=0,l.pendingProps=t):l=Vu(t,a,0,null),n=Bu(n,a,r,null),l.return=e,n.return=e,l.sibling=n,e.child=l,n}function Yo(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),el(e.return,t)}function Go(e,t,n,r,a,l){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a,lastEffect:l}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailMode=a,o.lastEffect=l)}function Jo(e,t,n){var r=t.pendingProps,a=r.revealOrder,l=r.tail;if(Mo(e,t,r.children,n),0!=(2&(r=zl.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Yo(e,n);else if(19===e.tag)Yo(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ia(zl,r),0==(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===Ml(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Go(t,!1,a,n,l,t.lastEffect);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===Ml(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Go(t,!0,n,null,l,t.lastEffect);break;case"together":Go(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Zo(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ii|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(n=ju(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=ju(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function ei(e,t){if(!Al)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ti(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return pa(t.type)&&ha(),null;case 3:return Ol(),oa(sa),oa(ca),Hl(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Bl(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:Rl(t);var l=Tl(Pl.current);if(n=t.type,null!==e&&null!=t.stateNode)Ho(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(o(166));return null}if(e=Tl(Cl.current),Bl(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[Xr]=t,r[Kr]=i,n){case"dialog":_r("cancel",r),_r("close",r);break;case"iframe":case"object":case"embed":_r("load",r);break;case"video":case"audio":for(e=0;e<Er.length;e++)_r(Er[e],r);break;case"source":_r("error",r);break;case"img":case"image":case"link":_r("error",r),_r("load",r);break;case"details":_r("toggle",r);break;case"input":ee(r,i),_r("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},_r("invalid",r);break;case"textarea":ue(r,i),_r("invalid",r)}for(var c in Se(n,i),e=null,i)i.hasOwnProperty(c)&&(l=i[c],"children"===c?"string"==typeof l?r.textContent!==l&&(e=["children",l]):"number"==typeof l&&r.textContent!==""+l&&(e=["children",""+l]):u.hasOwnProperty(c)&&null!=l&&"onScroll"===c&&_r("scroll",r));switch(n){case"input":Y(r),re(r,i,!0);break;case"textarea":Y(r),se(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Fr)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(c=9===l.nodeType?l:l.ownerDocument,e===fe&&(e=de(n)),e===fe?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=c.createElement(n,{is:r.is}):(e=c.createElement(n),"select"===n&&(c=e,r.multiple?c.multiple=!0:r.size&&(c.size=r.size))):e=c.createElementNS(e,n),e[Xr]=t,e[Kr]=r,Wo(e,t),t.stateNode=e,c=xe(n,r),n){case"dialog":_r("cancel",e),_r("close",e),l=r;break;case"iframe":case"object":case"embed":_r("load",e),l=r;break;case"video":case"audio":for(l=0;l<Er.length;l++)_r(Er[l],e);l=r;break;case"source":_r("error",e),l=r;break;case"img":case"image":case"link":_r("error",e),_r("load",e),l=r;break;case"details":_r("toggle",e),l=r;break;case"input":ee(e,r),l=Z(e,r),_r("invalid",e);break;case"option":l=le(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},l=a({},r,{value:void 0}),_r("invalid",e);break;case"textarea":ue(e,r),l=ie(e,r),_r("invalid",e);break;default:l=r}Se(n,l);var s=l;for(i in s)if(s.hasOwnProperty(i)){var f=s[i];"style"===i?ke(e,f):"dangerouslySetInnerHTML"===i?null!=(f=f?f.__html:void 0)&&ve(e,f):"children"===i?"string"==typeof f?("textarea"!==n||""!==f)&&ye(e,f):"number"==typeof f&&ye(e,""+f):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(u.hasOwnProperty(i)?null!=f&&"onScroll"===i&&_r("scroll",e):null!=f&&w(e,i,f,c))}switch(n){case"input":Y(e),re(e,r,!1);break;case"textarea":Y(e),se(e);break;case"option":null!=r.value&&e.setAttribute("value",""+X(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?oe(e,!!r.multiple,i,!1):null!=r.defaultValue&&oe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof l.onClick&&(e.onclick=Fr)}Ur(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)qo(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(o(166));n=Tl(Pl.current),Tl(Cl.current),Bl(t)?(r=t.stateNode,n=t.memoizedProps,r[Xr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Xr]=t,t.stateNode=r)}return null;case 13:return oa(zl),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Bl(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&zl.current)?0===Ri&&(Ri=3):(0!==Ri&&3!==Ri||(Ri=4),null===Pi||0==(134217727&Ii)&&0==(134217727&Fi)||du(Pi,Ni))),(r||n)&&(t.flags|=4),null);case 4:return Ol(),null===e&&Tr(t.stateNode.containerInfo),null;case 10:return Za(t),null;case 17:return pa(t.type)&&ha(),null;case 19:if(oa(zl),null===(r=t.memoizedState))return null;if(i=0!=(64&t.flags),null===(c=r.rendering))if(i)ei(r,!1);else{if(0!==Ri||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(c=Ml(e))){for(t.flags|=64,ei(r,!1),null!==(i=c.updateQueue)&&(t.updateQueue=i,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(c=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=c.childLanes,i.lanes=c.lanes,i.child=c.child,i.memoizedProps=c.memoizedProps,i.memoizedState=c.memoizedState,i.updateQueue=c.updateQueue,i.type=c.type,e=c.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return ia(zl,1&zl.current|2),t.child}e=e.sibling}null!==r.tail&&Ua()>ji&&(t.flags|=64,i=!0,ei(r,!1),t.lanes=33554432)}else{if(!i)if(null!==(e=Ml(c))){if(t.flags|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),ei(r,!0),null===r.tail&&"hidden"===r.tailMode&&!c.alternate&&!Al)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Ua()-r.renderingStartTime>ji&&1073741824!==n&&(t.flags|=64,i=!0,ei(r,!1),t.lanes=33554432);r.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=r.last)?n.sibling=c:t.child=c,r.last=c)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Ua(),n.sibling=null,t=zl.current,ia(zl,i?1&t|2:1&t),n):null;case 23:case 24:return yu(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(o(156,t.tag))}function ni(e){switch(e.tag){case 1:pa(e.type)&&ha();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Ol(),oa(sa),oa(ca),Hl(),0!=(64&(t=e.flags)))throw Error(o(285));return e.flags=-4097&t|64,e;case 5:return Rl(e),null;case 13:return oa(zl),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return oa(zl),null;case 4:return Ol(),null;case 10:return Za(e),null;case 23:case 24:return yu(),null;default:return null}}function ri(e,t){try{var n="",r=t;do{n+=q(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a}}function ai(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Wo=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ho=function(e,t,n,r){var l=e.memoizedProps;if(l!==r){e=t.stateNode,Tl(Cl.current);var o,i=null;switch(n){case"input":l=Z(e,l),r=Z(e,r),i=[];break;case"option":l=le(e,l),r=le(e,r),i=[];break;case"select":l=a({},l,{value:void 0}),r=a({},r,{value:void 0}),i=[];break;case"textarea":l=ie(e,l),r=ie(e,r),i=[];break;default:"function"!=typeof l.onClick&&"function"==typeof r.onClick&&(e.onclick=Fr)}for(f in Se(n,r),n=null,l)if(!r.hasOwnProperty(f)&&l.hasOwnProperty(f)&&null!=l[f])if("style"===f){var c=l[f];for(o in c)c.hasOwnProperty(o)&&(n||(n={}),n[o]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?i||(i=[]):(i=i||[]).push(f,null));for(f in r){var s=r[f];if(c=null!=l?l[f]:void 0,r.hasOwnProperty(f)&&s!==c&&(null!=s||null!=c))if("style"===f)if(c){for(o in c)!c.hasOwnProperty(o)||s&&s.hasOwnProperty(o)||(n||(n={}),n[o]="");for(o in s)s.hasOwnProperty(o)&&c[o]!==s[o]&&(n||(n={}),n[o]=s[o])}else n||(i||(i=[]),i.push(f,n)),n=s;else"dangerouslySetInnerHTML"===f?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(i=i||[]).push(f,s)):"children"===f?"string"!=typeof s&&"number"!=typeof s||(i=i||[]).push(f,""+s):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=s&&"onScroll"===f&&_r("scroll",e),i||c===s||(i=[])):"object"==typeof s&&null!==s&&s.$$typeof===I?s.toString():(i=i||[]).push(f,s))}n&&(i=i||[]).push("style",n);var f=i;(t.updateQueue=f)&&(t.flags|=4)}},qo=function(e,t,n,r){n!==r&&(t.flags|=4)};var li="function"==typeof WeakMap?WeakMap:Map;function oi(e,t,n){(n=ol(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Wi||(Wi=!0,Hi=r),ai(0,t)},n}function ii(e,t,n){(n=ol(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return ai(0,t),r(a)}}var l=e.stateNode;return null!==l&&"function"==typeof l.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===qi?qi=new Set([this]):qi.add(this),ai(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var ui="function"==typeof WeakSet?WeakSet:Set;function ci(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Mu(e,t)}else t.current=null}function si(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Qa(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Vr(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(o(163))}function fi(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var a=e;r=a.next,0!=(4&(a=a.tag))&&0!=(1&a)&&(Lu(n,e),Ou(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:Qa(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&sl(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}sl(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Ur(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&kt(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(o(163))}function di(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var a=n.memoizedProps.style;a=null!=a&&a.hasOwnProperty("display")?a.display:null,r.style.display=we("display",a)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function pi(e,t){if(wa&&"function"==typeof wa.onCommitFiberUnmount)try{wa.onCommitFiberUnmount(ba,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,a=r.destroy;if(r=r.tag,void 0!==a)if(0!=(4&r))Lu(t,n);else{r=t;try{a()}catch(e){Mu(r,e)}}n=n.next}while(n!==e)}break;case 1:if(ci(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Mu(t,e)}break;case 5:ci(t);break;case 4:bi(e,t)}}function hi(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function mi(e){return 5===e.tag||3===e.tag||4===e.tag}function vi(e){e:{for(var t=e.return;null!==t;){if(mi(t))break e;t=t.return}throw Error(o(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(o(161))}16&n.flags&&(ye(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||mi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?yi(e,n,t):gi(e,n,t)}function yi(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Fr));else if(4!==r&&null!==(e=e.child))for(yi(e,t,n),e=e.sibling;null!==e;)yi(e,t,n),e=e.sibling}function gi(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(gi(e,t,n),e=e.sibling;null!==e;)gi(e,t,n),e=e.sibling}function bi(e,t){for(var n,r,a=t,l=!1;;){if(!l){l=a.return;e:for(;;){if(null===l)throw Error(o(160));switch(n=l.stateNode,l.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}l=l.return}l=!0}if(5===a.tag||6===a.tag){e:for(var i=e,u=a,c=u;;)if(pi(i,c),null!==c.child&&4!==c.tag)c.child.return=c,c=c.child;else{if(c===u)break e;for(;null===c.sibling;){if(null===c.return||c.return===u)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}r?(i=n,u=a.stateNode,8===i.nodeType?i.parentNode.removeChild(u):i.removeChild(u)):n.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){n=a.stateNode.containerInfo,r=!0,a.child.return=a,a=a.child;continue}}else if(pi(e,a),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(l=!1)}a.sibling.return=a.return,a=a.sibling}}function wi(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var a=null!==e?e.memoizedProps:r;e=t.type;var l=t.updateQueue;if(t.updateQueue=null,null!==l){for(n[Kr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),xe(e,a),t=xe(e,r),a=0;a<l.length;a+=2){var i=l[a],u=l[a+1];"style"===i?ke(n,u):"dangerouslySetInnerHTML"===i?ve(n,u):"children"===i?ye(n,u):w(n,i,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":ce(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(l=r.value)?oe(n,!!r.multiple,l,!1):e!==!!r.multiple&&(null!=r.defaultValue?oe(n,!!r.multiple,r.defaultValue,!0):oe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(o(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,kt(n.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Ui=Ua(),di(t.child,!0)),void ki(t);case 19:return void ki(t);case 17:return;case 23:case 24:return void di(t,null!==t.memoizedState)}throw Error(o(163))}function ki(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ui),t.forEach((function(t){var r=Fu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function Ei(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var Si=Math.ceil,xi=k.ReactCurrentDispatcher,Ci=k.ReactCurrentOwner,_i=0,Pi=null,Ti=null,Ni=0,Oi=0,Li=la(0),Ri=0,zi=null,Mi=0,Ii=0,Fi=0,Ai=0,Di=null,Ui=0,ji=1/0;function $i(){ji=Ua()+500}var Bi,Vi=null,Wi=!1,Hi=null,qi=null,Qi=!1,Xi=null,Ki=90,Yi=[],Gi=[],Ji=null,Zi=0,eu=null,tu=-1,nu=0,ru=0,au=null,lu=!1;function ou(){return 0!=(48&_i)?Ua():-1!==tu?tu:tu=Ua()}function iu(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===ja()?1:2;if(0===nu&&(nu=Mi),0!==qa.transition){0!==ru&&(ru=null!==Di?Di.pendingLanes:0),e=nu;var t=4186112&~ru;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=ja(),e=Ut(0!=(4&_i)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),nu)}function uu(e,t,n){if(50<Zi)throw Zi=0,eu=null,Error(o(185));if(null===(e=cu(e,t)))return null;Bt(e,t,n),e===Pi&&(Fi|=t,4===Ri&&du(e,Ni));var r=ja();1===t?0!=(8&_i)&&0==(48&_i)?pu(e):(su(e,n),0===_i&&($i(),Wa())):(0==(4&_i)||98!==r&&99!==r||(null===Ji?Ji=new Set([e]):Ji.add(e)),su(e,n)),Di=e}function cu(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function su(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,a=e.pingedLanes,l=e.expirationTimes,i=e.pendingLanes;0<i;){var u=31-Vt(i),c=1<<u,s=l[u];if(-1===s){if(0==(c&r)||0!=(c&a)){s=t,Ft(c);var f=It;l[u]=10<=f?s+250:6<=f?s+5e3:-1}}else s<=t&&(e.expiredLanes|=c);i&=~c}if(r=At(e,e===Pi?Ni:0),t=It,0===r)null!==n&&(n!==za&&Sa(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==za&&Sa(n)}15===t?(n=pu.bind(null,e),null===Ia?(Ia=[n],Fa=Ea(Ta,Ha)):Ia.push(n),n=za):n=14===t?Va(99,pu.bind(null,e)):Va(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(o(358,e))}}(t),fu.bind(null,e)),e.callbackPriority=t,e.callbackNode=n}}function fu(e){if(tu=-1,ru=nu=0,0!=(48&_i))throw Error(o(327));var t=e.callbackNode;if(Nu()&&e.callbackNode!==t)return null;var n=At(e,e===Pi?Ni:0);if(0===n)return null;var r=n,a=_i;_i|=16;var l=wu();for(Pi===e&&Ni===r||($i(),gu(e,r));;)try{Su();break}catch(t){bu(e,t)}if(Ja(),xi.current=l,_i=a,null!==Ti?r=0:(Pi=null,Ni=0,r=Ri),0!=(Mi&Fi))gu(e,0);else if(0!==r){if(2===r&&(_i|=64,e.hydrate&&(e.hydrate=!1,Vr(e.containerInfo)),0!==(n=Dt(e))&&(r=ku(e,n))),1===r)throw t=zi,gu(e,0),du(e,n),su(e,Ua()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(o(345));case 2:_u(e);break;case 3:if(du(e,n),(62914560&n)===n&&10<(r=Ui+500-Ua())){if(0!==At(e,0))break;if(((a=e.suspendedLanes)&n)!==n){ou(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=$r(_u.bind(null,e),r);break}_u(e);break;case 4:if(du(e,n),(4186112&n)===n)break;for(r=e.eventTimes,a=-1;0<n;){var i=31-Vt(n);l=1<<i,(i=r[i])>a&&(a=i),n&=~l}if(n=a,10<(n=(120>(n=Ua()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*Si(n/1960))-n)){e.timeoutHandle=$r(_u.bind(null,e),n);break}_u(e);break;case 5:_u(e);break;default:throw Error(o(329))}}return su(e,Ua()),e.callbackNode===t?fu.bind(null,e):null}function du(e,t){for(t&=~Ai,t&=~Fi,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Vt(t),r=1<<n;e[n]=-1,t&=~r}}function pu(e){if(0!=(48&_i))throw Error(o(327));if(Nu(),e===Pi&&0!=(e.expiredLanes&Ni)){var t=Ni,n=ku(e,t);0!=(Mi&Fi)&&(n=ku(e,t=At(e,t)))}else n=ku(e,t=At(e,0));if(0!==e.tag&&2===n&&(_i|=64,e.hydrate&&(e.hydrate=!1,Vr(e.containerInfo)),0!==(t=Dt(e))&&(n=ku(e,t))),1===n)throw n=zi,gu(e,0),du(e,t),su(e,Ua()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,_u(e),su(e,Ua()),null}function hu(e,t){var n=_i;_i|=1;try{return e(t)}finally{0===(_i=n)&&($i(),Wa())}}function mu(e,t){var n=_i;_i&=-2,_i|=8;try{return e(t)}finally{0===(_i=n)&&($i(),Wa())}}function vu(e,t){ia(Li,Oi),Oi|=t,Mi|=t}function yu(){Oi=Li.current,oa(Li)}function gu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Br(n)),null!==Ti)for(n=Ti.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&ha();break;case 3:Ol(),oa(sa),oa(ca),Hl();break;case 5:Rl(r);break;case 4:Ol();break;case 13:case 19:oa(zl);break;case 10:Za(r);break;case 23:case 24:yu()}n=n.return}Pi=e,Ti=ju(e.current,null),Ni=Oi=Mi=t,Ri=0,zi=null,Ai=Fi=Ii=0}function bu(e,t){for(;;){var n=Ti;try{if(Ja(),ql.current=To,Jl){for(var r=Kl.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}Jl=!1}if(Xl=0,Gl=Yl=Kl=null,Zl=!1,Ci.current=null,null===n||null===n.return){Ri=1,zi=t,Ti=null;break}e:{var l=e,o=n.return,i=n,u=t;if(t=Ni,i.flags|=2048,i.firstEffect=i.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var c=u;if(0==(2&i.mode)){var s=i.alternate;s?(i.updateQueue=s.updateQueue,i.memoizedState=s.memoizedState,i.lanes=s.lanes):(i.updateQueue=null,i.memoizedState=null)}var f=0!=(1&zl.current),d=o;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var m=d.memoizedProps;p=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!f)}}if(p){var v=d.updateQueue;if(null===v){var y=new Set;y.add(c),d.updateQueue=y}else v.add(c);if(0==(2&d.mode)){if(d.flags|=64,i.flags|=16384,i.flags&=-2981,1===i.tag)if(null===i.alternate)i.tag=17;else{var g=ol(-1,1);g.tag=2,il(i,g)}i.lanes|=1;break e}u=void 0,i=t;var b=l.pingCache;if(null===b?(b=l.pingCache=new li,u=new Set,b.set(c,u)):void 0===(u=b.get(c))&&(u=new Set,b.set(c,u)),!u.has(i)){u.add(i);var w=Iu.bind(null,l,c,i);c.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((Q(i.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Ri&&(Ri=2),u=ri(u,i),d=o;do{switch(d.tag){case 3:l=u,d.flags|=4096,t&=-t,d.lanes|=t,ul(d,oi(0,l,t));break e;case 1:l=u;var k=d.type,E=d.stateNode;if(0==(64&d.flags)&&("function"==typeof k.getDerivedStateFromError||null!==E&&"function"==typeof E.componentDidCatch&&(null===qi||!qi.has(E)))){d.flags|=4096,t&=-t,d.lanes|=t,ul(d,ii(d,l,t));break e}}d=d.return}while(null!==d)}Cu(n)}catch(e){t=e,Ti===n&&null!==n&&(Ti=n=n.return);continue}break}}function wu(){var e=xi.current;return xi.current=To,null===e?To:e}function ku(e,t){var n=_i;_i|=16;var r=wu();for(Pi===e&&Ni===t||gu(e,t);;)try{Eu();break}catch(t){bu(e,t)}if(Ja(),_i=n,xi.current=r,null!==Ti)throw Error(o(261));return Pi=null,Ni=0,Ri}function Eu(){for(;null!==Ti;)xu(Ti)}function Su(){for(;null!==Ti&&!xa();)xu(Ti)}function xu(e){var t=Bi(e.alternate,e,Oi);e.memoizedProps=e.pendingProps,null===t?Cu(e):Ti=t,Ci.current=null}function Cu(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=ti(n,t,Oi)))return void(Ti=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Oi)||0==(4&n.mode)){for(var r=0,a=n.child;null!==a;)r|=a.lanes|a.childLanes,a=a.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=ni(t)))return n.flags&=2047,void(Ti=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Ti=t);Ti=t=e}while(null!==t);0===Ri&&(Ri=5)}function _u(e){var t=ja();return Ba(99,Pu.bind(null,e,t)),null}function Pu(e,t){do{Nu()}while(null!==Xi);if(0!=(48&_i))throw Error(o(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(o(177));e.callbackNode=null;var r=n.lanes|n.childLanes,a=r,l=e.pendingLanes&~a;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=a,e.mutableReadLanes&=a,e.entangledLanes&=a,a=e.entanglements;for(var i=e.eventTimes,u=e.expirationTimes;0<l;){var c=31-Vt(l),s=1<<c;a[c]=0,i[c]=-1,u[c]=-1,l&=~s}if(null!==Ji&&0==(24&r)&&Ji.has(e)&&Ji.delete(e),e===Pi&&(Ti=Pi=null,Ni=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(a=_i,_i|=32,Ci.current=null,Ar=Xt,pr(i=dr())){if("selectionStart"in i)u={start:i.selectionStart,end:i.selectionEnd};else e:if(u=(u=i.ownerDocument)&&u.defaultView||window,(s=u.getSelection&&u.getSelection())&&0!==s.rangeCount){u=s.anchorNode,l=s.anchorOffset,c=s.focusNode,s=s.focusOffset;try{u.nodeType,c.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,h=0,m=0,v=i,y=null;t:for(;;){for(var g;v!==u||0!==l&&3!==v.nodeType||(d=f+l),v!==c||0!==s&&3!==v.nodeType||(p=f+s),3===v.nodeType&&(f+=v.nodeValue.length),null!==(g=v.firstChild);)y=v,v=g;for(;;){if(v===i)break t;if(y===u&&++h===l&&(d=f),y===c&&++m===s&&(p=f),null!==(g=v.nextSibling))break;y=(v=y).parentNode}v=g}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;Dr={focusedElem:i,selectionRange:u},Xt=!1,au=null,lu=!1,Vi=r;do{try{Tu()}catch(e){if(null===Vi)throw Error(o(330));Mu(Vi,e),Vi=Vi.nextEffect}}while(null!==Vi);au=null,Vi=r;do{try{for(i=e;null!==Vi;){var b=Vi.flags;if(16&b&&ye(Vi.stateNode,""),128&b){var w=Vi.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&b){case 2:vi(Vi),Vi.flags&=-3;break;case 6:vi(Vi),Vi.flags&=-3,wi(Vi.alternate,Vi);break;case 1024:Vi.flags&=-1025;break;case 1028:Vi.flags&=-1025,wi(Vi.alternate,Vi);break;case 4:wi(Vi.alternate,Vi);break;case 8:bi(i,u=Vi);var E=u.alternate;hi(u),null!==E&&hi(E)}Vi=Vi.nextEffect}}catch(e){if(null===Vi)throw Error(o(330));Mu(Vi,e),Vi=Vi.nextEffect}}while(null!==Vi);if(k=Dr,w=dr(),b=k.focusedElem,i=k.selectionRange,w!==b&&b&&b.ownerDocument&&fr(b.ownerDocument.documentElement,b)){null!==i&&pr(b)&&(w=i.start,void 0===(k=i.end)&&(k=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(k,b.value.length)):(k=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=b.textContent.length,E=Math.min(i.start,u),i=void 0===i.end?E:Math.min(i.end,u),!k.extend&&E>i&&(u=i,i=E,E=u),u=sr(b,E),l=sr(b,i),u&&l&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==l.node||k.focusOffset!==l.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),E>i?(k.addRange(w),k.extend(l.node,l.offset)):(w.setEnd(l.node,l.offset),k.addRange(w))))),w=[];for(k=b;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<w.length;b++)(k=w[b]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Xt=!!Ar,Dr=Ar=null,e.current=n,Vi=r;do{try{for(b=e;null!==Vi;){var S=Vi.flags;if(36&S&&fi(b,Vi.alternate,Vi),128&S){w=void 0;var x=Vi.ref;if(null!==x){var C=Vi.stateNode;switch(Vi.tag){case 5:w=C;break;default:w=C}"function"==typeof x?x(w):x.current=w}}Vi=Vi.nextEffect}}catch(e){if(null===Vi)throw Error(o(330));Mu(Vi,e),Vi=Vi.nextEffect}}while(null!==Vi);Vi=null,Ma(),_i=a}else e.current=n;if(Qi)Qi=!1,Xi=e,Ki=t;else for(Vi=r;null!==Vi;)t=Vi.nextEffect,Vi.nextEffect=null,8&Vi.flags&&((S=Vi).sibling=null,S.stateNode=null),Vi=t;if(0===(r=e.pendingLanes)&&(qi=null),1===r?e===eu?Zi++:(Zi=0,eu=e):Zi=0,n=n.stateNode,wa&&"function"==typeof wa.onCommitFiberRoot)try{wa.onCommitFiberRoot(ba,n,void 0,64==(64&n.current.flags))}catch(e){}if(su(e,Ua()),Wi)throw Wi=!1,e=Hi,Hi=null,e;return 0!=(8&_i)||Wa(),null}function Tu(){for(;null!==Vi;){var e=Vi.alternate;lu||null===au||(0!=(8&Vi.flags)?Ze(Vi,au)&&(lu=!0):13===Vi.tag&&Ei(e,Vi)&&Ze(Vi,au)&&(lu=!0));var t=Vi.flags;0!=(256&t)&&si(e,Vi),0==(512&t)||Qi||(Qi=!0,Va(97,(function(){return Nu(),null}))),Vi=Vi.nextEffect}}function Nu(){if(90!==Ki){var e=97<Ki?97:Ki;return Ki=90,Ba(e,Ru)}return!1}function Ou(e,t){Yi.push(t,e),Qi||(Qi=!0,Va(97,(function(){return Nu(),null})))}function Lu(e,t){Gi.push(t,e),Qi||(Qi=!0,Va(97,(function(){return Nu(),null})))}function Ru(){if(null===Xi)return!1;var e=Xi;if(Xi=null,0!=(48&_i))throw Error(o(331));var t=_i;_i|=32;var n=Gi;Gi=[];for(var r=0;r<n.length;r+=2){var a=n[r],l=n[r+1],i=a.destroy;if(a.destroy=void 0,"function"==typeof i)try{i()}catch(e){if(null===l)throw Error(o(330));Mu(l,e)}}for(n=Yi,Yi=[],r=0;r<n.length;r+=2){a=n[r],l=n[r+1];try{var u=a.create;a.destroy=u()}catch(e){if(null===l)throw Error(o(330));Mu(l,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return _i=t,Wa(),!0}function zu(e,t,n){il(e,t=oi(0,t=ri(n,t),1)),t=ou(),null!==(e=cu(e,1))&&(Bt(e,1,t),su(e,t))}function Mu(e,t){if(3===e.tag)zu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){zu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===qi||!qi.has(r))){var a=ii(n,e=ri(t,e),1);if(il(n,a),a=ou(),null!==(n=cu(n,1)))Bt(n,1,a),su(n,a);else if("function"==typeof r.componentDidCatch&&(null===qi||!qi.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function Iu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=ou(),e.pingedLanes|=e.suspendedLanes&n,Pi===e&&(Ni&n)===n&&(4===Ri||3===Ri&&(62914560&Ni)===Ni&&500>Ua()-Ui?gu(e,0):Ai|=n),su(e,t)}function Fu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===ja()?1:2:(0===nu&&(nu=Mi),0===(t=jt(62914560&~nu))&&(t=4194304))),n=ou(),null!==(e=cu(e,t))&&(Bt(e,t,n),su(e,n))}function Au(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Du(e,t,n,r){return new Au(e,t,n,r)}function Uu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function ju(e,t){var n=e.alternate;return null===n?((n=Du(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function $u(e,t,n,r,a,l){var i=2;if(r=e,"function"==typeof e)Uu(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case x:return Bu(n.children,a,l,t);case F:i=8,a|=16;break;case C:i=8,a|=1;break;case _:return(e=Du(12,n,t,8|a)).elementType=_,e.type=_,e.lanes=l,e;case O:return(e=Du(13,n,t,a)).type=O,e.elementType=O,e.lanes=l,e;case L:return(e=Du(19,n,t,a)).elementType=L,e.lanes=l,e;case A:return Vu(n,a,l,t);case D:return(e=Du(24,n,t,a)).elementType=D,e.lanes=l,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case P:i=10;break e;case T:i=9;break e;case N:i=11;break e;case R:i=14;break e;case z:i=16,r=null;break e;case M:i=22;break e}throw Error(o(130,null==e?e:typeof e,""))}return(t=Du(i,n,t,a)).elementType=e,t.type=r,t.lanes=l,t}function Bu(e,t,n,r){return(e=Du(7,e,r,t)).lanes=n,e}function Vu(e,t,n,r){return(e=Du(23,e,r,t)).elementType=A,e.lanes=n,e}function Wu(e,t,n){return(e=Du(6,e,null,t)).lanes=n,e}function Hu(e,t,n){return(t=Du(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function qu(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=$t(0),this.expirationTimes=$t(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=$t(0),this.mutableSourceEagerHydrationData=null}function Qu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:S,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Xu(e,t,n,r){var a=t.current,l=ou(),i=iu(a);e:if(n){t:{if(Ke(n=n._reactInternals)!==n||1!==n.tag)throw Error(o(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(pa(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(o(171))}if(1===n.tag){var c=n.type;if(pa(c)){n=va(n,c,u);break e}}n=u}else n=ua;return null===t.context?t.context=n:t.pendingContext=n,(t=ol(l,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),il(a,t),uu(a,i,l),i}function Ku(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Yu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Gu(e,t){Yu(e,t),(e=e.alternate)&&Yu(e,t)}function Ju(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new qu(e,t,null!=n&&!0===n.hydrate),t=Du(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,al(t),e[Yr]=n.current,Tr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var a=(t=r[e])._getVersion;a=a(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a)}this._internalRoot=n}function Zu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function ec(e,t,n,r,a){var l=n._reactRootContainer;if(l){var o=l._internalRoot;if("function"==typeof a){var i=a;a=function(){var e=Ku(o);i.call(e)}}Xu(t,o,e,a)}else{if(l=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Ju(e,0,t?{hydrate:!0}:void 0)}(n,r),o=l._internalRoot,"function"==typeof a){var u=a;a=function(){var e=Ku(o);u.call(e)}}mu((function(){Xu(t,o,e,a)}))}return Ku(o)}function tc(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Zu(t))throw Error(o(200));return Qu(e,t,null,n)}Bi=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||sa.current)zo=!0;else{if(0==(n&r)){switch(zo=!1,t.tag){case 3:Vo(t),Vl();break;case 5:Ll(t);break;case 1:pa(t.type)&&ya(t);break;case 4:Nl(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var a=t.type._context;ia(Xa,a._currentValue),a._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Xo(e,t,n):(ia(zl,1&zl.current),null!==(t=Zo(e,t,n))?t.sibling:null);ia(zl,1&zl.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return Jo(e,t,n);t.flags|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ia(zl,zl.current),r)break;return null;case 23:case 24:return t.lanes=0,Do(e,t,n)}return Zo(e,t,n)}zo=0!=(16384&e.flags)}else zo=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=da(t,ca.current),tl(t,n),a=no(null,t,r,e,a,n),t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,pa(r)){var l=!0;ya(t)}else l=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,al(t);var i=r.getDerivedStateFromProps;"function"==typeof i&&dl(t,r,i,e),a.updater=pl,t.stateNode=a,a._reactInternals=t,yl(t,r,e,n),t=Bo(null,t,r,!0,l,n)}else t.tag=0,Mo(null,t,a,n),t=t.child;return t;case 16:a=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=(l=a._init)(a._payload),t.type=a,l=t.tag=function(e){if("function"==typeof e)return Uu(e)?1:0;if(null!=e){if((e=e.$$typeof)===N)return 11;if(e===R)return 14}return 2}(a),e=Qa(a,e),l){case 0:t=jo(null,t,a,e,n);break e;case 1:t=$o(null,t,a,e,n);break e;case 11:t=Io(null,t,a,e,n);break e;case 14:t=Fo(null,t,a,Qa(a.type,e),r,n);break e}throw Error(o(306,a,""))}return t;case 0:return r=t.type,a=t.pendingProps,jo(e,t,r,a=t.elementType===r?a:Qa(r,a),n);case 1:return r=t.type,a=t.pendingProps,$o(e,t,r,a=t.elementType===r?a:Qa(r,a),n);case 3:if(Vo(t),r=t.updateQueue,null===e||null===r)throw Error(o(282));if(r=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,ll(e,t),cl(t,r,null,n),(r=t.memoizedState.element)===a)Vl(),t=Zo(e,t,n);else{if((l=(a=t.stateNode).hydrate)&&(Fl=Wr(t.stateNode.containerInfo.firstChild),Il=t,l=Al=!0),l){if(null!=(e=a.mutableSourceEagerHydrationData))for(a=0;a<e.length;a+=2)(l=e[a])._workInProgressVersionPrimary=e[a+1],Wl.push(l);for(n=Sl(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Mo(e,t,r,n),Vl();t=t.child}return t;case 5:return Ll(t),null===e&&jl(t),r=t.type,a=t.pendingProps,l=null!==e?e.memoizedProps:null,i=a.children,jr(r,a)?i=null:null!==l&&jr(r,l)&&(t.flags|=16),Uo(e,t),Mo(e,t,i,n),t.child;case 6:return null===e&&jl(t),null;case 13:return Xo(e,t,n);case 4:return Nl(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=El(t,null,r,n):Mo(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Io(e,t,r,a=t.elementType===r?a:Qa(r,a),n);case 7:return Mo(e,t,t.pendingProps,n),t.child;case 8:case 12:return Mo(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,a=t.pendingProps,i=t.memoizedProps,l=a.value;var u=t.type._context;if(ia(Xa,u._currentValue),u._currentValue=l,null!==i)if(u=i.value,0==(l=or(u,l)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,l):1073741823))){if(i.children===a.children&&!sa.current){t=Zo(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){i=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&l)){1===u.tag&&((s=ol(-1,n&-n)).tag=2,il(u,s)),u.lanes|=n,null!==(s=u.alternate)&&(s.lanes|=n),el(u.return,n),c.lanes|=n;break}s=s.next}}else i=10===u.tag&&u.type===t.type?null:u.child;if(null!==i)i.return=u;else for(i=u;null!==i;){if(i===t){i=null;break}if(null!==(u=i.sibling)){u.return=i.return,i=u;break}i=i.return}u=i}Mo(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(l=t.pendingProps).children,tl(t,n),r=r(a=nl(a,l.unstable_observedBits)),t.flags|=1,Mo(e,t,r,n),t.child;case 14:return l=Qa(a=t.type,t.pendingProps),Fo(e,t,a,l=Qa(a.type,l),r,n);case 15:return Ao(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:Qa(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,pa(r)?(e=!0,ya(t)):e=!1,tl(t,n),ml(t,r,a),yl(t,r,a,n),Bo(null,t,r,!0,e,n);case 19:return Jo(e,t,n);case 23:case 24:return Do(e,t,n)}throw Error(o(156,t.tag))},Ju.prototype.render=function(e){Xu(e,this._internalRoot,null,null)},Ju.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Xu(null,e,null,(function(){t[Yr]=null}))},et=function(e){13===e.tag&&(uu(e,4,ou()),Gu(e,4))},tt=function(e){13===e.tag&&(uu(e,67108864,ou()),Gu(e,67108864))},nt=function(e){if(13===e.tag){var t=ou(),n=iu(e);uu(e,n,t),Gu(e,n)}},rt=function(e,t){return t()},_e=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=ta(r);if(!a)throw Error(o(90));G(r),ne(r,a)}}}break;case"textarea":ce(e,n);break;case"select":null!=(t=n.value)&&oe(e,!!n.multiple,t,!1)}},Re=hu,ze=function(e,t,n,r,a){var l=_i;_i|=4;try{return Ba(98,e.bind(null,t,n,r,a))}finally{0===(_i=l)&&($i(),Wa())}},Me=function(){0==(49&_i)&&(function(){if(null!==Ji){var e=Ji;Ji=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,su(e,Ua())}))}Wa()}(),Nu())},Ie=function(e,t){var n=_i;_i|=2;try{return e(t)}finally{0===(_i=n)&&($i(),Wa())}};var nc={Events:[Zr,ea,ta,Oe,Le,Nu,{current:!1}]},rc={findFiberByHostInstance:Jr,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},ac={bundleType:rc.bundleType,version:rc.version,rendererPackageName:rc.rendererPackageName,rendererConfig:rc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Je(e))?null:e.stateNode},findFiberByHostInstance:rc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var lc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!lc.isDisabled&&lc.supportsFiber)try{ba=lc.inject(ac),wa=lc}catch(me){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=nc,t.createPortal=tc,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(o(188));throw Error(o(268,Object.keys(e)))}return null===(e=Je(t))?null:e.stateNode},t.flushSync=function(e,t){var n=_i;if(0!=(48&n))return e(t);_i|=1;try{if(e)return Ba(99,e.bind(null,t))}finally{_i=n,Wa()}},t.hydrate=function(e,t,n){if(!Zu(t))throw Error(o(200));return ec(null,e,t,!0,n)},t.render=function(e,t,n){if(!Zu(t))throw Error(o(200));return ec(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Zu(e))throw Error(o(40));return!!e._reactRootContainer&&(mu((function(){ec(null,null,e,!1,(function(){e._reactRootContainer=null,e[Yr]=null}))})),!0)},t.unstable_batchedUpdates=hu,t.unstable_createPortal=function(e,t){return tc(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Zu(n))throw Error(o(200));if(null==e||void 0===e._reactInternals)throw Error(o(38));return ec(e,t,n,!1,r)},t.version="17.0.2"},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},921:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,a=n?Symbol.for("react.portal"):60106,l=n?Symbol.for("react.fragment"):60107,o=n?Symbol.for("react.strict_mode"):60108,i=n?Symbol.for("react.profiler"):60114,u=n?Symbol.for("react.provider"):60109,c=n?Symbol.for("react.context"):60110,s=n?Symbol.for("react.async_mode"):60111,f=n?Symbol.for("react.concurrent_mode"):60111,d=n?Symbol.for("react.forward_ref"):60112,p=n?Symbol.for("react.suspense"):60113,h=n?Symbol.for("react.suspense_list"):60120,m=n?Symbol.for("react.memo"):60115,v=n?Symbol.for("react.lazy"):60116,y=n?Symbol.for("react.block"):60121,g=n?Symbol.for("react.fundamental"):60117,b=n?Symbol.for("react.responder"):60118,w=n?Symbol.for("react.scope"):60119;function k(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case s:case f:case l:case i:case o:case p:return e;default:switch(e=e&&e.$$typeof){case c:case d:case v:case m:case u:return e;default:return t}}case a:return t}}}function E(e){return k(e)===f}t.AsyncMode=s,t.ConcurrentMode=f,t.ContextConsumer=c,t.ContextProvider=u,t.Element=r,t.ForwardRef=d,t.Fragment=l,t.Lazy=v,t.Memo=m,t.Portal=a,t.Profiler=i,t.StrictMode=o,t.Suspense=p,t.isAsyncMode=function(e){return E(e)||k(e)===s},t.isConcurrentMode=E,t.isContextConsumer=function(e){return k(e)===c},t.isContextProvider=function(e){return k(e)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return k(e)===d},t.isFragment=function(e){return k(e)===l},t.isLazy=function(e){return k(e)===v},t.isMemo=function(e){return k(e)===m},t.isPortal=function(e){return k(e)===a},t.isProfiler=function(e){return k(e)===i},t.isStrictMode=function(e){return k(e)===o},t.isSuspense=function(e){return k(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===l||e===f||e===i||e===o||e===p||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===m||e.$$typeof===u||e.$$typeof===c||e.$$typeof===d||e.$$typeof===g||e.$$typeof===b||e.$$typeof===w||e.$$typeof===y)},t.typeOf=k},864:(e,t,n)=>{"use strict";e.exports=n(921)},427:(e,t,n)=>{"use strict";function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,r(e,t)}n.r(t),n.d(t,{BrowserRouter:()=>ye,HashRouter:()=>ge,Link:()=>xe,MemoryRouter:()=>Q,NavLink:()=>Pe,Prompt:()=>K,Redirect:()=>Z,Route:()=>re,Router:()=>q,StaticRouter:()=>ce,Switch:()=>se,generatePath:()=>J,matchPath:()=>ne,useHistory:()=>pe,useLocation:()=>he,useParams:()=>me,useRouteMatch:()=>ve,withRouter:()=>fe});var l=n(294),o=n(697),i=n.n(o);function u(){return(u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function c(e){return"/"===e.charAt(0)}function s(e,t){for(var n=t,r=n+1,a=e.length;r<a;n+=1,r+=1)e[n]=e[r];e.pop()}function f(e){return e.valueOf?e.valueOf():Object.prototype.valueOf.call(e)}const d=function e(t,n){if(t===n)return!0;if(null==t||null==n)return!1;if(Array.isArray(t))return Array.isArray(n)&&t.length===n.length&&t.every((function(t,r){return e(t,n[r])}));if("object"==typeof t||"object"==typeof n){var r=f(t),a=f(n);return r!==t||a!==n?e(r,a):Object.keys(Object.assign({},t,n)).every((function(r){return e(t[r],n[r])}))}return!1};const p=function(e,t){if(!e)throw new Error("Invariant failed")};function h(e){return"/"===e.charAt(0)?e:"/"+e}function m(e){return"/"===e.charAt(0)?e.substr(1):e}function v(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function y(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function g(e){var t=e.pathname,n=e.search,r=e.hash,a=t||"/";return n&&"?"!==n&&(a+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(a+="#"===r.charAt(0)?r:"#"+r),a}function b(e,t,n,r){var a;"string"==typeof e?(a=function(e){var t=e||"/",n="",r="",a=t.indexOf("#");-1!==a&&(r=t.substr(a),t=t.substr(0,a));var l=t.indexOf("?");return-1!==l&&(n=t.substr(l),t=t.substr(0,l)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(a=u({},e)).pathname&&(a.pathname=""),a.search?"?"!==a.search.charAt(0)&&(a.search="?"+a.search):a.search="",a.hash?"#"!==a.hash.charAt(0)&&(a.hash="#"+a.hash):a.hash="",void 0!==t&&void 0===a.state&&(a.state=t));try{a.pathname=decodeURI(a.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+a.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(a.key=n),r?a.pathname?"/"!==a.pathname.charAt(0)&&(a.pathname=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],a=t&&t.split("/")||[],l=e&&c(e),o=t&&c(t),i=l||o;if(e&&c(e)?a=r:r.length&&(a.pop(),a=a.concat(r)),!a.length)return"/";if(a.length){var u=a[a.length-1];n="."===u||".."===u||""===u}else n=!1;for(var f=0,d=a.length;d>=0;d--){var p=a[d];"."===p?s(a,d):".."===p?(s(a,d),f++):f&&(s(a,d),f--)}if(!i)for(;f--;f)a.unshift("..");!i||""===a[0]||a[0]&&c(a[0])||a.unshift("");var h=a.join("/");return n&&"/"!==h.substr(-1)&&(h+="/"),h}(a.pathname,r.pathname)):a.pathname=r.pathname:a.pathname||(a.pathname="/"),a}function w(){var e=null,t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,a){if(null!=e){var l="function"==typeof e?e(t,n):e;"string"==typeof l?"function"==typeof r?r(l,a):a(!0):a(!1!==l)}else a(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var k=!("undefined"==typeof window||!window.document||!window.document.createElement);function E(e,t){t(window.confirm(e))}var S="popstate",x="hashchange";function C(){try{return window.history.state||{}}catch(e){return{}}}function _(e){void 0===e&&(e={}),k||p(!1);var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,a=!(-1===window.navigator.userAgent.indexOf("Trident")),l=e,o=l.forceRefresh,i=void 0!==o&&o,c=l.getUserConfirmation,s=void 0===c?E:c,f=l.keyLength,d=void 0===f?6:f,m=e.basename?y(h(e.basename)):"";function _(e){var t=e||{},n=t.key,r=t.state,a=window.location,l=a.pathname+a.search+a.hash;return m&&(l=v(l,m)),b(l,r,n)}function P(){return Math.random().toString(36).substr(2,d)}var T=w();function N(e){u($,e),$.length=n.length,T.notifyListeners($.location,$.action)}function O(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||z(_(e.state))}function L(){z(_(C()))}var R=!1;function z(e){R?(R=!1,N()):T.confirmTransitionTo(e,"POP",s,(function(t){t?N({action:"POP",location:e}):function(e){var t=$.location,n=I.indexOf(t.key);-1===n&&(n=0);var r=I.indexOf(e.key);-1===r&&(r=0);var a=n-r;a&&(R=!0,A(a))}(e)}))}var M=_(C()),I=[M.key];function F(e){return m+g(e)}function A(e){n.go(e)}var D=0;function U(e){1===(D+=e)&&1===e?(window.addEventListener(S,O),a&&window.addEventListener(x,L)):0===D&&(window.removeEventListener(S,O),a&&window.removeEventListener(x,L))}var j=!1,$={length:n.length,action:"POP",location:M,createHref:F,push:function(e,t){var a="PUSH",l=b(e,t,P(),$.location);T.confirmTransitionTo(l,a,s,(function(e){if(e){var t=F(l),o=l.key,u=l.state;if(r)if(n.pushState({key:o,state:u},null,t),i)window.location.href=t;else{var c=I.indexOf($.location.key),s=I.slice(0,c+1);s.push(l.key),I=s,N({action:a,location:l})}else window.location.href=t}}))},replace:function(e,t){var a="REPLACE",l=b(e,t,P(),$.location);T.confirmTransitionTo(l,a,s,(function(e){if(e){var t=F(l),o=l.key,u=l.state;if(r)if(n.replaceState({key:o,state:u},null,t),i)window.location.replace(t);else{var c=I.indexOf($.location.key);-1!==c&&(I[c]=l.key),N({action:a,location:l})}else window.location.replace(t)}}))},go:A,goBack:function(){A(-1)},goForward:function(){A(1)},block:function(e){void 0===e&&(e=!1);var t=T.setPrompt(e);return j||(U(1),j=!0),function(){return j&&(j=!1,U(-1)),t()}},listen:function(e){var t=T.appendListener(e);return U(1),function(){U(-1),t()}}};return $}var P="hashchange",T={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+m(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:m,decodePath:h},slash:{encodePath:h,decodePath:h}};function N(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function O(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function L(e){window.location.replace(N(window.location.href)+"#"+e)}function R(e){void 0===e&&(e={}),k||p(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),r=n.getUserConfirmation,a=void 0===r?E:r,l=n.hashType,o=void 0===l?"slash":l,i=e.basename?y(h(e.basename)):"",c=T[o],s=c.encodePath,f=c.decodePath;function d(){var e=f(O());return i&&(e=v(e,i)),b(e)}var m=w();function S(e){u(j,e),j.length=t.length,m.notifyListeners(j.location,j.action)}var x=!1,C=null;function _(){var e,t,n=O(),r=s(n);if(n!==r)L(r);else{var l=d(),o=j.location;if(!x&&(t=l,(e=o).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(C===g(l))return;C=null,function(e){if(x)x=!1,S();else{m.confirmTransitionTo(e,"POP",a,(function(t){t?S({action:"POP",location:e}):function(e){var t=j.location,n=I.lastIndexOf(g(t));-1===n&&(n=0);var r=I.lastIndexOf(g(e));-1===r&&(r=0);var a=n-r;a&&(x=!0,F(a))}(e)}))}}(l)}}var R=O(),z=s(R);R!==z&&L(z);var M=d(),I=[g(M)];function F(e){t.go(e)}var A=0;function D(e){1===(A+=e)&&1===e?window.addEventListener(P,_):0===A&&window.removeEventListener(P,_)}var U=!1,j={length:t.length,action:"POP",location:M,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=N(window.location.href)),n+"#"+s(i+g(e))},push:function(e,t){var n="PUSH",r=b(e,void 0,void 0,j.location);m.confirmTransitionTo(r,n,a,(function(e){if(e){var t=g(r),a=s(i+t);if(O()!==a){C=t,function(e){window.location.hash=e}(a);var l=I.lastIndexOf(g(j.location)),o=I.slice(0,l+1);o.push(t),I=o,S({action:n,location:r})}else S()}}))},replace:function(e,t){var n="REPLACE",r=b(e,void 0,void 0,j.location);m.confirmTransitionTo(r,n,a,(function(e){if(e){var t=g(r),a=s(i+t);O()!==a&&(C=t,L(a));var l=I.indexOf(g(j.location));-1!==l&&(I[l]=t),S({action:n,location:r})}}))},go:F,goBack:function(){F(-1)},goForward:function(){F(1)},block:function(e){void 0===e&&(e=!1);var t=m.setPrompt(e);return U||(D(1),U=!0),function(){return U&&(U=!1,D(-1)),t()}},listen:function(e){var t=m.appendListener(e);return D(1),function(){D(-1),t()}}};return j}function z(e,t,n){return Math.min(Math.max(e,t),n)}function M(e){void 0===e&&(e={});var t=e,n=t.getUserConfirmation,r=t.initialEntries,a=void 0===r?["/"]:r,l=t.initialIndex,o=void 0===l?0:l,i=t.keyLength,c=void 0===i?6:i,s=w();function f(e){u(y,e),y.length=y.entries.length,s.notifyListeners(y.location,y.action)}function d(){return Math.random().toString(36).substr(2,c)}var p=z(o,0,a.length-1),h=a.map((function(e){return b(e,void 0,"string"==typeof e?d():e.key||d())})),m=g;function v(e){var t=z(y.index+e,0,y.entries.length-1),r=y.entries[t];s.confirmTransitionTo(r,"POP",n,(function(e){e?f({action:"POP",location:r,index:t}):f()}))}var y={length:h.length,action:"POP",location:h[p],index:p,entries:h,createHref:m,push:function(e,t){var r="PUSH",a=b(e,t,d(),y.location);s.confirmTransitionTo(a,r,n,(function(e){if(e){var t=y.index+1,n=y.entries.slice(0);n.length>t?n.splice(t,n.length-t,a):n.push(a),f({action:r,location:a,index:t,entries:n})}}))},replace:function(e,t){var r="REPLACE",a=b(e,t,d(),y.location);s.confirmTransitionTo(a,r,n,(function(e){e&&(y.entries[y.index]=a,f({action:r,location:a}))}))},go:v,goBack:function(){v(-1)},goForward:function(){v(1)},canGo:function(e){var t=y.index+e;return t>=0&&t<y.entries.length},block:function(e){return void 0===e&&(e=!1),s.setPrompt(e)},listen:function(e){return s.appendListener(e)}};return y}var I=1073741823,F="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:{};function A(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}const D=l.createContext||function(e,t){var n,r,o,u="__create-react-context-"+((F[o="__global_unique_id__"]=(F[o]||0)+1)+"__"),c=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).emitter=A(t.props.value),t}a(n,e);var r=n.prototype;return r.getChildContext=function(){var e;return(e={})[u]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,a=e.value;((l=r)===(o=a)?0!==l||1/l==1/o:l!=l&&o!=o)?n=0:(n="function"==typeof t?t(r,a):I,0!=(n|=0)&&this.emitter.set(e.value,n))}var l,o},r.render=function(){return this.props.children},n}(l.Component);c.childContextTypes=((n={})[u]=i().object.isRequired,n);var s=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}a(n,t);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?I:t},r.componentDidMount=function(){this.context[u]&&this.context[u].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?I:e},r.componentWillUnmount=function(){this.context[u]&&this.context[u].off(this.onUpdate)},r.getValue=function(){return this.context[u]?this.context[u].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(l.Component);return s.contextTypes=((r={})[u]=i().object,r),{Provider:c,Consumer:s}};var U=n(779),j=n.n(U);function $(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}n(864);var B=n(679),V=n.n(B),W=function(e){var t=D();return t.displayName="Router-History",t}(),H=function(e){var t=D();return t.displayName="Router",t}(),q=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}a(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return l.createElement(H.Provider,{value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},l.createElement(W.Provider,{children:this.props.children||null,value:this.props.history}))},t}(l.Component),Q=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(t=e.call.apply(e,[this].concat(r))||this).history=M(t.props),t}return a(t,e),t.prototype.render=function(){return l.createElement(q,{history:this.history,children:this.props.children})},t}(l.Component),X=function(e){function t(){return e.apply(this,arguments)||this}a(t,e);var n=t.prototype;return n.componentDidMount=function(){this.props.onMount&&this.props.onMount.call(this,this)},n.componentDidUpdate=function(e){this.props.onUpdate&&this.props.onUpdate.call(this,this,e)},n.componentWillUnmount=function(){this.props.onUnmount&&this.props.onUnmount.call(this,this)},n.render=function(){return null},t}(l.Component);function K(e){var t=e.message,n=e.when,r=void 0===n||n;return l.createElement(H.Consumer,null,(function(e){if(e||p(!1),!r||e.staticContext)return null;var n=e.history.block;return l.createElement(X,{onMount:function(e){e.release=n(t)},onUpdate:function(e,r){r.message!==t&&(e.release(),e.release=n(t))},onUnmount:function(e){e.release()},message:t})}))}var Y={},G=0;function J(e,t){return void 0===e&&(e="/"),void 0===t&&(t={}),"/"===e?e:function(e){if(Y[e])return Y[e];var t=j().compile(e);return G<1e4&&(Y[e]=t,G++),t}(e)(t,{pretty:!0})}function Z(e){var t=e.computedMatch,n=e.to,r=e.push,a=void 0!==r&&r;return l.createElement(H.Consumer,null,(function(e){e||p(!1);var r=e.history,o=e.staticContext,i=a?r.push:r.replace,c=b(t?"string"==typeof n?J(n,t.params):u({},n,{pathname:J(n.pathname,t.params)}):n);return o?(i(c),null):l.createElement(X,{onMount:function(){i(c)},onUpdate:function(e,t){var n,r,a=b(t.to);n=a,r=u({},c,{key:a.key}),n.pathname===r.pathname&&n.search===r.search&&n.hash===r.hash&&n.key===r.key&&d(n.state,r.state)||i(c)},to:n})}))}var ee={},te=0;function ne(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,a=n.exact,l=void 0!==a&&a,o=n.strict,i=void 0!==o&&o,u=n.sensitive,c=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=ee[n]||(ee[n]={});if(r[e])return r[e];var a=[],l={regexp:j()(e,a,t),keys:a};return te<1e4&&(r[e]=l,te++),l}(n,{end:l,strict:i,sensitive:c}),a=r.regexp,o=r.keys,u=a.exec(e);if(!u)return null;var s=u[0],f=u.slice(1),d=e===s;return l&&!d?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:d,params:o.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}var re=function(e){function t(){return e.apply(this,arguments)||this}return a(t,e),t.prototype.render=function(){var e=this;return l.createElement(H.Consumer,null,(function(t){t||p(!1);var n=e.props.location||t.location,r=u({},t,{location:n,match:e.props.computedMatch?e.props.computedMatch:e.props.path?ne(n.pathname,e.props):t.match}),a=e.props,o=a.children,i=a.component,c=a.render;return Array.isArray(o)&&0===o.length&&(o=null),l.createElement(H.Provider,{value:r},r.match?o?"function"==typeof o?o(r):o:i?l.createElement(i,r):c?c(r):null:"function"==typeof o?o(r):null)}))},t}(l.Component);function ae(e){return"/"===e.charAt(0)?e:"/"+e}function le(e,t){if(!e)return t;var n=ae(e);return 0!==t.pathname.indexOf(n)?t:u({},t,{pathname:t.pathname.substr(n.length)})}function oe(e){return"string"==typeof e?e:g(e)}function ie(e){return function(){p(!1)}}function ue(){}var ce=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(t=e.call.apply(e,[this].concat(r))||this).handlePush=function(e){return t.navigateTo(e,"PUSH")},t.handleReplace=function(e){return t.navigateTo(e,"REPLACE")},t.handleListen=function(){return ue},t.handleBlock=function(){return ue},t}a(t,e);var n=t.prototype;return n.navigateTo=function(e,t){var n=this.props,r=n.basename,a=void 0===r?"":r,l=n.context,o=void 0===l?{}:l;o.action=t,o.location=function(e,t){return e?u({},t,{pathname:ae(e)+t.pathname}):t}(a,b(e)),o.url=oe(o.location)},n.render=function(){var e=this.props,t=e.basename,n=void 0===t?"":t,r=e.context,a=void 0===r?{}:r,o=e.location,i=void 0===o?"/":o,c=$(e,["basename","context","location"]),s={createHref:function(e){return ae(n+oe(e))},action:"POP",location:le(n,b(i)),push:this.handlePush,replace:this.handleReplace,go:ie(),goBack:ie(),goForward:ie(),listen:this.handleListen,block:this.handleBlock};return l.createElement(q,u({},c,{history:s,staticContext:a}))},t}(l.Component),se=function(e){function t(){return e.apply(this,arguments)||this}return a(t,e),t.prototype.render=function(){var e=this;return l.createElement(H.Consumer,null,(function(t){t||p(!1);var n,r,a=e.props.location||t.location;return l.Children.forEach(e.props.children,(function(e){if(null==r&&l.isValidElement(e)){n=e;var o=e.props.path||e.props.from;r=o?ne(a.pathname,u({},e.props,{path:o})):t.match}})),r?l.cloneElement(n,{location:a,computedMatch:r}):null}))},t}(l.Component);function fe(e){var t="withRouter("+(e.displayName||e.name)+")",n=function(t){var n=t.wrappedComponentRef,r=$(t,["wrappedComponentRef"]);return l.createElement(H.Consumer,null,(function(t){return t||p(!1),l.createElement(e,u({},r,t,{ref:n}))}))};return n.displayName=t,n.WrappedComponent=e,V()(n,e)}var de=l.useContext;function pe(){return de(W)}function he(){return de(H).location}function me(){var e=de(H).match;return e?e.params:{}}function ve(e){var t=he(),n=de(H).match;return e?ne(t.pathname,e):n}var ye=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(t=e.call.apply(e,[this].concat(r))||this).history=_(t.props),t}return a(t,e),t.prototype.render=function(){return l.createElement(q,{history:this.history,children:this.props.children})},t}(l.Component),ge=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(t=e.call.apply(e,[this].concat(r))||this).history=R(t.props),t}return a(t,e),t.prototype.render=function(){return l.createElement(q,{history:this.history,children:this.props.children})},t}(l.Component),be=function(e,t){return"function"==typeof e?e(t):e},we=function(e,t){return"string"==typeof e?b(e,null,null,t):e},ke=function(e){return e},Ee=l.forwardRef;void 0===Ee&&(Ee=ke);var Se=Ee((function(e,t){var n=e.innerRef,r=e.navigate,a=e.onClick,o=$(e,["innerRef","navigate","onClick"]),i=o.target,c=u({},o,{onClick:function(e){try{a&&a(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||i&&"_self"!==i||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return c.ref=ke!==Ee&&t||n,l.createElement("a",c)})),xe=Ee((function(e,t){var n=e.component,r=void 0===n?Se:n,a=e.replace,o=e.to,i=e.innerRef,c=$(e,["component","replace","to","innerRef"]);return l.createElement(H.Consumer,null,(function(e){e||p(!1);var n=e.history,s=we(be(o,e.location),e.location),f=s?n.createHref(s):"",d=u({},c,{href:f,navigate:function(){var t=be(o,e.location);(a?n.replace:n.push)(t)}});return ke!==Ee?d.ref=t||i:d.innerRef=i,l.createElement(r,d)}))})),Ce=function(e){return e},_e=l.forwardRef;void 0===_e&&(_e=Ce);var Pe=_e((function(e,t){var n=e["aria-current"],r=void 0===n?"page":n,a=e.activeClassName,o=void 0===a?"active":a,i=e.activeStyle,c=e.className,s=e.exact,f=e.isActive,d=e.location,h=e.sensitive,m=e.strict,v=e.style,y=e.to,g=e.innerRef,b=$(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return l.createElement(H.Consumer,null,(function(e){e||p(!1);var n=d||e.location,a=we(be(y,n),n),w=a.pathname,k=w&&w.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),E=k?ne(n.pathname,{path:k,exact:s,sensitive:h,strict:m}):null,S=!!(f?f(E,n):E),x=S?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(c,o):c,C=S?u({},v,{},i):v,_=u({"aria-current":S&&r||null,className:x,style:C,to:a},b);return Ce!==_e?_.ref=t||g:_.innerRef=g,l.createElement(xe,_)}))}))},408:(e,t,n)=>{"use strict";var r=n(418),a=60103,l=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var o=60109,i=60110,u=60112;t.Suspense=60113;var c=60115,s=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;a=f("react.element"),l=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),o=f("react.provider"),i=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),c=f("react.memo"),s=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function v(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}function y(){}function g(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=v.prototype;var b=g.prototype=new y;b.constructor=g,r(b,v.prototype),b.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,E={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,n){var r,l={},o=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(o=""+t.key),t)k.call(t,r)&&!E.hasOwnProperty(r)&&(l[r]=t[r]);var u=arguments.length-2;if(1===u)l.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];l.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===l[r]&&(l[r]=u[r]);return{$$typeof:a,type:e,key:o,ref:i,props:l,_owner:w.current}}function x(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var C=/\/+/g;function _(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function P(e,t,n,r,o){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var u=!1;if(null===e)u=!0;else switch(i){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case a:case l:u=!0}}if(u)return o=o(u=e),e=""===r?"."+_(u,0):r,Array.isArray(o)?(n="",null!=e&&(n=e.replace(C,"$&/")+"/"),P(o,t,n,"",(function(e){return e}))):null!=o&&(x(o)&&(o=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,n+(!o.key||u&&u.key===o.key?"":(""+o.key).replace(C,"$&/")+"/")+e)),t.push(o)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var c=0;c<e.length;c++){var s=r+_(i=e[c],c);u+=P(i,t,n,s,o)}else if("function"==typeof(s=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=s.call(e),c=0;!(i=e.next()).done;)u+=P(i=i.value,t,n,s=r+_(i,c++),o);else if("object"===i)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function T(e,t,n){if(null==e)return e;var r=[],a=0;return P(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function N(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var O={current:null};function L(){var e=O.current;if(null===e)throw Error(p(321));return e}var R={ReactCurrentDispatcher:O,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:T,forEach:function(e,t,n){T(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return T(e,(function(){t++})),t},toArray:function(e){return T(e,(function(e){return e}))||[]},only:function(e){if(!x(e))throw Error(p(143));return e}},t.Component=v,t.PureComponent=g,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=R,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var l=r({},e.props),o=e.key,i=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,u=w.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)k.call(t,s)&&!E.hasOwnProperty(s)&&(l[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)l.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];l.children=c}return{$$typeof:a,type:e.type,key:o,ref:i,props:l,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:i,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},t.createElement=S,t.createFactory=function(e){var t=S.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=x,t.lazy=function(e){return{$$typeof:s,_payload:{_status:-1,_result:e},_init:N}},t.memo=function(e,t){return{$$typeof:c,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return L().useCallback(e,t)},t.useContext=function(e,t){return L().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return L().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return L().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return L().useLayoutEffect(e,t)},t.useMemo=function(e,t){return L().useMemo(e,t)},t.useReducer=function(e,t,n){return L().useReducer(e,t,n)},t.useRef=function(e){return L().useRef(e)},t.useState=function(e){return L().useState(e)},t.version="17.0.2"},294:(e,t,n)=>{"use strict";e.exports=n(408)},53:(e,t)=>{"use strict";var n,r,a,l;if("object"==typeof performance&&"function"==typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var i=Date,u=i.now();t.unstable_now=function(){return i.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,s=null,f=function(){if(null!==c)try{var e=t.unstable_now();c(!0,e),c=null}catch(e){throw setTimeout(f,0),e}};n=function(e){null!==c?setTimeout(n,0,e):(c=e,setTimeout(f,0))},r=function(e,t){s=setTimeout(e,t)},a=function(){clearTimeout(s)},t.unstable_shouldYield=function(){return!1},l=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var m=!1,v=null,y=-1,g=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},l=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):g=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,k=w.port2;w.port1.onmessage=function(){if(null!==v){var e=t.unstable_now();b=e+g;try{v(!0,e)?k.postMessage(null):(m=!1,v=null)}catch(e){throw k.postMessage(null),e}}else m=!1},n=function(e){v=e,m||(m=!0,k.postMessage(null))},r=function(e,n){y=d((function(){e(t.unstable_now())}),n)},a=function(){p(y),y=-1}}function E(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,a=e[r];if(!(void 0!==a&&0<C(a,t)))break e;e[r]=t,e[n]=a,n=r}}function S(e){return void 0===(e=e[0])?null:e}function x(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length;r<a;){var l=2*(r+1)-1,o=e[l],i=l+1,u=e[i];if(void 0!==o&&0>C(o,n))void 0!==u&&0>C(u,o)?(e[r]=u,e[i]=n,r=i):(e[r]=o,e[l]=n,r=l);else{if(!(void 0!==u&&0>C(u,n)))break e;e[r]=u,e[i]=n,r=i}}}return t}return null}function C(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var _=[],P=[],T=1,N=null,O=3,L=!1,R=!1,z=!1;function M(e){for(var t=S(P);null!==t;){if(null===t.callback)x(P);else{if(!(t.startTime<=e))break;x(P),t.sortIndex=t.expirationTime,E(_,t)}t=S(P)}}function I(e){if(z=!1,M(e),!R)if(null!==S(_))R=!0,n(F);else{var t=S(P);null!==t&&r(I,t.startTime-e)}}function F(e,n){R=!1,z&&(z=!1,a()),L=!0;var l=O;try{for(M(n),N=S(_);null!==N&&(!(N.expirationTime>n)||e&&!t.unstable_shouldYield());){var o=N.callback;if("function"==typeof o){N.callback=null,O=N.priorityLevel;var i=o(N.expirationTime<=n);n=t.unstable_now(),"function"==typeof i?N.callback=i:N===S(_)&&x(_),M(n)}else x(_);N=S(_)}if(null!==N)var u=!0;else{var c=S(P);null!==c&&r(I,c.startTime-n),u=!1}return u}finally{N=null,O=l,L=!1}}var A=l;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){R||L||(R=!0,n(F))},t.unstable_getCurrentPriorityLevel=function(){return O},t.unstable_getFirstCallbackNode=function(){return S(_)},t.unstable_next=function(e){switch(O){case 1:case 2:case 3:var t=3;break;default:t=O}var n=O;O=t;try{return e()}finally{O=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=A,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=O;O=e;try{return t()}finally{O=n}},t.unstable_scheduleCallback=function(e,l,o){var i=t.unstable_now();switch(o="object"==typeof o&&null!==o&&"number"==typeof(o=o.delay)&&0<o?i+o:i,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:T++,callback:l,priorityLevel:e,startTime:o,expirationTime:u=o+u,sortIndex:-1},o>i?(e.sortIndex=o,E(P,e),null===S(_)&&e===S(P)&&(z?a():z=!0,r(I,o-i))):(e.sortIndex=u,E(_,e),R||L||(R=!0,n(F))),e},t.unstable_wrapCallback=function(e){var t=O;return function(){var n=O;O=t;try{return e.apply(this,arguments)}finally{O=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)},632:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(294),a=n(427),l=n(107),o=n(475),i=n(682),u=n(976),c=n(554);t.default=function(){return r.createElement(a.HashRouter,null,r.createElement(i.default,null),r.createElement(a.Switch,null,r.createElement(a.Route,{exact:!0,path:"/",component:o.default}),r.createElement(a.Route,{path:"/faq",component:u.default}),r.createElement(a.Route,{path:"/about",component:l.default})),r.createElement(c.default,null))}},107:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(294);t.default=function(){return r.createElement("div",{id:"about-container"},r.createElement("div",{className:"about-h1"},r.createElement("h1",null,"The Purpose of This Webpage")),r.createElement("div",{className:"p-container"},r.createElement("p",null,"I am surprised that there is not a simple webpage out there that shows covariances or correlations of popular cryptoassets against Bitcoin. It is undeniable that it feels like there are strong relationships amongst these coins with Bitcoin, but how quantitatively strong? You can find charts out there, for example ETHBTC or Bitcoin Dominance, but they do not show you everything. I am presenting one more tool you can use."),r.createElement("p",null,"I thought it was important to determine both how strongly these cryptoassets were correlated to BTC(correlation coeffecient) and the magnitude of their variance from their means(covariance). We know smaller coins tend to be more volatile than BTC since they are usually more liquid(very little BTC is actually traded on exchanges) with smaller market caps. So if I thought that BTC may go up, why not instead find an asset with a higher volatility, high covariance and high correlation instead? Of course I would likely still research some basic technical and fundamental analysis. Not financial advice."),r.createElement("p",null,"This webpage only fetches data from 30 days of the market. But a month is a long time in the highly erratic cryptoworld. Because this page is purely front end it needs to fetch api data every time is it loaded. You may have to reload the page to fill out the data table.")),r.createElement("div",{className:"blank"}))}},976:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(294);t.default=function(){return r.createElement("div",{id:"faq-container"},r.createElement("div",{className:"faq-h1"},r.createElement("h1",null,"Frequently Asked Questions")),r.createElement("div",{className:"desc-mean"},r.createElement("h2",null,"What is Expected Return?"),r.createElement("p",null,"This represents the expected percent of gain or loss each day. It is the weighted average of recent returns. Also called the mean, it is calculated by summing the realized daily returns and dividing by the number of periods. The returns are the percentage increases in the value of the asset per dollar initially invested. I am multiplying by 100 to get a number that looks like 2.00 rather than 0.02. Then dividing by 30 because I am calculating the mean over 30 days. Note that I'm fetching 31 days of data because the formula uses i+1."),r.createElement("br",null),r.createElement("div",{className:"mjs"},"$E[X]=\\frac{100}{30}⋅\\sum_{i=1}^{30}\\frac{{X_{i+1}-{X_i}}}{X_i}$"),r.createElement("br",null),r.createElement("ul",null,r.createElement("li",null,"Expected return can be positive or negative. "),r.createElement("li",null,"A positive number likely indicates an uptrend while a negative number likely indicates a downtrend."))),r.createElement("div",{className:"desc-var"},r.createElement("h2",null,"What is Variance?"),r.createElement("p",null,"Variance is the expected squared deviation from the mean. It is a  measure of the dispersion of returns. The method I've used to calculate the variance of an asset is the mean of the square minus the square of the mean."),r.createElement("br",null),r.createElement("div",{className:"mjs"},"$Var[X] = E[X^{2}] - E[X]^{2}$"),r.createElement("br",null),r.createElement("p",null,"Although not usually used directly to make observations about an asset, it is used within the calculations of volatility, covariance and correlation. I added variance for completeness and to point out that the variance and covariance of BTC are equal. Therefore the correlation will also be 1. That means my calculations on this website are right!"),r.createElement("br",null),r.createElement("div",{className:"mjs"},"$Cov[X, X] = E[(X_{i}-E[X])⋅(X_{i}-E[X])] = E[(X_{i}-E[X])^{2}] = Var[X]$"),r.createElement("br",null),r.createElement("div",{className:"mjs"},"$ρ_{X, X}=\\frac{Cov[X, X]}{σ_{X} ⋅ σ_{X}} = \\frac{Var[X]}{Var[X]} = 1$"),r.createElement("br",null),r.createElement("ul",null,r.createElement("li",null,"Variance cannot be negative and will usually be large."),r.createElement("li",null,"There are multiple ways to calculate variance."))),r.createElement("div",{className:"desc-vol"},r.createElement("h2",null,"What is Volatility?"),r.createElement("p",null,"Volatility, or standard deviation in non-finance terms, is a measure of the dispersion of returns for an asset. It is the backbone of popular market incidators such as bollinger bands and other confidence intervals. It is calculated simply via the square root of the variance."),r.createElement("br",null),r.createElement("div",{className:"mjs"},"$σ_{X} = SD[X] = \\sqrt{Var[X]}$"),r.createElement("br",null),r.createElement("ul",null,r.createElement("li",null,"Volatility cannot be negative as it is the result of a square root."),r.createElement("li",null,"High volatility indicates a large price range while low volatility indicaes a small price range."))),r.createElement("div",{className:"desc-cov"},r.createElement("h2",null,"What is Covariance?"),r.createElement("p",null,"Covariance measures the extent or magnitude to which two variables fluctuate or move together. It is not normalized so it could be hard to use the variable as it is."),r.createElement("br",null),r.createElement("div",{className:"mjs"},"$Cov[X,  BTC]=\\sum_{i=1}^{30}\\frac{{(X_i - E[X])} ⋅{(BTC_i - E[BTC])}}{30}$"),r.createElement("br",null),r.createElement("ul",null,r.createElement("li",null,"If the covariance is positive, then the two variables tend to move together. High covariance measures high variation from their expected values. "),r.createElement("li",null,"If the covariance is negative, then the two variables tend to move in opposite directions. Low covariance measures low variation from their expected values."),r.createElement("li",null,"If the covariance is 0, then there is no linear relationship between the two variables."))),r.createElement("div",{className:"desc-cor"},r.createElement("h2",null,"What is Correlation?"),r.createElement("p",null,"Correlation, specifically the correlation coeffecient here, is a unitless measure of the strength and direction of the linear relationship between two variables. It is more useful than covariance because it is dimensionless and normalized between -1 and 1. It is obtained by dividing the covariance of two variables by the product of their standard deviations:"),r.createElement("br",null),r.createElement("div",{className:"mjs"},"$ρ_{X, BTC}=\\frac{Cov[X, BTC]}{{\\sigma_X}⋅{\\sigma_{BTC}}}$"),r.createElement("br",null),r.createElement("ul",null,r.createElement("li",null,"A correlation of 1 indicates perfect positive correlation between two variables. The closer the correlation is to 1, the more the variables tend to move together in the same direction"),r.createElement("li",null,"A correlation -1 of indicates perfect negative correlation between two variables. The closer the correlation is to -1, the more the variables tend to move in opposite directions."),r.createElement("li",null,"A correlation of 0 indicates no linear relationship between two variables. Movement of one variable provides no prediction regarding the movement of the other variable."))))}},554:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(294);t.default=function(){return r.createElement("footer",null,r.createElement("span",null,"Created by Steven Fabrizio 2021"))}},475:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,l){function o(e){try{u(r.next(e))}catch(e){l(e)}}function i(e){try{u(r.throw(e))}catch(e){l(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,i)}u((r=r.apply(e,t||[])).next())}))},a=this&&this.__generator||function(e,t){var n,r,a,l,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return l={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(l[Symbol.iterator]=function(){return this}),l;function i(l){return function(i){return function(l){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(a=2&l[0]?r.return:l[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,l[1])).done)return a;switch(r=0,a&&(l=[2&l[0],a.value]),l[0]){case 0:case 1:a=l;break;case 4:return o.label++,{value:l[1],done:!1};case 5:o.label++,r=l[1],l=[0];continue;case 7:l=o.ops.pop(),o.trys.pop();continue;default:if(!((a=(a=o.trys).length>0&&a[a.length-1])||6!==l[0]&&2!==l[0])){o=0;continue}if(3===l[0]&&(!a||l[1]>a[0]&&l[1]<a[3])){o.label=l[1];break}if(6===l[0]&&o.label<a[1]){o.label=a[1],a=l;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(l);break}a[2]&&o.ops.pop(),o.trys.pop();continue}l=t.call(e,o)}catch(e){l=[6,e],r=0}finally{n=a=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([l,i])}}};Object.defineProperty(t,"__esModule",{value:!0});var l=n(294),o=n(294),i=n(427);t.default=function(){var e=[],t=0,n=0,u=[],c=[],s=[],f=[],d=0,p=0,h=0,m=0,v=0,y=0;return o.useEffect((function(){!function(){r(this,void 0,void 0,(function(){return a(this,(function(r){switch(r.label){case 0:return[4,fetch("https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=50&page=1&sparkline=false").then((function(e){return e.json()})).then((function(r){for(var a=function(a){e.push(r[a].id);var l=document.createElement("tr"),o=document.createElement("td");o.innerText=r[a].market_cap_rank,o.classList.add("ranks"),l.appendChild(o);var i=document.createElement("td");i.innerText=r[a].symbol,l.classList.add(r[a].id),l.appendChild(i);var g=document.createElement("td");g.innerText=r[a].current_price.toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g,","),l.appendChild(g);var b=document.createElement("td");b.innerText=r[a].market_cap.toLocaleString(),l.appendChild(b),document.querySelector("tbody").appendChild(l),fetch("https://api.coingecko.com/api/v3/coins/"+r[a].id+"/market_chart?vs_currency=usd&days=31&interval=daily").then((function(e){return e.json()})).then((function(l){if("internet-computer"===r[a].id||"usd-coin"===r[a].id||"binance-usd"===r[a].id||"dai"===r[a].id||"tether"===r[a].id){for(var o=0;o<5;o++){var i=document.createElement("td");i.innerText="",document.querySelector("."+e[a]).appendChild(i)}return!1}s=[];for(var g=0;g<31;g++)s.push(l.prices[g][1]);f=[];for(var b=0;b<30;b++){var w=(s[b+1]-s[b])/s[b]*100;f.push(w)}d=0;for(var k=0;k<30;k++)d+=f[k]/30;p=0;for(var E=0;E<30;E++)p+=Math.pow(f[E],2)/30;h=0,m=0,h=p-Math.pow(d,2),m=Math.sqrt(h);var S=document.createElement("td");S.innerText=d.toFixed(2).toString()+"%",document.querySelector("."+e[a]).appendChild(S);var x=document.createElement("td");x.innerText=h.toFixed(2).toString(),document.querySelector("."+e[a]).appendChild(x);var C=document.createElement("td");if(C.innerText=m.toFixed(2).toString()+"%",document.querySelector("."+e[a]).appendChild(C),"bitcoin"===r[a].id){n=d,t=m,c=f;for(var _=0;_<30;_++)u.push(l.prices[_][1])}v=0,y=0;for(var P=0;P<30;P++)v+=(f[P]-d)*(c[P]-n)/30;y=v/(t*m);var T=document.createElement("td");T.innerText=v.toFixed(2).toString(),document.querySelector("."+e[a]).appendChild(T);var N=document.createElement("td");N.innerText=y.toFixed(5).toString(),document.querySelector("."+e[a]).appendChild(N)}))},l=0;l<50;l++)a(l)}))];case 1:return r.sent(),[2]}}))}))}()}),[]),l.createElement("div",{id:"main-container"},l.createElement("h1",null,"Bitcoin Covariances and Correlations"),l.createElement("h4",null,"Based off of the last thirty daily closes of the market"),l.createElement(i.NavLink,{exact:!0,activeClassname:"active",to:"/"},l.createElement("button",{onClick:function(){return location.reload()}},"⟳")),l.createElement("table",{className:"coin-table"},l.createElement("tr",{className:"tr1"},l.createElement("th",{className:"rank"},"#"),l.createElement("th",{className:"name"},"Name"),l.createElement("th",{className:"price"},"Price"),l.createElement("th",{className:"market-cap"},"Market Cap"),l.createElement("th",{className:"return"},"E[X]"),l.createElement("th",{className:"var"},"Var"),l.createElement("th",{className:"sig"},"Vol"),l.createElement("th",{className:"covar"},"Covar"),l.createElement("th",{className:"cor"},"Corr")),l.createElement("tbody",null)),l.createElement("div",{className:"span-container"},l.createElement("span",null,"*Price and Market Cap are in US Dollars."),l.createElement("br",null),l.createElement("span",null,"*Note that 'Stable Coins' do not have data calculated. ICP does not have enough historical data available."),l.createElement("br",null),l.createElement("span",null,"*If you see NaN try ",l.createElement("a",{onClick:function(){return location.reload(!1)},title:"Reload Data"},"refreshing the page. ⟳")),l.createElement("br",null),l.createElement("span",null,"*Assets like SHIB have nonzero prices.")))}},682:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(294),a=n(427);t.default=function(){return r.createElement("nav",null,r.createElement("ul",null,r.createElement("li",null),r.createElement(a.NavLink,{exact:!0,activeClassname:"active",to:"/"},r.createElement("li",null,"Home")),r.createElement(a.NavLink,{activeclassName:"active",to:"/faq",onClick:function(){return setTimeout((function(){return location.reload()}),10)}},r.createElement("li",null,"FAQ")),r.createElement(a.NavLink,{activeClassName:"active",to:"/about"},r.createElement("li",null,"About")),r.createElement("li",null)))}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var l=t[r]={exports:{}};return e[r].call(l.exports,l,l.exports,n),l.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";var e=n(294),t=n(935),r=n(632);t.render(e.createElement(r.default,null),document.querySelector("#root"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,