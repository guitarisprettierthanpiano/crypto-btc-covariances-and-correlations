/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={679:(e,t,n)=>{"use strict";var r=n(864),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},l={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},i={};function u(e){return r.isMemo(e)?l:i[e.$$typeof]||a}i[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},i[r.Memo]=l;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var a=p(n);a&&a!==h&&e(t,a,r)}var l=s(n);f&&(l=l.concat(f(n)));for(var i=u(t),m=u(n),v=0;v<l.length;++v){var y=l[v];if(!(o[y]||r&&r[y]||m&&m[y]||i&&i[y])){var g=d(n,y);try{c(t,y,g)}catch(e){}}}}return t}},90:e=>{function t(e,t){e.onload=function(){this.onerror=this.onload=null,t(null,e)},e.onerror=function(){this.onerror=this.onload=null,t(new Error("Failed to load "+this.src),e)}}function n(e,t){e.onreadystatechange=function(){"complete"!=this.readyState&&"loaded"!=this.readyState||(this.onreadystatechange=null,t(null,e))}}e.exports=function(e,r,a){var o=document.head||document.getElementsByTagName("head")[0],l=document.createElement("script");"function"==typeof r&&(a=r,r={}),r=r||{},a=a||function(){},l.type=r.type||"text/javascript",l.charset=r.charset||"utf8",l.async=!("async"in r)||!!r.async,l.src=e,r.attrs&&function(e,t){for(var n in t)e.setAttribute(n,t[n])}(l,r.attrs),r.text&&(l.text=""+r.text),("onload"in l?t:n)(l,a),l.onload||t(l,a),o.appendChild(l)}},418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,o){for(var l,i,u=a(e),c=1;c<arguments.length;c++){for(var s in l=Object(arguments[c]))n.call(l,s)&&(u[s]=l[s]);if(t){i=t(l);for(var f=0;f<i.length;f++)r.call(l,i[f])&&(u[i[f]]=l[i[f]])}}return u}},779:(e,t,n)=>{var r=n(173);e.exports=function e(t,n,a){return r(n)||(a=n||a,n=[]),a=a||{},t instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(t,n):r(t)?function(t,n,r){for(var a=[],o=0;o<t.length;o++)a.push(e(t[o],n,r).source);return s(new RegExp("(?:"+a.join("|")+")",f(r)),n)}(t,n,a):function(e,t,n){return d(o(e,n),t,n)}(t,n,a)},e.exports.parse=o,e.exports.compile=function(e,t){return i(o(e,t),t)},e.exports.tokensToFunction=i,e.exports.tokensToRegExp=d;var a=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function o(e,t){for(var n,r=[],o=0,l=0,i="",s=t&&t.delimiter||"/";null!=(n=a.exec(e));){var f=n[0],d=n[1],p=n.index;if(i+=e.slice(l,p),l=p+f.length,d)i+=d[1];else{var h=e[l],m=n[2],v=n[3],y=n[4],g=n[5],b=n[6],w=n[7];i&&(r.push(i),i="");var k=null!=m&&null!=h&&h!==m,E="+"===b||"*"===b,x="?"===b||"*"===b,S=n[2]||s,_=y||g;r.push({name:v||o++,prefix:m||"",delimiter:S,optional:x,repeat:E,partial:k,asterisk:!!w,pattern:_?c(_):w?".*":"[^"+u(S)+"]+?"})}}return l<e.length&&(i+=e.substr(l)),i&&r.push(i),r}function l(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function i(e,t){for(var n=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(n[a]=new RegExp("^(?:"+e[a].pattern+")$",f(t)));return function(t,a){for(var o="",i=t||{},u=(a||{}).pretty?l:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,d=i[s.name];if(null==d){if(s.optional){s.partial&&(o+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!n[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");o+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!n[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');o+=s.prefix+f}}else o+=s}return o}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e&&e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var a=(n=n||{}).strict,o=!1!==n.end,l="",i=0;i<e.length;i++){var c=e[i];if("string"==typeof c)l+=u(c);else{var d=u(c.prefix),p="(?:"+c.pattern+")";t.push(c),c.repeat&&(p+="(?:"+d+p+")*"),l+=p=c.optional?c.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var h=u(n.delimiter||"/"),m=l.slice(-h.length)===h;return a||(l=(m?l.slice(0,-h.length):l)+"(?:"+h+"(?=$))?"),l+=o?"$":a&&m?"":"(?="+h+"|$)",s(new RegExp("^"+l,f(n)),t)}},173:e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},703:(e,t,n)=>{"use strict";var r=n(414);function a(){}function o(){}o.resetWarningCache=a,e.exports=function(){function e(e,t,n,a,o,l){if(l!==r){var i=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw i.name="Invariant Violation",i}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:o,resetWarningCache:a};return n.PropTypes=n,n}},697:(e,t,n)=>{e.exports=n(703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},448:(e,t,n)=>{"use strict";var r=n(294),a=n(418),o=n(840);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(l(227));var i=new Set,u={};function c(e,t){s(e,t),s(e+"Capture",t)}function s(e,t){for(u[e]=t,e=0;e<t.length;e++)i.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},m={};function v(e,t,n,r,a,o,l){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=l}var y={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){y[e]=new v(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];y[t]=new v(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){y[e]=new v(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){y[e]=new v(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){y[e]=new v(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){y[e]=new v(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){y[e]=new v(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){y[e]=new v(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){y[e]=new v(e,5,!1,e.toLowerCase(),null,!1,!1)}));var g=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,n,r){var a=y.hasOwnProperty(t)?y[t]:null;(null!==a?0===a.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!p.call(m,e)||!p.call(h,e)&&(d.test(e)?m[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){y[e]=new v(e,1,!1,e.toLowerCase(),null,!1,!1)})),y.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){y[e]=new v(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,E=60103,x=60106,S=60107,_=60108,C=60114,P=60109,T=60110,O=60112,M=60113,N=60120,j=60115,L=60116,R=60121,z=60128,$=60129,I=60130,A=60131;if("function"==typeof Symbol&&Symbol.for){var F=Symbol.for;E=F("react.element"),x=F("react.portal"),S=F("react.fragment"),_=F("react.strict_mode"),C=F("react.profiler"),P=F("react.provider"),T=F("react.context"),O=F("react.forward_ref"),M=F("react.suspense"),N=F("react.suspense_list"),j=F("react.memo"),L=F("react.lazy"),R=F("react.block"),F("react.scope"),z=F("react.opaque.id"),$=F("react.debug_trace_mode"),I=F("react.offscreen"),A=F("react.legacy_hidden")}var U,D="function"==typeof Symbol&&Symbol.iterator;function H(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=D&&e[D]||e["@@iterator"])?e:null}function B(e){if(void 0===U)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);U=t&&t[1]||""}return"\n"+U+e}var V=!1;function W(e,t){if(!e||V)return"";V=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),o=r.stack.split("\n"),l=a.length-1,i=o.length-1;1<=l&&0<=i&&a[l]!==o[i];)i--;for(;1<=l&&0<=i;l--,i--)if(a[l]!==o[i]){if(1!==l||1!==i)do{if(l--,0>--i||a[l]!==o[i])return"\n"+a[l].replace(" at new "," at ")}while(1<=l&&0<=i);break}}}finally{V=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?B(e):""}function q(e){switch(e.tag){case 5:return B(e.type);case 16:return B("Lazy");case 13:return B("Suspense");case 19:return B("SuspenseList");case 0:case 2:case 15:return W(e.type,!1);case 11:return W(e.type.render,!1);case 22:return W(e.type._render,!1);case 1:return W(e.type,!0);default:return""}}function X(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case S:return"Fragment";case x:return"Portal";case C:return"Profiler";case _:return"StrictMode";case M:return"Suspense";case N:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case T:return(e.displayName||"Context")+".Consumer";case P:return(e._context.displayName||"Context")+".Provider";case O:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case j:return X(e.type);case R:return X(e._render);case L:t=e._payload,e=e._init;try{return X(e(t))}catch(e){}}return null}function Q(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function J(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function K(e){e._valueTracker||(e._valueTracker=function(e){var t=J(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Y(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=J(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function G(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Z(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=Q(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=Q(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ae(e,t.type,n):t.hasOwnProperty("defaultValue")&&ae(e,t.type,Q(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ae(e,t,n){"number"===t&&G(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function oe(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function le(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+Q(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function ie(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:Q(n)}}function ce(e,t){var n=Q(t.value),r=Q(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function se(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?de(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var he,me,ve=(me=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((he=he||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=he.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return me(e,t)}))}:me);function ye(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ge={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function we(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ge.hasOwnProperty(e)&&ge[e]?(""+t).trim():t+"px"}function ke(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=we(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(ge).forEach((function(e){be.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ge[t]=ge[e]}))}));var Ee=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function xe(e,t){if(t){if(Ee[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62))}}function Se(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function _e(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ce=null,Pe=null,Te=null;function Oe(e){if(e=Zr(e)){if("function"!=typeof Ce)throw Error(l(280));var t=e.stateNode;t&&(t=ta(t),Ce(e.stateNode,e.type,t))}}function Me(e){Pe?Te?Te.push(e):Te=[e]:Pe=e}function Ne(){if(Pe){var e=Pe,t=Te;if(Te=Pe=null,Oe(e),t)for(e=0;e<t.length;e++)Oe(t[e])}}function je(e,t){return e(t)}function Le(e,t,n,r,a){return e(t,n,r,a)}function Re(){}var ze=je,$e=!1,Ie=!1;function Ae(){null===Pe&&null===Te||(Re(),Ne())}function Fe(e,t){var n=e.stateNode;if(null===n)return null;var r=ta(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}var Ue=!1;if(f)try{var De={};Object.defineProperty(De,"passive",{get:function(){Ue=!0}}),window.addEventListener("test",De,De),window.removeEventListener("test",De,De)}catch(me){Ue=!1}function He(e,t,n,r,a,o,l,i,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var Be=!1,Ve=null,We=!1,qe=null,Xe={onError:function(e){Be=!0,Ve=e}};function Qe(e,t,n,r,a,o,l,i,u){Be=!1,Ve=null,He.apply(Xe,arguments)}function Je(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ke(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ye(e){if(Je(e)!==e)throw Error(l(188))}function Ge(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Je(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){n=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===n)return Ye(a),e;if(o===r)return Ye(a),t;o=o.sibling}throw Error(l(188))}if(n.return!==r.return)n=a,r=o;else{for(var i=!1,u=a.child;u;){if(u===n){i=!0,n=a,r=o;break}if(u===r){i=!0,r=a,n=o;break}u=u.sibling}if(!i){for(u=o.child;u;){if(u===n){i=!0,n=o,r=a;break}if(u===r){i=!0,r=o,n=a;break}u=u.sibling}if(!i)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Ze(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var et,tt,nt,rt,at=!1,ot=[],lt=null,it=null,ut=null,ct=new Map,st=new Map,ft=[],dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function pt(e,t,n,r,a){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:a,targetContainers:[r]}}function ht(e,t){switch(e){case"focusin":case"focusout":lt=null;break;case"dragenter":case"dragleave":it=null;break;case"mouseover":case"mouseout":ut=null;break;case"pointerover":case"pointerout":ct.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":st.delete(t.pointerId)}}function mt(e,t,n,r,a,o){return null===e||e.nativeEvent!==o?(e=pt(t,n,r,a,o),null!==t&&null!==(t=Zr(t))&&tt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function vt(e){var t=Gr(e.target);if(null!==t){var n=Je(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ke(n)))return e.blockedOn=t,void rt(e.lanePriority,(function(){o.unstable_runWithPriority(e.priority,(function(){nt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function yt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Gt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Zr(n))&&tt(t),e.blockedOn=n,!1;t.shift()}return!0}function gt(e,t,n){yt(e)&&n.delete(t)}function bt(){for(at=!1;0<ot.length;){var e=ot[0];if(null!==e.blockedOn){null!==(e=Zr(e.blockedOn))&&et(e);break}for(var t=e.targetContainers;0<t.length;){var n=Gt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&ot.shift()}null!==lt&&yt(lt)&&(lt=null),null!==it&&yt(it)&&(it=null),null!==ut&&yt(ut)&&(ut=null),ct.forEach(gt),st.forEach(gt)}function wt(e,t){e.blockedOn===t&&(e.blockedOn=null,at||(at=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,bt)))}function kt(e){function t(t){return wt(t,e)}if(0<ot.length){wt(ot[0],e);for(var n=1;n<ot.length;n++){var r=ot[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==lt&&wt(lt,e),null!==it&&wt(it,e),null!==ut&&wt(ut,e),ct.forEach(t),st.forEach(t),n=0;n<ft.length;n++)(r=ft[n]).blockedOn===e&&(r.blockedOn=null);for(;0<ft.length&&null===(n=ft[0]).blockedOn;)vt(n),null===n.blockedOn&&ft.shift()}function Et(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var xt={animationend:Et("Animation","AnimationEnd"),animationiteration:Et("Animation","AnimationIteration"),animationstart:Et("Animation","AnimationStart"),transitionend:Et("Transition","TransitionEnd")},St={},_t={};function Ct(e){if(St[e])return St[e];if(!xt[e])return e;var t,n=xt[e];for(t in n)if(n.hasOwnProperty(t)&&t in _t)return St[e]=n[t];return e}f&&(_t=document.createElement("div").style,"AnimationEvent"in window||(delete xt.animationend.animation,delete xt.animationiteration.animation,delete xt.animationstart.animation),"TransitionEvent"in window||delete xt.transitionend.transition);var Pt=Ct("animationend"),Tt=Ct("animationiteration"),Ot=Ct("animationstart"),Mt=Ct("transitionend"),Nt=new Map,jt=new Map,Lt=["abort","abort",Pt,"animationEnd",Tt,"animationIteration",Ot,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Mt,"transitionEnd","waiting","waiting"];function Rt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],a=e[n+1];a="on"+(a[0].toUpperCase()+a.slice(1)),jt.set(r,t),Nt.set(r,a),c(a,[r])}}(0,o.unstable_now)();var zt=8;function $t(e){if(0!=(1&e))return zt=15,1;if(0!=(2&e))return zt=14,2;if(0!=(4&e))return zt=13,4;var t=24&e;return 0!==t?(zt=12,t):0!=(32&e)?(zt=11,32):0!=(t=192&e)?(zt=10,t):0!=(256&e)?(zt=9,256):0!=(t=3584&e)?(zt=8,t):0!=(4096&e)?(zt=7,4096):0!=(t=4186112&e)?(zt=6,t):0!=(t=62914560&e)?(zt=5,t):67108864&e?(zt=4,67108864):0!=(134217728&e)?(zt=3,134217728):0!=(t=805306368&e)?(zt=2,t):0!=(1073741824&e)?(zt=1,1073741824):(zt=8,e)}function It(e,t){var n=e.pendingLanes;if(0===n)return zt=0;var r=0,a=0,o=e.expiredLanes,l=e.suspendedLanes,i=e.pingedLanes;if(0!==o)r=o,a=zt=15;else if(0!=(o=134217727&n)){var u=o&~l;0!==u?(r=$t(u),a=zt):0!=(i&=o)&&(r=$t(i),a=zt)}else 0!=(o=n&~l)?(r=$t(o),a=zt):0!==i&&(r=$t(i),a=zt);if(0===r)return 0;if(r=n&((0>(r=31-Bt(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&l)){if($t(t),a<=zt)return t;zt=a}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-Bt(t)),r|=e[n],t&=~a;return r}function At(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Ft(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Ut(24&~t))?Ft(10,t):e;case 10:return 0===(e=Ut(192&~t))?Ft(8,t):e;case 8:return 0===(e=Ut(3584&~t))&&0===(e=Ut(4186112&~t))&&(e=512),e;case 2:return 0===(t=Ut(805306368&~t))&&(t=268435456),t}throw Error(l(358,e))}function Ut(e){return e&-e}function Dt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Ht(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-Bt(t)]=n}var Bt=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Vt(e)/Wt|0)|0},Vt=Math.log,Wt=Math.LN2,qt=o.unstable_UserBlockingPriority,Xt=o.unstable_runWithPriority,Qt=!0;function Jt(e,t,n,r){$e||Re();var a=Yt,o=$e;$e=!0;try{Le(a,e,t,n,r)}finally{($e=o)||Ae()}}function Kt(e,t,n,r){Xt(qt,Yt.bind(null,e,t,n,r))}function Yt(e,t,n,r){var a;if(Qt)if((a=0==(4&t))&&0<ot.length&&-1<dt.indexOf(e))e=pt(null,e,t,n,r),ot.push(e);else{var o=Gt(e,t,n,r);if(null===o)a&&ht(e,r);else{if(a){if(-1<dt.indexOf(e))return e=pt(o,e,t,n,r),void ot.push(e);if(function(e,t,n,r,a){switch(t){case"focusin":return lt=mt(lt,e,t,n,r,a),!0;case"dragenter":return it=mt(it,e,t,n,r,a),!0;case"mouseover":return ut=mt(ut,e,t,n,r,a),!0;case"pointerover":var o=a.pointerId;return ct.set(o,mt(ct.get(o)||null,e,t,n,r,a)),!0;case"gotpointercapture":return o=a.pointerId,st.set(o,mt(st.get(o)||null,e,t,n,r,a)),!0}return!1}(o,e,t,n,r))return;ht(e,r)}Nr(e,t,r,null,n)}}}function Gt(e,t,n,r){var a=_e(r);if(null!==(a=Gr(a))){var o=Je(a);if(null===o)a=null;else{var l=o.tag;if(13===l){if(null!==(a=Ke(o)))return a;a=null}else if(3===l){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;a=null}else o!==a&&(a=null)}}return Nr(e,t,r,a,n),null}var Zt=null,en=null,tn=null;function nn(){if(tn)return tn;var e,t,n=en,r=n.length,a="value"in Zt?Zt.value:Zt.textContent,o=a.length;for(e=0;e<r&&n[e]===a[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===a[o-t];t++);return tn=a.slice(e,1<t?1-t:void 0)}function rn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function an(){return!0}function on(){return!1}function ln(e){function t(t,n,r,a,o){for(var l in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(l)&&(t=e[l],this[l]=t?t(a):a[l]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?an:on,this.isPropagationStopped=on,this}return a(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=an)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=an)},persist:function(){},isPersistent:an}),t}var un,cn,sn,fn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dn=ln(fn),pn=a({},fn,{view:0,detail:0}),hn=ln(pn),mn=a({},pn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Cn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==sn&&(sn&&"mousemove"===e.type?(un=e.screenX-sn.screenX,cn=e.screenY-sn.screenY):cn=un=0,sn=e),un)},movementY:function(e){return"movementY"in e?e.movementY:cn}}),vn=ln(mn),yn=ln(a({},mn,{dataTransfer:0})),gn=ln(a({},pn,{relatedTarget:0})),bn=ln(a({},fn,{animationName:0,elapsedTime:0,pseudoElement:0})),wn=ln(a({},fn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),kn=ln(a({},fn,{data:0})),En={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},xn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function _n(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function Cn(){return _n}var Pn=ln(a({},pn,{key:function(e){if(e.key){var t=En[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=rn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?xn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Cn,charCode:function(e){return"keypress"===e.type?rn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?rn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),Tn=ln(a({},mn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),On=ln(a({},pn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Cn})),Mn=ln(a({},fn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Nn=ln(a({},mn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),jn=[9,13,27,32],Ln=f&&"CompositionEvent"in window,Rn=null;f&&"documentMode"in document&&(Rn=document.documentMode);var zn=f&&"TextEvent"in window&&!Rn,$n=f&&(!Ln||Rn&&8<Rn&&11>=Rn),In=String.fromCharCode(32),An=!1;function Fn(e,t){switch(e){case"keyup":return-1!==jn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Un(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Dn=!1,Hn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Bn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Hn[e.type]:"textarea"===t}function Vn(e,t,n,r){Me(r),0<(t=Lr(t,"onChange")).length&&(n=new dn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Wn=null,qn=null;function Xn(e){_r(e,0)}function Qn(e){if(Y(ea(e)))return e}function Jn(e,t){if("change"===e)return t}var Kn=!1;if(f){var Yn;if(f){var Gn="oninput"in document;if(!Gn){var Zn=document.createElement("div");Zn.setAttribute("oninput","return;"),Gn="function"==typeof Zn.oninput}Yn=Gn}else Yn=!1;Kn=Yn&&(!document.documentMode||9<document.documentMode)}function er(){Wn&&(Wn.detachEvent("onpropertychange",tr),qn=Wn=null)}function tr(e){if("value"===e.propertyName&&Qn(qn)){var t=[];if(Vn(t,qn,e,_e(e)),e=Xn,$e)e(t);else{$e=!0;try{je(e,t)}finally{$e=!1,Ae()}}}}function nr(e,t,n){"focusin"===e?(er(),qn=n,(Wn=t).attachEvent("onpropertychange",tr)):"focusout"===e&&er()}function rr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Qn(qn)}function ar(e,t){if("click"===e)return Qn(t)}function or(e,t){if("input"===e||"change"===e)return Qn(t)}var lr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},ir=Object.prototype.hasOwnProperty;function ur(e,t){if(lr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!ir.call(t,n[r])||!lr(e[n[r]],t[n[r]]))return!1;return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function sr(e,t){var n,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function fr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?fr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function dr(){for(var e=window,t=G();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=G((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var hr=f&&"documentMode"in document&&11>=document.documentMode,mr=null,vr=null,yr=null,gr=!1;function br(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;gr||null==mr||mr!==G(r)||(r="selectionStart"in(r=mr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},yr&&ur(yr,r)||(yr=r,0<(r=Lr(vr,"onSelect")).length&&(t=new dn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=mr)))}Rt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Rt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Rt(Lt,2);for(var wr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),kr=0;kr<wr.length;kr++)jt.set(wr[kr],0);s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Er="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),xr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Er));function Sr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,o,i,u,c){if(Qe.apply(this,arguments),Be){if(!Be)throw Error(l(198));var s=Ve;Be=!1,Ve=null,We||(We=!0,qe=s)}}(r,t,void 0,e),e.currentTarget=null}function _r(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var l=r.length-1;0<=l;l--){var i=r[l],u=i.instance,c=i.currentTarget;if(i=i.listener,u!==o&&a.isPropagationStopped())break e;Sr(a,i,c),o=u}else for(l=0;l<r.length;l++){if(u=(i=r[l]).instance,c=i.currentTarget,i=i.listener,u!==o&&a.isPropagationStopped())break e;Sr(a,i,c),o=u}}}if(We)throw e=qe,We=!1,qe=null,e}function Cr(e,t){var n=na(t),r=e+"__bubble";n.has(r)||(Mr(t,e,2,!1),n.add(r))}var Pr="_reactListening"+Math.random().toString(36).slice(2);function Tr(e){e[Pr]||(e[Pr]=!0,i.forEach((function(t){xr.has(t)||Or(t,!1,e,null),Or(t,!0,e,null)})))}function Or(e,t,n,r){var a=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,o=n;if("selectionchange"===e&&9!==n.nodeType&&(o=n.ownerDocument),null!==r&&!t&&xr.has(e)){if("scroll"!==e)return;a|=2,o=r}var l=na(o),i=e+"__"+(t?"capture":"bubble");l.has(i)||(t&&(a|=4),Mr(o,e,a,t),l.add(i))}function Mr(e,t,n,r){var a=jt.get(t);switch(void 0===a?2:a){case 0:a=Jt;break;case 1:a=Kt;break;default:a=Yt}n=a.bind(null,t,n,e),a=void 0,!Ue||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Nr(e,t,n,r,a){var o=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var l=r.tag;if(3===l||4===l){var i=r.stateNode.containerInfo;if(i===a||8===i.nodeType&&i.parentNode===a)break;if(4===l)for(l=r.return;null!==l;){var u=l.tag;if((3===u||4===u)&&((u=l.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;l=l.return}for(;null!==i;){if(null===(l=Gr(i)))return;if(5===(u=l.tag)||6===u){r=o=l;continue e}i=i.parentNode}}r=r.return}!function(e,t,n){if(Ie)return e();Ie=!0;try{ze(e,t,n)}finally{Ie=!1,Ae()}}((function(){var r=o,a=_e(n),l=[];e:{var i=Nt.get(e);if(void 0!==i){var u=dn,c=e;switch(e){case"keypress":if(0===rn(n))break e;case"keydown":case"keyup":u=Pn;break;case"focusin":c="focus",u=gn;break;case"focusout":c="blur",u=gn;break;case"beforeblur":case"afterblur":u=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=vn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=yn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=On;break;case Pt:case Tt:case Ot:u=bn;break;case Mt:u=Mn;break;case"scroll":u=hn;break;case"wheel":u=Nn;break;case"copy":case"cut":case"paste":u=wn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Tn}var s=0!=(4&t),f=!s&&"scroll"===e,d=s?null!==i?i+"Capture":null:i;s=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&null!=(m=Fe(h,d))&&s.push(jr(h,m,p))),f)break;h=h.return}0<s.length&&(i=new u(i,c,null,n,a),l.push({event:i,listeners:s}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(c=n.relatedTarget||n.fromElement)||!Gr(c)&&!c[Kr])&&(u||i)&&(i=a.window===a?a:(i=a.ownerDocument)?i.defaultView||i.parentWindow:window,u?(u=r,null!==(c=(c=n.relatedTarget||n.toElement)?Gr(c):null)&&(c!==(f=Je(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=r),u!==c)){if(s=vn,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(s=Tn,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?i:ea(u),p=null==c?i:ea(c),(i=new s(m,h+"leave",u,n,a)).target=f,i.relatedTarget=p,m=null,Gr(a)===r&&((s=new s(d,h+"enter",c,n,a)).target=p,s.relatedTarget=f,m=s),f=m,u&&c)e:{for(d=c,h=0,p=s=u;p;p=Rr(p))h++;for(p=0,m=d;m;m=Rr(m))p++;for(;0<h-p;)s=Rr(s),h--;for(;0<p-h;)d=Rr(d),p--;for(;h--;){if(s===d||null!==d&&s===d.alternate)break e;s=Rr(s),d=Rr(d)}s=null}else s=null;null!==u&&zr(l,i,u,s,!1),null!==c&&null!==f&&zr(l,f,c,s,!0)}if("select"===(u=(i=r?ea(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===u&&"file"===i.type)var v=Jn;else if(Bn(i))if(Kn)v=or;else{v=rr;var y=nr}else(u=i.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(v=ar);switch(v&&(v=v(e,r))?Vn(l,v,n,a):(y&&y(e,i,r),"focusout"===e&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&ae(i,"number",i.value)),y=r?ea(r):window,e){case"focusin":(Bn(y)||"true"===y.contentEditable)&&(mr=y,vr=r,yr=null);break;case"focusout":yr=vr=mr=null;break;case"mousedown":gr=!0;break;case"contextmenu":case"mouseup":case"dragend":gr=!1,br(l,n,a);break;case"selectionchange":if(hr)break;case"keydown":case"keyup":br(l,n,a)}var g;if(Ln)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Dn?Fn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&($n&&"ko"!==n.locale&&(Dn||"onCompositionStart"!==b?"onCompositionEnd"===b&&Dn&&(g=nn()):(en="value"in(Zt=a)?Zt.value:Zt.textContent,Dn=!0)),0<(y=Lr(r,b)).length&&(b=new kn(b,e,null,n,a),l.push({event:b,listeners:y}),(g||null!==(g=Un(n)))&&(b.data=g))),(g=zn?function(e,t){switch(e){case"compositionend":return Un(t);case"keypress":return 32!==t.which?null:(An=!0,In);case"textInput":return(e=t.data)===In&&An?null:e;default:return null}}(e,n):function(e,t){if(Dn)return"compositionend"===e||!Ln&&Fn(e,t)?(e=nn(),tn=en=Zt=null,Dn=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return $n&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&0<(r=Lr(r,"onBeforeInput")).length&&(a=new kn("onBeforeInput","beforeinput",null,n,a),l.push({event:a,listeners:r}),a.data=g)}_r(l,t)}))}function jr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Lr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=Fe(e,n))&&r.unshift(jr(e,o,a)),null!=(o=Fe(e,t))&&r.push(jr(e,o,a))),e=e.return}return r}function Rr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function zr(e,t,n,r,a){for(var o=t._reactName,l=[];null!==n&&n!==r;){var i=n,u=i.alternate,c=i.stateNode;if(null!==u&&u===r)break;5===i.tag&&null!==c&&(i=c,a?null!=(u=Fe(n,o))&&l.unshift(jr(n,u,i)):a||null!=(u=Fe(n,o))&&l.push(jr(n,u,i))),n=n.return}0!==l.length&&e.push({event:t,listeners:l})}function $r(){}var Ir=null,Ar=null;function Fr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Ur(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Dr="function"==typeof setTimeout?setTimeout:void 0,Hr="function"==typeof clearTimeout?clearTimeout:void 0;function Br(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Vr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Wr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var qr=0,Xr=Math.random().toString(36).slice(2),Qr="__reactFiber$"+Xr,Jr="__reactProps$"+Xr,Kr="__reactContainer$"+Xr,Yr="__reactEvents$"+Xr;function Gr(e){var t=e[Qr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Kr]||n[Qr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Wr(e);null!==e;){if(n=e[Qr])return n;e=Wr(e)}return t}n=(e=n).parentNode}return null}function Zr(e){return!(e=e[Qr]||e[Kr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ea(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function ta(e){return e[Jr]||null}function na(e){var t=e[Yr];return void 0===t&&(t=e[Yr]=new Set),t}var ra=[],aa=-1;function oa(e){return{current:e}}function la(e){0>aa||(e.current=ra[aa],ra[aa]=null,aa--)}function ia(e,t){aa++,ra[aa]=e.current,e.current=t}var ua={},ca=oa(ua),sa=oa(!1),fa=ua;function da(e,t){var n=e.type.contextTypes;if(!n)return ua;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in n)o[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function pa(e){return null!=e.childContextTypes}function ha(){la(sa),la(ca)}function ma(e,t,n){if(ca.current!==ua)throw Error(l(168));ia(ca,t),ia(sa,n)}function va(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in e))throw Error(l(108,X(t)||"Unknown",o));return a({},n,r)}function ya(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ua,fa=ca.current,ia(ca,e),ia(sa,sa.current),!0}function ga(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=va(e,t,fa),r.__reactInternalMemoizedMergedChildContext=e,la(sa),la(ca),ia(ca,e)):la(sa),ia(sa,n)}var ba=null,wa=null,ka=o.unstable_runWithPriority,Ea=o.unstable_scheduleCallback,xa=o.unstable_cancelCallback,Sa=o.unstable_shouldYield,_a=o.unstable_requestPaint,Ca=o.unstable_now,Pa=o.unstable_getCurrentPriorityLevel,Ta=o.unstable_ImmediatePriority,Oa=o.unstable_UserBlockingPriority,Ma=o.unstable_NormalPriority,Na=o.unstable_LowPriority,ja=o.unstable_IdlePriority,La={},Ra=void 0!==_a?_a:function(){},za=null,$a=null,Ia=!1,Aa=Ca(),Fa=1e4>Aa?Ca:function(){return Ca()-Aa};function Ua(){switch(Pa()){case Ta:return 99;case Oa:return 98;case Ma:return 97;case Na:return 96;case ja:return 95;default:throw Error(l(332))}}function Da(e){switch(e){case 99:return Ta;case 98:return Oa;case 97:return Ma;case 96:return Na;case 95:return ja;default:throw Error(l(332))}}function Ha(e,t){return e=Da(e),ka(e,t)}function Ba(e,t,n){return e=Da(e),Ea(e,t,n)}function Va(){if(null!==$a){var e=$a;$a=null,xa(e)}Wa()}function Wa(){if(!Ia&&null!==za){Ia=!0;var e=0;try{var t=za;Ha(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),za=null}catch(t){throw null!==za&&(za=za.slice(e+1)),Ea(Ta,Va),t}finally{Ia=!1}}}var qa=k.ReactCurrentBatchConfig;function Xa(e,t){if(e&&e.defaultProps){for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Qa=oa(null),Ja=null,Ka=null,Ya=null;function Ga(){Ya=Ka=Ja=null}function Za(e){var t=Qa.current;la(Qa),e.type._context._currentValue=t}function eo(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function to(e,t){Ja=e,Ya=Ka=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Ll=!0),e.firstContext=null)}function no(e,t){if(Ya!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Ya=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Ka){if(null===Ja)throw Error(l(308));Ka=t,Ja.dependencies={lanes:0,firstContext:t,responders:null}}else Ka=Ka.next=t;return e._currentValue}var ro=!1;function ao(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function oo(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function lo(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function io(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function uo(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var l={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?a=o=l:o=o.next=l,n=n.next}while(null!==n);null===o?a=o=t:o=o.next=t}else a=o=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function co(e,t,n,r){var o=e.updateQueue;ro=!1;var l=o.firstBaseUpdate,i=o.lastBaseUpdate,u=o.shared.pending;if(null!==u){o.shared.pending=null;var c=u,s=c.next;c.next=null,null===i?l=s:i.next=s,i=c;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==i&&(null===d?f.firstBaseUpdate=s:d.next=s,f.lastBaseUpdate=c)}}if(null!==l){for(d=o.baseState,i=0,f=s=c=null;;){u=l.lane;var p=l.eventTime;if((r&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:l.tag,payload:l.payload,callback:l.callback,next:null});e:{var h=e,m=l;switch(u=t,p=n,m.tag){case 1:if("function"==typeof(h=m.payload)){d=h.call(p,d,u);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null==(u="function"==typeof(h=m.payload)?h.call(p,d,u):h))break e;d=a({},d,u);break e;case 2:ro=!0}}null!==l.callback&&(e.flags|=32,null===(u=o.effects)?o.effects=[l]:u.push(l))}else p={eventTime:p,lane:u,tag:l.tag,payload:l.payload,callback:l.callback,next:null},null===f?(s=f=p,c=d):f=f.next=p,i|=u;if(null===(l=l.next)){if(null===(u=o.shared.pending))break;l=u.next,u.next=null,o.lastBaseUpdate=u,o.shared.pending=null}}null===f&&(c=d),o.baseState=c,o.firstBaseUpdate=s,o.lastBaseUpdate=f,zi|=i,e.lanes=i,e.memoizedState=d}}function so(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(l(191,a));a.call(r)}}}var fo=(new r.Component).refs;function po(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:a({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ho={isMounted:function(e){return!!(e=e._reactInternals)&&Je(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=lu(),a=iu(e),o=lo(r,a);o.payload=t,null!=n&&(o.callback=n),io(e,o),uu(e,a,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=lu(),a=iu(e),o=lo(r,a);o.tag=1,o.payload=t,null!=n&&(o.callback=n),io(e,o),uu(e,a,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=lu(),r=iu(e),a=lo(n,r);a.tag=2,null!=t&&(a.callback=t),io(e,a),uu(e,r,n)}};function mo(e,t,n,r,a,o,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,l):!(t.prototype&&t.prototype.isPureReactComponent&&ur(n,r)&&ur(a,o))}function vo(e,t,n){var r=!1,a=ua,o=t.contextType;return"object"==typeof o&&null!==o?o=no(o):(a=pa(t)?fa:ca.current,o=(r=null!=(r=t.contextTypes))?da(e,a):ua),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ho,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),t}function yo(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ho.enqueueReplaceState(t,t.state,null)}function go(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=fo,ao(e);var o=t.contextType;"object"==typeof o&&null!==o?a.context=no(o):(o=pa(t)?fa:ca.current,a.context=da(e,o)),co(e,n,a,r),a.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(po(e,t,o,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&ho.enqueueReplaceState(a,a.state,null),co(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4)}var bo=Array.isArray;function wo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:((t=function(e){var t=r.refs;t===fo&&(t=r.refs={}),null===e?delete t[a]:t[a]=e})._stringRef=a,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function ko(e,t){if("textarea"!==e.type)throw Error(l(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function Eo(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Uu(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function i(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Vu(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props)).ref=wo(e,t,n),r.return=e,r):((r=Du(n.type,n.key,n.props,null,e.mode,r)).ref=wo(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Wu(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function f(e,t,n,r,o){return null===t||7!==t.tag?((t=Hu(n,e.mode,r,o)).return=e,t):((t=a(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Vu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case E:return(n=Du(t.type,t.key,t.props,null,e.mode,n)).ref=wo(e,null,t),n.return=e,n;case x:return(t=Wu(t,e.mode,n)).return=e,t}if(bo(t)||H(t))return(t=Hu(t,e.mode,n,null)).return=e,t;ko(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==a?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case E:return n.key===a?n.type===S?f(e,t,n.props.children,r,a):c(e,t,n,r):null;case x:return n.key===a?s(e,t,n,r):null}if(bo(n)||H(n))return null!==a?null:f(e,t,n,r,null);ko(e,n)}return null}function h(e,t,n,r,a){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case E:return e=e.get(null===r.key?n:r.key)||null,r.type===S?f(t,e,r.props.children,a,r.key):c(t,e,r,a);case x:return s(t,e=e.get(null===r.key?n:r.key)||null,r,a)}if(bo(r)||H(r))return f(t,e=e.get(n)||null,r,a,null);ko(t,r)}return null}function m(a,l,i,u){for(var c=null,s=null,f=l,m=l=0,v=null;null!==f&&m<i.length;m++){f.index>m?(v=f,f=null):v=f.sibling;var y=p(a,f,i[m],u);if(null===y){null===f&&(f=v);break}e&&f&&null===y.alternate&&t(a,f),l=o(y,l,m),null===s?c=y:s.sibling=y,s=y,f=v}if(m===i.length)return n(a,f),c;if(null===f){for(;m<i.length;m++)null!==(f=d(a,i[m],u))&&(l=o(f,l,m),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(a,f);m<i.length;m++)null!==(v=h(f,a,m,i[m],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?m:v.key),l=o(v,l,m),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach((function(e){return t(a,e)})),c}function v(a,i,u,c){var s=H(u);if("function"!=typeof s)throw Error(l(150));if(null==(u=s.call(u)))throw Error(l(151));for(var f=s=null,m=i,v=i=0,y=null,g=u.next();null!==m&&!g.done;v++,g=u.next()){m.index>v?(y=m,m=null):y=m.sibling;var b=p(a,m,g.value,c);if(null===b){null===m&&(m=y);break}e&&m&&null===b.alternate&&t(a,m),i=o(b,i,v),null===f?s=b:f.sibling=b,f=b,m=y}if(g.done)return n(a,m),s;if(null===m){for(;!g.done;v++,g=u.next())null!==(g=d(a,g.value,c))&&(i=o(g,i,v),null===f?s=g:f.sibling=g,f=g);return s}for(m=r(a,m);!g.done;v++,g=u.next())null!==(g=h(m,a,v,g.value,c))&&(e&&null!==g.alternate&&m.delete(null===g.key?v:g.key),i=o(g,i,v),null===f?s=g:f.sibling=g,f=g);return e&&m.forEach((function(e){return t(a,e)})),s}return function(e,r,o,u){var c="object"==typeof o&&null!==o&&o.type===S&&null===o.key;c&&(o=o.props.children);var s="object"==typeof o&&null!==o;if(s)switch(o.$$typeof){case E:e:{for(s=o.key,c=r;null!==c;){if(c.key===s){switch(c.tag){case 7:if(o.type===S){n(e,c.sibling),(r=a(c,o.props.children)).return=e,e=r;break e}break;default:if(c.elementType===o.type){n(e,c.sibling),(r=a(c,o.props)).ref=wo(e,c,o),r.return=e,e=r;break e}}n(e,c);break}t(e,c),c=c.sibling}o.type===S?((r=Hu(o.props.children,e.mode,u,o.key)).return=e,e=r):((u=Du(o.type,o.key,o.props,null,e.mode,u)).ref=wo(e,r,o),u.return=e,e=u)}return i(e);case x:e:{for(c=o.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(e,r.sibling),(r=a(r,o.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Wu(o,e.mode,u)).return=e,e=r}return i(e)}if("string"==typeof o||"number"==typeof o)return o=""+o,null!==r&&6===r.tag?(n(e,r.sibling),(r=a(r,o)).return=e,e=r):(n(e,r),(r=Vu(o,e.mode,u)).return=e,e=r),i(e);if(bo(o))return m(e,r,o,u);if(H(o))return v(e,r,o,u);if(s&&ko(e,o),void 0===o&&!c)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(l(152,X(e.type)||"Component"))}return n(e,r)}}var xo=Eo(!0),So=Eo(!1),_o={},Co=oa(_o),Po=oa(_o),To=oa(_o);function Oo(e){if(e===_o)throw Error(l(174));return e}function Mo(e,t){switch(ia(To,t),ia(Po,e),ia(Co,_o),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}la(Co),ia(Co,t)}function No(){la(Co),la(Po),la(To)}function jo(e){Oo(To.current);var t=Oo(Co.current),n=pe(t,e.type);t!==n&&(ia(Po,e),ia(Co,n))}function Lo(e){Po.current===e&&(la(Co),la(Po))}var Ro=oa(0);function zo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var $o=null,Io=null,Ao=!1;function Fo(e,t){var n=Au(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Uo(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Do(e){if(Ao){var t=Io;if(t){var n=t;if(!Uo(e,t)){if(!(t=Vr(n.nextSibling))||!Uo(e,t))return e.flags=-1025&e.flags|2,Ao=!1,void($o=e);Fo($o,n)}$o=e,Io=Vr(t.firstChild)}else e.flags=-1025&e.flags|2,Ao=!1,$o=e}}function Ho(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;$o=e}function Bo(e){if(e!==$o)return!1;if(!Ao)return Ho(e),Ao=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Ur(t,e.memoizedProps))for(t=Io;t;)Fo(e,t),t=Vr(t.nextSibling);if(Ho(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Io=Vr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Io=null}}else Io=$o?Vr(e.stateNode.nextSibling):null;return!0}function Vo(){Io=$o=null,Ao=!1}var Wo=[];function qo(){for(var e=0;e<Wo.length;e++)Wo[e]._workInProgressVersionPrimary=null;Wo.length=0}var Xo=k.ReactCurrentDispatcher,Qo=k.ReactCurrentBatchConfig,Jo=0,Ko=null,Yo=null,Go=null,Zo=!1,el=!1;function tl(){throw Error(l(321))}function nl(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!lr(e[n],t[n]))return!1;return!0}function rl(e,t,n,r,a,o){if(Jo=o,Ko=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Xo.current=null===e||null===e.memoizedState?Ol:Ml,e=n(r,a),el){o=0;do{if(el=!1,!(25>o))throw Error(l(301));o+=1,Go=Yo=null,t.updateQueue=null,Xo.current=Nl,e=n(r,a)}while(el)}if(Xo.current=Tl,t=null!==Yo&&null!==Yo.next,Jo=0,Go=Yo=Ko=null,Zo=!1,t)throw Error(l(300));return e}function al(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Go?Ko.memoizedState=Go=e:Go=Go.next=e,Go}function ol(){if(null===Yo){var e=Ko.alternate;e=null!==e?e.memoizedState:null}else e=Yo.next;var t=null===Go?Ko.memoizedState:Go.next;if(null!==t)Go=t,Yo=e;else{if(null===e)throw Error(l(310));e={memoizedState:(Yo=e).memoizedState,baseState:Yo.baseState,baseQueue:Yo.baseQueue,queue:Yo.queue,next:null},null===Go?Ko.memoizedState=Go=e:Go=Go.next=e}return Go}function ll(e,t){return"function"==typeof t?t(e):t}function il(e){var t=ol(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=Yo,a=r.baseQueue,o=n.pending;if(null!==o){if(null!==a){var i=a.next;a.next=o.next,o.next=i}r.baseQueue=a=o,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var u=i=o=null,c=a;do{var s=c.lane;if((Jo&s)===s)null!==u&&(u=u.next={lane:0,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),r=c.eagerReducer===e?c.eagerState:e(r,c.action);else{var f={lane:s,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(i=u=f,o=r):u=u.next=f,Ko.lanes|=s,zi|=s}c=c.next}while(null!==c&&c!==a);null===u?o=r:u.next=i,lr(r,t.memoizedState)||(Ll=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function ul(e){var t=ol(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,o=t.memoizedState;if(null!==a){n.pending=null;var i=a=a.next;do{o=e(o,i.action),i=i.next}while(i!==a);lr(o,t.memoizedState)||(Ll=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function cl(e,t,n){var r=t._getVersion;r=r(t._source);var a=t._workInProgressVersionPrimary;if(null!==a?e=a===r:(e=e.mutableReadLanes,(e=(Jo&e)===e)&&(t._workInProgressVersionPrimary=r,Wo.push(t))),e)return n(t._source);throw Wo.push(t),Error(l(350))}function sl(e,t,n,r){var a=Pi;if(null===a)throw Error(l(349));var o=t._getVersion,i=o(t._source),u=Xo.current,c=u.useState((function(){return cl(a,t,n)})),s=c[1],f=c[0];c=Go;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,m=d.source;d=d.subscribe;var v=Ko;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=s;var e=o(t._source);if(!lr(i,e)){e=n(t._source),lr(f,e)||(s(e),e=iu(v),a.mutableReadLanes|=e&a.pendingLanes),e=a.mutableReadLanes,a.entangledLanes|=e;for(var r=a.entanglements,l=e;0<l;){var u=31-Bt(l),c=1<<u;r[u]|=e,l&=~c}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=iu(v);a.mutableReadLanes|=r&a.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),lr(h,n)&&lr(m,t)&&lr(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:ll,lastRenderedState:f}).dispatch=s=Pl.bind(null,Ko,e),c.queue=e,c.baseQueue=null,f=cl(a,t,n),c.memoizedState=c.baseState=f),f}function fl(e,t,n){return sl(ol(),e,t,n)}function dl(e){var t=al();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:ll,lastRenderedState:e}).dispatch=Pl.bind(null,Ko,e),[t.memoizedState,e]}function pl(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Ko.updateQueue)?(t={lastEffect:null},Ko.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function hl(e){return e={current:e},al().memoizedState=e}function ml(){return ol().memoizedState}function vl(e,t,n,r){var a=al();Ko.flags|=e,a.memoizedState=pl(1|t,n,void 0,void 0===r?null:r)}function yl(e,t,n,r){var a=ol();r=void 0===r?null:r;var o=void 0;if(null!==Yo){var l=Yo.memoizedState;if(o=l.destroy,null!==r&&nl(r,l.deps))return void pl(t,n,o,r)}Ko.flags|=e,a.memoizedState=pl(1|t,n,o,r)}function gl(e,t){return vl(516,4,e,t)}function bl(e,t){return yl(516,4,e,t)}function wl(e,t){return yl(4,2,e,t)}function kl(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function El(e,t,n){return n=null!=n?n.concat([e]):null,yl(4,2,kl.bind(null,t,e),n)}function xl(){}function Sl(e,t){var n=ol();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&nl(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function _l(e,t){var n=ol();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&nl(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Cl(e,t){var n=Ua();Ha(98>n?98:n,(function(){e(!0)})),Ha(97<n?97:n,(function(){var n=Qo.transition;Qo.transition=1;try{e(!1),t()}finally{Qo.transition=n}}))}function Pl(e,t,n){var r=lu(),a=iu(e),o={lane:a,action:n,eagerReducer:null,eagerState:null,next:null},l=t.pending;if(null===l?o.next=o:(o.next=l.next,l.next=o),t.pending=o,l=e.alternate,e===Ko||null!==l&&l===Ko)el=Zo=!0;else{if(0===e.lanes&&(null===l||0===l.lanes)&&null!==(l=t.lastRenderedReducer))try{var i=t.lastRenderedState,u=l(i,n);if(o.eagerReducer=l,o.eagerState=u,lr(u,i))return}catch(e){}uu(e,a,r)}}var Tl={readContext:no,useCallback:tl,useContext:tl,useEffect:tl,useImperativeHandle:tl,useLayoutEffect:tl,useMemo:tl,useReducer:tl,useRef:tl,useState:tl,useDebugValue:tl,useDeferredValue:tl,useTransition:tl,useMutableSource:tl,useOpaqueIdentifier:tl,unstable_isNewReconciler:!1},Ol={readContext:no,useCallback:function(e,t){return al().memoizedState=[e,void 0===t?null:t],e},useContext:no,useEffect:gl,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,vl(4,2,kl.bind(null,t,e),n)},useLayoutEffect:function(e,t){return vl(4,2,e,t)},useMemo:function(e,t){var n=al();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=al();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Pl.bind(null,Ko,e),[r.memoizedState,e]},useRef:hl,useState:dl,useDebugValue:xl,useDeferredValue:function(e){var t=dl(e),n=t[0],r=t[1];return gl((function(){var t=Qo.transition;Qo.transition=1;try{r(e)}finally{Qo.transition=t}}),[e]),n},useTransition:function(){var e=dl(!1),t=e[0];return hl(e=Cl.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=al();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},sl(r,e,t,n)},useOpaqueIdentifier:function(){if(Ao){var e=!1,t=function(e){return{$$typeof:z,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(qr++).toString(36))),Error(l(355))})),n=dl(t)[1];return 0==(2&Ko.mode)&&(Ko.flags|=516,pl(5,(function(){n("r:"+(qr++).toString(36))}),void 0,null)),t}return dl(t="r:"+(qr++).toString(36)),t},unstable_isNewReconciler:!1},Ml={readContext:no,useCallback:Sl,useContext:no,useEffect:bl,useImperativeHandle:El,useLayoutEffect:wl,useMemo:_l,useReducer:il,useRef:ml,useState:function(){return il(ll)},useDebugValue:xl,useDeferredValue:function(e){var t=il(ll),n=t[0],r=t[1];return bl((function(){var t=Qo.transition;Qo.transition=1;try{r(e)}finally{Qo.transition=t}}),[e]),n},useTransition:function(){var e=il(ll)[0];return[ml().current,e]},useMutableSource:fl,useOpaqueIdentifier:function(){return il(ll)[0]},unstable_isNewReconciler:!1},Nl={readContext:no,useCallback:Sl,useContext:no,useEffect:bl,useImperativeHandle:El,useLayoutEffect:wl,useMemo:_l,useReducer:ul,useRef:ml,useState:function(){return ul(ll)},useDebugValue:xl,useDeferredValue:function(e){var t=ul(ll),n=t[0],r=t[1];return bl((function(){var t=Qo.transition;Qo.transition=1;try{r(e)}finally{Qo.transition=t}}),[e]),n},useTransition:function(){var e=ul(ll)[0];return[ml().current,e]},useMutableSource:fl,useOpaqueIdentifier:function(){return ul(ll)[0]},unstable_isNewReconciler:!1},jl=k.ReactCurrentOwner,Ll=!1;function Rl(e,t,n,r){t.child=null===e?So(t,null,n,r):xo(t,e.child,n,r)}function zl(e,t,n,r,a){n=n.render;var o=t.ref;return to(t,a),r=rl(e,t,n,r,o,a),null===e||Ll?(t.flags|=1,Rl(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Zl(e,t,a))}function $l(e,t,n,r,a,o){if(null===e){var l=n.type;return"function"!=typeof l||Fu(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Du(n.type,null,r,t,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,Il(e,t,l,r,a,o))}return l=e.child,0==(a&o)&&(a=l.memoizedProps,(n=null!==(n=n.compare)?n:ur)(a,r)&&e.ref===t.ref)?Zl(e,t,o):(t.flags|=1,(e=Uu(l,r)).ref=t.ref,e.return=t,t.child=e)}function Il(e,t,n,r,a,o){if(null!==e&&ur(e.memoizedProps,r)&&e.ref===t.ref){if(Ll=!1,0==(o&a))return t.lanes=e.lanes,Zl(e,t,o);0!=(16384&e.flags)&&(Ll=!0)}return Ul(e,t,n,r,o)}function Al(e,t,n){var r=t.pendingProps,a=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},vu(0,n);else{if(0==(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},vu(0,e),null;t.memoizedState={baseLanes:0},vu(0,null!==o?o.baseLanes:n)}else null!==o?(r=o.baseLanes|n,t.memoizedState=null):r=n,vu(0,r);return Rl(e,t,a,n),t.child}function Fl(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Ul(e,t,n,r,a){var o=pa(n)?fa:ca.current;return o=da(t,o),to(t,a),n=rl(e,t,n,r,o,a),null===e||Ll?(t.flags|=1,Rl(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Zl(e,t,a))}function Dl(e,t,n,r,a){if(pa(n)){var o=!0;ya(t)}else o=!1;if(to(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),vo(t,n,r),go(t,n,r,a),r=!0;else if(null===e){var l=t.stateNode,i=t.memoizedProps;l.props=i;var u=l.context,c=n.contextType;c="object"==typeof c&&null!==c?no(c):da(t,c=pa(n)?fa:ca.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof l.getSnapshotBeforeUpdate;f||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==r||u!==c)&&yo(t,l,r,c),ro=!1;var d=t.memoizedState;l.state=d,co(t,r,l,a),u=t.memoizedState,i!==r||d!==u||sa.current||ro?("function"==typeof s&&(po(t,n,s,r),u=t.memoizedState),(i=ro||mo(t,n,i,r,d,u,c))?(f||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.flags|=4)):("function"==typeof l.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),l.props=r,l.state=u,l.context=c,r=i):("function"==typeof l.componentDidMount&&(t.flags|=4),r=!1)}else{l=t.stateNode,oo(e,t),i=t.memoizedProps,c=t.type===t.elementType?i:Xa(t.type,i),l.props=c,f=t.pendingProps,d=l.context,u="object"==typeof(u=n.contextType)&&null!==u?no(u):da(t,u=pa(n)?fa:ca.current);var p=n.getDerivedStateFromProps;(s="function"==typeof p||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==f||d!==u)&&yo(t,l,r,u),ro=!1,d=t.memoizedState,l.state=d,co(t,r,l,a);var h=t.memoizedState;i!==f||d!==h||sa.current||ro?("function"==typeof p&&(po(t,n,p,r),h=t.memoizedState),(c=ro||mo(t,n,c,r,d,h,u))?(s||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,h,u),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof l.componentDidUpdate&&(t.flags|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=h),l.props=r,l.state=h,l.context=u,r=c):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),r=!1)}return Hl(e,t,n,r,o,a)}function Hl(e,t,n,r,a,o){Fl(e,t);var l=0!=(64&t.flags);if(!r&&!l)return a&&ga(t,n,!1),Zl(e,t,o);r=t.stateNode,jl.current=t;var i=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&l?(t.child=xo(t,e.child,null,o),t.child=xo(t,null,i,o)):Rl(e,t,i,o),t.memoizedState=r.state,a&&ga(t,n,!0),t.child}function Bl(e){var t=e.stateNode;t.pendingContext?ma(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ma(0,t.context,!1),Mo(e,t.containerInfo)}var Vl,Wl,ql,Xl={dehydrated:null,retryLane:0};function Ql(e,t,n){var r,a=t.pendingProps,o=Ro.current,l=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&o)),r?(l=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(o|=1),ia(Ro,1&o),null===e?(void 0!==a.fallback&&Do(t),e=a.children,o=a.fallback,l?(e=Jl(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Xl,e):"number"==typeof a.unstable_expectedLoadTime?(e=Jl(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Xl,t.lanes=33554432,e):((n=Bu({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,l?(a=function(e,t,n,r,a){var o=t.mode,l=e.child;e=l.sibling;var i={mode:"hidden",children:n};return 0==(2&o)&&t.child!==l?((n=t.child).childLanes=0,n.pendingProps=i,null!==(l=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=l,l.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Uu(l,i),null!==e?r=Uu(e,r):(r=Hu(r,o,a,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,a.children,a.fallback,n),l=t.child,o=e.child.memoizedState,l.memoizedState=null===o?{baseLanes:n}:{baseLanes:o.baseLanes|n},l.childLanes=e.childLanes&~n,t.memoizedState=Xl,a):(n=function(e,t,n,r){var a=e.child;return e=a.sibling,n=Uu(a,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,a.children,n),t.memoizedState=null,n))}function Jl(e,t,n,r){var a=e.mode,o=e.child;return t={mode:"hidden",children:t},0==(2&a)&&null!==o?(o.childLanes=0,o.pendingProps=t):o=Bu(t,a,0,null),n=Hu(n,a,r,null),o.return=e,n.return=e,o.sibling=n,e.child=o,n}function Kl(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),eo(e.return,t)}function Yl(e,t,n,r,a,o){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a,lastEffect:o}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailMode=a,l.lastEffect=o)}function Gl(e,t,n){var r=t.pendingProps,a=r.revealOrder,o=r.tail;if(Rl(e,t,r.children,n),0!=(2&(r=Ro.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Kl(e,n);else if(19===e.tag)Kl(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ia(Ro,r),0==(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===zo(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Yl(t,!1,a,n,o,t.lastEffect);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===zo(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Yl(t,!0,n,null,o,t.lastEffect);break;case"together":Yl(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Zl(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),zi|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=Uu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Uu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function ei(e,t){if(!Ao)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ti(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return pa(t.type)&&ha(),null;case 3:return No(),la(sa),la(ca),qo(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Bo(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:Lo(t);var o=Oo(To.current);if(n=t.type,null!==e&&null!=t.stateNode)Wl(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(l(166));return null}if(e=Oo(Co.current),Bo(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[Qr]=t,r[Jr]=i,n){case"dialog":Cr("cancel",r),Cr("close",r);break;case"iframe":case"object":case"embed":Cr("load",r);break;case"video":case"audio":for(e=0;e<Er.length;e++)Cr(Er[e],r);break;case"source":Cr("error",r);break;case"img":case"image":case"link":Cr("error",r),Cr("load",r);break;case"details":Cr("toggle",r);break;case"input":ee(r,i),Cr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Cr("invalid",r);break;case"textarea":ue(r,i),Cr("invalid",r)}for(var c in xe(n,i),e=null,i)i.hasOwnProperty(c)&&(o=i[c],"children"===c?"string"==typeof o?r.textContent!==o&&(e=["children",o]):"number"==typeof o&&r.textContent!==""+o&&(e=["children",""+o]):u.hasOwnProperty(c)&&null!=o&&"onScroll"===c&&Cr("scroll",r));switch(n){case"input":K(r),re(r,i,!0);break;case"textarea":K(r),se(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=$r)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(c=9===o.nodeType?o:o.ownerDocument,e===fe&&(e=de(n)),e===fe?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=c.createElement(n,{is:r.is}):(e=c.createElement(n),"select"===n&&(c=e,r.multiple?c.multiple=!0:r.size&&(c.size=r.size))):e=c.createElementNS(e,n),e[Qr]=t,e[Jr]=r,Vl(e,t),t.stateNode=e,c=Se(n,r),n){case"dialog":Cr("cancel",e),Cr("close",e),o=r;break;case"iframe":case"object":case"embed":Cr("load",e),o=r;break;case"video":case"audio":for(o=0;o<Er.length;o++)Cr(Er[o],e);o=r;break;case"source":Cr("error",e),o=r;break;case"img":case"image":case"link":Cr("error",e),Cr("load",e),o=r;break;case"details":Cr("toggle",e),o=r;break;case"input":ee(e,r),o=Z(e,r),Cr("invalid",e);break;case"option":o=oe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},o=a({},r,{value:void 0}),Cr("invalid",e);break;case"textarea":ue(e,r),o=ie(e,r),Cr("invalid",e);break;default:o=r}xe(n,o);var s=o;for(i in s)if(s.hasOwnProperty(i)){var f=s[i];"style"===i?ke(e,f):"dangerouslySetInnerHTML"===i?null!=(f=f?f.__html:void 0)&&ve(e,f):"children"===i?"string"==typeof f?("textarea"!==n||""!==f)&&ye(e,f):"number"==typeof f&&ye(e,""+f):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(u.hasOwnProperty(i)?null!=f&&"onScroll"===i&&Cr("scroll",e):null!=f&&w(e,i,f,c))}switch(n){case"input":K(e),re(e,r,!1);break;case"textarea":K(e),se(e);break;case"option":null!=r.value&&e.setAttribute("value",""+Q(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?le(e,!!r.multiple,i,!1):null!=r.defaultValue&&le(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof o.onClick&&(e.onclick=$r)}Fr(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)ql(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));n=Oo(To.current),Oo(Co.current),Bo(t)?(r=t.stateNode,n=t.memoizedProps,r[Qr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Qr]=t,t.stateNode=r)}return null;case 13:return la(Ro),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Bo(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Ro.current)?0===ji&&(ji=3):(0!==ji&&3!==ji||(ji=4),null===Pi||0==(134217727&zi)&&0==(134217727&$i)||du(Pi,Oi))),(r||n)&&(t.flags|=4),null);case 4:return No(),null===e&&Tr(t.stateNode.containerInfo),null;case 10:return Za(t),null;case 17:return pa(t.type)&&ha(),null;case 19:if(la(Ro),null===(r=t.memoizedState))return null;if(i=0!=(64&t.flags),null===(c=r.rendering))if(i)ei(r,!1);else{if(0!==ji||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(c=zo(e))){for(t.flags|=64,ei(r,!1),null!==(i=c.updateQueue)&&(t.updateQueue=i,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(c=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=c.childLanes,i.lanes=c.lanes,i.child=c.child,i.memoizedProps=c.memoizedProps,i.memoizedState=c.memoizedState,i.updateQueue=c.updateQueue,i.type=c.type,e=c.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return ia(Ro,1&Ro.current|2),t.child}e=e.sibling}null!==r.tail&&Fa()>Ui&&(t.flags|=64,i=!0,ei(r,!1),t.lanes=33554432)}else{if(!i)if(null!==(e=zo(c))){if(t.flags|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),ei(r,!0),null===r.tail&&"hidden"===r.tailMode&&!c.alternate&&!Ao)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Fa()-r.renderingStartTime>Ui&&1073741824!==n&&(t.flags|=64,i=!0,ei(r,!1),t.lanes=33554432);r.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=r.last)?n.sibling=c:t.child=c,r.last=c)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Fa(),n.sibling=null,t=Ro.current,ia(Ro,i?1&t|2:1&t),n):null;case 23:case 24:return yu(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(l(156,t.tag))}function ni(e){switch(e.tag){case 1:pa(e.type)&&ha();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(No(),la(sa),la(ca),qo(),0!=(64&(t=e.flags)))throw Error(l(285));return e.flags=-4097&t|64,e;case 5:return Lo(e),null;case 13:return la(Ro),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return la(Ro),null;case 4:return No(),null;case 10:return Za(e),null;case 23:case 24:return yu(),null;default:return null}}function ri(e,t){try{var n="",r=t;do{n+=q(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a}}function ai(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Vl=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Wl=function(e,t,n,r){var o=e.memoizedProps;if(o!==r){e=t.stateNode,Oo(Co.current);var l,i=null;switch(n){case"input":o=Z(e,o),r=Z(e,r),i=[];break;case"option":o=oe(e,o),r=oe(e,r),i=[];break;case"select":o=a({},o,{value:void 0}),r=a({},r,{value:void 0}),i=[];break;case"textarea":o=ie(e,o),r=ie(e,r),i=[];break;default:"function"!=typeof o.onClick&&"function"==typeof r.onClick&&(e.onclick=$r)}for(f in xe(n,r),n=null,o)if(!r.hasOwnProperty(f)&&o.hasOwnProperty(f)&&null!=o[f])if("style"===f){var c=o[f];for(l in c)c.hasOwnProperty(l)&&(n||(n={}),n[l]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?i||(i=[]):(i=i||[]).push(f,null));for(f in r){var s=r[f];if(c=null!=o?o[f]:void 0,r.hasOwnProperty(f)&&s!==c&&(null!=s||null!=c))if("style"===f)if(c){for(l in c)!c.hasOwnProperty(l)||s&&s.hasOwnProperty(l)||(n||(n={}),n[l]="");for(l in s)s.hasOwnProperty(l)&&c[l]!==s[l]&&(n||(n={}),n[l]=s[l])}else n||(i||(i=[]),i.push(f,n)),n=s;else"dangerouslySetInnerHTML"===f?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(i=i||[]).push(f,s)):"children"===f?"string"!=typeof s&&"number"!=typeof s||(i=i||[]).push(f,""+s):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=s&&"onScroll"===f&&Cr("scroll",e),i||c===s||(i=[])):"object"==typeof s&&null!==s&&s.$$typeof===z?s.toString():(i=i||[]).push(f,s))}n&&(i=i||[]).push("style",n);var f=i;(t.updateQueue=f)&&(t.flags|=4)}},ql=function(e,t,n,r){n!==r&&(t.flags|=4)};var oi="function"==typeof WeakMap?WeakMap:Map;function li(e,t,n){(n=lo(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Vi||(Vi=!0,Wi=r),ai(0,t)},n}function ii(e,t,n){(n=lo(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return ai(0,t),r(a)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===qi?qi=new Set([this]):qi.add(this),ai(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var ui="function"==typeof WeakSet?WeakSet:Set;function ci(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Ru(e,t)}else t.current=null}function si(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Xa(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Br(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(l(163))}function fi(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var a=e;r=a.next,0!=(4&(a=a.tag))&&0!=(1&a)&&(Nu(n,e),Mu(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:Xa(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&so(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}so(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Fr(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&kt(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(l(163))}function di(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var a=n.memoizedProps.style;a=null!=a&&a.hasOwnProperty("display")?a.display:null,r.style.display=we("display",a)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function pi(e,t){if(wa&&"function"==typeof wa.onCommitFiberUnmount)try{wa.onCommitFiberUnmount(ba,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,a=r.destroy;if(r=r.tag,void 0!==a)if(0!=(4&r))Nu(t,n);else{r=t;try{a()}catch(e){Ru(r,e)}}n=n.next}while(n!==e)}break;case 1:if(ci(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Ru(t,e)}break;case 5:ci(t);break;case 4:bi(e,t)}}function hi(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function mi(e){return 5===e.tag||3===e.tag||4===e.tag}function vi(e){e:{for(var t=e.return;null!==t;){if(mi(t))break e;t=t.return}throw Error(l(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(l(161))}16&n.flags&&(ye(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||mi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?yi(e,n,t):gi(e,n,t)}function yi(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=$r));else if(4!==r&&null!==(e=e.child))for(yi(e,t,n),e=e.sibling;null!==e;)yi(e,t,n),e=e.sibling}function gi(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(gi(e,t,n),e=e.sibling;null!==e;)gi(e,t,n),e=e.sibling}function bi(e,t){for(var n,r,a=t,o=!1;;){if(!o){o=a.return;e:for(;;){if(null===o)throw Error(l(160));switch(n=o.stateNode,o.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}o=o.return}o=!0}if(5===a.tag||6===a.tag){e:for(var i=e,u=a,c=u;;)if(pi(i,c),null!==c.child&&4!==c.tag)c.child.return=c,c=c.child;else{if(c===u)break e;for(;null===c.sibling;){if(null===c.return||c.return===u)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}r?(i=n,u=a.stateNode,8===i.nodeType?i.parentNode.removeChild(u):i.removeChild(u)):n.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){n=a.stateNode.containerInfo,r=!0,a.child.return=a,a=a.child;continue}}else if(pi(e,a),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(o=!1)}a.sibling.return=a.return,a=a.sibling}}function wi(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var a=null!==e?e.memoizedProps:r;e=t.type;var o=t.updateQueue;if(t.updateQueue=null,null!==o){for(n[Jr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),Se(e,a),t=Se(e,r),a=0;a<o.length;a+=2){var i=o[a],u=o[a+1];"style"===i?ke(n,u):"dangerouslySetInnerHTML"===i?ve(n,u):"children"===i?ye(n,u):w(n,i,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":ce(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(o=r.value)?le(n,!!r.multiple,o,!1):e!==!!r.multiple&&(null!=r.defaultValue?le(n,!!r.multiple,r.defaultValue,!0):le(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(l(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,kt(n.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Fi=Fa(),di(t.child,!0)),void ki(t);case 19:return void ki(t);case 17:return;case 23:case 24:return void di(t,null!==t.memoizedState)}throw Error(l(163))}function ki(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ui),t.forEach((function(t){var r=$u.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function Ei(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var xi=Math.ceil,Si=k.ReactCurrentDispatcher,_i=k.ReactCurrentOwner,Ci=0,Pi=null,Ti=null,Oi=0,Mi=0,Ni=oa(0),ji=0,Li=null,Ri=0,zi=0,$i=0,Ii=0,Ai=null,Fi=0,Ui=1/0;function Di(){Ui=Fa()+500}var Hi,Bi=null,Vi=!1,Wi=null,qi=null,Xi=!1,Qi=null,Ji=90,Ki=[],Yi=[],Gi=null,Zi=0,eu=null,tu=-1,nu=0,ru=0,au=null,ou=!1;function lu(){return 0!=(48&Ci)?Fa():-1!==tu?tu:tu=Fa()}function iu(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Ua()?1:2;if(0===nu&&(nu=Ri),0!==qa.transition){0!==ru&&(ru=null!==Ai?Ai.pendingLanes:0),e=nu;var t=4186112&~ru;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=Ua(),e=Ft(0!=(4&Ci)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),nu)}function uu(e,t,n){if(50<Zi)throw Zi=0,eu=null,Error(l(185));if(null===(e=cu(e,t)))return null;Ht(e,t,n),e===Pi&&($i|=t,4===ji&&du(e,Oi));var r=Ua();1===t?0!=(8&Ci)&&0==(48&Ci)?pu(e):(su(e,n),0===Ci&&(Di(),Va())):(0==(4&Ci)||98!==r&&99!==r||(null===Gi?Gi=new Set([e]):Gi.add(e)),su(e,n)),Ai=e}function cu(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function su(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,a=e.pingedLanes,o=e.expirationTimes,i=e.pendingLanes;0<i;){var u=31-Bt(i),c=1<<u,s=o[u];if(-1===s){if(0==(c&r)||0!=(c&a)){s=t,$t(c);var f=zt;o[u]=10<=f?s+250:6<=f?s+5e3:-1}}else s<=t&&(e.expiredLanes|=c);i&=~c}if(r=It(e,e===Pi?Oi:0),t=zt,0===r)null!==n&&(n!==La&&xa(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==La&&xa(n)}15===t?(n=pu.bind(null,e),null===za?(za=[n],$a=Ea(Ta,Wa)):za.push(n),n=La):n=14===t?Ba(99,pu.bind(null,e)):Ba(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(l(358,e))}}(t),fu.bind(null,e)),e.callbackPriority=t,e.callbackNode=n}}function fu(e){if(tu=-1,ru=nu=0,0!=(48&Ci))throw Error(l(327));var t=e.callbackNode;if(Ou()&&e.callbackNode!==t)return null;var n=It(e,e===Pi?Oi:0);if(0===n)return null;var r=n,a=Ci;Ci|=16;var o=wu();for(Pi===e&&Oi===r||(Di(),gu(e,r));;)try{xu();break}catch(t){bu(e,t)}if(Ga(),Si.current=o,Ci=a,null!==Ti?r=0:(Pi=null,Oi=0,r=ji),0!=(Ri&$i))gu(e,0);else if(0!==r){if(2===r&&(Ci|=64,e.hydrate&&(e.hydrate=!1,Br(e.containerInfo)),0!==(n=At(e))&&(r=ku(e,n))),1===r)throw t=Li,gu(e,0),du(e,n),su(e,Fa()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(l(345));case 2:Cu(e);break;case 3:if(du(e,n),(62914560&n)===n&&10<(r=Fi+500-Fa())){if(0!==It(e,0))break;if(((a=e.suspendedLanes)&n)!==n){lu(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=Dr(Cu.bind(null,e),r);break}Cu(e);break;case 4:if(du(e,n),(4186112&n)===n)break;for(r=e.eventTimes,a=-1;0<n;){var i=31-Bt(n);o=1<<i,(i=r[i])>a&&(a=i),n&=~o}if(n=a,10<(n=(120>(n=Fa()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*xi(n/1960))-n)){e.timeoutHandle=Dr(Cu.bind(null,e),n);break}Cu(e);break;case 5:Cu(e);break;default:throw Error(l(329))}}return su(e,Fa()),e.callbackNode===t?fu.bind(null,e):null}function du(e,t){for(t&=~Ii,t&=~$i,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Bt(t),r=1<<n;e[n]=-1,t&=~r}}function pu(e){if(0!=(48&Ci))throw Error(l(327));if(Ou(),e===Pi&&0!=(e.expiredLanes&Oi)){var t=Oi,n=ku(e,t);0!=(Ri&$i)&&(n=ku(e,t=It(e,t)))}else n=ku(e,t=It(e,0));if(0!==e.tag&&2===n&&(Ci|=64,e.hydrate&&(e.hydrate=!1,Br(e.containerInfo)),0!==(t=At(e))&&(n=ku(e,t))),1===n)throw n=Li,gu(e,0),du(e,t),su(e,Fa()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Cu(e),su(e,Fa()),null}function hu(e,t){var n=Ci;Ci|=1;try{return e(t)}finally{0===(Ci=n)&&(Di(),Va())}}function mu(e,t){var n=Ci;Ci&=-2,Ci|=8;try{return e(t)}finally{0===(Ci=n)&&(Di(),Va())}}function vu(e,t){ia(Ni,Mi),Mi|=t,Ri|=t}function yu(){Mi=Ni.current,la(Ni)}function gu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Hr(n)),null!==Ti)for(n=Ti.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&ha();break;case 3:No(),la(sa),la(ca),qo();break;case 5:Lo(r);break;case 4:No();break;case 13:case 19:la(Ro);break;case 10:Za(r);break;case 23:case 24:yu()}n=n.return}Pi=e,Ti=Uu(e.current,null),Oi=Mi=Ri=t,ji=0,Li=null,Ii=$i=zi=0}function bu(e,t){for(;;){var n=Ti;try{if(Ga(),Xo.current=Tl,Zo){for(var r=Ko.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}Zo=!1}if(Jo=0,Go=Yo=Ko=null,el=!1,_i.current=null,null===n||null===n.return){ji=1,Li=t,Ti=null;break}e:{var o=e,l=n.return,i=n,u=t;if(t=Oi,i.flags|=2048,i.firstEffect=i.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var c=u;if(0==(2&i.mode)){var s=i.alternate;s?(i.updateQueue=s.updateQueue,i.memoizedState=s.memoizedState,i.lanes=s.lanes):(i.updateQueue=null,i.memoizedState=null)}var f=0!=(1&Ro.current),d=l;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var m=d.memoizedProps;p=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!f)}}if(p){var v=d.updateQueue;if(null===v){var y=new Set;y.add(c),d.updateQueue=y}else v.add(c);if(0==(2&d.mode)){if(d.flags|=64,i.flags|=16384,i.flags&=-2981,1===i.tag)if(null===i.alternate)i.tag=17;else{var g=lo(-1,1);g.tag=2,io(i,g)}i.lanes|=1;break e}u=void 0,i=t;var b=o.pingCache;if(null===b?(b=o.pingCache=new oi,u=new Set,b.set(c,u)):void 0===(u=b.get(c))&&(u=new Set,b.set(c,u)),!u.has(i)){u.add(i);var w=zu.bind(null,o,c,i);c.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((X(i.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==ji&&(ji=2),u=ri(u,i),d=l;do{switch(d.tag){case 3:o=u,d.flags|=4096,t&=-t,d.lanes|=t,uo(d,li(0,o,t));break e;case 1:o=u;var k=d.type,E=d.stateNode;if(0==(64&d.flags)&&("function"==typeof k.getDerivedStateFromError||null!==E&&"function"==typeof E.componentDidCatch&&(null===qi||!qi.has(E)))){d.flags|=4096,t&=-t,d.lanes|=t,uo(d,ii(d,o,t));break e}}d=d.return}while(null!==d)}_u(n)}catch(e){t=e,Ti===n&&null!==n&&(Ti=n=n.return);continue}break}}function wu(){var e=Si.current;return Si.current=Tl,null===e?Tl:e}function ku(e,t){var n=Ci;Ci|=16;var r=wu();for(Pi===e&&Oi===t||gu(e,t);;)try{Eu();break}catch(t){bu(e,t)}if(Ga(),Ci=n,Si.current=r,null!==Ti)throw Error(l(261));return Pi=null,Oi=0,ji}function Eu(){for(;null!==Ti;)Su(Ti)}function xu(){for(;null!==Ti&&!Sa();)Su(Ti)}function Su(e){var t=Hi(e.alternate,e,Mi);e.memoizedProps=e.pendingProps,null===t?_u(e):Ti=t,_i.current=null}function _u(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=ti(n,t,Mi)))return void(Ti=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Mi)||0==(4&n.mode)){for(var r=0,a=n.child;null!==a;)r|=a.lanes|a.childLanes,a=a.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=ni(t)))return n.flags&=2047,void(Ti=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Ti=t);Ti=t=e}while(null!==t);0===ji&&(ji=5)}function Cu(e){var t=Ua();return Ha(99,Pu.bind(null,e,t)),null}function Pu(e,t){do{Ou()}while(null!==Qi);if(0!=(48&Ci))throw Error(l(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(l(177));e.callbackNode=null;var r=n.lanes|n.childLanes,a=r,o=e.pendingLanes&~a;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=a,e.mutableReadLanes&=a,e.entangledLanes&=a,a=e.entanglements;for(var i=e.eventTimes,u=e.expirationTimes;0<o;){var c=31-Bt(o),s=1<<c;a[c]=0,i[c]=-1,u[c]=-1,o&=~s}if(null!==Gi&&0==(24&r)&&Gi.has(e)&&Gi.delete(e),e===Pi&&(Ti=Pi=null,Oi=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(a=Ci,Ci|=32,_i.current=null,Ir=Qt,pr(i=dr())){if("selectionStart"in i)u={start:i.selectionStart,end:i.selectionEnd};else e:if(u=(u=i.ownerDocument)&&u.defaultView||window,(s=u.getSelection&&u.getSelection())&&0!==s.rangeCount){u=s.anchorNode,o=s.anchorOffset,c=s.focusNode,s=s.focusOffset;try{u.nodeType,c.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,h=0,m=0,v=i,y=null;t:for(;;){for(var g;v!==u||0!==o&&3!==v.nodeType||(d=f+o),v!==c||0!==s&&3!==v.nodeType||(p=f+s),3===v.nodeType&&(f+=v.nodeValue.length),null!==(g=v.firstChild);)y=v,v=g;for(;;){if(v===i)break t;if(y===u&&++h===o&&(d=f),y===c&&++m===s&&(p=f),null!==(g=v.nextSibling))break;y=(v=y).parentNode}v=g}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;Ar={focusedElem:i,selectionRange:u},Qt=!1,au=null,ou=!1,Bi=r;do{try{Tu()}catch(e){if(null===Bi)throw Error(l(330));Ru(Bi,e),Bi=Bi.nextEffect}}while(null!==Bi);au=null,Bi=r;do{try{for(i=e;null!==Bi;){var b=Bi.flags;if(16&b&&ye(Bi.stateNode,""),128&b){var w=Bi.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&b){case 2:vi(Bi),Bi.flags&=-3;break;case 6:vi(Bi),Bi.flags&=-3,wi(Bi.alternate,Bi);break;case 1024:Bi.flags&=-1025;break;case 1028:Bi.flags&=-1025,wi(Bi.alternate,Bi);break;case 4:wi(Bi.alternate,Bi);break;case 8:bi(i,u=Bi);var E=u.alternate;hi(u),null!==E&&hi(E)}Bi=Bi.nextEffect}}catch(e){if(null===Bi)throw Error(l(330));Ru(Bi,e),Bi=Bi.nextEffect}}while(null!==Bi);if(k=Ar,w=dr(),b=k.focusedElem,i=k.selectionRange,w!==b&&b&&b.ownerDocument&&fr(b.ownerDocument.documentElement,b)){null!==i&&pr(b)&&(w=i.start,void 0===(k=i.end)&&(k=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(k,b.value.length)):(k=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=b.textContent.length,E=Math.min(i.start,u),i=void 0===i.end?E:Math.min(i.end,u),!k.extend&&E>i&&(u=i,i=E,E=u),u=sr(b,E),o=sr(b,i),u&&o&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==o.node||k.focusOffset!==o.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),E>i?(k.addRange(w),k.extend(o.node,o.offset)):(w.setEnd(o.node,o.offset),k.addRange(w))))),w=[];for(k=b;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<w.length;b++)(k=w[b]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Qt=!!Ir,Ar=Ir=null,e.current=n,Bi=r;do{try{for(b=e;null!==Bi;){var x=Bi.flags;if(36&x&&fi(b,Bi.alternate,Bi),128&x){w=void 0;var S=Bi.ref;if(null!==S){var _=Bi.stateNode;switch(Bi.tag){case 5:w=_;break;default:w=_}"function"==typeof S?S(w):S.current=w}}Bi=Bi.nextEffect}}catch(e){if(null===Bi)throw Error(l(330));Ru(Bi,e),Bi=Bi.nextEffect}}while(null!==Bi);Bi=null,Ra(),Ci=a}else e.current=n;if(Xi)Xi=!1,Qi=e,Ji=t;else for(Bi=r;null!==Bi;)t=Bi.nextEffect,Bi.nextEffect=null,8&Bi.flags&&((x=Bi).sibling=null,x.stateNode=null),Bi=t;if(0===(r=e.pendingLanes)&&(qi=null),1===r?e===eu?Zi++:(Zi=0,eu=e):Zi=0,n=n.stateNode,wa&&"function"==typeof wa.onCommitFiberRoot)try{wa.onCommitFiberRoot(ba,n,void 0,64==(64&n.current.flags))}catch(e){}if(su(e,Fa()),Vi)throw Vi=!1,e=Wi,Wi=null,e;return 0!=(8&Ci)||Va(),null}function Tu(){for(;null!==Bi;){var e=Bi.alternate;ou||null===au||(0!=(8&Bi.flags)?Ze(Bi,au)&&(ou=!0):13===Bi.tag&&Ei(e,Bi)&&Ze(Bi,au)&&(ou=!0));var t=Bi.flags;0!=(256&t)&&si(e,Bi),0==(512&t)||Xi||(Xi=!0,Ba(97,(function(){return Ou(),null}))),Bi=Bi.nextEffect}}function Ou(){if(90!==Ji){var e=97<Ji?97:Ji;return Ji=90,Ha(e,ju)}return!1}function Mu(e,t){Ki.push(t,e),Xi||(Xi=!0,Ba(97,(function(){return Ou(),null})))}function Nu(e,t){Yi.push(t,e),Xi||(Xi=!0,Ba(97,(function(){return Ou(),null})))}function ju(){if(null===Qi)return!1;var e=Qi;if(Qi=null,0!=(48&Ci))throw Error(l(331));var t=Ci;Ci|=32;var n=Yi;Yi=[];for(var r=0;r<n.length;r+=2){var a=n[r],o=n[r+1],i=a.destroy;if(a.destroy=void 0,"function"==typeof i)try{i()}catch(e){if(null===o)throw Error(l(330));Ru(o,e)}}for(n=Ki,Ki=[],r=0;r<n.length;r+=2){a=n[r],o=n[r+1];try{var u=a.create;a.destroy=u()}catch(e){if(null===o)throw Error(l(330));Ru(o,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return Ci=t,Va(),!0}function Lu(e,t,n){io(e,t=li(0,t=ri(n,t),1)),t=lu(),null!==(e=cu(e,1))&&(Ht(e,1,t),su(e,t))}function Ru(e,t){if(3===e.tag)Lu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Lu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===qi||!qi.has(r))){var a=ii(n,e=ri(t,e),1);if(io(n,a),a=lu(),null!==(n=cu(n,1)))Ht(n,1,a),su(n,a);else if("function"==typeof r.componentDidCatch&&(null===qi||!qi.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function zu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=lu(),e.pingedLanes|=e.suspendedLanes&n,Pi===e&&(Oi&n)===n&&(4===ji||3===ji&&(62914560&Oi)===Oi&&500>Fa()-Fi?gu(e,0):Ii|=n),su(e,t)}function $u(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Ua()?1:2:(0===nu&&(nu=Ri),0===(t=Ut(62914560&~nu))&&(t=4194304))),n=lu(),null!==(e=cu(e,t))&&(Ht(e,t,n),su(e,n))}function Iu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Au(e,t,n,r){return new Iu(e,t,n,r)}function Fu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Uu(e,t){var n=e.alternate;return null===n?((n=Au(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Du(e,t,n,r,a,o){var i=2;if(r=e,"function"==typeof e)Fu(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case S:return Hu(n.children,a,o,t);case $:i=8,a|=16;break;case _:i=8,a|=1;break;case C:return(e=Au(12,n,t,8|a)).elementType=C,e.type=C,e.lanes=o,e;case M:return(e=Au(13,n,t,a)).type=M,e.elementType=M,e.lanes=o,e;case N:return(e=Au(19,n,t,a)).elementType=N,e.lanes=o,e;case I:return Bu(n,a,o,t);case A:return(e=Au(24,n,t,a)).elementType=A,e.lanes=o,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case P:i=10;break e;case T:i=9;break e;case O:i=11;break e;case j:i=14;break e;case L:i=16,r=null;break e;case R:i=22;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=Au(i,n,t,a)).elementType=e,t.type=r,t.lanes=o,t}function Hu(e,t,n,r){return(e=Au(7,e,r,t)).lanes=n,e}function Bu(e,t,n,r){return(e=Au(23,e,r,t)).elementType=I,e.lanes=n,e}function Vu(e,t,n){return(e=Au(6,e,null,t)).lanes=n,e}function Wu(e,t,n){return(t=Au(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function qu(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Dt(0),this.expirationTimes=Dt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Dt(0),this.mutableSourceEagerHydrationData=null}function Xu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:x,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Qu(e,t,n,r){var a=t.current,o=lu(),i=iu(a);e:if(n){t:{if(Je(n=n._reactInternals)!==n||1!==n.tag)throw Error(l(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(pa(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(l(171))}if(1===n.tag){var c=n.type;if(pa(c)){n=va(n,c,u);break e}}n=u}else n=ua;return null===t.context?t.context=n:t.pendingContext=n,(t=lo(o,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),io(a,t),uu(a,i,o),i}function Ju(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Ku(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Yu(e,t){Ku(e,t),(e=e.alternate)&&Ku(e,t)}function Gu(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new qu(e,t,null!=n&&!0===n.hydrate),t=Au(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,ao(t),e[Kr]=n.current,Tr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var a=(t=r[e])._getVersion;a=a(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a)}this._internalRoot=n}function Zu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function ec(e,t,n,r,a){var o=n._reactRootContainer;if(o){var l=o._internalRoot;if("function"==typeof a){var i=a;a=function(){var e=Ju(l);i.call(e)}}Qu(t,l,e,a)}else{if(o=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Gu(e,0,t?{hydrate:!0}:void 0)}(n,r),l=o._internalRoot,"function"==typeof a){var u=a;a=function(){var e=Ju(l);u.call(e)}}mu((function(){Qu(t,l,e,a)}))}return Ju(l)}function tc(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Zu(t))throw Error(l(200));return Xu(e,t,null,n)}Hi=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||sa.current)Ll=!0;else{if(0==(n&r)){switch(Ll=!1,t.tag){case 3:Bl(t),Vo();break;case 5:jo(t);break;case 1:pa(t.type)&&ya(t);break;case 4:Mo(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var a=t.type._context;ia(Qa,a._currentValue),a._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Ql(e,t,n):(ia(Ro,1&Ro.current),null!==(t=Zl(e,t,n))?t.sibling:null);ia(Ro,1&Ro.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return Gl(e,t,n);t.flags|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ia(Ro,Ro.current),r)break;return null;case 23:case 24:return t.lanes=0,Al(e,t,n)}return Zl(e,t,n)}Ll=0!=(16384&e.flags)}else Ll=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=da(t,ca.current),to(t,n),a=rl(null,t,r,e,a,n),t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,pa(r)){var o=!0;ya(t)}else o=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,ao(t);var i=r.getDerivedStateFromProps;"function"==typeof i&&po(t,r,i,e),a.updater=ho,t.stateNode=a,a._reactInternals=t,go(t,r,e,n),t=Hl(null,t,r,!0,o,n)}else t.tag=0,Rl(null,t,a,n),t=t.child;return t;case 16:a=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=(o=a._init)(a._payload),t.type=a,o=t.tag=function(e){if("function"==typeof e)return Fu(e)?1:0;if(null!=e){if((e=e.$$typeof)===O)return 11;if(e===j)return 14}return 2}(a),e=Xa(a,e),o){case 0:t=Ul(null,t,a,e,n);break e;case 1:t=Dl(null,t,a,e,n);break e;case 11:t=zl(null,t,a,e,n);break e;case 14:t=$l(null,t,a,Xa(a.type,e),r,n);break e}throw Error(l(306,a,""))}return t;case 0:return r=t.type,a=t.pendingProps,Ul(e,t,r,a=t.elementType===r?a:Xa(r,a),n);case 1:return r=t.type,a=t.pendingProps,Dl(e,t,r,a=t.elementType===r?a:Xa(r,a),n);case 3:if(Bl(t),r=t.updateQueue,null===e||null===r)throw Error(l(282));if(r=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,oo(e,t),co(t,r,null,n),(r=t.memoizedState.element)===a)Vo(),t=Zl(e,t,n);else{if((o=(a=t.stateNode).hydrate)&&(Io=Vr(t.stateNode.containerInfo.firstChild),$o=t,o=Ao=!0),o){if(null!=(e=a.mutableSourceEagerHydrationData))for(a=0;a<e.length;a+=2)(o=e[a])._workInProgressVersionPrimary=e[a+1],Wo.push(o);for(n=So(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Rl(e,t,r,n),Vo();t=t.child}return t;case 5:return jo(t),null===e&&Do(t),r=t.type,a=t.pendingProps,o=null!==e?e.memoizedProps:null,i=a.children,Ur(r,a)?i=null:null!==o&&Ur(r,o)&&(t.flags|=16),Fl(e,t),Rl(e,t,i,n),t.child;case 6:return null===e&&Do(t),null;case 13:return Ql(e,t,n);case 4:return Mo(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=xo(t,null,r,n):Rl(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,zl(e,t,r,a=t.elementType===r?a:Xa(r,a),n);case 7:return Rl(e,t,t.pendingProps,n),t.child;case 8:case 12:return Rl(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,a=t.pendingProps,i=t.memoizedProps,o=a.value;var u=t.type._context;if(ia(Qa,u._currentValue),u._currentValue=o,null!==i)if(u=i.value,0==(o=lr(u,o)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,o):1073741823))){if(i.children===a.children&&!sa.current){t=Zl(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){i=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&o)){1===u.tag&&((s=lo(-1,n&-n)).tag=2,io(u,s)),u.lanes|=n,null!==(s=u.alternate)&&(s.lanes|=n),eo(u.return,n),c.lanes|=n;break}s=s.next}}else i=10===u.tag&&u.type===t.type?null:u.child;if(null!==i)i.return=u;else for(i=u;null!==i;){if(i===t){i=null;break}if(null!==(u=i.sibling)){u.return=i.return,i=u;break}i=i.return}u=i}Rl(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(o=t.pendingProps).children,to(t,n),r=r(a=no(a,o.unstable_observedBits)),t.flags|=1,Rl(e,t,r,n),t.child;case 14:return o=Xa(a=t.type,t.pendingProps),$l(e,t,a,o=Xa(a.type,o),r,n);case 15:return Il(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:Xa(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,pa(r)?(e=!0,ya(t)):e=!1,to(t,n),vo(t,r,a),go(t,r,a,n),Hl(null,t,r,!0,e,n);case 19:return Gl(e,t,n);case 23:case 24:return Al(e,t,n)}throw Error(l(156,t.tag))},Gu.prototype.render=function(e){Qu(e,this._internalRoot,null,null)},Gu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Qu(null,e,null,(function(){t[Kr]=null}))},et=function(e){13===e.tag&&(uu(e,4,lu()),Yu(e,4))},tt=function(e){13===e.tag&&(uu(e,67108864,lu()),Yu(e,67108864))},nt=function(e){if(13===e.tag){var t=lu(),n=iu(e);uu(e,n,t),Yu(e,n)}},rt=function(e,t){return t()},Ce=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=ta(r);if(!a)throw Error(l(90));Y(r),ne(r,a)}}}break;case"textarea":ce(e,n);break;case"select":null!=(t=n.value)&&le(e,!!n.multiple,t,!1)}},je=hu,Le=function(e,t,n,r,a){var o=Ci;Ci|=4;try{return Ha(98,e.bind(null,t,n,r,a))}finally{0===(Ci=o)&&(Di(),Va())}},Re=function(){0==(49&Ci)&&(function(){if(null!==Gi){var e=Gi;Gi=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,su(e,Fa())}))}Va()}(),Ou())},ze=function(e,t){var n=Ci;Ci|=2;try{return e(t)}finally{0===(Ci=n)&&(Di(),Va())}};var nc={Events:[Zr,ea,ta,Me,Ne,Ou,{current:!1}]},rc={findFiberByHostInstance:Gr,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},ac={bundleType:rc.bundleType,version:rc.version,rendererPackageName:rc.rendererPackageName,rendererConfig:rc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ge(e))?null:e.stateNode},findFiberByHostInstance:rc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var oc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!oc.isDisabled&&oc.supportsFiber)try{ba=oc.inject(ac),wa=oc}catch(me){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=nc,t.createPortal=tc,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw Error(l(268,Object.keys(e)))}return null===(e=Ge(t))?null:e.stateNode},t.flushSync=function(e,t){var n=Ci;if(0!=(48&n))return e(t);Ci|=1;try{if(e)return Ha(99,e.bind(null,t))}finally{Ci=n,Va()}},t.hydrate=function(e,t,n){if(!Zu(t))throw Error(l(200));return ec(null,e,t,!0,n)},t.render=function(e,t,n){if(!Zu(t))throw Error(l(200));return ec(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Zu(e))throw Error(l(40));return!!e._reactRootContainer&&(mu((function(){ec(null,null,e,!1,(function(){e._reactRootContainer=null,e[Kr]=null}))})),!0)},t.unstable_batchedUpdates=hu,t.unstable_createPortal=function(e,t){return tc(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Zu(n))throw Error(l(200));if(null==e||void 0===e._reactInternals)throw Error(l(38));return ec(e,t,n,!1,r)},t.version="17.0.2"},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},921:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,a=n?Symbol.for("react.portal"):60106,o=n?Symbol.for("react.fragment"):60107,l=n?Symbol.for("react.strict_mode"):60108,i=n?Symbol.for("react.profiler"):60114,u=n?Symbol.for("react.provider"):60109,c=n?Symbol.for("react.context"):60110,s=n?Symbol.for("react.async_mode"):60111,f=n?Symbol.for("react.concurrent_mode"):60111,d=n?Symbol.for("react.forward_ref"):60112,p=n?Symbol.for("react.suspense"):60113,h=n?Symbol.for("react.suspense_list"):60120,m=n?Symbol.for("react.memo"):60115,v=n?Symbol.for("react.lazy"):60116,y=n?Symbol.for("react.block"):60121,g=n?Symbol.for("react.fundamental"):60117,b=n?Symbol.for("react.responder"):60118,w=n?Symbol.for("react.scope"):60119;function k(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case s:case f:case o:case i:case l:case p:return e;default:switch(e=e&&e.$$typeof){case c:case d:case v:case m:case u:return e;default:return t}}case a:return t}}}function E(e){return k(e)===f}t.AsyncMode=s,t.ConcurrentMode=f,t.ContextConsumer=c,t.ContextProvider=u,t.Element=r,t.ForwardRef=d,t.Fragment=o,t.Lazy=v,t.Memo=m,t.Portal=a,t.Profiler=i,t.StrictMode=l,t.Suspense=p,t.isAsyncMode=function(e){return E(e)||k(e)===s},t.isConcurrentMode=E,t.isContextConsumer=function(e){return k(e)===c},t.isContextProvider=function(e){return k(e)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return k(e)===d},t.isFragment=function(e){return k(e)===o},t.isLazy=function(e){return k(e)===v},t.isMemo=function(e){return k(e)===m},t.isPortal=function(e){return k(e)===a},t.isProfiler=function(e){return k(e)===i},t.isStrictMode=function(e){return k(e)===l},t.isSuspense=function(e){return k(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===o||e===f||e===i||e===l||e===p||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===m||e.$$typeof===u||e.$$typeof===c||e.$$typeof===d||e.$$typeof===g||e.$$typeof===b||e.$$typeof===w||e.$$typeof===y)},t.typeOf=k},864:(e,t,n)=>{"use strict";e.exports=n(921)},851:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=i(n(804)),o=i(n(697)),l=i(n(90));function i(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={loaded:!1},n.onLoad=n.onLoad.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),r(t,[{key:"getChildContext",value:function(){return{MathJax:"undefined"==typeof MathJax?void 0:MathJax,input:this.props.input}}},{key:"componentDidMount",value:function(){var e=this.props.script;if(!e)return this.onLoad();(0,l.default)(e,this.onLoad)}},{key:"onLoad",value:function(){var e=this,t=this.props.options;MathJax.Hub.Config(t),MathJax.Hub.Register.StartupHook("End",(function(){MathJax.Hub.processSectionDelay=e.props.delay,e.props.didFinishTypeset&&e.props.didFinishTypeset(),e.props.onLoad&&e.props.onLoad(),e.setState({loaded:!0})})),MathJax.Hub.Register.MessageHook("Math Processing Error",(function(t){e.props.onError&&e.props.onError(MathJax,t)}))}},{key:"render",value:function(){if(!this.state.loaded&&!this.props.noGate)return this.props.loading;var e=this.props.children;return a.default.Children.only(e)}}]),t}(a.default.Component);u.propTypes={children:o.default.node.isRequired,didFinishTypeset:o.default.func,script:o.default.oneOfType([o.default.string,o.default.oneOf([!1])]),input:o.default.oneOf(["ascii","tex"]),delay:o.default.number,options:o.default.object,loading:o.default.node,noGate:o.default.bool},u.childContextTypes={MathJax:o.default.object,input:o.default.string},u.defaultProps={script:"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML",input:"ascii",delay:0,options:{},loading:null,noGate:!1},t.default=u},929:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=l(n(804)),o=l(n(697));function l(e){return e&&e.__esModule?e:{default:e}}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function u(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var c=function(e){function t(){return i(this,t),u(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),r(t,[{key:"componentDidMount",value:function(){this.refreshMathJax()}},{key:"componentDidUpdate",value:function(){this.refreshMathJax()}},{key:"refreshMathJax",value:function(){var e=this.context.MathJax;if(!e)throw Error("Could not find MathJax while attempting typeset! Probably MathJax script hasn't been loaded or MathJax.Context is not in the hierarchy");e.Hub.Queue(e.Hub.Typeset(this.div,this.props.onRender))}},{key:"render",value:function(){var e=this,t=this.props;return t.classes,t.options,a.default.createElement("div",{key:this.props.text,ref:function(t){return e.div=t},dangerouslySetInnerHTML:{__html:this.props.html}})}}]),t}(a.default.Component);c.contextTypes={MathJax:o.default.object},t.default=c},569:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=l(n(804)),o=l(n(697));function l(e){return e&&e.__esModule?e:{default:e}}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function u(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var c={ascii:"asciimath",tex:"tex"},s=function(e){function t(){return i(this,t),u(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),r(t,[{key:"componentDidMount",value:function(){this.typeset()}},{key:"componentDidUpdate",value:function(e){var t=e.inline!==this.props.inline||e.children!==this.props.children;this.typeset(t)}},{key:"shouldComponentUpdate",value:function(e,t,n){return e.children!==this.props.children||e.inline!==this.props.inline}},{key:"componentWillUnmount",value:function(){this.clear()}},{key:"clear",value:function(){var e=this.context.MathJax;if(this.script){var t=e.Hub.getJaxFor(this.script);t&&t.Remove()}}},{key:"typeset",value:function(e){var t=this.context.MathJax;if(!t)throw Error("Could not find MathJax while attempting typeset! Probably MathJax script hasn't been loaded or MathJax.Context is not in the hierarchy");var n=this.props.children;e&&this.clear(),!e&&this.script||this.setScriptText(n),t.Hub.Queue(t.Hub.Reprocess(this.script,this.props.onRender))}},{key:"setScriptText",value:function(e){var t=this.props.inline,n=c[this.context.input];this.script||(this.script=document.createElement("script"),this.script.type="math/"+n+"; "+(t?"":"mode=display"),this.refs.node.appendChild(this.script)),"text"in this.script?this.script.text=e:this.script.textContent=e}},{key:"render",value:function(){return a.default.createElement("span",{ref:"node"})}}]),t}(a.default.Component);s.propTypes={inline:o.default.bool,children:o.default.node.isRequired,onRender:o.default.func},s.contextTypes={MathJax:o.default.object,input:o.default.string},s.defaultProps={inline:!1,onRender:function(){}},t.default=s},948:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=l(n(804)),o=l(n(697));function l(e){return e&&e.__esModule?e:{default:e}}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function u(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var c=function(e){function t(){return i(this,t),u(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),r(t,[{key:"componentDidMount",value:function(){this.refreshMathJax()}},{key:"componentDidUpdate",value:function(){this.refreshMathJax()}},{key:"refreshMathJax",value:function(){var e=this.context.MathJax;if(!e)throw Error("Could not find MathJax while attempting typeset! Probably MathJax script hasn't been loaded or MathJax.Context is not in the hierarchy");e.Hub.Queue(e.Hub.Typeset(this.div,this.props.onRender))}},{key:"render",value:function(){var e=this,t=this.props;return t.classes,t.options,a.default.createElement("div",{key:this.props.text,ref:function(t){return e.div=t}},this.props.text)}}]),t}(a.default.Component);c.contextTypes={MathJax:o.default.object},t.default=c},369:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Html=t.Text=t.Context=t.Node=void 0;var r=i(n(569)),a=i(n(851)),o=i(n(948)),l=i(n(929));function i(e){return e&&e.__esModule?e:{default:e}}t.Node=r.default,t.Context=a.default,t.Text=o.default,t.Html=l.default,t.default={Node:r.default,Context:a.default,Text:o.default,Html:l.default}},827:(e,t,n)=>{"use strict";var r=n(418),a="function"==typeof Symbol&&Symbol.for,o=a?Symbol.for("react.element"):60103,l=a?Symbol.for("react.portal"):60106,i=a?Symbol.for("react.fragment"):60107,u=a?Symbol.for("react.strict_mode"):60108,c=a?Symbol.for("react.profiler"):60114,s=a?Symbol.for("react.provider"):60109,f=a?Symbol.for("react.context"):60110,d=a?Symbol.for("react.forward_ref"):60112,p=a?Symbol.for("react.suspense"):60113,h=a?Symbol.for("react.memo"):60115,m=a?Symbol.for("react.lazy"):60116,v="function"==typeof Symbol&&Symbol.iterator;function y(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||g}function k(){}function E(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||g}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(y(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=w.prototype;var x=E.prototype=new k;x.constructor=E,r(x,w.prototype),x.isPureReactComponent=!0;var S={current:null},_=Object.prototype.hasOwnProperty,C={key:!0,ref:!0,__self:!0,__source:!0};function P(e,t,n){var r,a={},l=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(l=""+t.key),t)_.call(t,r)&&!C.hasOwnProperty(r)&&(a[r]=t[r]);var u=arguments.length-2;if(1===u)a.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];a.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===a[r]&&(a[r]=u[r]);return{$$typeof:o,type:e,key:l,ref:i,props:a,_owner:S.current}}function T(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var O=/\/+/g,M=[];function N(e,t,n,r){if(M.length){var a=M.pop();return a.result=e,a.keyPrefix=t,a.func=n,a.context=r,a.count=0,a}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function j(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>M.length&&M.push(e)}function L(e,t,n,r){var a=typeof e;"undefined"!==a&&"boolean"!==a||(e=null);var i=!1;if(null===e)i=!0;else switch(a){case"string":case"number":i=!0;break;case"object":switch(e.$$typeof){case o:case l:i=!0}}if(i)return n(r,e,""===t?"."+z(e,0):t),1;if(i=0,t=""===t?".":t+":",Array.isArray(e))for(var u=0;u<e.length;u++){var c=t+z(a=e[u],u);i+=L(a,c,n,r)}else if("function"==typeof(c=null===e||"object"!=typeof e?null:"function"==typeof(c=v&&e[v]||e["@@iterator"])?c:null))for(e=c.call(e),u=0;!(a=e.next()).done;)i+=L(a=a.value,c=t+z(a,u++),n,r);else if("object"===a)throw n=""+e,Error(y(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n,""));return i}function R(e,t,n){return null==e?0:L(e,"",t,n)}function z(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function $(e,t){e.func.call(e.context,t,e.count++)}function I(e,t,n){var r=e.result,a=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?A(e,r,n,(function(e){return e})):null!=e&&(T(e)&&(e=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,a+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(O,"$&/")+"/")+n)),r.push(e))}function A(e,t,n,r,a){var o="";null!=n&&(o=(""+n).replace(O,"$&/")+"/"),R(e,I,t=N(t,o,r,a)),j(t)}var F={current:null};function U(){var e=F.current;if(null===e)throw Error(y(321));return e}var D={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:S,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return A(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;R(e,$,t=N(null,null,t,n)),j(t)},count:function(e){return R(e,(function(){return null}),null)},toArray:function(e){var t=[];return A(e,t,null,(function(e){return e})),t},only:function(e){if(!T(e))throw Error(y(143));return e}},t.Component=w,t.Fragment=i,t.Profiler=c,t.PureComponent=E,t.StrictMode=u,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=D,t.cloneElement=function(e,t,n){if(null==e)throw Error(y(267,e));var a=r({},e.props),l=e.key,i=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,u=S.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)_.call(t,s)&&!C.hasOwnProperty(s)&&(a[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)a.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];a.children=c}return{$$typeof:o,type:e.type,key:l,ref:i,props:a,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=P,t.createFactory=function(e){var t=P.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=T,t.lazy=function(e){return{$$typeof:m,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return U().useCallback(e,t)},t.useContext=function(e,t){return U().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return U().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return U().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return U().useLayoutEffect(e,t)},t.useMemo=function(e,t){return U().useMemo(e,t)},t.useReducer=function(e,t,n){return U().useReducer(e,t,n)},t.useRef=function(e){return U().useRef(e)},t.useState=function(e){return U().useState(e)},t.version="16.14.0"},804:(e,t,n)=>{"use strict";e.exports=n(827)},427:(e,t,n)=>{"use strict";function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,r(e,t)}n.r(t),n.d(t,{BrowserRouter:()=>ye,HashRouter:()=>ge,Link:()=>Se,MemoryRouter:()=>X,NavLink:()=>Pe,Prompt:()=>J,Redirect:()=>Z,Route:()=>re,Router:()=>q,StaticRouter:()=>ce,Switch:()=>se,generatePath:()=>G,matchPath:()=>ne,useHistory:()=>pe,useLocation:()=>he,useParams:()=>me,useRouteMatch:()=>ve,withRouter:()=>fe});var o=n(294),l=n(697),i=n.n(l);function u(){return(u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function c(e){return"/"===e.charAt(0)}function s(e,t){for(var n=t,r=n+1,a=e.length;r<a;n+=1,r+=1)e[n]=e[r];e.pop()}function f(e){return e.valueOf?e.valueOf():Object.prototype.valueOf.call(e)}const d=function e(t,n){if(t===n)return!0;if(null==t||null==n)return!1;if(Array.isArray(t))return Array.isArray(n)&&t.length===n.length&&t.every((function(t,r){return e(t,n[r])}));if("object"==typeof t||"object"==typeof n){var r=f(t),a=f(n);return r!==t||a!==n?e(r,a):Object.keys(Object.assign({},t,n)).every((function(r){return e(t[r],n[r])}))}return!1};const p=function(e,t){if(!e)throw new Error("Invariant failed")};function h(e){return"/"===e.charAt(0)?e:"/"+e}function m(e){return"/"===e.charAt(0)?e.substr(1):e}function v(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function y(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function g(e){var t=e.pathname,n=e.search,r=e.hash,a=t||"/";return n&&"?"!==n&&(a+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(a+="#"===r.charAt(0)?r:"#"+r),a}function b(e,t,n,r){var a;"string"==typeof e?(a=function(e){var t=e||"/",n="",r="",a=t.indexOf("#");-1!==a&&(r=t.substr(a),t=t.substr(0,a));var o=t.indexOf("?");return-1!==o&&(n=t.substr(o),t=t.substr(0,o)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(a=u({},e)).pathname&&(a.pathname=""),a.search?"?"!==a.search.charAt(0)&&(a.search="?"+a.search):a.search="",a.hash?"#"!==a.hash.charAt(0)&&(a.hash="#"+a.hash):a.hash="",void 0!==t&&void 0===a.state&&(a.state=t));try{a.pathname=decodeURI(a.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+a.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(a.key=n),r?a.pathname?"/"!==a.pathname.charAt(0)&&(a.pathname=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],a=t&&t.split("/")||[],o=e&&c(e),l=t&&c(t),i=o||l;if(e&&c(e)?a=r:r.length&&(a.pop(),a=a.concat(r)),!a.length)return"/";if(a.length){var u=a[a.length-1];n="."===u||".."===u||""===u}else n=!1;for(var f=0,d=a.length;d>=0;d--){var p=a[d];"."===p?s(a,d):".."===p?(s(a,d),f++):f&&(s(a,d),f--)}if(!i)for(;f--;f)a.unshift("..");!i||""===a[0]||a[0]&&c(a[0])||a.unshift("");var h=a.join("/");return n&&"/"!==h.substr(-1)&&(h+="/"),h}(a.pathname,r.pathname)):a.pathname=r.pathname:a.pathname||(a.pathname="/"),a}function w(){var e=null,t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,a){if(null!=e){var o="function"==typeof e?e(t,n):e;"string"==typeof o?"function"==typeof r?r(o,a):a(!0):a(!1!==o)}else a(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var k=!("undefined"==typeof window||!window.document||!window.document.createElement);function E(e,t){t(window.confirm(e))}var x="popstate",S="hashchange";function _(){try{return window.history.state||{}}catch(e){return{}}}function C(e){void 0===e&&(e={}),k||p(!1);var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,a=!(-1===window.navigator.userAgent.indexOf("Trident")),o=e,l=o.forceRefresh,i=void 0!==l&&l,c=o.getUserConfirmation,s=void 0===c?E:c,f=o.keyLength,d=void 0===f?6:f,m=e.basename?y(h(e.basename)):"";function C(e){var t=e||{},n=t.key,r=t.state,a=window.location,o=a.pathname+a.search+a.hash;return m&&(o=v(o,m)),b(o,r,n)}function P(){return Math.random().toString(36).substr(2,d)}var T=w();function O(e){u(D,e),D.length=n.length,T.notifyListeners(D.location,D.action)}function M(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||L(C(e.state))}function N(){L(C(_()))}var j=!1;function L(e){j?(j=!1,O()):T.confirmTransitionTo(e,"POP",s,(function(t){t?O({action:"POP",location:e}):function(e){var t=D.location,n=z.indexOf(t.key);-1===n&&(n=0);var r=z.indexOf(e.key);-1===r&&(r=0);var a=n-r;a&&(j=!0,I(a))}(e)}))}var R=C(_()),z=[R.key];function $(e){return m+g(e)}function I(e){n.go(e)}var A=0;function F(e){1===(A+=e)&&1===e?(window.addEventListener(x,M),a&&window.addEventListener(S,N)):0===A&&(window.removeEventListener(x,M),a&&window.removeEventListener(S,N))}var U=!1,D={length:n.length,action:"POP",location:R,createHref:$,push:function(e,t){var a="PUSH",o=b(e,t,P(),D.location);T.confirmTransitionTo(o,a,s,(function(e){if(e){var t=$(o),l=o.key,u=o.state;if(r)if(n.pushState({key:l,state:u},null,t),i)window.location.href=t;else{var c=z.indexOf(D.location.key),s=z.slice(0,c+1);s.push(o.key),z=s,O({action:a,location:o})}else window.location.href=t}}))},replace:function(e,t){var a="REPLACE",o=b(e,t,P(),D.location);T.confirmTransitionTo(o,a,s,(function(e){if(e){var t=$(o),l=o.key,u=o.state;if(r)if(n.replaceState({key:l,state:u},null,t),i)window.location.replace(t);else{var c=z.indexOf(D.location.key);-1!==c&&(z[c]=o.key),O({action:a,location:o})}else window.location.replace(t)}}))},go:I,goBack:function(){I(-1)},goForward:function(){I(1)},block:function(e){void 0===e&&(e=!1);var t=T.setPrompt(e);return U||(F(1),U=!0),function(){return U&&(U=!1,F(-1)),t()}},listen:function(e){var t=T.appendListener(e);return F(1),function(){F(-1),t()}}};return D}var P="hashchange",T={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+m(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:m,decodePath:h},slash:{encodePath:h,decodePath:h}};function O(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function M(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function N(e){window.location.replace(O(window.location.href)+"#"+e)}function j(e){void 0===e&&(e={}),k||p(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),r=n.getUserConfirmation,a=void 0===r?E:r,o=n.hashType,l=void 0===o?"slash":o,i=e.basename?y(h(e.basename)):"",c=T[l],s=c.encodePath,f=c.decodePath;function d(){var e=f(M());return i&&(e=v(e,i)),b(e)}var m=w();function x(e){u(U,e),U.length=t.length,m.notifyListeners(U.location,U.action)}var S=!1,_=null;function C(){var e,t,n=M(),r=s(n);if(n!==r)N(r);else{var o=d(),l=U.location;if(!S&&(t=o,(e=l).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(_===g(o))return;_=null,function(e){if(S)S=!1,x();else{m.confirmTransitionTo(e,"POP",a,(function(t){t?x({action:"POP",location:e}):function(e){var t=U.location,n=z.lastIndexOf(g(t));-1===n&&(n=0);var r=z.lastIndexOf(g(e));-1===r&&(r=0);var a=n-r;a&&(S=!0,$(a))}(e)}))}}(o)}}var j=M(),L=s(j);j!==L&&N(L);var R=d(),z=[g(R)];function $(e){t.go(e)}var I=0;function A(e){1===(I+=e)&&1===e?window.addEventListener(P,C):0===I&&window.removeEventListener(P,C)}var F=!1,U={length:t.length,action:"POP",location:R,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=O(window.location.href)),n+"#"+s(i+g(e))},push:function(e,t){var n="PUSH",r=b(e,void 0,void 0,U.location);m.confirmTransitionTo(r,n,a,(function(e){if(e){var t=g(r),a=s(i+t);if(M()!==a){_=t,function(e){window.location.hash=e}(a);var o=z.lastIndexOf(g(U.location)),l=z.slice(0,o+1);l.push(t),z=l,x({action:n,location:r})}else x()}}))},replace:function(e,t){var n="REPLACE",r=b(e,void 0,void 0,U.location);m.confirmTransitionTo(r,n,a,(function(e){if(e){var t=g(r),a=s(i+t);M()!==a&&(_=t,N(a));var o=z.indexOf(g(U.location));-1!==o&&(z[o]=t),x({action:n,location:r})}}))},go:$,goBack:function(){$(-1)},goForward:function(){$(1)},block:function(e){void 0===e&&(e=!1);var t=m.setPrompt(e);return F||(A(1),F=!0),function(){return F&&(F=!1,A(-1)),t()}},listen:function(e){var t=m.appendListener(e);return A(1),function(){A(-1),t()}}};return U}function L(e,t,n){return Math.min(Math.max(e,t),n)}function R(e){void 0===e&&(e={});var t=e,n=t.getUserConfirmation,r=t.initialEntries,a=void 0===r?["/"]:r,o=t.initialIndex,l=void 0===o?0:o,i=t.keyLength,c=void 0===i?6:i,s=w();function f(e){u(y,e),y.length=y.entries.length,s.notifyListeners(y.location,y.action)}function d(){return Math.random().toString(36).substr(2,c)}var p=L(l,0,a.length-1),h=a.map((function(e){return b(e,void 0,"string"==typeof e?d():e.key||d())})),m=g;function v(e){var t=L(y.index+e,0,y.entries.length-1),r=y.entries[t];s.confirmTransitionTo(r,"POP",n,(function(e){e?f({action:"POP",location:r,index:t}):f()}))}var y={length:h.length,action:"POP",location:h[p],index:p,entries:h,createHref:m,push:function(e,t){var r="PUSH",a=b(e,t,d(),y.location);s.confirmTransitionTo(a,r,n,(function(e){if(e){var t=y.index+1,n=y.entries.slice(0);n.length>t?n.splice(t,n.length-t,a):n.push(a),f({action:r,location:a,index:t,entries:n})}}))},replace:function(e,t){var r="REPLACE",a=b(e,t,d(),y.location);s.confirmTransitionTo(a,r,n,(function(e){e&&(y.entries[y.index]=a,f({action:r,location:a}))}))},go:v,goBack:function(){v(-1)},goForward:function(){v(1)},canGo:function(e){var t=y.index+e;return t>=0&&t<y.entries.length},block:function(e){return void 0===e&&(e=!1),s.setPrompt(e)},listen:function(e){return s.appendListener(e)}};return y}var z=1073741823,$="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:{};function I(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}const A=o.createContext||function(e,t){var n,r,l,u="__create-react-context-"+(($[l="__global_unique_id__"]=($[l]||0)+1)+"__"),c=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).emitter=I(t.props.value),t}a(n,e);var r=n.prototype;return r.getChildContext=function(){var e;return(e={})[u]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,a=e.value;((o=r)===(l=a)?0!==o||1/o==1/l:o!=o&&l!=l)?n=0:(n="function"==typeof t?t(r,a):z,0!=(n|=0)&&this.emitter.set(e.value,n))}var o,l},r.render=function(){return this.props.children},n}(o.Component);c.childContextTypes=((n={})[u]=i().object.isRequired,n);var s=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}a(n,t);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?z:t},r.componentDidMount=function(){this.context[u]&&this.context[u].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?z:e},r.componentWillUnmount=function(){this.context[u]&&this.context[u].off(this.onUpdate)},r.getValue=function(){return this.context[u]?this.context[u].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(o.Component);return s.contextTypes=((r={})[u]=i().object,r),{Provider:c,Consumer:s}};var F=n(779),U=n.n(F);function D(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}n(864);var H=n(679),B=n.n(H),V=function(e){var t=A();return t.displayName="Router-History",t}(),W=function(e){var t=A();return t.displayName="Router",t}(),q=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}a(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return o.createElement(W.Provider,{value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},o.createElement(V.Provider,{children:this.props.children||null,value:this.props.history}))},t}(o.Component),X=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(t=e.call.apply(e,[this].concat(r))||this).history=R(t.props),t}return a(t,e),t.prototype.render=function(){return o.createElement(q,{history:this.history,children:this.props.children})},t}(o.Component),Q=function(e){function t(){return e.apply(this,arguments)||this}a(t,e);var n=t.prototype;return n.componentDidMount=function(){this.props.onMount&&this.props.onMount.call(this,this)},n.componentDidUpdate=function(e){this.props.onUpdate&&this.props.onUpdate.call(this,this,e)},n.componentWillUnmount=function(){this.props.onUnmount&&this.props.onUnmount.call(this,this)},n.render=function(){return null},t}(o.Component);function J(e){var t=e.message,n=e.when,r=void 0===n||n;return o.createElement(W.Consumer,null,(function(e){if(e||p(!1),!r||e.staticContext)return null;var n=e.history.block;return o.createElement(Q,{onMount:function(e){e.release=n(t)},onUpdate:function(e,r){r.message!==t&&(e.release(),e.release=n(t))},onUnmount:function(e){e.release()},message:t})}))}var K={},Y=0;function G(e,t){return void 0===e&&(e="/"),void 0===t&&(t={}),"/"===e?e:function(e){if(K[e])return K[e];var t=U().compile(e);return Y<1e4&&(K[e]=t,Y++),t}(e)(t,{pretty:!0})}function Z(e){var t=e.computedMatch,n=e.to,r=e.push,a=void 0!==r&&r;return o.createElement(W.Consumer,null,(function(e){e||p(!1);var r=e.history,l=e.staticContext,i=a?r.push:r.replace,c=b(t?"string"==typeof n?G(n,t.params):u({},n,{pathname:G(n.pathname,t.params)}):n);return l?(i(c),null):o.createElement(Q,{onMount:function(){i(c)},onUpdate:function(e,t){var n,r,a=b(t.to);n=a,r=u({},c,{key:a.key}),n.pathname===r.pathname&&n.search===r.search&&n.hash===r.hash&&n.key===r.key&&d(n.state,r.state)||i(c)},to:n})}))}var ee={},te=0;function ne(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,a=n.exact,o=void 0!==a&&a,l=n.strict,i=void 0!==l&&l,u=n.sensitive,c=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=ee[n]||(ee[n]={});if(r[e])return r[e];var a=[],o={regexp:U()(e,a,t),keys:a};return te<1e4&&(r[e]=o,te++),o}(n,{end:o,strict:i,sensitive:c}),a=r.regexp,l=r.keys,u=a.exec(e);if(!u)return null;var s=u[0],f=u.slice(1),d=e===s;return o&&!d?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:d,params:l.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}var re=function(e){function t(){return e.apply(this,arguments)||this}return a(t,e),t.prototype.render=function(){var e=this;return o.createElement(W.Consumer,null,(function(t){t||p(!1);var n=e.props.location||t.location,r=u({},t,{location:n,match:e.props.computedMatch?e.props.computedMatch:e.props.path?ne(n.pathname,e.props):t.match}),a=e.props,l=a.children,i=a.component,c=a.render;return Array.isArray(l)&&0===l.length&&(l=null),o.createElement(W.Provider,{value:r},r.match?l?"function"==typeof l?l(r):l:i?o.createElement(i,r):c?c(r):null:"function"==typeof l?l(r):null)}))},t}(o.Component);function ae(e){return"/"===e.charAt(0)?e:"/"+e}function oe(e,t){if(!e)return t;var n=ae(e);return 0!==t.pathname.indexOf(n)?t:u({},t,{pathname:t.pathname.substr(n.length)})}function le(e){return"string"==typeof e?e:g(e)}function ie(e){return function(){p(!1)}}function ue(){}var ce=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(t=e.call.apply(e,[this].concat(r))||this).handlePush=function(e){return t.navigateTo(e,"PUSH")},t.handleReplace=function(e){return t.navigateTo(e,"REPLACE")},t.handleListen=function(){return ue},t.handleBlock=function(){return ue},t}a(t,e);var n=t.prototype;return n.navigateTo=function(e,t){var n=this.props,r=n.basename,a=void 0===r?"":r,o=n.context,l=void 0===o?{}:o;l.action=t,l.location=function(e,t){return e?u({},t,{pathname:ae(e)+t.pathname}):t}(a,b(e)),l.url=le(l.location)},n.render=function(){var e=this.props,t=e.basename,n=void 0===t?"":t,r=e.context,a=void 0===r?{}:r,l=e.location,i=void 0===l?"/":l,c=D(e,["basename","context","location"]),s={createHref:function(e){return ae(n+le(e))},action:"POP",location:oe(n,b(i)),push:this.handlePush,replace:this.handleReplace,go:ie(),goBack:ie(),goForward:ie(),listen:this.handleListen,block:this.handleBlock};return o.createElement(q,u({},c,{history:s,staticContext:a}))},t}(o.Component),se=function(e){function t(){return e.apply(this,arguments)||this}return a(t,e),t.prototype.render=function(){var e=this;return o.createElement(W.Consumer,null,(function(t){t||p(!1);var n,r,a=e.props.location||t.location;return o.Children.forEach(e.props.children,(function(e){if(null==r&&o.isValidElement(e)){n=e;var l=e.props.path||e.props.from;r=l?ne(a.pathname,u({},e.props,{path:l})):t.match}})),r?o.cloneElement(n,{location:a,computedMatch:r}):null}))},t}(o.Component);function fe(e){var t="withRouter("+(e.displayName||e.name)+")",n=function(t){var n=t.wrappedComponentRef,r=D(t,["wrappedComponentRef"]);return o.createElement(W.Consumer,null,(function(t){return t||p(!1),o.createElement(e,u({},r,t,{ref:n}))}))};return n.displayName=t,n.WrappedComponent=e,B()(n,e)}var de=o.useContext;function pe(){return de(V)}function he(){return de(W).location}function me(){var e=de(W).match;return e?e.params:{}}function ve(e){var t=he(),n=de(W).match;return e?ne(t.pathname,e):n}var ye=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(t=e.call.apply(e,[this].concat(r))||this).history=C(t.props),t}return a(t,e),t.prototype.render=function(){return o.createElement(q,{history:this.history,children:this.props.children})},t}(o.Component),ge=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(t=e.call.apply(e,[this].concat(r))||this).history=j(t.props),t}return a(t,e),t.prototype.render=function(){return o.createElement(q,{history:this.history,children:this.props.children})},t}(o.Component),be=function(e,t){return"function"==typeof e?e(t):e},we=function(e,t){return"string"==typeof e?b(e,null,null,t):e},ke=function(e){return e},Ee=o.forwardRef;void 0===Ee&&(Ee=ke);var xe=Ee((function(e,t){var n=e.innerRef,r=e.navigate,a=e.onClick,l=D(e,["innerRef","navigate","onClick"]),i=l.target,c=u({},l,{onClick:function(e){try{a&&a(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||i&&"_self"!==i||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return c.ref=ke!==Ee&&t||n,o.createElement("a",c)})),Se=Ee((function(e,t){var n=e.component,r=void 0===n?xe:n,a=e.replace,l=e.to,i=e.innerRef,c=D(e,["component","replace","to","innerRef"]);return o.createElement(W.Consumer,null,(function(e){e||p(!1);var n=e.history,s=we(be(l,e.location),e.location),f=s?n.createHref(s):"",d=u({},c,{href:f,navigate:function(){var t=be(l,e.location);(a?n.replace:n.push)(t)}});return ke!==Ee?d.ref=t||i:d.innerRef=i,o.createElement(r,d)}))})),_e=function(e){return e},Ce=o.forwardRef;void 0===Ce&&(Ce=_e);var Pe=Ce((function(e,t){var n=e["aria-current"],r=void 0===n?"page":n,a=e.activeClassName,l=void 0===a?"active":a,i=e.activeStyle,c=e.className,s=e.exact,f=e.isActive,d=e.location,h=e.sensitive,m=e.strict,v=e.style,y=e.to,g=e.innerRef,b=D(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return o.createElement(W.Consumer,null,(function(e){e||p(!1);var n=d||e.location,a=we(be(y,n),n),w=a.pathname,k=w&&w.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),E=k?ne(n.pathname,{path:k,exact:s,sensitive:h,strict:m}):null,x=!!(f?f(E,n):E),S=x?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(c,l):c,_=x?u({},v,{},i):v,C=u({"aria-current":x&&r||null,className:S,style:_,to:a},b);return _e!==Ce?C.ref=t||g:C.innerRef=g,o.createElement(Se,C)}))}))},408:(e,t,n)=>{"use strict";var r=n(418),a=60103,o=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var l=60109,i=60110,u=60112;t.Suspense=60113;var c=60115,s=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;a=f("react.element"),o=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),l=f("react.provider"),i=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),c=f("react.memo"),s=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function v(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}function y(){}function g(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=v.prototype;var b=g.prototype=new y;b.constructor=g,r(b,v.prototype),b.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,E={key:!0,ref:!0,__self:!0,__source:!0};function x(e,t,n){var r,o={},l=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(l=""+t.key),t)k.call(t,r)&&!E.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:a,type:e,key:l,ref:i,props:o,_owner:w.current}}function S(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var _=/\/+/g;function C(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function P(e,t,n,r,l){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var u=!1;if(null===e)u=!0;else switch(i){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case a:case o:u=!0}}if(u)return l=l(u=e),e=""===r?"."+C(u,0):r,Array.isArray(l)?(n="",null!=e&&(n=e.replace(_,"$&/")+"/"),P(l,t,n,"",(function(e){return e}))):null!=l&&(S(l)&&(l=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(l,n+(!l.key||u&&u.key===l.key?"":(""+l.key).replace(_,"$&/")+"/")+e)),t.push(l)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var c=0;c<e.length;c++){var s=r+C(i=e[c],c);u+=P(i,t,n,s,l)}else if("function"==typeof(s=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=s.call(e),c=0;!(i=e.next()).done;)u+=P(i=i.value,t,n,s=r+C(i,c++),l);else if("object"===i)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function T(e,t,n){if(null==e)return e;var r=[],a=0;return P(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function O(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var M={current:null};function N(){var e=M.current;if(null===e)throw Error(p(321));return e}var j={ReactCurrentDispatcher:M,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:T,forEach:function(e,t,n){T(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return T(e,(function(){t++})),t},toArray:function(e){return T(e,(function(e){return e}))||[]},only:function(e){if(!S(e))throw Error(p(143));return e}},t.Component=v,t.PureComponent=g,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=j,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var o=r({},e.props),l=e.key,i=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,u=w.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)k.call(t,s)&&!E.hasOwnProperty(s)&&(o[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];o.children=c}return{$$typeof:a,type:e.type,key:l,ref:i,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:i,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:l,_context:e},e.Consumer=e},t.createElement=x,t.createFactory=function(e){var t=x.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=S,t.lazy=function(e){return{$$typeof:s,_payload:{_status:-1,_result:e},_init:O}},t.memo=function(e,t){return{$$typeof:c,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return N().useCallback(e,t)},t.useContext=function(e,t){return N().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return N().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return N().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return N().useLayoutEffect(e,t)},t.useMemo=function(e,t){return N().useMemo(e,t)},t.useReducer=function(e,t,n){return N().useReducer(e,t,n)},t.useRef=function(e){return N().useRef(e)},t.useState=function(e){return N().useState(e)},t.version="17.0.2"},294:(e,t,n)=>{"use strict";e.exports=n(408)},53:(e,t)=>{"use strict";var n,r,a,o;if("object"==typeof performance&&"function"==typeof performance.now){var l=performance;t.unstable_now=function(){return l.now()}}else{var i=Date,u=i.now();t.unstable_now=function(){return i.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,s=null,f=function(){if(null!==c)try{var e=t.unstable_now();c(!0,e),c=null}catch(e){throw setTimeout(f,0),e}};n=function(e){null!==c?setTimeout(n,0,e):(c=e,setTimeout(f,0))},r=function(e,t){s=setTimeout(e,t)},a=function(){clearTimeout(s)},t.unstable_shouldYield=function(){return!1},o=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var m=!1,v=null,y=-1,g=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},o=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):g=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,k=w.port2;w.port1.onmessage=function(){if(null!==v){var e=t.unstable_now();b=e+g;try{v(!0,e)?k.postMessage(null):(m=!1,v=null)}catch(e){throw k.postMessage(null),e}}else m=!1},n=function(e){v=e,m||(m=!0,k.postMessage(null))},r=function(e,n){y=d((function(){e(t.unstable_now())}),n)},a=function(){p(y),y=-1}}function E(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,a=e[r];if(!(void 0!==a&&0<_(a,t)))break e;e[r]=t,e[n]=a,n=r}}function x(e){return void 0===(e=e[0])?null:e}function S(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length;r<a;){var o=2*(r+1)-1,l=e[o],i=o+1,u=e[i];if(void 0!==l&&0>_(l,n))void 0!==u&&0>_(u,l)?(e[r]=u,e[i]=n,r=i):(e[r]=l,e[o]=n,r=o);else{if(!(void 0!==u&&0>_(u,n)))break e;e[r]=u,e[i]=n,r=i}}}return t}return null}function _(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var C=[],P=[],T=1,O=null,M=3,N=!1,j=!1,L=!1;function R(e){for(var t=x(P);null!==t;){if(null===t.callback)S(P);else{if(!(t.startTime<=e))break;S(P),t.sortIndex=t.expirationTime,E(C,t)}t=x(P)}}function z(e){if(L=!1,R(e),!j)if(null!==x(C))j=!0,n($);else{var t=x(P);null!==t&&r(z,t.startTime-e)}}function $(e,n){j=!1,L&&(L=!1,a()),N=!0;var o=M;try{for(R(n),O=x(C);null!==O&&(!(O.expirationTime>n)||e&&!t.unstable_shouldYield());){var l=O.callback;if("function"==typeof l){O.callback=null,M=O.priorityLevel;var i=l(O.expirationTime<=n);n=t.unstable_now(),"function"==typeof i?O.callback=i:O===x(C)&&S(C),R(n)}else S(C);O=x(C)}if(null!==O)var u=!0;else{var c=x(P);null!==c&&r(z,c.startTime-n),u=!1}return u}finally{O=null,M=o,N=!1}}var I=o;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){j||N||(j=!0,n($))},t.unstable_getCurrentPriorityLevel=function(){return M},t.unstable_getFirstCallbackNode=function(){return x(C)},t.unstable_next=function(e){switch(M){case 1:case 2:case 3:var t=3;break;default:t=M}var n=M;M=t;try{return e()}finally{M=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=I,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=M;M=e;try{return t()}finally{M=n}},t.unstable_scheduleCallback=function(e,o,l){var i=t.unstable_now();switch(l="object"==typeof l&&null!==l&&"number"==typeof(l=l.delay)&&0<l?i+l:i,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:T++,callback:o,priorityLevel:e,startTime:l,expirationTime:u=l+u,sortIndex:-1},l>i?(e.sortIndex=l,E(P,e),null===x(C)&&e===x(P)&&(L?a():L=!0,r(z,l-i))):(e.sortIndex=u,E(C,e),j||N||(j=!0,n($))),e},t.unstable_wrapCallback=function(e){var t=M;return function(){var n=M;M=t;try{return e.apply(this,arguments)}finally{M=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)},632:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(294),a=n(427),o=n(107),l=n(475),i=n(682),u=n(976),c=n(554);t.default=function(){return r.createElement(a.HashRouter,null,r.createElement(i.default,null),r.createElement(a.Switch,null,r.createElement(a.Route,{exact:!0,path:"/",component:l.default}),r.createElement(a.Route,{path:"/faq",component:u.default}),r.createElement(a.Route,{path:"/about",component:o.default})),r.createElement(c.default,null))}},107:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(294);t.default=function(){return r.createElement("div",{id:"about-container"},r.createElement("div",{className:"about-h1"},r.createElement("h1",null,"The Purpose of This Webpage")),r.createElement("div",{className:"p-container"},r.createElement("p",null,"I am surprised that there is not a simple webpage out there that shows covariances or correlations of popular cryptocurrencies against Bitcoin. It is undeniable that it feels like there are strong relationships amongst these coins with Bitcoin, but how quantitatively strong? You can find charts out there, for example ETHBTC or Bitcoin Dominance, but they only lift one corner of this veil. Sometimes you just want a simple number instead of turgidly drawn technical analysis."),r.createElement("p",null,"I thought it was important to determine both how strongly these cryptocurrencies were correlated to BTC(correlation coeffecient) and the magnitude of their variance from their means(covariance). We know smaller coins tend to be more volatile than BTC since they are usually more liquid(very little BTC is actually traded on exchanges) with smaller market caps. So if I thought that BTC may go up, why not instead find a coin with a higher volatility, high covariance and high correlation instead? Of course I would likely still research some basic technical and fundamental analysis. Not financial advice."),r.createElement("p",null,"This webpage only fetches data from 30 days of the market. But a month is a long time in the highly erratic and unpredictable cryptoworld. Because this page is purely front end it needs to fetch api data every time is it loaded. When I give it a backend server soon I should be able to do daily large calculations of hundreds of days a single time each day. I'd also like to increase the amount of currencies to 100 to potentially discover some hidden surprises in the data.")))}},976:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(294),a=n(369);t.default=function(){return r.createElement("div",{id:"faq-container"},r.createElement("div",{className:"faq-h1"},r.createElement("h1",null,"Frequently Asked Questions")),r.createElement("div",{className:"desc-mean"},r.createElement("h2",null,"What is Expected Return?"),r.createElement("p",null,"This represents the expected percent of gain or loss each day. It is the weighted average of recent returns. Also called the mean, it is calculated by summing the realized daily returns and dividing by the number of periods. The returns are the percentage increases in the value of the asset per dollar initially invested. I am multiplying by 100 to get a number that looks like 2.00 rather than 0.02. Then dividing by 30 because I am calculating the mean over 30 days. Note that I'm fetching 31 days of data because the formula uses i+1."),r.createElement("br",null),r.createElement(a.default.Context,{input:"tex",script:"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js",options:{messageStyle:"none",extensions:["tex2jax.js"],jax:["input/TeX","output/HTML-CSS"],tex2jax:{inlineMath:[["$","$"],["\\(","\\)"]],displayMath:[["$$","$$"],["\\[","\\]"]],processEscapes:!0},TeX:{extensions:["AMSmath.js","AMSsymbols.js","noErrors.js","noUndefined.js"]}}},r.createElement(a.default.Html,{html:"$\\overline{X}=E[X]=\\frac{100}{30}⋅\\sum_{i=1}^{30}\\frac{{X_{i+1}-{X_i}}}{X_i}$"})),r.createElement("br",null),r.createElement("ul",null,r.createElement("li",null,"Expected return can be positive or negative. "),r.createElement("li",null,"A positive number likely indicates an uptrend while a negative number likely indicates a downtrend."))),r.createElement("div",{className:"desc-var"},r.createElement("h2",null,"What is Variance?"),r.createElement("p",null,"Variance is the expected squared deviation from the mean. It is a  measure of the dispersion of returns. The method I've used to calculate the variance of an asset is the mean of the square minus the square of the mean."),r.createElement("br",null),r.createElement("div",null,r.createElement(a.default.Context,{input:"tex",script:"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js",options:{messageStyle:"none",extensions:["tex2jax.js"],jax:["input/TeX","output/HTML-CSS"],tex2jax:{inlineMath:[["$","$"],["\\(","\\)"]],displayMath:[["$$","$$"],["\\[","\\]"]],processEscapes:!0},TeX:{extensions:["AMSmath.js","AMSsymbols.js","noErrors.js","noUndefined.js"]}}},r.createElement(a.default.Html,{html:"$Var[X] = E[X^{2}] - E[X]^{2}$"}))),r.createElement("br",null),r.createElement("p",null,"Although not usually used directly to make observations about an asset, it is used within the calculations of volatility, covariance and correlation. I added variance for completeness and to point out that the variance and covariance of BTC are equal. Therefore the correlation will also be 1. That means my calculations on this website are right!"),r.createElement("br",null),r.createElement("div",null,r.createElement(a.default.Context,{input:"tex",script:"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js",options:{messageStyle:"none",extensions:["tex2jax.js"],jax:["input/TeX","output/HTML-CSS"],tex2jax:{inlineMath:[["$","$"],["\\(","\\)"]],displayMath:[["$$","$$"],["\\[","\\]"]],processEscapes:!0},TeX:{extensions:["AMSmath.js","AMSsymbols.js","noErrors.js","noUndefined.js"]}}},r.createElement(a.default.Html,{html:"$Cov[X, X] = E[(X_{i}-E[X])⋅(X_{i}-E[X])] = E[(X_{i}-E[X])^{2}] = Var[X]$"}))),r.createElement("br",null),r.createElement("div",null,r.createElement(a.default.Context,{input:"tex",script:"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js",options:{messageStyle:"none",extensions:["tex2jax.js"],jax:["input/TeX","output/HTML-CSS"],tex2jax:{inlineMath:[["$","$"],["\\(","\\)"]],displayMath:[["$$","$$"],["\\[","\\]"]],processEscapes:!0},TeX:{extensions:["AMSmath.js","AMSsymbols.js","noErrors.js","noUndefined.js"]}}},r.createElement(a.default.Html,{html:"$ρ_{X, X}=\\frac{Cov[X, X]}{σ_{X} ⋅ σ_{X}} = \\frac{Var[X]}{Var[X]} = 1$"}))),r.createElement("br",null),r.createElement("ul",null,r.createElement("li",null,"Variance cannot be negative and will usually be large."),r.createElement("li",null,"There are multiple ways to calculate variance."))),r.createElement("div",{className:"desc-vol"},r.createElement("h2",null,"What is Volatility?"),r.createElement("p",null,"Volatility, or standard deviation in non-finance terms, is a measure of the dispersion of returns for an asset. It is the backbone of popular market incidators such as bollinger bands and other confidence intervals. It is calculated simply via the square root of the variance."),r.createElement("br",null),r.createElement("div",null,r.createElement(a.default.Context,{input:"tex",script:"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js",options:{messageStyle:"none",extensions:["tex2jax.js"],jax:["input/TeX","output/HTML-CSS"],tex2jax:{inlineMath:[["$","$"],["\\(","\\)"]],displayMath:[["$$","$$"],["\\[","\\]"]],processEscapes:!0},TeX:{extensions:["AMSmath.js","AMSsymbols.js","noErrors.js","noUndefined.js"]}}},r.createElement(a.default.Html,{html:"$σ_{X} = SD[X] = \\sqrt{Var[X]}$"}))),r.createElement("br",null),r.createElement("ul",null,r.createElement("li",null,"Volatility cannot be negative as it is the result of a square root."),r.createElement("li",null,"High volatility indicates a large price range while low volatility indicaes a small price range."))),r.createElement("div",{className:"desc-cov"},r.createElement("h2",null,"What is Covariance?"),r.createElement("p",null,"Covariance measures the extent or magnitude to which two variables fluctuate or move together. It is not normalized so it could be hard to use the variable as it is."),r.createElement("br",null),r.createElement("div",null,r.createElement(a.default.Context,{input:"tex",script:"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js",options:{messageStyle:"none",extensions:["tex2jax.js"],jax:["input/TeX","output/HTML-CSS"],tex2jax:{inlineMath:[["$","$"],["\\(","\\)"]],displayMath:[["$$","$$"],["\\[","\\]"]],processEscapes:!0},TeX:{extensions:["AMSmath.js","AMSsymbols.js","noErrors.js","noUndefined.js"]}}},r.createElement(a.default.Html,{html:"$Cov[X,  BTC]=\\sum_{i=1}^{30}\\frac{{(X_i - \\overline{X})} ⋅{(BTC_i - \\overline{BTC})}}{30}$"}))),r.createElement("br",null),r.createElement("ul",null,r.createElement("li",null,"If the covariance is positive, then the two variables tend to move together. High covariance measures high variation from their expected values. "),r.createElement("li",null,"If the covariance is negative, then the two variables tend to move in opposite directions. Low covariance measures low variation from their expected values."),r.createElement("li",null,"If the covariance is 0, then there is no linear relationship between the two variables."))),r.createElement("div",{className:"desc-cor"},r.createElement("h2",null,"What is Correlation?"),r.createElement("p",null,"Correlation, specifically the correlation coeffecient here, is a unitless measure of the strength and direction of the linear relationship between two variables. It is more useful than covariance because it is dimensionless and normalized between -1 and 1. It is obtained by dividing the covariance of two variables by the product of their standard deviations:"),r.createElement("br",null),r.createElement(a.default.Context,{input:"tex",script:"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js",options:{messageStyle:"none",extensions:["tex2jax.js"],jax:["input/TeX","output/HTML-CSS"],tex2jax:{inlineMath:[["$","$"],["\\(","\\)"]],displayMath:[["$$","$$"],["\\[","\\]"]],processEscapes:!0},TeX:{extensions:["AMSmath.js","AMSsymbols.js","noErrors.js","noUndefined.js"]}}},r.createElement(a.default.Html,{html:"$ρ_{X, BTC}=\\frac{Cov[X, BTC]}{{\\sigma_X}⋅{\\sigma_{BTC}}}$"})),r.createElement("br",null),r.createElement("ul",null,r.createElement("li",null,"A correlation of 1 indicates perfect positive correlation between two variables. The closer the correlation is to 1, the more the variables tend to move together in the same direction"),r.createElement("li",null,"A correlation -1 of indicates perfect negative correlation between two variables. The closer the correlation is to -1, the more the variables tend to move in opposite directions."),r.createElement("li",null,"A correlation of 0 indicates no linear relationship between two variables. Movement of one variable provides no prediction regarding the movement of the other variable."))))}},554:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(294);t.default=function(){return r.createElement("footer",null,r.createElement("span",null,"Created by Steven Fabrizio 2021"))}},475:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,o){function l(e){try{u(r.next(e))}catch(e){o(e)}}function i(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(l,i)}u((r=r.apply(e,t||[])).next())}))},a=this&&this.__generator||function(e,t){var n,r,a,o,l={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(o){return function(i){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;l;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return l.label++,{value:o[1],done:!1};case 5:l.label++,r=o[1],o=[0];continue;case 7:o=l.ops.pop(),l.trys.pop();continue;default:if(!((a=(a=l.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){l=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){l.label=o[1];break}if(6===o[0]&&l.label<a[1]){l.label=a[1],a=o;break}if(a&&l.label<a[2]){l.label=a[2],l.ops.push(o);break}a[2]&&l.ops.pop(),l.trys.pop();continue}o=t.call(e,l)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,i])}}};Object.defineProperty(t,"__esModule",{value:!0});var o=n(294),l=n(294);t.default=function(){var e=[],t=0,n=0,i=[],u=[],c=[],s=[],f=0,d=0,p=0,h=0,m=0,v=0;return l.useEffect((function(){!function(){r(this,void 0,void 0,(function(){return a(this,(function(r){switch(r.label){case 0:return[4,fetch("https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=50&page=1&sparkline=false").then((function(e){return e.json()})).then((function(r){for(var a=function(a){e.push(r[a].id);var o=document.createElement("tr"),l=document.createElement("td");l.innerText=r[a].market_cap_rank,o.appendChild(l);var y=document.createElement("td");y.innerText=r[a].symbol,o.classList.add(r[a].id),o.appendChild(y);var g=document.createElement("td");g.innerText=r[a].current_price.toFixed(2),o.appendChild(g);var b=document.createElement("td");b.innerText=r[a].market_cap.toLocaleString(),o.appendChild(b),document.querySelector("tbody").appendChild(o),fetch("https://api.coingecko.com/api/v3/coins/"+r[a].id+"/market_chart?vs_currency=usd&days=31&interval=daily").then((function(e){return e.json()})).then((function(o){if("internet-computer"===r[a].id||"usd-coin"===r[a].id||"binance-usd"===r[a].id||"dai"===r[a].id||"tether"===r[a].id){for(var l=0;l<5;l++){var y=document.createElement("td");y.innerText="",document.querySelector("."+e[a]).appendChild(y)}return!1}c=[];for(var g=0;g<31;g++)c.push(o.prices[g][1]);s=[];for(var b=0;b<30;b++){var w=(c[b+1]-c[b])/c[b]*100;s.push(w)}f=0;for(var k=0;k<30;k++)f+=s[k]/30;d=0;for(var E=0;E<30;E++)d+=Math.pow(s[E],2)/30;p=0,h=0,p=d-Math.pow(f,2),h=Math.sqrt(p);var x=document.createElement("td");x.innerText=f.toFixed(2).toString()+"%",document.querySelector("."+e[a]).appendChild(x);var S=document.createElement("td");S.innerText=p.toFixed(2).toString(),document.querySelector("."+e[a]).appendChild(S);var _=document.createElement("td");if(_.innerText=h.toFixed(2).toString()+"%",document.querySelector("."+e[a]).appendChild(_),"bitcoin"===r[a].id){n=f,t=h,u=s;for(var C=0;C<30;C++)i.push(o.prices[C][1])}m=0,v=0;for(var P=0;P<30;P++)m+=(s[P]-f)*(u[P]-n)/30;v=m/(t*h);var T=document.createElement("td");T.innerText=m.toFixed(2).toString(),document.querySelector("."+e[a]).appendChild(T);var O=document.createElement("td");O.innerText=v.toFixed(5).toString(),document.querySelector("."+e[a]).appendChild(O)}))},o=0;o<50;o++)a(o)}))];case 1:return r.sent(),[2]}}))}))}()}),[]),o.createElement("div",{id:"main-container"},o.createElement("h1",null,"Bitcoin Covariances and Correlations"),o.createElement("h4",null,"Based off of the last thirty daily closes of the market"),o.createElement("table",{className:"coin-table"},o.createElement("tr",{className:"tr1"},o.createElement("th",{className:"rank"},"#"),o.createElement("th",{className:"name"},"Name"),o.createElement("th",{className:"price"},"Price"),o.createElement("th",{className:"market-cap"},"Market Cap"),o.createElement("th",{className:"return"},"E[X]"),o.createElement("th",{className:"var"},"Var"),o.createElement("th",{className:"sig"},"Vol"),o.createElement("th",{className:"covar"},"Covar"),o.createElement("th",{className:"cor"},"Corr")),o.createElement("tbody",null)),o.createElement("div",{className:"span-container"},o.createElement("span",null,"*Note that 'Stable Coins' do not have data calculated. ICP does not have enough historical data available."),o.createElement("br",null),o.createElement("span",null,"*If you see NaN try refreshing the page."),o.createElement("br",null),o.createElement("span",null,"*Coins like SHIB have nonzero prices.")))}},682:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(294),a=n(427);t.default=function(){return r.createElement("nav",null,r.createElement("ul",null,r.createElement("li",null),r.createElement(a.NavLink,{exact:!0,activeClassname:"active",to:"/"},r.createElement("li",null,"Home")),r.createElement(a.NavLink,{activeclassName:"active",to:"/faq"},r.createElement("li",null,"FAQ")),r.createElement(a.NavLink,{activeClassName:"active",to:"/about"},r.createElement("li",null,"About")),r.createElement("li",null)))}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={exports:{}};return e[r].call(o.exports,o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";var e=n(294),t=n(935),r=n(632);t.render(e.createElement(r.default,null),document.querySelector("#root"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jcnlwdG8tYnRjLWNvdmFyaWFuY2VzLWFuZC1jb3JyZWxhdGlvbnMvLi9ub2RlX21vZHVsZXMvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MvZGlzdC9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy5janMuanMiLCJ3ZWJwYWNrOi8vY3J5cHRvLWJ0Yy1jb3ZhcmlhbmNlcy1hbmQtY29ycmVsYXRpb25zLy4vbm9kZV9tb2R1bGVzL2xvYWQtc2NyaXB0L2luZGV4LmpzIiwid2VicGFjazovL2NyeXB0by1idGMtY292YXJpYW5jZXMtYW5kLWNvcnJlbGF0aW9ucy8uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovL2NyeXB0by1idGMtY292YXJpYW5jZXMtYW5kLWNvcnJlbGF0aW9ucy8uL25vZGVfbW9kdWxlcy9wYXRoLXRvLXJlZ2V4cC9pbmRleC5qcyIsIndlYnBhY2s6Ly9jcnlwdG8tYnRjLWNvdmFyaWFuY2VzLWFuZC1jb3JyZWxhdGlvbnMvLi9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vY3J5cHRvLWJ0Yy1jb3ZhcmlhbmNlcy1hbmQtY29ycmVsYXRpb25zLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovL2NyeXB0by1idGMtY292YXJpYW5jZXMtYW5kLWNvcnJlbGF0aW9ucy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovL2NyeXB0by1idGMtY292YXJpYW5jZXMtYW5kLWNvcnJlbGF0aW9ucy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly9jcnlwdG8tYnRjLWNvdmFyaWFuY2VzLWFuZC1jb3JyZWxhdGlvbnMvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vY3J5cHRvLWJ0Yy1jb3ZhcmlhbmNlcy1hbmQtY29ycmVsYXRpb25zLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly9jcnlwdG8tYnRjLWNvdmFyaWFuY2VzLWFuZC1jb3JyZWxhdGlvbnMvLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL2NyeXB0by1idGMtY292YXJpYW5jZXMtYW5kLWNvcnJlbGF0aW9ucy8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9jcnlwdG8tYnRjLWNvdmFyaWFuY2VzLWFuZC1jb3JyZWxhdGlvbnMvLi9ub2RlX21vZHVsZXMvcmVhY3QtbWF0aGpheDMvbGliL0NvbnRleHQuanMiLCJ3ZWJwYWNrOi8vY3J5cHRvLWJ0Yy1jb3ZhcmlhbmNlcy1hbmQtY29ycmVsYXRpb25zLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW1hdGhqYXgzL2xpYi9IdG1sLmpzIiwid2VicGFjazovL2NyeXB0by1idGMtY292YXJpYW5jZXMtYW5kLWNvcnJlbGF0aW9ucy8uL25vZGVfbW9kdWxlcy9yZWFjdC1tYXRoamF4My9saWIvTm9kZS5qcyIsIndlYnBhY2s6Ly9jcnlwdG8tYnRjLWNvdmFyaWFuY2VzLWFuZC1jb3JyZWxhdGlvbnMvLi9ub2RlX21vZHVsZXMvcmVhY3QtbWF0aGpheDMvbGliL1RleHQuanMiLCJ3ZWJwYWNrOi8vY3J5cHRvLWJ0Yy1jb3ZhcmlhbmNlcy1hbmQtY29ycmVsYXRpb25zLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW1hdGhqYXgzL2xpYi9pbmRleC5qcyIsIndlYnBhY2s6Ly9jcnlwdG8tYnRjLWNvdmFyaWFuY2VzLWFuZC1jb3JyZWxhdGlvbnMvLi9ub2RlX21vZHVsZXMvcmVhY3QtbWF0aGpheDMvbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9jcnlwdG8tYnRjLWNvdmFyaWFuY2VzLWFuZC1jb3JyZWxhdGlvbnMvLi9ub2RlX21vZHVsZXMvcmVhY3QtbWF0aGpheDMvbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovL2NyeXB0by1idGMtY292YXJpYW5jZXMtYW5kLWNvcnJlbGF0aW9ucy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zZXRQcm90b3R5cGVPZi5qcyIsIndlYnBhY2s6Ly9jcnlwdG8tYnRjLWNvdmFyaWFuY2VzLWFuZC1jb3JyZWxhdGlvbnMvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZS5qcyIsIndlYnBhY2s6Ly9jcnlwdG8tYnRjLWNvdmFyaWFuY2VzLWFuZC1jb3JyZWxhdGlvbnMvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcy5qcyIsIndlYnBhY2s6Ly9jcnlwdG8tYnRjLWNvdmFyaWFuY2VzLWFuZC1jb3JyZWxhdGlvbnMvLi9ub2RlX21vZHVsZXMvcmVzb2x2ZS1wYXRobmFtZS9lc20vcmVzb2x2ZS1wYXRobmFtZS5qcyIsIndlYnBhY2s6Ly9jcnlwdG8tYnRjLWNvdmFyaWFuY2VzLWFuZC1jb3JyZWxhdGlvbnMvLi9ub2RlX21vZHVsZXMvdmFsdWUtZXF1YWwvZXNtL3ZhbHVlLWVxdWFsLmpzIiwid2VicGFjazovL2NyeXB0by1idGMtY292YXJpYW5jZXMtYW5kLWNvcnJlbGF0aW9ucy8uL25vZGVfbW9kdWxlcy90aW55LWludmFyaWFudC9kaXN0L3RpbnktaW52YXJpYW50LmVzbS5qcyIsIndlYnBhY2s6Ly9jcnlwdG8tYnRjLWNvdmFyaWFuY2VzLWFuZC1jb3JyZWxhdGlvbnMvLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lc20vaGlzdG9yeS5qcyIsIndlYnBhY2s6Ly9jcnlwdG8tYnRjLWNvdmFyaWFuY2VzLWFuZC1jb3JyZWxhdGlvbnMvLi9ub2RlX21vZHVsZXMvbWluaS1jcmVhdGUtcmVhY3QtY29udGV4dC9kaXN0L2VzbS9pbmRleC5qcyIsIndlYnBhY2s6Ly9jcnlwdG8tYnRjLWNvdmFyaWFuY2VzLWFuZC1jb3JyZWxhdGlvbnMvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZS5qcyIsIndlYnBhY2s6Ly9jcnlwdG8tYnRjLWNvdmFyaWFuY2VzLWFuZC1jb3JyZWxhdGlvbnMvLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzbS9yZWFjdC1yb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vY3J5cHRvLWJ0Yy1jb3ZhcmlhbmNlcy1hbmQtY29ycmVsYXRpb25zLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXNtL3JlYWN0LXJvdXRlci1kb20uanMiLCJ3ZWJwYWNrOi8vY3J5cHRvLWJ0Yy1jb3ZhcmlhbmNlcy1hbmQtY29ycmVsYXRpb25zLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9jcnlwdG8tYnRjLWNvdmFyaWFuY2VzLWFuZC1jb3JyZWxhdGlvbnMvLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vY3J5cHRvLWJ0Yy1jb3ZhcmlhbmNlcy1hbmQtY29ycmVsYXRpb25zLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL2NyeXB0by1idGMtY292YXJpYW5jZXMtYW5kLWNvcnJlbGF0aW9ucy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vY3J5cHRvLWJ0Yy1jb3ZhcmlhbmNlcy1hbmQtY29ycmVsYXRpb25zLy4vc3JjL2FwcC50c3giLCJ3ZWJwYWNrOi8vY3J5cHRvLWJ0Yy1jb3ZhcmlhbmNlcy1hbmQtY29ycmVsYXRpb25zLy4vc3JjL2NvbXBvbmVudHMvYWJvdXQudHN4Iiwid2VicGFjazovL2NyeXB0by1idGMtY292YXJpYW5jZXMtYW5kLWNvcnJlbGF0aW9ucy8uL3NyYy9jb21wb25lbnRzL2ZhcS50c3giLCJ3ZWJwYWNrOi8vY3J5cHRvLWJ0Yy1jb3ZhcmlhbmNlcy1hbmQtY29ycmVsYXRpb25zLy4vc3JjL2NvbXBvbmVudHMvZm9vdGVyLnRzeCIsIndlYnBhY2s6Ly9jcnlwdG8tYnRjLWNvdmFyaWFuY2VzLWFuZC1jb3JyZWxhdGlvbnMvLi9zcmMvY29tcG9uZW50cy9tYWlucGFnZS50c3giLCJ3ZWJwYWNrOi8vY3J5cHRvLWJ0Yy1jb3ZhcmlhbmNlcy1hbmQtY29ycmVsYXRpb25zLy4vc3JjL2NvbXBvbmVudHMvbmF2LnRzeCIsIndlYnBhY2s6Ly9jcnlwdG8tYnRjLWNvdmFyaWFuY2VzLWFuZC1jb3JyZWxhdGlvbnMvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vY3J5cHRvLWJ0Yy1jb3ZhcmlhbmNlcy1hbmQtY29ycmVsYXRpb25zL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL2NyeXB0by1idGMtY292YXJpYW5jZXMtYW5kLWNvcnJlbGF0aW9ucy93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vY3J5cHRvLWJ0Yy1jb3ZhcmlhbmNlcy1hbmQtY29ycmVsYXRpb25zL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vY3J5cHRvLWJ0Yy1jb3ZhcmlhbmNlcy1hbmQtY29ycmVsYXRpb25zL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vY3J5cHRvLWJ0Yy1jb3ZhcmlhbmNlcy1hbmQtY29ycmVsYXRpb25zL3dlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vY3J5cHRvLWJ0Yy1jb3ZhcmlhbmNlcy1hbmQtY29ycmVsYXRpb25zLy4vc3JjL2luZGV4LnRzeCJdLCJuYW1lcyI6WyJyZWFjdElzIiwiUkVBQ1RfU1RBVElDUyIsImNoaWxkQ29udGV4dFR5cGVzIiwiY29udGV4dFR5cGUiLCJjb250ZXh0VHlwZXMiLCJkZWZhdWx0UHJvcHMiLCJkaXNwbGF5TmFtZSIsImdldERlZmF1bHRQcm9wcyIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsIm1peGlucyIsInByb3BUeXBlcyIsInR5cGUiLCJLTk9XTl9TVEFUSUNTIiwibmFtZSIsImxlbmd0aCIsInByb3RvdHlwZSIsImNhbGxlciIsImNhbGxlZSIsImFyZ3VtZW50cyIsImFyaXR5IiwiTUVNT19TVEFUSUNTIiwiY29tcGFyZSIsIlRZUEVfU1RBVElDUyIsImdldFN0YXRpY3MiLCJjb21wb25lbnQiLCJpc01lbW8iLCJGb3J3YXJkUmVmIiwicmVuZGVyIiwiTWVtbyIsImRlZmluZVByb3BlcnR5IiwiT2JqZWN0IiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldFByb3RvdHlwZU9mIiwib2JqZWN0UHJvdG90eXBlIiwibW9kdWxlIiwiZXhwb3J0cyIsImhvaXN0Tm9uUmVhY3RTdGF0aWNzIiwidGFyZ2V0Q29tcG9uZW50Iiwic291cmNlQ29tcG9uZW50IiwiYmxhY2tsaXN0IiwiaW5oZXJpdGVkQ29tcG9uZW50Iiwia2V5cyIsImNvbmNhdCIsInRhcmdldFN0YXRpY3MiLCJzb3VyY2VTdGF0aWNzIiwiaSIsImtleSIsImRlc2NyaXB0b3IiLCJlIiwic3RkT25FbmQiLCJzY3JpcHQiLCJjYiIsIm9ubG9hZCIsInRoaXMiLCJvbmVycm9yIiwiRXJyb3IiLCJzcmMiLCJpZU9uRW5kIiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVhZHlTdGF0ZSIsIm9wdHMiLCJoZWFkIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImNyZWF0ZUVsZW1lbnQiLCJjaGFyc2V0IiwiYXN5bmMiLCJhdHRycyIsImF0dHIiLCJzZXRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVzIiwidGV4dCIsImFwcGVuZENoaWxkIiwiaGFzT3duUHJvcGVydHkiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJ0b09iamVjdCIsInZhbCIsIlR5cGVFcnJvciIsImFzc2lnbiIsInRlc3QxIiwiU3RyaW5nIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJtYXAiLCJuIiwiam9pbiIsInRlc3QzIiwic3BsaXQiLCJmb3JFYWNoIiwibGV0dGVyIiwiZXJyIiwic2hvdWxkVXNlTmF0aXZlIiwidGFyZ2V0Iiwic291cmNlIiwiZnJvbSIsInN5bWJvbHMiLCJ0byIsInMiLCJjYWxsIiwiaXNhcnJheSIsInBhdGhUb1JlZ2V4cCIsInBhdGgiLCJvcHRpb25zIiwiUmVnRXhwIiwiZ3JvdXBzIiwibWF0Y2giLCJwdXNoIiwicHJlZml4IiwiZGVsaW1pdGVyIiwib3B0aW9uYWwiLCJyZXBlYXQiLCJwYXJ0aWFsIiwiYXN0ZXJpc2siLCJwYXR0ZXJuIiwiYXR0YWNoS2V5cyIsInJlZ2V4cFRvUmVnZXhwIiwicGFydHMiLCJmbGFncyIsImFycmF5VG9SZWdleHAiLCJ0b2tlbnNUb1JlZ0V4cCIsInBhcnNlIiwic3RyaW5nVG9SZWdleHAiLCJjb21waWxlIiwic3RyIiwidG9rZW5zVG9GdW5jdGlvbiIsIlBBVEhfUkVHRVhQIiwicmVzIiwidG9rZW5zIiwiaW5kZXgiLCJkZWZhdWx0RGVsaW1pdGVyIiwiZXhlYyIsIm0iLCJlc2NhcGVkIiwib2Zmc2V0Iiwic2xpY2UiLCJuZXh0IiwiY2FwdHVyZSIsImdyb3VwIiwibW9kaWZpZXIiLCJlc2NhcGVHcm91cCIsImVzY2FwZVN0cmluZyIsInN1YnN0ciIsImVuY29kZVVSSUNvbXBvbmVudFByZXR0eSIsImVuY29kZVVSSSIsInJlcGxhY2UiLCJjIiwiY2hhckNvZGVBdCIsInRvU3RyaW5nIiwidG9VcHBlckNhc2UiLCJtYXRjaGVzIiwiQXJyYXkiLCJvYmoiLCJkYXRhIiwiZW5jb2RlIiwicHJldHR5IiwiZW5jb2RlVVJJQ29tcG9uZW50IiwidG9rZW4iLCJzZWdtZW50IiwidmFsdWUiLCJKU09OIiwic3RyaW5naWZ5IiwiaiIsInRlc3QiLCJyZSIsInNlbnNpdGl2ZSIsInN0cmljdCIsImVuZCIsInJvdXRlIiwiZW5kc1dpdGhEZWxpbWl0ZXIiLCJpc0FycmF5IiwiYXJyIiwiUmVhY3RQcm9wVHlwZXNTZWNyZXQiLCJlbXB0eUZ1bmN0aW9uIiwiZW1wdHlGdW5jdGlvbldpdGhSZXNldCIsInJlc2V0V2FybmluZ0NhY2hlIiwic2hpbSIsInByb3BzIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwibG9jYXRpb24iLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJnZXRTaGltIiwiaXNSZXF1aXJlZCIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJib29sIiwiZnVuYyIsIm51bWJlciIsIm9iamVjdCIsInN0cmluZyIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJlbGVtZW50IiwiZWxlbWVudFR5cGUiLCJpbnN0YW5jZU9mIiwibm9kZSIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImV4YWN0IiwiY2hlY2tQcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJhYSIsInIiLCJ5IiwiYSIsImIiLCJiYSIsIlNldCIsImNhIiwiZGEiLCJlYSIsImFkZCIsImZhIiwid2luZG93IiwiaGEiLCJpYSIsImphIiwia2EiLCJCIiwiZCIsImYiLCJnIiwiYWNjZXB0c0Jvb2xlYW5zIiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsIm11c3RVc2VQcm9wZXJ0eSIsInByb3BlcnR5TmFtZSIsInNhbml0aXplVVJMIiwicmVtb3ZlRW1wdHlTdHJpbmciLCJEIiwidG9Mb3dlckNhc2UiLCJvYSIsInBhIiwicWEiLCJtYSIsImlzTmFOIiwibmEiLCJsYSIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwieGxpbmtIcmVmIiwicmEiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsInNhIiwidGEiLCJ1YSIsIndhIiwieGEiLCJ5YSIsInphIiwiQWEiLCJCYSIsIkNhIiwiRGEiLCJFYSIsIkZhIiwiR2EiLCJIYSIsIklhIiwiSmEiLCJTeW1ib2wiLCJmb3IiLCJFIiwiTWEiLCJLYSIsIml0ZXJhdG9yIiwiTGEiLCJOYSIsInN0YWNrIiwidHJpbSIsIk9hIiwiUGEiLCJwcmVwYXJlU3RhY2tUcmFjZSIsInNldCIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJrIiwiaCIsIlFhIiwidGFnIiwiX3JlbmRlciIsIlJhIiwiJCR0eXBlb2YiLCJfY29udGV4dCIsIl9wYXlsb2FkIiwiX2luaXQiLCJTYSIsIlRhIiwibm9kZU5hbWUiLCJWYSIsIl92YWx1ZVRyYWNrZXIiLCJjb25zdHJ1Y3RvciIsImdldCIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwiVWEiLCJXYSIsImNoZWNrZWQiLCJYYSIsImFjdGl2ZUVsZW1lbnQiLCJib2R5IiwiWWEiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIlphIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIiRhIiwiYWIiLCJiYiIsIm93bmVyRG9jdW1lbnQiLCJlYiIsImNoaWxkcmVuIiwiQ2hpbGRyZW4iLCJkYiIsImZiIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJkaXNhYmxlZCIsImdiIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJoYiIsImliIiwiamIiLCJ0ZXh0Q29udGVudCIsImtiIiwibGIiLCJtYiIsIm5iIiwib2IiLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJ2YWx1ZU9mIiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsInBiIiwibGFzdENoaWxkIiwibm9kZVR5cGUiLCJub2RlVmFsdWUiLCJxYiIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZEFyZWEiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsImZvbnRXZWlnaHQiLCJsaW5lQ2xhbXAiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwicmIiLCJzYiIsInRiIiwic3R5bGUiLCJpbmRleE9mIiwic2V0UHJvcGVydHkiLCJjaGFyQXQiLCJzdWJzdHJpbmciLCJ1YiIsIm1lbnVpdGVtIiwiYXJlYSIsImJhc2UiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsImxpbmsiLCJtZXRhIiwicGFyYW0iLCJ0cmFjayIsIndiciIsInZiIiwid2IiLCJpcyIsInhiIiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50IiwicGFyZW50Tm9kZSIsInliIiwiemIiLCJBYiIsIkJiIiwiQ2IiLCJzdGF0ZU5vZGUiLCJEYiIsIkViIiwiRmIiLCJHYiIsIkhiIiwiSWIiLCJKYiIsIktiIiwiTGIiLCJNYiIsIk9iIiwiUGIiLCJRYiIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiUmIiLCJsIiwiYXBwbHkiLCJvbkVycm9yIiwiU2IiLCJUYiIsIlViIiwiVmIiLCJXYiIsIlhiIiwiWmIiLCJhbHRlcm5hdGUiLCJyZXR1cm4iLCIkYiIsIm1lbW9pemVkU3RhdGUiLCJkZWh5ZHJhdGVkIiwiYWMiLCJjYyIsImNoaWxkIiwic2libGluZyIsImN1cnJlbnQiLCJiYyIsImRjIiwiZWMiLCJmYyIsImdjIiwiaGMiLCJpYyIsImpjIiwia2MiLCJsYyIsIm1jIiwibmMiLCJNYXAiLCJvYyIsInBjIiwicWMiLCJyYyIsImJsb2NrZWRPbiIsImRvbUV2ZW50TmFtZSIsImV2ZW50U3lzdGVtRmxhZ3MiLCJuYXRpdmVFdmVudCIsInRhcmdldENvbnRhaW5lcnMiLCJzYyIsImRlbGV0ZSIsInBvaW50ZXJJZCIsInRjIiwidmMiLCJ3YyIsImxhbmVQcmlvcml0eSIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsInByaW9yaXR5IiwiaHlkcmF0ZSIsImNvbnRhaW5lckluZm8iLCJ4YyIsInljIiwic2hpZnQiLCJ6YyIsIkFjIiwiQmMiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJDYyIsIkRjIiwiRWMiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJGYyIsIkdjIiwiSGMiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiSWMiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJQYyIsIlFjIiwidW5zdGFibGVfbm93IiwiRiIsIlJjIiwiVWMiLCJwZW5kaW5nTGFuZXMiLCJleHBpcmVkTGFuZXMiLCJzdXNwZW5kZWRMYW5lcyIsInBpbmdlZExhbmVzIiwiVmMiLCJlbnRhbmdsZWRMYW5lcyIsImVudGFuZ2xlbWVudHMiLCJXYyIsIlhjIiwiWWMiLCJaYyIsIiRjIiwiZXZlbnRUaW1lcyIsIk1hdGgiLCJjbHozMiIsImJkIiwiY2QiLCJsb2ciLCJMTjIiLCJkZCIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwiZWQiLCJmZCIsImdkIiwiaGQiLCJpZCIsImJpbmQiLCJ1YyIsImpkIiwia2QiLCJsZCIsIm1kIiwibmQiLCJvZCIsImtleUNvZGUiLCJjaGFyQ29kZSIsInBkIiwicWQiLCJyZCIsIl9yZWFjdE5hbWUiLCJfdGFyZ2V0SW5zdCIsImN1cnJlbnRUYXJnZXQiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImlzUGVyc2lzdGVudCIsIndkIiwieGQiLCJ5ZCIsInNkIiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiRGF0ZSIsIm5vdyIsImlzVHJ1c3RlZCIsInRkIiwidWQiLCJ2aWV3IiwiZGV0YWlsIiwidmQiLCJBZCIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwiY3RybEtleSIsInNoaWZ0S2V5IiwiYWx0S2V5IiwibWV0YUtleSIsImdldE1vZGlmaWVyU3RhdGUiLCJ6ZCIsImJ1dHRvbiIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJ0b0VsZW1lbnQiLCJtb3ZlbWVudFgiLCJtb3ZlbWVudFkiLCJCZCIsIkRkIiwiZGF0YVRyYW5zZmVyIiwiRmQiLCJIZCIsImFuaW1hdGlvbk5hbWUiLCJlbGFwc2VkVGltZSIsInBzZXVkb0VsZW1lbnQiLCJKZCIsImNsaXBib2FyZERhdGEiLCJMZCIsIk1kIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsIk5kIiwiOCIsIjkiLCIxMiIsIjEzIiwiMTYiLCIxNyIsIjE4IiwiMTkiLCIyMCIsIjI3IiwiMzIiLCIzMyIsIjM0IiwiMzUiLCIzNiIsIjM3IiwiMzgiLCIzOSIsIjQwIiwiNDUiLCI0NiIsIjExMiIsIjExMyIsIjExNCIsIjExNSIsIjExNiIsIjExNyIsIjExOCIsIjExOSIsIjEyMCIsIjEyMSIsIjEyMiIsIjEyMyIsIjE0NCIsIjE0NSIsIjIyNCIsIk9kIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsIlBkIiwiUmQiLCJjb2RlIiwibG9jYWxlIiwid2hpY2giLCJUZCIsIndpZHRoIiwiaGVpZ2h0IiwicHJlc3N1cmUiLCJ0YW5nZW50aWFsUHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwidHdpc3QiLCJwb2ludGVyVHlwZSIsImlzUHJpbWFyeSIsIlZkIiwidG91Y2hlcyIsInRhcmdldFRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsIlhkIiwiWmQiLCJkZWx0YVgiLCJ3aGVlbERlbHRhWCIsImRlbHRhWSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YSIsImRlbHRhWiIsImRlbHRhTW9kZSIsIiRkIiwiYWUiLCJiZSIsImRvY3VtZW50TW9kZSIsImNlIiwiZGUiLCJlZSIsImZlIiwiZ2UiLCJoZSIsImllIiwibGUiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGltZSIsInVybCIsIndlZWsiLCJtZSIsIm5lIiwib2UiLCJldmVudCIsImxpc3RlbmVycyIsInBlIiwicWUiLCJzZSIsInRlIiwidWUiLCJ2ZSIsIndlIiwieGUiLCJ5ZSIsInplIiwib25pbnB1dCIsIkFlIiwiZGV0YWNoRXZlbnQiLCJCZSIsIkNlIiwiYXR0YWNoRXZlbnQiLCJEZSIsIkVlIiwiRmUiLCJIZSIsIkllIiwiSmUiLCJLZSIsIkxlIiwibmV4dFNpYmxpbmciLCJNZSIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJOZSIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudFdpbmRvdyIsImhyZWYiLCJPZSIsImNvbnRlbnRFZGl0YWJsZSIsIlBlIiwiUWUiLCJSZSIsIlNlIiwiVGUiLCJVZSIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJhbmNob3JOb2RlIiwiZGVmYXVsdFZpZXciLCJnZXRTZWxlY3Rpb24iLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsIlZlIiwiV2UiLCJYZSIsIlllIiwiWmUiLCJZYiIsImluc3RhbmNlIiwibGlzdGVuZXIiLCJHIiwiJGUiLCJoYXMiLCJhZiIsImJmIiwicmFuZG9tIiwiY2YiLCJkZiIsInBhc3NpdmUiLCJOYiIsIngiLCJ3IiwieiIsInUiLCJxIiwidCIsInYiLCJlZiIsImZmIiwicGFyZW50V2luZG93IiwiZ2YiLCJoZiIsIkoiLCJLIiwiUSIsIkwiLCJqZSIsImNoYXIiLCJrZSIsInVuc2hpZnQiLCJqZiIsImtmIiwibGYiLCJtZiIsImF1dG9Gb2N1cyIsIm5mIiwiX19odG1sIiwib2YiLCJzZXRUaW1lb3V0IiwicGYiLCJjbGVhclRpbWVvdXQiLCJxZiIsInJmIiwic2YiLCJwcmV2aW91c1NpYmxpbmciLCJ0ZiIsInZmIiwid2YiLCJ4ZiIsInlmIiwiemYiLCJBZiIsIkJmIiwiSCIsIkkiLCJDZiIsIk0iLCJOIiwiRGYiLCJFZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsIkZmIiwiR2YiLCJIZiIsIklmIiwiZ2V0Q2hpbGRDb250ZXh0IiwiSmYiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dCIsIktmIiwiTGYiLCJNZiIsIk5mIiwiT2YiLCJQZiIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiUWYiLCJ1bnN0YWJsZV9zaG91bGRZaWVsZCIsIlJmIiwidW5zdGFibGVfcmVxdWVzdFBhaW50IiwiU2YiLCJUZiIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwiVWYiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsIlZmIiwiV2YiLCJYZiIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwiWWYiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJaZiIsIiRmIiwiYWciLCJiZyIsImNnIiwiZGciLCJPIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZyIsImxnIiwibWciLCJuZyIsIm9nIiwicGciLCJxZyIsInJnIiwiX2N1cnJlbnRWYWx1ZSIsInNnIiwiY2hpbGRMYW5lcyIsInRnIiwiZGVwZW5kZW5jaWVzIiwiZmlyc3RDb250ZXh0IiwibGFuZXMiLCJ1ZyIsInZnIiwiY29udGV4dCIsIm9ic2VydmVkQml0cyIsInJlc3BvbmRlcnMiLCJ3ZyIsInhnIiwidXBkYXRlUXVldWUiLCJiYXNlU3RhdGUiLCJmaXJzdEJhc2VVcGRhdGUiLCJsYXN0QmFzZVVwZGF0ZSIsInNoYXJlZCIsInBlbmRpbmciLCJlZmZlY3RzIiwieWciLCJ6ZyIsImV2ZW50VGltZSIsImxhbmUiLCJwYXlsb2FkIiwiY2FsbGJhY2siLCJBZyIsIkJnIiwiQ2ciLCJBIiwicCIsIkMiLCJEZyIsIkVnIiwiRmciLCJDb21wb25lbnQiLCJyZWZzIiwiR2ciLCJLZyIsImlzTW91bnRlZCIsIl9yZWFjdEludGVybmFscyIsImVucXVldWVTZXRTdGF0ZSIsIkhnIiwiSWciLCJKZyIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJMZyIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiTWciLCJzdGF0ZSIsInVwZGF0ZXIiLCJOZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk9nIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJQZyIsIlFnIiwicmVmIiwiX293bmVyIiwiX3N0cmluZ1JlZiIsIlJnIiwiU2ciLCJsYXN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImZpcnN0RWZmZWN0IiwiVGciLCJVZyIsIm1vZGUiLCJWZyIsImltcGxlbWVudGF0aW9uIiwiV2ciLCJYZyIsImRvbmUiLCJZZyIsIlpnIiwiJGciLCJhaCIsImJoIiwiY2giLCJkaCIsImVoIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsImZoIiwiZ2giLCJoaCIsIlAiLCJpaCIsIm1lbW9pemVkUHJvcHMiLCJyZXZlYWxPcmRlciIsImpoIiwia2giLCJsaCIsIm1oIiwibmgiLCJvaCIsInBlbmRpbmdQcm9wcyIsInBoIiwicWgiLCJyaCIsInNoIiwidGgiLCJ1aCIsIl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5IiwidmgiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwid2giLCJ4aCIsIlIiLCJTIiwiVCIsInloIiwiemgiLCJBaCIsIkJoIiwiQ2giLCJEaCIsIkVoIiwiRmgiLCJHaCIsIkhoIiwiYmFzZVF1ZXVlIiwicXVldWUiLCJJaCIsIkpoIiwiS2giLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiYWN0aW9uIiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZGlzcGF0Y2giLCJMaCIsIk1oIiwiX2dldFZlcnNpb24iLCJfc291cmNlIiwibXV0YWJsZVJlYWRMYW5lcyIsIk5oIiwiVSIsInVzZVN0YXRlIiwiZ2V0U25hcHNob3QiLCJzdWJzY3JpYmUiLCJ1c2VFZmZlY3QiLCJzZXRTbmFwc2hvdCIsIk9oIiwiUGgiLCJRaCIsIlJoIiwiY3JlYXRlIiwiZGVzdHJveSIsImRlcHMiLCJTaCIsIlRoIiwiVWgiLCJWaCIsIldoIiwiWGgiLCJZaCIsIlpoIiwiJGgiLCJhaSIsImJpIiwiY2kiLCJkaSIsInJlYWRDb250ZXh0IiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZUxheW91dEVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWR1Y2VyIiwidXNlUmVmIiwidXNlRGVidWdWYWx1ZSIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VUcmFuc2l0aW9uIiwidXNlTXV0YWJsZVNvdXJjZSIsInVzZU9wYXF1ZUlkZW50aWZpZXIiLCJ1bnN0YWJsZV9pc05ld1JlY29uY2lsZXIiLCJ1ZiIsImVpIiwiUmVhY3RDdXJyZW50T3duZXIiLCJmaSIsImdpIiwiaGkiLCJpaSIsImppIiwia2kiLCJsaSIsIm1pIiwiYmFzZUxhbmVzIiwibmkiLCJvaSIsInBpIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwicWkiLCJyaSIsInBlbmRpbmdDb250ZXh0IiwiQmkiLCJEaSIsIkVpIiwic2kiLCJyZXRyeUxhbmUiLCJ0aSIsImZhbGxiYWNrIiwidW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2siLCJ1aSIsInVuc3RhYmxlX2V4cGVjdGVkTG9hZFRpbWUiLCJ2aSIsIndpIiwieGkiLCJ5aSIsInppIiwiaXNCYWNrd2FyZHMiLCJyZW5kZXJpbmciLCJyZW5kZXJpbmdTdGFydFRpbWUiLCJsYXN0IiwidGFpbCIsInRhaWxNb2RlIiwiQWkiLCJGaSIsIkdpIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsIm9uQ2xpY2siLCJvbmNsaWNrIiwic2l6ZSIsImNyZWF0ZUVsZW1lbnROUyIsImNyZWF0ZVRleHROb2RlIiwiViIsIkhpIiwiSWkiLCJXIiwiSmkiLCJLaSIsIkxpIiwiTWkiLCJtZXNzYWdlIiwiTmkiLCJjb25zb2xlIiwiZXJyb3IiLCJPaSIsIldlYWtNYXAiLCJQaSIsIlFpIiwiUmkiLCJTaSIsImNvbXBvbmVudERpZENhdGNoIiwiVGkiLCJjb21wb25lbnRTdGFjayIsIlVpIiwiV2Vha1NldCIsIlZpIiwiV2kiLCJYaSIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiWWkiLCJaaSIsIiRpIiwiZm9jdXMiLCJhaiIsImRpc3BsYXkiLCJiaiIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJjaiIsImRqIiwiZWoiLCJmaiIsImdqIiwiaGoiLCJpbnNlcnRCZWZvcmUiLCJfcmVhY3RSb290Q29udGFpbmVyIiwiaWoiLCJqaiIsImtqIiwibGoiLCJ0aGVuIiwibWoiLCJuaiIsImNlaWwiLCJvaiIsInBqIiwiWCIsIlkiLCJxaiIsInJqIiwic2oiLCJ0aiIsInVqIiwidmoiLCJJbmZpbml0eSIsIndqIiwiY2siLCJaIiwieGoiLCJ5aiIsInpqIiwiQWoiLCJCaiIsIkNqIiwiRGoiLCJFaiIsIkZqIiwiR2oiLCJIaiIsIklqIiwiSmoiLCJTYyIsIktqIiwiTGoiLCJNaiIsImNhbGxiYWNrTm9kZSIsImV4cGlyYXRpb25UaW1lcyIsImNhbGxiYWNrUHJpb3JpdHkiLCJUYyIsIk5qIiwiT2oiLCJQaiIsIlFqIiwiUmoiLCJTaiIsIlRqIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRMYW5lcyIsIlVqIiwidGltZW91dEhhbmRsZSIsIldqIiwiWGoiLCJwaW5nQ2FjaGUiLCJZaiIsIlpqIiwidmEiLCJhayIsImJrIiwiZGsiLCJyYW5nZUNvdW50IiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsImVrIiwibWluIiwiZXh0ZW5kIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJvbkNvbW1pdEZpYmVyUm9vdCIsImZrIiwiZ2siLCJpayIsImlzUmVhY3RDb21wb25lbnQiLCJwZW5kaW5nQ2hpbGRyZW4iLCJqayIsIm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGEiLCJrayIsImxrIiwibWsiLCJuayIsIm9rIiwicWsiLCJoeWRyYXRpb25PcHRpb25zIiwibXV0YWJsZVNvdXJjZXMiLCJfaW50ZXJuYWxSb290IiwicmsiLCJ0ayIsImhhc0F0dHJpYnV0ZSIsInNrIiwidWsiLCJoayIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsInVubW91bnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9ybSIsIlZqIiwidmsiLCJFdmVudHMiLCJ3ayIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiYnVuZGxlVHlwZSIsInZlcnNpb24iLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwieGsiLCJyZW5kZXJlckNvbmZpZyIsIm92ZXJyaWRlSG9va1N0YXRlIiwib3ZlcnJpZGVIb29rU3RhdGVEZWxldGVQYXRoIiwib3ZlcnJpZGVIb29rU3RhdGVSZW5hbWVQYXRoIiwib3ZlcnJpZGVQcm9wcyIsIm92ZXJyaWRlUHJvcHNEZWxldGVQYXRoIiwib3ZlcnJpZGVQcm9wc1JlbmFtZVBhdGgiLCJzZXRTdXNwZW5zZUhhbmRsZXIiLCJzY2hlZHVsZVVwZGF0ZSIsImN1cnJlbnREaXNwYXRjaGVyUmVmIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2giLCJzY2hlZHVsZVJlZnJlc2giLCJzY2hlZHVsZVJvb3QiLCJzZXRSZWZyZXNoSGFuZGxlciIsImdldEN1cnJlbnRGaWJlciIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsInlrIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsImZsdXNoU3luYyIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiY2hlY2tEQ0UiLCJBc3luY01vZGUiLCJDb25jdXJyZW50TW9kZSIsIkNvbnRleHRDb25zdW1lciIsIkNvbnRleHRQcm92aWRlciIsIkVsZW1lbnQiLCJGcmFnbWVudCIsIkxhenkiLCJQb3J0YWwiLCJQcm9maWxlciIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsImlzQXN5bmNNb2RlIiwiaXNDb25jdXJyZW50TW9kZSIsImlzQ29udGV4dENvbnN1bWVyIiwiaXNDb250ZXh0UHJvdmlkZXIiLCJpc0VsZW1lbnQiLCJpc0ZvcndhcmRSZWYiLCJpc0ZyYWdtZW50IiwiaXNMYXp5IiwiaXNQb3J0YWwiLCJpc1Byb2ZpbGVyIiwiaXNTdHJpY3RNb2RlIiwiaXNTdXNwZW5zZSIsImlzVmFsaWRFbGVtZW50VHlwZSIsInR5cGVPZiIsIl9jcmVhdGVDbGFzcyIsImRlZmluZVByb3BlcnRpZXMiLCJ3cml0YWJsZSIsIkNvbnN0cnVjdG9yIiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwiX3JlYWN0MiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfcHJvcFR5cGVzMiIsIl9sb2FkU2NyaXB0MiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiQ29udGV4dCIsIl9SZWFjdCRDb21wb25lbnQiLCJfY2xhc3NDYWxsQ2hlY2siLCJfdGhpcyIsInNlbGYiLCJSZWZlcmVuY2VFcnJvciIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiX19wcm90b19fIiwibG9hZGVkIiwib25Mb2FkIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwic2V0UHJvdG90eXBlT2YiLCJfaW5oZXJpdHMiLCJNYXRoSmF4IiwidW5kZWZpbmVkIiwiX3RoaXMyIiwiSHViIiwiQ29uZmlnIiwiUmVnaXN0ZXIiLCJTdGFydHVwSG9vayIsInByb2Nlc3NTZWN0aW9uRGVsYXkiLCJkZWxheSIsImRpZEZpbmlzaFR5cGVzZXQiLCJzZXRTdGF0ZSIsIk1lc3NhZ2VIb29rIiwibm9HYXRlIiwibG9hZGluZyIsIm9ubHkiLCJIdG1sIiwicmVmcmVzaE1hdGhKYXgiLCJRdWV1ZSIsIlR5cGVzZXQiLCJkaXYiLCJvblJlbmRlciIsIl9wcm9wcyIsImNsYXNzZXMiLCJodG1sIiwidHlwZXMiLCJhc2NpaSIsInRleCIsIk5vZGUiLCJ0eXBlc2V0IiwicHJldlByb3BzIiwiZm9yY2VVcGRhdGUiLCJpbmxpbmUiLCJuZXh0UHJvcHMiLCJuZXh0U3RhdGUiLCJuZXh0Q29udGV4dCIsImNsZWFyIiwiamF4IiwiZ2V0SmF4Rm9yIiwiUmVtb3ZlIiwic2V0U2NyaXB0VGV4dCIsIlJlcHJvY2VzcyIsIlRleHQiLCJfTm9kZTIiLCJfQ29udGV4dDIiLCJfVGV4dDIiLCJfSHRtbDIiLCJfX3NlbGYiLCJfX3NvdXJjZSIsInBvcCIsInJlc3VsdCIsImtleVByZWZpeCIsImNvdW50IiwiZXNjYXBlIiwic3VzcGVuc2UiLCJJc1NvbWVSZW5kZXJlckFjdGluZyIsInRvQXJyYXkiLCJQdXJlQ29tcG9uZW50IiwiY2xvbmVFbGVtZW50IiwiY3JlYXRlQ29udGV4dCIsIl9jdXJyZW50VmFsdWUyIiwiX3RocmVhZENvdW50IiwiUHJvdmlkZXIiLCJDb25zdW1lciIsImNyZWF0ZUZhY3RvcnkiLCJjcmVhdGVSZWYiLCJmb3J3YXJkUmVmIiwiaXNWYWxpZEVsZW1lbnQiLCJsYXp5IiwiX2N0b3IiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsIm1lbW8iLCJfc2V0UHJvdG90eXBlT2YiLCJvIiwiX2luaGVyaXRzTG9vc2UiLCJfZXh0ZW5kcyIsImlzQWJzb2x1dGUiLCJwYXRobmFtZSIsInNwbGljZU9uZSIsImxpc3QiLCJ2YWx1ZUVxdWFsIiwiZXZlcnkiLCJpdGVtIiwiYVZhbHVlIiwiYlZhbHVlIiwiY29uZGl0aW9uIiwiYWRkTGVhZGluZ1NsYXNoIiwic3RyaXBMZWFkaW5nU2xhc2giLCJzdHJpcEJhc2VuYW1lIiwiaGFzQmFzZW5hbWUiLCJzdHJpcFRyYWlsaW5nU2xhc2giLCJjcmVhdGVQYXRoIiwiaGFzaCIsImNyZWF0ZUxvY2F0aW9uIiwiY3VycmVudExvY2F0aW9uIiwiaGFzaEluZGV4Iiwic2VhcmNoSW5kZXgiLCJwYXJzZVBhdGgiLCJkZWNvZGVVUkkiLCJVUklFcnJvciIsImhhc1RyYWlsaW5nU2xhc2giLCJ0b1BhcnRzIiwiZnJvbVBhcnRzIiwiaXNUb0FicyIsImlzRnJvbUFicyIsIm11c3RFbmRBYnMiLCJ1cCIsInBhcnQiLCJjcmVhdGVUcmFuc2l0aW9uTWFuYWdlciIsInByb21wdCIsInNldFByb21wdCIsIm5leHRQcm9tcHQiLCJjb25maXJtVHJhbnNpdGlvblRvIiwiZ2V0VXNlckNvbmZpcm1hdGlvbiIsImFwcGVuZExpc3RlbmVyIiwiZm4iLCJpc0FjdGl2ZSIsImZpbHRlciIsIm5vdGlmeUxpc3RlbmVycyIsIl9sZW4iLCJhcmdzIiwiX2tleSIsImNhblVzZURPTSIsImdldENvbmZpcm1hdGlvbiIsImNvbmZpcm0iLCJQb3BTdGF0ZUV2ZW50IiwiSGFzaENoYW5nZUV2ZW50IiwiZ2V0SGlzdG9yeVN0YXRlIiwiaGlzdG9yeSIsImNyZWF0ZUJyb3dzZXJIaXN0b3J5IiwiZ2xvYmFsSGlzdG9yeSIsImNhblVzZUhpc3RvcnkiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciIsIl9wcm9wcyRmb3JjZVJlZnJlc2giLCJmb3JjZVJlZnJlc2giLCJfcHJvcHMkZ2V0VXNlckNvbmZpcm0iLCJfcHJvcHMka2V5TGVuZ3RoIiwia2V5TGVuZ3RoIiwiYmFzZW5hbWUiLCJnZXRET01Mb2NhdGlvbiIsImhpc3RvcnlTdGF0ZSIsIl9yZWYiLCJfd2luZG93JGxvY2F0aW9uIiwiY3JlYXRlS2V5IiwidHJhbnNpdGlvbk1hbmFnZXIiLCJoYW5kbGVQb3BTdGF0ZSIsImlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQiLCJoYW5kbGVQb3AiLCJoYW5kbGVIYXNoQ2hhbmdlIiwiZm9yY2VOZXh0UG9wIiwiZnJvbUxvY2F0aW9uIiwidG9Mb2NhdGlvbiIsInRvSW5kZXgiLCJhbGxLZXlzIiwiZnJvbUluZGV4IiwiZGVsdGEiLCJnbyIsInJldmVydFBvcCIsImluaXRpYWxMb2NhdGlvbiIsImNyZWF0ZUhyZWYiLCJsaXN0ZW5lckNvdW50IiwiY2hlY2tET01MaXN0ZW5lcnMiLCJpc0Jsb2NrZWQiLCJwdXNoU3RhdGUiLCJwcmV2SW5kZXgiLCJuZXh0S2V5cyIsInJlcGxhY2VTdGF0ZSIsImdvQmFjayIsImdvRm9yd2FyZCIsImJsb2NrIiwidW5ibG9jayIsImxpc3RlbiIsInVubGlzdGVuIiwiSGFzaENoYW5nZUV2ZW50JDEiLCJIYXNoUGF0aENvZGVycyIsImhhc2hiYW5nIiwiZW5jb2RlUGF0aCIsImRlY29kZVBhdGgiLCJub3NsYXNoIiwic2xhc2giLCJzdHJpcEhhc2giLCJnZXRIYXNoUGF0aCIsInJlcGxhY2VIYXNoUGF0aCIsImNyZWF0ZUhhc2hIaXN0b3J5IiwiX3Byb3BzJGhhc2hUeXBlIiwiaGFzaFR5cGUiLCJfSGFzaFBhdGhDb2RlcnMkaGFzaFQiLCJpZ25vcmVQYXRoIiwiZW5jb2RlZFBhdGgiLCJwcmV2TG9jYXRpb24iLCJhbGxQYXRocyIsImxhc3RJbmRleE9mIiwiYmFzZVRhZyIsInF1ZXJ5U2VsZWN0b3IiLCJnZXRBdHRyaWJ1dGUiLCJwdXNoSGFzaFBhdGgiLCJuZXh0UGF0aHMiLCJjbGFtcCIsImxvd2VyQm91bmQiLCJ1cHBlckJvdW5kIiwibWF4IiwiY3JlYXRlTWVtb3J5SGlzdG9yeSIsIl9wcm9wcyRpbml0aWFsRW50cmllcyIsImluaXRpYWxFbnRyaWVzIiwiX3Byb3BzJGluaXRpYWxJbmRleCIsImluaXRpYWxJbmRleCIsImVudHJpZXMiLCJlbnRyeSIsIm5leHRJbmRleCIsIm5leHRFbnRyaWVzIiwic3BsaWNlIiwiY2FuR28iLCJNQVhfU0lHTkVEXzMxX0JJVF9JTlQiLCJjb21tb25qc0dsb2JhbCIsImdsb2JhbFRoaXMiLCJjcmVhdGVFdmVudEVtaXR0ZXIiLCJoYW5kbGVycyIsIm9uIiwiaGFuZGxlciIsIm9mZiIsIm5ld1ZhbHVlIiwiY2hhbmdlZEJpdHMiLCJjYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9Qcm92aWRlciRjaGlsZENvbnRleCIsIl9Db25zdW1lciRjb250ZXh0VHlwZSIsImNvbnRleHRQcm9wIiwiX0NvbXBvbmVudCIsImVtaXR0ZXIiLCJfcHJvdG8iLCJvbGRWYWx1ZSIsIl9Db21wb25lbnQyIiwib25VcGRhdGUiLCJfcHJvdG8yIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiLCJleGNsdWRlZCIsInNvdXJjZUtleXMiLCJoaXN0b3J5Q29udGV4dCIsImNyZWF0ZU5hbWVkQ29udGV4dCIsImNyZWF0ZU5hbWVkQ29udGV4dCQxIiwiUm91dGVyIiwiX2lzTW91bnRlZCIsIl9wZW5kaW5nTG9jYXRpb24iLCJzdGF0aWNDb250ZXh0IiwiY29tcHV0ZVJvb3RNYXRjaCIsInBhcmFtcyIsImlzRXhhY3QiLCJNZW1vcnlSb3V0ZXIiLCJMaWZlY3ljbGUiLCJvbk1vdW50Iiwib25Vbm1vdW50IiwiUHJvbXB0IiwiX3JlZiR3aGVuIiwid2hlbiIsIm1ldGhvZCIsInJlbGVhc2UiLCJjYWNoZSIsImNhY2hlQ291bnQiLCJnZW5lcmF0ZVBhdGgiLCJnZW5lcmF0b3IiLCJjb21waWxlUGF0aCIsIlJlZGlyZWN0IiwiY29tcHV0ZWRNYXRjaCIsIl9yZWYkcHVzaCIsImNhY2hlJDEiLCJjYWNoZUNvdW50JDEiLCJtYXRjaFBhdGgiLCJfb3B0aW9ucyIsIl9vcHRpb25zJGV4YWN0IiwiX29wdGlvbnMkc3RyaWN0IiwiX29wdGlvbnMkc2Vuc2l0aXZlIiwicmVkdWNlIiwibWF0Y2hlZCIsIl9jb21waWxlUGF0aCIsImNhY2hlS2V5IiwicGF0aENhY2hlIiwicmVnZXhwIiwiY29tcGlsZVBhdGgkMSIsInZhbHVlcyIsIlJvdXRlIiwiY29udGV4dCQxIiwiX3RoaXMkcHJvcHMiLCJjcmVhdGVVUkwiLCJzdGF0aWNIYW5kbGVyIiwibWV0aG9kTmFtZSIsIm5vb3AiLCJTdGF0aWNSb3V0ZXIiLCJoYW5kbGVQdXNoIiwibmF2aWdhdGVUbyIsImhhbmRsZVJlcGxhY2UiLCJoYW5kbGVMaXN0ZW4iLCJoYW5kbGVCbG9jayIsIl90aGlzJHByb3BzJGJhc2VuYW1lIiwiX3RoaXMkcHJvcHMkY29udGV4dCIsImFkZEJhc2VuYW1lIiwiX3RoaXMkcHJvcHMyIiwiX3RoaXMkcHJvcHMyJGJhc2VuYW1lIiwiX3RoaXMkcHJvcHMyJGNvbnRleHQiLCJfdGhpcyRwcm9wczIkbG9jYXRpb24iLCJyZXN0IiwiU3dpdGNoIiwid2l0aFJvdXRlciIsIndyYXBwZWRDb21wb25lbnRSZWYiLCJyZW1haW5pbmdQcm9wcyIsIldyYXBwZWRDb21wb25lbnQiLCJ1c2VIaXN0b3J5IiwidXNlTG9jYXRpb24iLCJ1c2VQYXJhbXMiLCJ1c2VSb3V0ZU1hdGNoIiwiQnJvd3NlclJvdXRlciIsIkhhc2hSb3V0ZXIiLCJyZXNvbHZlVG9Mb2NhdGlvbiIsIm5vcm1hbGl6ZVRvTG9jYXRpb24iLCJmb3J3YXJkUmVmU2hpbSIsIkxpbmtBbmNob3IiLCJmb3J3YXJkZWRSZWYiLCJpbm5lclJlZiIsIm5hdmlnYXRlIiwiX29uQ2xpY2siLCJleCIsImlzTW9kaWZpZWRFdmVudCIsIkxpbmsiLCJfcmVmMiIsIl9yZWYyJGNvbXBvbmVudCIsImZvcndhcmRSZWZTaGltJDEiLCJmb3J3YXJkUmVmJDEiLCJOYXZMaW5rIiwiX3JlZiRhcmlhQ3VycmVudCIsImFyaWFDdXJyZW50IiwiX3JlZiRhY3RpdmVDbGFzc05hbWUiLCJhY3RpdmVDbGFzc05hbWUiLCJhY3RpdmVTdHlsZSIsImNsYXNzTmFtZVByb3AiLCJjbGFzc05hbWUiLCJpc0FjdGl2ZVByb3AiLCJsb2NhdGlvblByb3AiLCJzdHlsZVByb3AiLCJlc2NhcGVkUGF0aCIsImNsYXNzbmFtZXMiLCJqb2luQ2xhc3NuYW1lcyIsInBlcmZvcm1hbmNlIiwiTWVzc2FnZUNoYW5uZWwiLCJ1bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiZmxvb3IiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJzb3J0SW5kZXgiLCJzdGFydFRpbWUiLCJleHBpcmF0aW9uVGltZSIsInByaW9yaXR5TGV2ZWwiLCJ1bnN0YWJsZV9Qcm9maWxpbmciLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwidW5zdGFibGVfbmV4dCIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwiUmVhY3QiLCJyZWFjdF9yb3V0ZXJfZG9tXzEiLCJhYm91dF8xIiwibWFpbnBhZ2VfMSIsIm5hdl8xIiwiZmFxXzEiLCJmb290ZXJfMSIsInJlYWN0X21hdGhqYXgzXzEiLCJtZXNzYWdlU3R5bGUiLCJleHRlbnNpb25zIiwidGV4MmpheCIsImlubGluZU1hdGgiLCJkaXNwbGF5TWF0aCIsInByb2Nlc3NFc2NhcGVzIiwiVGVYIiwiX19hd2FpdGVyIiwidGhpc0FyZyIsIl9hcmd1bWVudHMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImZ1bGZpbGxlZCIsInN0ZXAiLCJyZWplY3RlZCIsIl9fZ2VuZXJhdG9yIiwiXyIsImxhYmVsIiwic2VudCIsInRyeXMiLCJvcHMiLCJ2ZXJiIiwib3AiLCJyZWFjdF8xIiwiYnRjVm9sYXRpbGl0eSIsImJ0Y01lYW4iLCJidGNQcmljZUFycmF5IiwiYnRjUmV0dXJuc0FycmF5IiwiYWx0UHJpY2VBcnJheSIsImFsdFJldHVybnNBcnJheSIsIm1lYW4iLCJtZWFuT2ZUaGVTcXVhcmUiLCJ2YXJpYW5jZSIsInZvbGF0aWxpdHkiLCJjb3ZhcmlhbmNlIiwiY29ycmVsYXRpb24iLCJfYSIsImZldGNoIiwianNvbiIsIl9sb29wXzEiLCJteVRSIiwibXlDb2luMCIsImlubmVyVGV4dCIsIm1hcmtldF9jYXBfcmFuayIsIm15Q29pbjEiLCJjbGFzc0xpc3QiLCJteUNvaW4yIiwiY3VycmVudF9wcmljZSIsInRvRml4ZWQiLCJteUNvaW4zIiwibWFya2V0X2NhcCIsInRvTG9jYWxlU3RyaW5nIiwicmVzdWx0byIsImJsYW5rRWxlIiwicHJpY2VzIiwicmV0dXJucyIsInBvdyIsInNxcnQiLCJuZXdURCIsIm5ld2VyVEQiLCJuZXdlc3RURCIsImFub3RoZXJURCIsImZpbmFsVEQiLCJGZXRjaE5PVyIsImFjdGl2ZUNsYXNzbmFtZSIsImFjdGl2ZWNsYXNzTmFtZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJnZXR0ZXIiLCJkZWZpbml0aW9uIiwiRnVuY3Rpb24iLCJwcm9wIiwidG9TdHJpbmdUYWciLCJSZWFjdERPTSIsImFwcF8xIl0sIm1hcHBpbmdzIjoiO3dDQUVBLElBQUlBLEVBQVUsRUFBUSxLQU1sQkMsRUFBZ0IsQ0FDbEJDLG1CQUFtQixFQUNuQkMsYUFBYSxFQUNiQyxjQUFjLEVBQ2RDLGNBQWMsRUFDZEMsYUFBYSxFQUNiQyxpQkFBaUIsRUFDakJDLDBCQUEwQixFQUMxQkMsMEJBQTBCLEVBQzFCQyxRQUFRLEVBQ1JDLFdBQVcsRUFDWEMsTUFBTSxHQUVKQyxFQUFnQixDQUNsQkMsTUFBTSxFQUNOQyxRQUFRLEVBQ1JDLFdBQVcsRUFDWEMsUUFBUSxFQUNSQyxRQUFRLEVBQ1JDLFdBQVcsRUFDWEMsT0FBTyxHQVNMQyxFQUFlLENBQ2pCLFVBQVksRUFDWkMsU0FBUyxFQUNUakIsY0FBYyxFQUNkQyxhQUFhLEVBQ2JLLFdBQVcsRUFDWEMsTUFBTSxHQUVKVyxFQUFlLEdBSW5CLFNBQVNDLEVBQVdDLEdBRWxCLE9BQUl6QixFQUFRMEIsT0FBT0QsR0FDVkosRUFJRkUsRUFBYUUsRUFBb0IsV0FBTXhCLEVBVmhEc0IsRUFBYXZCLEVBQVEyQixZQWhCSyxDQUN4QixVQUFZLEVBQ1pDLFFBQVEsRUFDUnZCLGNBQWMsRUFDZEMsYUFBYSxFQUNiSyxXQUFXLEdBWWJZLEVBQWF2QixFQUFRNkIsTUFBUVIsRUFZN0IsSUFBSVMsRUFBaUJDLE9BQU9ELGVBQ3hCRSxFQUFzQkQsT0FBT0Msb0JBQzdCQyxFQUF3QkYsT0FBT0Usc0JBQy9CQyxFQUEyQkgsT0FBT0cseUJBQ2xDQyxFQUFpQkosT0FBT0ksZUFDeEJDLEVBQWtCTCxPQUFPZixVQXNDN0JxQixFQUFPQyxRQXJDUCxTQUFTQyxFQUFxQkMsRUFBaUJDLEVBQWlCQyxHQUM5RCxHQUErQixpQkFBcEJELEVBQThCLENBRXZDLEdBQUlMLEVBQWlCLENBQ25CLElBQUlPLEVBQXFCUixFQUFlTSxHQUVwQ0UsR0FBc0JBLElBQXVCUCxHQUMvQ0csRUFBcUJDLEVBQWlCRyxFQUFvQkQsR0FJOUQsSUFBSUUsRUFBT1osRUFBb0JTLEdBRTNCUixJQUNGVyxFQUFPQSxFQUFLQyxPQUFPWixFQUFzQlEsS0FNM0MsSUFIQSxJQUFJSyxFQUFnQnRCLEVBQVdnQixHQUMzQk8sRUFBZ0J2QixFQUFXaUIsR0FFdEJPLEVBQUksRUFBR0EsRUFBSUosRUFBSzdCLFNBQVVpQyxFQUFHLENBQ3BDLElBQUlDLEVBQU1MLEVBQUtJLEdBRWYsS0FBS25DLEVBQWNvQyxJQUFVUCxHQUFhQSxFQUFVTyxJQUFXRixHQUFpQkEsRUFBY0UsSUFBV0gsR0FBaUJBLEVBQWNHLElBQU8sQ0FDN0ksSUFBSUMsRUFBYWhCLEVBQXlCTyxFQUFpQlEsR0FFM0QsSUFFRW5CLEVBQWVVLEVBQWlCUyxFQUFLQyxHQUNyQyxNQUFPQyxPQUtmLE9BQU9YLEksT0N0RFQsU0FBU1ksRUFBVUMsRUFBUUMsR0FDekJELEVBQU9FLE9BQVMsV0FDZEMsS0FBS0MsUUFBVUQsS0FBS0QsT0FBUyxLQUM3QkQsRUFBRyxLQUFNRCxJQUVYQSxFQUFPSSxRQUFVLFdBR2ZELEtBQUtDLFFBQVVELEtBQUtELE9BQVMsS0FDN0JELEVBQUcsSUFBSUksTUFBTSxrQkFBb0JGLEtBQUtHLEtBQU1OLElBSWhELFNBQVNPLEVBQVNQLEVBQVFDLEdBQ3hCRCxFQUFPUSxtQkFBcUIsV0FDSCxZQUFuQkwsS0FBS00sWUFBK0MsVUFBbkJOLEtBQUtNLGFBQzFDTixLQUFLSyxtQkFBcUIsS0FDMUJQLEVBQUcsS0FBTUQsS0E3RGJoQixFQUFPQyxRQUFVLFNBQWVxQixFQUFLSSxFQUFNVCxHQUN6QyxJQUFJVSxFQUFPQyxTQUFTRCxNQUFRQyxTQUFTQyxxQkFBcUIsUUFBUSxHQUM5RGIsRUFBU1ksU0FBU0UsY0FBYyxVQUVoQixtQkFBVEosSUFDVFQsRUFBS1MsRUFDTEEsRUFBTyxJQUdUQSxFQUFPQSxHQUFRLEdBQ2ZULEVBQUtBLEdBQU0sYUFFWEQsRUFBT3pDLEtBQU9tRCxFQUFLbkQsTUFBUSxrQkFDM0J5QyxFQUFPZSxRQUFVTCxFQUFLSyxTQUFXLE9BQ2pDZixFQUFPZ0IsUUFBUSxVQUFXTixNQUFTQSxFQUFLTSxNQUN4Q2hCLEVBQU9NLElBQU1BLEVBRVRJLEVBQUtPLE9BcUJYLFNBQXVCakIsRUFBUWlCLEdBQzdCLElBQUssSUFBSUMsS0FBUUQsRUFDZmpCLEVBQU9tQixhQUFhRCxFQUFNRCxFQUFNQyxJQXRCaENFLENBQWNwQixFQUFRVSxFQUFLTyxPQUd6QlAsRUFBS1csT0FDUHJCLEVBQU9xQixLQUFPLEdBQUtYLEVBQUtXLE9BR2QsV0FBWXJCLEVBQVNELEVBQVdRLEdBQ3RDUCxFQUFRQyxHQUtURCxFQUFPRSxRQUNWSCxFQUFTQyxFQUFRQyxHQUduQlUsRUFBS1csWUFBWXRCLEsscUJDNUJuQixJQUFJcEIsRUFBd0JGLE9BQU9FLHNCQUMvQjJDLEVBQWlCN0MsT0FBT2YsVUFBVTRELGVBQ2xDQyxFQUFtQjlDLE9BQU9mLFVBQVU4RCxxQkFFeEMsU0FBU0MsRUFBU0MsR0FDakIsR0FBSUEsUUFDSCxNQUFNLElBQUlDLFVBQVUseURBR3JCLE9BQU9sRCxPQUFPaUQsR0ErQ2YzQyxFQUFPQyxRQTVDUCxXQUNDLElBQ0MsSUFBS1AsT0FBT21ELE9BQ1gsT0FBTyxFQU1SLElBQUlDLEVBQVEsSUFBSUMsT0FBTyxPQUV2QixHQURBRCxFQUFNLEdBQUssS0FDa0MsTUFBekNwRCxPQUFPQyxvQkFBb0JtRCxHQUFPLEdBQ3JDLE9BQU8sRUFLUixJQURBLElBQUlFLEVBQVEsR0FDSHJDLEVBQUksRUFBR0EsRUFBSSxHQUFJQSxJQUN2QnFDLEVBQU0sSUFBTUQsT0FBT0UsYUFBYXRDLElBQU1BLEVBS3ZDLEdBQXdCLGVBSFhqQixPQUFPQyxvQkFBb0JxRCxHQUFPRSxLQUFJLFNBQVVDLEdBQzVELE9BQU9ILEVBQU1HLE1BRUhDLEtBQUssSUFDZixPQUFPLEVBSVIsSUFBSUMsRUFBUSxHQUlaLE1BSEEsdUJBQXVCQyxNQUFNLElBQUlDLFNBQVEsU0FBVUMsR0FDbERILEVBQU1HLEdBQVVBLEtBR2YseUJBREU5RCxPQUFPYSxLQUFLYixPQUFPbUQsT0FBTyxHQUFJUSxJQUFRRCxLQUFLLElBTTlDLE1BQU9LLEdBRVIsT0FBTyxHQUlRQyxHQUFvQmhFLE9BQU9tRCxPQUFTLFNBQVVjLEVBQVFDLEdBS3RFLElBSkEsSUFBSUMsRUFFQUMsRUFEQUMsRUFBS3JCLEVBQVNpQixHQUdUSyxFQUFJLEVBQUdBLEVBQUlsRixVQUFVSixPQUFRc0YsSUFBSyxDQUcxQyxJQUFLLElBQUlwRCxLQUZUaUQsRUFBT25FLE9BQU9aLFVBQVVrRixJQUduQnpCLEVBQWUwQixLQUFLSixFQUFNakQsS0FDN0JtRCxFQUFHbkQsR0FBT2lELEVBQUtqRCxJQUlqQixHQUFJaEIsRUFBdUIsQ0FDMUJrRSxFQUFVbEUsRUFBc0JpRSxHQUNoQyxJQUFLLElBQUlsRCxFQUFJLEVBQUdBLEVBQUltRCxFQUFRcEYsT0FBUWlDLElBQy9CNkIsRUFBaUJ5QixLQUFLSixFQUFNQyxFQUFRbkQsTUFDdkNvRCxFQUFHRCxFQUFRbkQsSUFBTWtELEVBQUtDLEVBQVFuRCxNQU1sQyxPQUFPb0QsSSxjQ3hGUixJQUFJRyxFQUFVLEVBQVEsS0FLdEJsRSxFQUFPQyxRQW1aUCxTQUFTa0UsRUFBY0MsRUFBTTdELEVBQU04RCxHQVFqQyxPQVBLSCxFQUFRM0QsS0FDWDhELEVBQWtDOUQsR0FBUThELEVBQzFDOUQsRUFBTyxJQUdUOEQsRUFBVUEsR0FBVyxHQUVqQkQsYUFBZ0JFLE9BbEp0QixTQUF5QkYsRUFBTTdELEdBRTdCLElBQUlnRSxFQUFTSCxFQUFLUixPQUFPWSxNQUFNLGFBRS9CLEdBQUlELEVBQ0YsSUFBSyxJQUFJNUQsRUFBSSxFQUFHQSxFQUFJNEQsRUFBTzdGLE9BQVFpQyxJQUNqQ0osRUFBS2tFLEtBQUssQ0FDUmhHLEtBQU1rQyxFQUNOK0QsT0FBUSxLQUNSQyxVQUFXLEtBQ1hDLFVBQVUsRUFDVkMsUUFBUSxFQUNSQyxTQUFTLEVBQ1RDLFVBQVUsRUFDVkMsUUFBUyxPQUtmLE9BQU9DLEVBQVdiLEVBQU03RCxHQWdJZjJFLENBQWVkLEVBQTRCLEdBR2hERixFQUFRRSxHQXhIZCxTQUF3QkEsRUFBTTdELEVBQU04RCxHQUdsQyxJQUZBLElBQUljLEVBQVEsR0FFSHhFLEVBQUksRUFBR0EsRUFBSXlELEVBQUsxRixPQUFRaUMsSUFDL0J3RSxFQUFNVixLQUFLTixFQUFhQyxFQUFLekQsR0FBSUosRUFBTThELEdBQVNULFFBS2xELE9BQU9xQixFQUZNLElBQUlYLE9BQU8sTUFBUWEsRUFBTS9CLEtBQUssS0FBTyxJQUFLZ0MsRUFBTWYsSUFFbkM5RCxHQWdIakI4RSxDQUFvQyxFQUE4QixFQUFRaEIsR0FyR3JGLFNBQXlCRCxFQUFNN0QsRUFBTThELEdBQ25DLE9BQU9pQixFQUFlQyxFQUFNbkIsRUFBTUMsR0FBVTlELEVBQU04RCxHQXVHM0NtQixDQUFxQyxFQUE4QixFQUFRbkIsSUFsYXBGckUsRUFBT0MsUUFBUXNGLE1BQVFBLEVBQ3ZCdkYsRUFBT0MsUUFBUXdGLFFBc0dmLFNBQWtCQyxFQUFLckIsR0FDckIsT0FBT3NCLEVBQWlCSixFQUFNRyxFQUFLckIsR0FBVUEsSUF0Ry9DckUsRUFBT0MsUUFBUTBGLGlCQUFtQkEsRUFDbEMzRixFQUFPQyxRQUFRcUYsZUFBaUJBLEVBT2hDLElBQUlNLEVBQWMsSUFBSXRCLE9BQU8sQ0FHM0IsVUFPQSwwR0FDQWxCLEtBQUssS0FBTSxLQVNiLFNBQVNtQyxFQUFPRyxFQUFLckIsR0FRbkIsSUFQQSxJQUtJd0IsRUFMQUMsRUFBUyxHQUNUbEYsRUFBTSxFQUNObUYsRUFBUSxFQUNSM0IsRUFBTyxHQUNQNEIsRUFBbUIzQixHQUFXQSxFQUFRTSxXQUFhLElBR2YsT0FBaENrQixFQUFNRCxFQUFZSyxLQUFLUCxLQUFlLENBQzVDLElBQUlRLEVBQUlMLEVBQUksR0FDUk0sRUFBVU4sRUFBSSxHQUNkTyxFQUFTUCxFQUFJRSxNQUtqQixHQUpBM0IsR0FBUXNCLEVBQUlXLE1BQU1OLEVBQU9LLEdBQ3pCTCxFQUFRSyxFQUFTRixFQUFFeEgsT0FHZnlILEVBQ0YvQixHQUFRK0IsRUFBUSxPQURsQixDQUtBLElBQUlHLEVBQU9aLEVBQUlLLEdBQ1hyQixFQUFTbUIsRUFBSSxHQUNicEgsRUFBT29ILEVBQUksR0FDWFUsRUFBVVYsRUFBSSxHQUNkVyxFQUFRWCxFQUFJLEdBQ1pZLEVBQVdaLEVBQUksR0FDZmQsRUFBV2MsRUFBSSxHQUdmekIsSUFDRjBCLEVBQU9yQixLQUFLTCxHQUNaQSxFQUFPLElBR1QsSUFBSVUsRUFBb0IsTUFBVkosR0FBMEIsTUFBUjRCLEdBQWdCQSxJQUFTNUIsRUFDckRHLEVBQXNCLE1BQWI0QixHQUFpQyxNQUFiQSxFQUM3QjdCLEVBQXdCLE1BQWI2QixHQUFpQyxNQUFiQSxFQUMvQjlCLEVBQVlrQixFQUFJLElBQU1HLEVBQ3RCaEIsRUFBVXVCLEdBQVdDLEVBRXpCVixFQUFPckIsS0FBSyxDQUNWaEcsS0FBTUEsR0FBUW1DLElBQ2Q4RCxPQUFRQSxHQUFVLEdBQ2xCQyxVQUFXQSxFQUNYQyxTQUFVQSxFQUNWQyxPQUFRQSxFQUNSQyxRQUFTQSxFQUNUQyxXQUFZQSxFQUNaQyxRQUFTQSxFQUFVMEIsRUFBWTFCLEdBQVlELEVBQVcsS0FBTyxLQUFPNEIsRUFBYWhDLEdBQWEsU0FjbEcsT0FUSW9CLEVBQVFMLEVBQUloSCxTQUNkMEYsR0FBUXNCLEVBQUlrQixPQUFPYixJQUlqQjNCLEdBQ0YwQixFQUFPckIsS0FBS0wsR0FHUDBCLEVBb0JULFNBQVNlLEVBQTBCbkIsR0FDakMsT0FBT29CLFVBQVVwQixHQUFLcUIsUUFBUSxXQUFXLFNBQVVDLEdBQ2pELE1BQU8sSUFBTUEsRUFBRUMsV0FBVyxHQUFHQyxTQUFTLElBQUlDLGlCQW1COUMsU0FBU3hCLEVBQWtCRyxFQUFRekIsR0FLakMsSUFIQSxJQUFJK0MsRUFBVSxJQUFJQyxNQUFNdkIsRUFBT3BILFFBR3RCaUMsRUFBSSxFQUFHQSxFQUFJbUYsRUFBT3BILE9BQVFpQyxJQUNSLGlCQUFkbUYsRUFBT25GLEtBQ2hCeUcsRUFBUXpHLEdBQUssSUFBSTJELE9BQU8sT0FBU3dCLEVBQU9uRixHQUFHcUUsUUFBVSxLQUFNSSxFQUFNZixLQUlyRSxPQUFPLFNBQVVpRCxFQUFLNUYsR0FNcEIsSUFMQSxJQUFJMEMsRUFBTyxHQUNQbUQsRUFBT0QsR0FBTyxHQUVkRSxHQURVOUYsR0FBUSxJQUNEK0YsT0FBU1osRUFBMkJhLG1CQUVoRC9HLEVBQUksRUFBR0EsRUFBSW1GLEVBQU9wSCxPQUFRaUMsSUFBSyxDQUN0QyxJQUFJZ0gsRUFBUTdCLEVBQU9uRixHQUVuQixHQUFxQixpQkFBVmdILEVBQVgsQ0FNQSxJQUNJQyxFQURBQyxFQUFRTixFQUFLSSxFQUFNbEosTUFHdkIsR0FBYSxNQUFUb0osRUFBZSxDQUNqQixHQUFJRixFQUFNL0MsU0FBVSxDQUVkK0MsRUFBTTdDLFVBQ1JWLEdBQVF1RCxFQUFNakQsUUFHaEIsU0FFQSxNQUFNLElBQUk5QixVQUFVLGFBQWUrRSxFQUFNbEosS0FBTyxtQkFJcEQsR0FBSXlGLEVBQVEyRCxHQUFaLENBQ0UsSUFBS0YsRUFBTTlDLE9BQ1QsTUFBTSxJQUFJakMsVUFBVSxhQUFlK0UsRUFBTWxKLEtBQU8sa0NBQW9DcUosS0FBS0MsVUFBVUYsR0FBUyxLQUc5RyxHQUFxQixJQUFqQkEsRUFBTW5KLE9BQWMsQ0FDdEIsR0FBSWlKLEVBQU0vQyxTQUNSLFNBRUEsTUFBTSxJQUFJaEMsVUFBVSxhQUFlK0UsRUFBTWxKLEtBQU8scUJBSXBELElBQUssSUFBSXVKLEVBQUksRUFBR0EsRUFBSUgsRUFBTW5KLE9BQVFzSixJQUFLLENBR3JDLEdBRkFKLEVBQVVKLEVBQU9LLEVBQU1HLEtBRWxCWixFQUFRekcsR0FBR3NILEtBQUtMLEdBQ25CLE1BQU0sSUFBSWhGLFVBQVUsaUJBQW1CK0UsRUFBTWxKLEtBQU8sZUFBaUJrSixFQUFNM0MsUUFBVSxvQkFBc0I4QyxLQUFLQyxVQUFVSCxHQUFXLEtBR3ZJeEQsSUFBZSxJQUFONEQsRUFBVUwsRUFBTWpELE9BQVNpRCxFQUFNaEQsV0FBYWlELE9BcEJ6RCxDQTRCQSxHQUZBQSxFQUFVRCxFQUFNNUMsU0E1RWIrQixVQTRFdUNlLEdBNUV4QmQsUUFBUSxTQUFTLFNBQVVDLEdBQy9DLE1BQU8sSUFBTUEsRUFBRUMsV0FBVyxHQUFHQyxTQUFTLElBQUlDLGlCQTJFV0ssRUFBT0ssSUFFckRULEVBQVF6RyxHQUFHc0gsS0FBS0wsR0FDbkIsTUFBTSxJQUFJaEYsVUFBVSxhQUFlK0UsRUFBTWxKLEtBQU8sZUFBaUJrSixFQUFNM0MsUUFBVSxvQkFBc0I0QyxFQUFVLEtBR25IeEQsR0FBUXVELEVBQU1qRCxPQUFTa0QsUUFyRHJCeEQsR0FBUXVELEVBd0RaLE9BQU92RCxHQVVYLFNBQVN1QyxFQUFjakIsR0FDckIsT0FBT0EsRUFBSXFCLFFBQVEsNkJBQThCLFFBU25ELFNBQVNMLEVBQWFGLEdBQ3BCLE9BQU9BLEVBQU1PLFFBQVEsZ0JBQWlCLFFBVXhDLFNBQVM5QixFQUFZaUQsRUFBSTNILEdBRXZCLE9BREEySCxFQUFHM0gsS0FBT0EsRUFDSDJILEVBU1QsU0FBUzlDLEVBQU9mLEdBQ2QsT0FBT0EsR0FBV0EsRUFBUThELFVBQVksR0FBSyxJQXdFN0MsU0FBUzdDLEVBQWdCUSxFQUFRdkYsRUFBTThELEdBQ2hDSCxFQUFRM0QsS0FDWDhELEVBQWtDOUQsR0FBUThELEVBQzFDOUQsRUFBTyxJQVVULElBTEEsSUFBSTZILEdBRkovRCxFQUFVQSxHQUFXLElBRUErRCxPQUNqQkMsR0FBc0IsSUFBaEJoRSxFQUFRZ0UsSUFDZEMsRUFBUSxHQUdIM0gsRUFBSSxFQUFHQSxFQUFJbUYsRUFBT3BILE9BQVFpQyxJQUFLLENBQ3RDLElBQUlnSCxFQUFRN0IsRUFBT25GLEdBRW5CLEdBQXFCLGlCQUFWZ0gsRUFDVFcsR0FBUzNCLEVBQWFnQixPQUNqQixDQUNMLElBQUlqRCxFQUFTaUMsRUFBYWdCLEVBQU1qRCxRQUM1QjZCLEVBQVUsTUFBUW9CLEVBQU0zQyxRQUFVLElBRXRDekUsRUFBS2tFLEtBQUtrRCxHQUVOQSxFQUFNOUMsU0FDUjBCLEdBQVcsTUFBUTdCLEVBQVM2QixFQUFVLE1BYXhDK0IsR0FOSS9CLEVBSkFvQixFQUFNL0MsU0FDSCtDLEVBQU03QyxRQUdDSixFQUFTLElBQU02QixFQUFVLEtBRnpCLE1BQVE3QixFQUFTLElBQU02QixFQUFVLE1BS25DN0IsRUFBUyxJQUFNNkIsRUFBVSxLQU96QyxJQUFJNUIsRUFBWWdDLEVBQWF0QyxFQUFRTSxXQUFhLEtBQzlDNEQsRUFBb0JELEVBQU1qQyxPQUFPMUIsRUFBVWpHLFVBQVlpRyxFQWtCM0QsT0FaS3lELElBQ0hFLEdBQVNDLEVBQW9CRCxFQUFNakMsTUFBTSxHQUFJMUIsRUFBVWpHLFFBQVU0SixHQUFTLE1BQVEzRCxFQUFZLFdBSTlGMkQsR0FERUQsRUFDTyxJQUlBRCxHQUFVRyxFQUFvQixHQUFLLE1BQVE1RCxFQUFZLE1BRzNETSxFQUFXLElBQUlYLE9BQU8sSUFBTWdFLEVBQU9sRCxFQUFNZixJQUFXOUQsSyxRQ3pZN0RQLEVBQU9DLFFBQVVvSCxNQUFNbUIsU0FBVyxTQUFVQyxHQUMxQyxNQUE4QyxrQkFBdkMvSSxPQUFPZixVQUFVdUksU0FBU2pELEtBQUt3RSxLLDJCQ1F4QyxJQUFJQyxFQUF1QixFQUFRLEtBRW5DLFNBQVNDLEtBQ1QsU0FBU0MsS0FDVEEsRUFBdUJDLGtCQUFvQkYsRUFFM0MzSSxFQUFPQyxRQUFVLFdBQ2YsU0FBUzZJLEVBQUtDLEVBQU9DLEVBQVVDLEVBQWVDLEVBQVVDLEVBQWNDLEdBQ3BFLEdBQUlBLElBQVdWLEVBQWYsQ0FJQSxJQUFJakYsRUFBTSxJQUFJcEMsTUFDWixtTEFLRixNQURBb0MsRUFBSWhGLEtBQU8sc0JBQ0xnRixHQUdSLFNBQVM0RixJQUNQLE9BQU9QLEVBRlRBLEVBQUtRLFdBQWFSLEVBTWxCLElBQUlTLEVBQWlCLENBQ25CQyxNQUFPVixFQUNQVyxLQUFNWCxFQUNOWSxLQUFNWixFQUNOYSxPQUFRYixFQUNSYyxPQUFRZCxFQUNSZSxPQUFRZixFQUNSZ0IsT0FBUWhCLEVBRVJpQixJQUFLakIsRUFDTGtCLFFBQVNYLEVBQ1RZLFFBQVNuQixFQUNUb0IsWUFBYXBCLEVBQ2JxQixXQUFZZCxFQUNaZSxLQUFNdEIsRUFDTnVCLFNBQVVoQixFQUNWaUIsTUFBT2pCLEVBQ1BrQixVQUFXbEIsRUFDWG1CLE1BQU9uQixFQUNQb0IsTUFBT3BCLEVBRVBxQixlQUFnQjlCLEVBQ2hCQyxrQkFBbUJGLEdBS3JCLE9BRkFZLEVBQWVvQixVQUFZcEIsRUFFcEJBLEksY0M3Q1B2SixFQUFPQyxRQUFVLEVBQVEsSUFBUixJLHFCQ05uQkQsRUFBT0MsUUFGb0IsZ0QsMkJDRWQsSUFBSTJLLEVBQUcsRUFBUSxLQUFTMUUsRUFBRSxFQUFRLEtBQWlCMkUsRUFBRSxFQUFRLEtBQWEsU0FBU0MsRUFBRUMsR0FBRyxJQUFJLElBQUlDLEVBQUUseURBQXlERCxFQUFFL0QsRUFBRSxFQUFFQSxFQUFFbEksVUFBVUosT0FBT3NJLElBQUlnRSxHQUFHLFdBQVd0RCxtQkFBbUI1SSxVQUFVa0ksSUFBSSxNQUFNLHlCQUF5QitELEVBQUUsV0FBV0MsRUFBRSxpSEFBaUgsSUFBSUosRUFBRyxNQUFNdkosTUFBTXlKLEVBQUUsTUFBTSxJQUFJRyxFQUFHLElBQUlDLElBQUlDLEVBQUcsR0FBRyxTQUFTQyxFQUFHTCxFQUFFQyxHQUFHSyxFQUFHTixFQUFFQyxHQUFHSyxFQUFHTixFQUFFLFVBQVVDLEdBQzNlLFNBQVNLLEVBQUdOLEVBQUVDLEdBQVcsSUFBUkcsRUFBR0osR0FBR0MsRUFBTUQsRUFBRSxFQUFFQSxFQUFFQyxFQUFFdE0sT0FBT3FNLElBQUlFLEVBQUdLLElBQUlOLEVBQUVELElBQ3pELElBQUlRLElBQUssb0JBQXFCQyxhQUFRLElBQXFCQSxPQUFPNUosZUFBVSxJQUFxQjRKLE9BQU81SixTQUFTRSxlQUFlMkosRUFBRyw4VkFBOFZDLEVBQUdoTSxPQUFPZixVQUFVNEQsZUFDcmZvSixFQUFHLEdBQUdDLEVBQUcsR0FDK00sU0FBU0MsRUFBRWQsRUFBRUMsRUFBRWhFLEVBQUU4RSxFQUFFaEwsRUFBRWlMLEVBQUVDLEdBQUc3SyxLQUFLOEssZ0JBQWdCLElBQUlqQixHQUFHLElBQUlBLEdBQUcsSUFBSUEsRUFBRTdKLEtBQUsrSyxjQUFjSixFQUFFM0ssS0FBS2dMLG1CQUFtQnJMLEVBQUVLLEtBQUtpTCxnQkFBZ0JwRixFQUFFN0YsS0FBS2tMLGFBQWF0QixFQUFFNUosS0FBSzVDLEtBQUt5TSxFQUFFN0osS0FBS21MLFlBQVlQLEVBQUU1SyxLQUFLb0wsa0JBQWtCUCxFQUFFLElBQUlRLEVBQUUsR0FDbmIsdUlBQXVJbEosTUFBTSxLQUFLQyxTQUFRLFNBQVN3SCxHQUFHeUIsRUFBRXpCLEdBQUcsSUFBSWMsRUFBRWQsRUFBRSxHQUFFLEVBQUdBLEVBQUUsTUFBSyxHQUFHLE1BQU0sQ0FBQyxDQUFDLGdCQUFnQixrQkFBa0IsQ0FBQyxZQUFZLFNBQVMsQ0FBQyxVQUFVLE9BQU8sQ0FBQyxZQUFZLGVBQWV4SCxTQUFRLFNBQVN3SCxHQUFHLElBQUlDLEVBQUVELEVBQUUsR0FBR3lCLEVBQUV4QixHQUFHLElBQUlhLEVBQUViLEVBQUUsR0FBRSxFQUFHRCxFQUFFLEdBQUcsTUFBSyxHQUFHLE1BQU0sQ0FBQyxrQkFBa0IsWUFBWSxhQUFhLFNBQVN4SCxTQUFRLFNBQVN3SCxHQUFHeUIsRUFBRXpCLEdBQUcsSUFBSWMsRUFBRWQsRUFBRSxHQUFFLEVBQUdBLEVBQUUwQixjQUFjLE1BQUssR0FBRyxNQUN2ZSxDQUFDLGNBQWMsNEJBQTRCLFlBQVksaUJBQWlCbEosU0FBUSxTQUFTd0gsR0FBR3lCLEVBQUV6QixHQUFHLElBQUljLEVBQUVkLEVBQUUsR0FBRSxFQUFHQSxFQUFFLE1BQUssR0FBRyxNQUFNLDhPQUE4T3pILE1BQU0sS0FBS0MsU0FBUSxTQUFTd0gsR0FBR3lCLEVBQUV6QixHQUFHLElBQUljLEVBQUVkLEVBQUUsR0FBRSxFQUFHQSxFQUFFMEIsY0FBYyxNQUFLLEdBQUcsTUFDcmIsQ0FBQyxVQUFVLFdBQVcsUUFBUSxZQUFZbEosU0FBUSxTQUFTd0gsR0FBR3lCLEVBQUV6QixHQUFHLElBQUljLEVBQUVkLEVBQUUsR0FBRSxFQUFHQSxFQUFFLE1BQUssR0FBRyxNQUFNLENBQUMsVUFBVSxZQUFZeEgsU0FBUSxTQUFTd0gsR0FBR3lCLEVBQUV6QixHQUFHLElBQUljLEVBQUVkLEVBQUUsR0FBRSxFQUFHQSxFQUFFLE1BQUssR0FBRyxNQUFNLENBQUMsT0FBTyxPQUFPLE9BQU8sUUFBUXhILFNBQVEsU0FBU3dILEdBQUd5QixFQUFFekIsR0FBRyxJQUFJYyxFQUFFZCxFQUFFLEdBQUUsRUFBR0EsRUFBRSxNQUFLLEdBQUcsTUFBTSxDQUFDLFVBQVUsU0FBU3hILFNBQVEsU0FBU3dILEdBQUd5QixFQUFFekIsR0FBRyxJQUFJYyxFQUFFZCxFQUFFLEdBQUUsRUFBR0EsRUFBRTBCLGNBQWMsTUFBSyxHQUFHLE1BQU0sSUFBSUMsRUFBRyxnQkFBZ0IsU0FBU0MsRUFBRzVCLEdBQUcsT0FBT0EsRUFBRSxHQUFHNUQsY0FJM1ksU0FBU3lGLEVBQUc3QixFQUFFQyxFQUFFaEUsRUFBRThFLEdBQUcsSUFBSWhMLEVBQUUwTCxFQUFFakssZUFBZXlJLEdBQUd3QixFQUFFeEIsR0FBRyxNQUFXLE9BQU9sSyxFQUFFLElBQUlBLEVBQUV2QyxNQUFLdU4sR0FBTyxFQUFFZCxFQUFFdE0sU0FBUyxNQUFNc00sRUFBRSxJQUFJLE1BQU1BLEVBQUUsTUFBSSxNQUFNQSxFQUFFLElBQUksTUFBTUEsRUFBRSxPQVBuSixTQUFZRCxFQUFFQyxFQUFFaEUsRUFBRThFLEdBQUcsR0FBRyxNQUFPZCxHQURnRyxTQUFZRCxFQUFFQyxFQUFFaEUsRUFBRThFLEdBQUcsR0FBRyxPQUFPOUUsR0FBRyxJQUFJQSxFQUFFekksS0FBSyxPQUFNLEVBQUcsY0FBY3lNLEdBQUcsSUFBSyxXQUFXLElBQUssU0FBUyxPQUFNLEVBQUcsSUFBSyxVQUFVLE9BQUdjLElBQWMsT0FBTzlFLEdBQVNBLEVBQUVpRixnQkFBbUQsV0FBbkNsQixFQUFFQSxFQUFFMEIsY0FBY3BHLE1BQU0sRUFBRSxLQUFzQixVQUFVMEUsR0FBRSxRQUFRLE9BQU0sR0FDL1Q4QixDQUFHOUIsRUFBRUMsRUFBRWhFLEVBQUU4RSxHQUFHLE9BQU0sRUFBRyxHQUFHQSxFQUFFLE9BQU0sRUFBRyxHQUFHLE9BQU85RSxFQUFFLE9BQU9BLEVBQUV6SSxNQUFNLEtBQUssRUFBRSxPQUFPeU0sRUFBRSxLQUFLLEVBQUUsT0FBTSxJQUFLQSxFQUFFLEtBQUssRUFBRSxPQUFPOEIsTUFBTTlCLEdBQUcsS0FBSyxFQUFFLE9BQU84QixNQUFNOUIsSUFBSSxFQUFFQSxFQUFFLE9BQU0sRUFPckQrQixDQUFHL0IsRUFBRWhFLEVBQUVsRyxFQUFFZ0wsS0FBSzlFLEVBQUUsTUFBTThFLEdBQUcsT0FBT2hMLEVBUnBMLFNBQVlpSyxHQUFHLFFBQUdXLEVBQUd6SCxLQUFLMkgsRUFBR2IsS0FBZVcsRUFBR3pILEtBQUswSCxFQUFHWixLQUFlVSxFQUFHeEQsS0FBSzhDLEdBQVVhLEVBQUdiLElBQUcsR0FBR1ksRUFBR1osSUFBRyxHQUFTLElBUXNFaUMsQ0FBR2hDLEtBQUssT0FBT2hFLEVBQUUrRCxFQUFFa0MsZ0JBQWdCakMsR0FBR0QsRUFBRTVJLGFBQWE2SSxFQUFFLEdBQUdoRSxJQUFJbEcsRUFBRXNMLGdCQUFnQnJCLEVBQUVqSyxFQUFFdUwsY0FBYyxPQUFPckYsRUFBRSxJQUFJbEcsRUFBRXZDLE1BQVEsR0FBR3lJLEdBQUdnRSxFQUFFbEssRUFBRW9MLGNBQWNKLEVBQUVoTCxFQUFFcUwsbUJBQW1CLE9BQU9uRixFQUFFK0QsRUFBRWtDLGdCQUFnQmpDLElBQWFoRSxFQUFFLEtBQVhsRyxFQUFFQSxFQUFFdkMsT0FBYyxJQUFJdUMsSUFBRyxJQUFLa0csRUFBRSxHQUFHLEdBQUdBLEVBQUU4RSxFQUFFZixFQUFFbUMsZUFBZXBCLEVBQUVkLEVBQUVoRSxHQUFHK0QsRUFBRTVJLGFBQWE2SSxFQUFFaEUsTUFINWQsMGpDQUEwakMxRCxNQUFNLEtBQUtDLFNBQVEsU0FBU3dILEdBQUcsSUFBSUMsRUFBRUQsRUFBRWhFLFFBQVEyRixFQUN6bUNDLEdBQUlILEVBQUV4QixHQUFHLElBQUlhLEVBQUViLEVBQUUsR0FBRSxFQUFHRCxFQUFFLE1BQUssR0FBRyxNQUFNLDJFQUEyRXpILE1BQU0sS0FBS0MsU0FBUSxTQUFTd0gsR0FBRyxJQUFJQyxFQUFFRCxFQUFFaEUsUUFBUTJGLEVBQUdDLEdBQUlILEVBQUV4QixHQUFHLElBQUlhLEVBQUViLEVBQUUsR0FBRSxFQUFHRCxFQUFFLGdDQUErQixHQUFHLE1BQU0sQ0FBQyxXQUFXLFdBQVcsYUFBYXhILFNBQVEsU0FBU3dILEdBQUcsSUFBSUMsRUFBRUQsRUFBRWhFLFFBQVEyRixFQUFHQyxHQUFJSCxFQUFFeEIsR0FBRyxJQUFJYSxFQUFFYixFQUFFLEdBQUUsRUFBR0QsRUFBRSx3Q0FBdUMsR0FBRyxNQUFNLENBQUMsV0FBVyxlQUFleEgsU0FBUSxTQUFTd0gsR0FBR3lCLEVBQUV6QixHQUFHLElBQUljLEVBQUVkLEVBQUUsR0FBRSxFQUFHQSxFQUFFMEIsY0FBYyxNQUFLLEdBQUcsTUFDL2NELEVBQUVXLFVBQVUsSUFBSXRCLEVBQUUsWUFBWSxHQUFFLEVBQUcsYUFBYSxnQ0FBK0IsR0FBRyxHQUFJLENBQUMsTUFBTSxPQUFPLFNBQVMsY0FBY3RJLFNBQVEsU0FBU3dILEdBQUd5QixFQUFFekIsR0FBRyxJQUFJYyxFQUFFZCxFQUFFLEdBQUUsRUFBR0EsRUFBRTBCLGNBQWMsTUFBSyxHQUFHLE1BRXpMLElBQUlXLEVBQUd4QyxFQUFHeUMsbURBQW1EQyxFQUFHLE1BQU1DLEVBQUcsTUFBTUMsRUFBRyxNQUFNQyxFQUFHLE1BQU1DLEVBQUcsTUFBTUMsRUFBRyxNQUFNQyxFQUFHLE1BQU1DLEVBQUcsTUFBTUMsRUFBRyxNQUFNQyxFQUFHLE1BQU1DLEVBQUcsTUFBTUMsRUFBRyxNQUFNQyxFQUFHLE1BQU1DLEVBQUcsTUFBTUMsRUFBRyxNQUFNQyxFQUFHLE1BQU1DLEVBQUcsTUFDaE4sR0FBRyxtQkFBb0JDLFFBQVFBLE9BQU9DLElBQUksQ0FBQyxJQUFJQyxFQUFFRixPQUFPQyxJQUFJbEIsRUFBR21CLEVBQUUsaUJBQWlCbEIsRUFBR2tCLEVBQUUsZ0JBQWdCakIsRUFBR2lCLEVBQUUsa0JBQWtCaEIsRUFBR2dCLEVBQUUscUJBQXFCZixFQUFHZSxFQUFFLGtCQUFrQmQsRUFBR2MsRUFBRSxrQkFBa0JiLEVBQUdhLEVBQUUsaUJBQWlCWixFQUFHWSxFQUFFLHFCQUFxQlgsRUFBR1csRUFBRSxrQkFBa0JWLEVBQUdVLEVBQUUsdUJBQXVCVCxFQUFHUyxFQUFFLGNBQWNSLEVBQUdRLEVBQUUsY0FBY1AsRUFBR08sRUFBRSxlQUFlQSxFQUFFLGVBQWVOLEVBQUdNLEVBQUUsbUJBQW1CTCxFQUFHSyxFQUFFLDBCQUEwQkosRUFBR0ksRUFBRSxtQkFBbUJILEVBQUdHLEVBQUUsdUJBQ3hjLElBQW1MQyxFQUEvS0MsRUFBRyxtQkFBb0JKLFFBQVFBLE9BQU9LLFNBQVMsU0FBU0MsRUFBRzlELEdBQUcsT0FBRyxPQUFPQSxHQUFHLGlCQUFrQkEsRUFBUyxLQUF3QyxtQkFBbkNBLEVBQUU0RCxHQUFJNUQsRUFBRTRELElBQUs1RCxFQUFFLGVBQTBDQSxFQUFFLEtBQVksU0FBUytELEVBQUcvRCxHQUFHLFFBQUcsSUFBUzJELEVBQUcsSUFBSSxNQUFNck4sUUFBUyxNQUFNMkYsR0FBRyxJQUFJZ0UsRUFBRWhFLEVBQUUrSCxNQUFNQyxPQUFPeEssTUFBTSxnQkFBZ0JrSyxFQUFHMUQsR0FBR0EsRUFBRSxJQUFJLEdBQUcsTUFBTSxLQUFLMEQsRUFBRzNELEVBQUUsSUFBSWtFLEdBQUcsRUFDalUsU0FBU0MsRUFBR25FLEVBQUVDLEdBQUcsSUFBSUQsR0FBR2tFLEVBQUcsTUFBTSxHQUFHQSxHQUFHLEVBQUcsSUFBSWpJLEVBQUUzRixNQUFNOE4sa0JBQWtCOU4sTUFBTThOLHVCQUFrQixFQUFPLElBQUksR0FBR25FLEVBQUUsR0FBR0EsRUFBRSxXQUFXLE1BQU0zSixTQUFVM0IsT0FBT0QsZUFBZXVMLEVBQUVyTSxVQUFVLFFBQVEsQ0FBQ3lRLElBQUksV0FBVyxNQUFNL04sV0FBWSxpQkFBa0JnTyxTQUFTQSxRQUFRQyxVQUFVLENBQUMsSUFBSUQsUUFBUUMsVUFBVXRFLEVBQUUsSUFBSSxNQUFNdUUsR0FBRyxJQUFJekQsRUFBRXlELEVBQUVGLFFBQVFDLFVBQVV2RSxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxJQUFJQSxFQUFFL0csT0FBTyxNQUFNc0wsR0FBR3pELEVBQUV5RCxFQUFFeEUsRUFBRTlHLEtBQUsrRyxFQUFFck0sZUFBZSxDQUFDLElBQUksTUFBTTBDLFFBQVMsTUFBTWtPLEdBQUd6RCxFQUFFeUQsRUFBRXhFLEtBQUssTUFBTXdFLEdBQUcsR0FBR0EsR0FBR3pELEdBQUcsaUJBQWtCeUQsRUFBRVIsTUFBTSxDQUFDLElBQUksSUFBSWpPLEVBQUV5TyxFQUFFUixNQUFNekwsTUFBTSxNQUNuZnlJLEVBQUVELEVBQUVpRCxNQUFNekwsTUFBTSxNQUFNMEksRUFBRWxMLEVBQUVwQyxPQUFPLEVBQUU4USxFQUFFekQsRUFBRXJOLE9BQU8sRUFBRSxHQUFHc04sR0FBRyxHQUFHd0QsR0FBRzFPLEVBQUVrTCxLQUFLRCxFQUFFeUQsSUFBSUEsSUFBSSxLQUFLLEdBQUd4RCxHQUFHLEdBQUd3RCxFQUFFeEQsSUFBSXdELElBQUksR0FBRzFPLEVBQUVrTCxLQUFLRCxFQUFFeUQsR0FBRyxDQUFDLEdBQUcsSUFBSXhELEdBQUcsSUFBSXdELEVBQUcsTUFBTXhELElBQVEsSUFBSndELEdBQVMxTyxFQUFFa0wsS0FBS0QsRUFBRXlELEdBQUcsTUFBTSxLQUFLMU8sRUFBRWtMLEdBQUdqRixRQUFRLFdBQVcsY0FBYyxHQUFHaUYsR0FBRyxHQUFHd0QsR0FBRyxRQUFRLFFBQVFQLEdBQUcsRUFBRzVOLE1BQU04TixrQkFBa0JuSSxFQUFFLE9BQU8rRCxFQUFFQSxFQUFFQSxFQUFFOU0sYUFBYThNLEVBQUV0TSxLQUFLLElBQUlxUSxFQUFHL0QsR0FBRyxHQUM3VCxTQUFTMEUsRUFBRzFFLEdBQUcsT0FBT0EsRUFBRTJFLEtBQUssS0FBSyxFQUFFLE9BQU9aLEVBQUcvRCxFQUFFeE0sTUFBTSxLQUFLLEdBQUcsT0FBT3VRLEVBQUcsUUFBUSxLQUFLLEdBQUcsT0FBT0EsRUFBRyxZQUFZLEtBQUssR0FBRyxPQUFPQSxFQUFHLGdCQUFnQixLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssR0FBRyxPQUFTSSxFQUFHbkUsRUFBRXhNLE1BQUssR0FBTSxLQUFLLEdBQUcsT0FBUzJRLEVBQUduRSxFQUFFeE0sS0FBS2dCLFFBQU8sR0FBTSxLQUFLLEdBQUcsT0FBUzJQLEVBQUduRSxFQUFFeE0sS0FBS29SLFNBQVEsR0FBTSxLQUFLLEVBQUUsT0FBU1QsRUFBR25FLEVBQUV4TSxNQUFLLEdBQU0sUUFBUSxNQUFNLElBQzlULFNBQVNxUixFQUFHN0UsR0FBRyxHQUFHLE1BQU1BLEVBQUUsT0FBTyxLQUFLLEdBQUcsbUJBQW9CQSxFQUFFLE9BQU9BLEVBQUU5TSxhQUFhOE0sRUFBRXRNLE1BQU0sS0FBSyxHQUFHLGlCQUFrQnNNLEVBQUUsT0FBT0EsRUFBRSxPQUFPQSxHQUFHLEtBQUt5QyxFQUFHLE1BQU0sV0FBVyxLQUFLRCxFQUFHLE1BQU0sU0FBUyxLQUFLRyxFQUFHLE1BQU0sV0FBVyxLQUFLRCxFQUFHLE1BQU0sYUFBYSxLQUFLSyxFQUFHLE1BQU0sV0FBVyxLQUFLQyxFQUFHLE1BQU0sZUFBZSxHQUFHLGlCQUFrQmhELEVBQUUsT0FBT0EsRUFBRThFLFVBQVUsS0FBS2pDLEVBQUcsT0FBTzdDLEVBQUU5TSxhQUFhLFdBQVcsWUFBWSxLQUFLMFAsRUFBRyxPQUFPNUMsRUFBRStFLFNBQVM3UixhQUFhLFdBQVcsWUFBWSxLQUFLNFAsRUFBRyxJQUFJN0MsRUFBRUQsRUFBRXhMLE9BQ25kLE9BRDBkeUwsRUFBRUEsRUFBRS9NLGFBQWErTSxFQUFFdk0sTUFBTSxHQUM1ZXNNLEVBQUU5TSxjQUFjLEtBQUsrTSxFQUFFLGNBQWNBLEVBQUUsSUFBSSxjQUFjLEtBQUtnRCxFQUFHLE9BQU80QixFQUFHN0UsRUFBRXhNLE1BQU0sS0FBSzJQLEVBQUcsT0FBTzBCLEVBQUc3RSxFQUFFNEUsU0FBUyxLQUFLMUIsRUFBR2pELEVBQUVELEVBQUVnRixTQUFTaEYsRUFBRUEsRUFBRWlGLE1BQU0sSUFBSSxPQUFPSixFQUFHN0UsRUFBRUMsSUFBSSxNQUFNaEUsS0FBSyxPQUFPLEtBQUssU0FBU2lKLEVBQUdsRixHQUFHLGNBQWNBLEdBQUcsSUFBSyxVQUFVLElBQUssU0FBUyxJQUFLLFNBQVMsSUFBSyxTQUFTLElBQUssWUFBWSxPQUFPQSxFQUFFLFFBQVEsTUFBTSxJQUFJLFNBQVNtRixFQUFHbkYsR0FBRyxJQUFJQyxFQUFFRCxFQUFFeE0sS0FBSyxPQUFPd00sRUFBRUEsRUFBRW9GLFdBQVcsVUFBVXBGLEVBQUUwQixnQkFBZ0IsYUFBYXpCLEdBQUcsVUFBVUEsR0FFMVosU0FBU29GLEVBQUdyRixHQUFHQSxFQUFFc0YsZ0JBQWdCdEYsRUFBRXNGLGNBRHZELFNBQVl0RixHQUFHLElBQUlDLEVBQUVrRixFQUFHbkYsR0FBRyxVQUFVLFFBQVEvRCxFQUFFdEgsT0FBT0cseUJBQXlCa0wsRUFBRXVGLFlBQVkzUixVQUFVcU0sR0FBR2MsRUFBRSxHQUFHZixFQUFFQyxHQUFHLElBQUlELEVBQUV4SSxlQUFleUksU0FBSSxJQUFxQmhFLEdBQUcsbUJBQW9CQSxFQUFFdUosS0FBSyxtQkFBb0J2SixFQUFFb0ksSUFBSSxDQUFDLElBQUl0TyxFQUFFa0csRUFBRXVKLElBQUl4RSxFQUFFL0UsRUFBRW9JLElBQWlMLE9BQTdLMVAsT0FBT0QsZUFBZXNMLEVBQUVDLEVBQUUsQ0FBQ3dGLGNBQWEsRUFBR0QsSUFBSSxXQUFXLE9BQU96UCxFQUFFbUQsS0FBSzlDLE9BQU9pTyxJQUFJLFNBQVNyRSxHQUFHZSxFQUFFLEdBQUdmLEVBQUVnQixFQUFFOUgsS0FBSzlDLEtBQUs0SixNQUFNckwsT0FBT0QsZUFBZXNMLEVBQUVDLEVBQUUsQ0FBQ3lGLFdBQVd6SixFQUFFeUosYUFBbUIsQ0FBQ0MsU0FBUyxXQUFXLE9BQU81RSxHQUFHNkUsU0FBUyxTQUFTNUYsR0FBR2UsRUFBRSxHQUFHZixHQUFHNkYsYUFBYSxXQUFXN0YsRUFBRXNGLGNBQ3hmLFlBQVl0RixFQUFFQyxNQUF1RDZGLENBQUc5RixJQUFJLFNBQVMrRixFQUFHL0YsR0FBRyxJQUFJQSxFQUFFLE9BQU0sRUFBRyxJQUFJQyxFQUFFRCxFQUFFc0YsY0FBYyxJQUFJckYsRUFBRSxPQUFNLEVBQUcsSUFBSWhFLEVBQUVnRSxFQUFFMEYsV0FBZTVFLEVBQUUsR0FBcUQsT0FBbERmLElBQUllLEVBQUVvRSxFQUFHbkYsR0FBR0EsRUFBRWdHLFFBQVEsT0FBTyxRQUFRaEcsRUFBRWxELFFBQU9rRCxFQUFFZSxLQUFhOUUsSUFBR2dFLEVBQUUyRixTQUFTNUYsSUFBRyxHQUFPLFNBQVNpRyxFQUFHakcsR0FBd0QsUUFBRyxLQUF4REEsRUFBRUEsSUFBSSxvQkFBcUJuSixTQUFTQSxjQUFTLElBQWtDLE9BQU8sS0FBSyxJQUFJLE9BQU9tSixFQUFFa0csZUFBZWxHLEVBQUVtRyxLQUFLLE1BQU1sRyxHQUFHLE9BQU9ELEVBQUVtRyxNQUMvWixTQUFTQyxFQUFHcEcsRUFBRUMsR0FBRyxJQUFJaEUsRUFBRWdFLEVBQUUrRixRQUFRLE9BQU83SyxFQUFFLEdBQUc4RSxFQUFFLENBQUNvRyxvQkFBZSxFQUFPQyxrQkFBYSxFQUFPeEosV0FBTSxFQUFPa0osUUFBUSxNQUFNL0osRUFBRUEsRUFBRStELEVBQUV1RyxjQUFjQyxpQkFBaUIsU0FBU0MsR0FBR3pHLEVBQUVDLEdBQUcsSUFBSWhFLEVBQUUsTUFBTWdFLEVBQUVxRyxhQUFhLEdBQUdyRyxFQUFFcUcsYUFBYXZGLEVBQUUsTUFBTWQsRUFBRStGLFFBQVEvRixFQUFFK0YsUUFBUS9GLEVBQUVvRyxlQUFlcEssRUFBRWlKLEVBQUcsTUFBTWpGLEVBQUVuRCxNQUFNbUQsRUFBRW5ELE1BQU1iLEdBQUcrRCxFQUFFdUcsY0FBYyxDQUFDQyxlQUFlekYsRUFBRTJGLGFBQWF6SyxFQUFFMEssV0FBVyxhQUFhMUcsRUFBRXpNLE1BQU0sVUFBVXlNLEVBQUV6TSxLQUFLLE1BQU15TSxFQUFFK0YsUUFBUSxNQUFNL0YsRUFBRW5ELE9BQU8sU0FBUzhKLEdBQUc1RyxFQUFFQyxHQUFlLE9BQVpBLEVBQUVBLEVBQUUrRixVQUFpQm5FLEVBQUc3QixFQUFFLFVBQVVDLEdBQUUsR0FDM2QsU0FBUzRHLEdBQUc3RyxFQUFFQyxHQUFHMkcsR0FBRzVHLEVBQUVDLEdBQUcsSUFBSWhFLEVBQUVpSixFQUFHakYsRUFBRW5ELE9BQU9pRSxFQUFFZCxFQUFFek0sS0FBSyxHQUFHLE1BQU15SSxFQUFLLFdBQVc4RSxHQUFNLElBQUk5RSxHQUFHLEtBQUsrRCxFQUFFbEQsT0FBT2tELEVBQUVsRCxPQUFPYixLQUFFK0QsRUFBRWxELE1BQU0sR0FBR2IsR0FBTytELEVBQUVsRCxRQUFRLEdBQUdiLElBQUkrRCxFQUFFbEQsTUFBTSxHQUFHYixRQUFRLEdBQUcsV0FBVzhFLEdBQUcsVUFBVUEsRUFBOEIsWUFBM0JmLEVBQUVrQyxnQkFBZ0IsU0FBZ0JqQyxFQUFFekksZUFBZSxTQUFTc1AsR0FBRzlHLEVBQUVDLEVBQUV6TSxLQUFLeUksR0FBR2dFLEVBQUV6SSxlQUFlLGlCQUFpQnNQLEdBQUc5RyxFQUFFQyxFQUFFek0sS0FBSzBSLEVBQUdqRixFQUFFcUcsZUFBZSxNQUFNckcsRUFBRStGLFNBQVMsTUFBTS9GLEVBQUVvRyxpQkFBaUJyRyxFQUFFcUcsaUJBQWlCcEcsRUFBRW9HLGdCQUNuWixTQUFTblEsR0FBRzhKLEVBQUVDLEVBQUVoRSxHQUFHLEdBQUdnRSxFQUFFekksZUFBZSxVQUFVeUksRUFBRXpJLGVBQWUsZ0JBQWdCLENBQUMsSUFBSXVKLEVBQUVkLEVBQUV6TSxLQUFLLEtBQUssV0FBV3VOLEdBQUcsVUFBVUEsUUFBRyxJQUFTZCxFQUFFbkQsT0FBTyxPQUFPbUQsRUFBRW5ELE9BQU8sT0FBT21ELEVBQUUsR0FBR0QsRUFBRXVHLGNBQWNHLGFBQWF6SyxHQUFHZ0UsSUFBSUQsRUFBRWxELFFBQVFrRCxFQUFFbEQsTUFBTW1ELEdBQUdELEVBQUVzRyxhQUFhckcsRUFBVyxNQUFUaEUsRUFBRStELEVBQUV0TSxRQUFjc00sRUFBRXRNLEtBQUssSUFBSXNNLEVBQUVxRyxpQkFBaUJyRyxFQUFFdUcsY0FBY0MsZUFBZSxLQUFLdkssSUFBSStELEVBQUV0TSxLQUFLdUksR0FDdlYsU0FBUzZLLEdBQUc5RyxFQUFFQyxFQUFFaEUsR0FBTSxXQUFXZ0UsR0FBR2dHLEVBQUdqRyxFQUFFK0csaUJBQWlCL0csSUFBRSxNQUFNL0QsRUFBRStELEVBQUVzRyxhQUFhLEdBQUd0RyxFQUFFdUcsY0FBY0csYUFBYTFHLEVBQUVzRyxlQUFlLEdBQUdySyxJQUFJK0QsRUFBRXNHLGFBQWEsR0FBR3JLLElBQXdGLFNBQVMrSyxHQUFHaEgsRUFBRUMsR0FBNkQsT0FBMURELEVBQUU3RSxFQUFFLENBQUM4TCxjQUFTLEdBQVFoSCxJQUFNQSxFQUFsSSxTQUFZRCxHQUFHLElBQUlDLEVBQUUsR0FBdUQsT0FBcERKLEVBQUdxSCxTQUFTMU8sUUFBUXdILEdBQUUsU0FBU0EsR0FBRyxNQUFNQSxJQUFJQyxHQUFHRCxNQUFZQyxFQUFpRGtILENBQUdsSCxFQUFFZ0gsYUFBVWpILEVBQUVpSCxTQUFTaEgsR0FBU0QsRUFDdlUsU0FBU29ILEdBQUdwSCxFQUFFQyxFQUFFaEUsRUFBRThFLEdBQWUsR0FBWmYsRUFBRUEsRUFBRTFHLFFBQVcyRyxFQUFFLENBQUNBLEVBQUUsR0FBRyxJQUFJLElBQUlsSyxFQUFFLEVBQUVBLEVBQUVrRyxFQUFFdEksT0FBT29DLElBQUlrSyxFQUFFLElBQUloRSxFQUFFbEcsS0FBSSxFQUFHLElBQUlrRyxFQUFFLEVBQUVBLEVBQUUrRCxFQUFFck0sT0FBT3NJLElBQUlsRyxFQUFFa0ssRUFBRXpJLGVBQWUsSUFBSXdJLEVBQUUvRCxHQUFHYSxPQUFPa0QsRUFBRS9ELEdBQUdvTCxXQUFXdFIsSUFBSWlLLEVBQUUvRCxHQUFHb0wsU0FBU3RSLEdBQUdBLEdBQUdnTCxJQUFJZixFQUFFL0QsR0FBR3FMLGlCQUFnQixPQUFRLENBQW1CLElBQWxCckwsRUFBRSxHQUFHaUosRUFBR2pKLEdBQUdnRSxFQUFFLEtBQVNsSyxFQUFFLEVBQUVBLEVBQUVpSyxFQUFFck0sT0FBT29DLElBQUksQ0FBQyxHQUFHaUssRUFBRWpLLEdBQUcrRyxRQUFRYixFQUFpRCxPQUE5QytELEVBQUVqSyxHQUFHc1IsVUFBUyxPQUFHdEcsSUFBSWYsRUFBRWpLLEdBQUd1UixpQkFBZ0IsSUFBVyxPQUFPckgsR0FBR0QsRUFBRWpLLEdBQUd3UixXQUFXdEgsRUFBRUQsRUFBRWpLLElBQUksT0FBT2tLLElBQUlBLEVBQUVvSCxVQUFTLElBQ3BZLFNBQVNHLEdBQUd4SCxFQUFFQyxHQUFHLEdBQUcsTUFBTUEsRUFBRXdILHdCQUF3QixNQUFNblIsTUFBTXlKLEVBQUUsS0FBSyxPQUFPNUUsRUFBRSxHQUFHOEUsRUFBRSxDQUFDbkQsV0FBTSxFQUFPd0osa0JBQWEsRUFBT1csU0FBUyxHQUFHakgsRUFBRXVHLGNBQWNHLGVBQWUsU0FBU2dCLEdBQUcxSCxFQUFFQyxHQUFHLElBQUloRSxFQUFFZ0UsRUFBRW5ELE1BQU0sR0FBRyxNQUFNYixFQUFFLENBQStCLEdBQTlCQSxFQUFFZ0UsRUFBRWdILFNBQVNoSCxFQUFFQSxFQUFFcUcsYUFBZ0IsTUFBTXJLLEVBQUUsQ0FBQyxHQUFHLE1BQU1nRSxFQUFFLE1BQU0zSixNQUFNeUosRUFBRSxLQUFLLEdBQUd6RCxNQUFNbUIsUUFBUXhCLEdBQUcsQ0FBQyxLQUFLLEdBQUdBLEVBQUV0SSxRQUFRLE1BQU0yQyxNQUFNeUosRUFBRSxLQUFLOUQsRUFBRUEsRUFBRSxHQUFHZ0UsRUFBRWhFLEVBQUUsTUFBTWdFLElBQUlBLEVBQUUsSUFBSWhFLEVBQUVnRSxFQUFFRCxFQUFFdUcsY0FBYyxDQUFDRyxhQUFheEIsRUFBR2pKLElBQy9ZLFNBQVMwTCxHQUFHM0gsRUFBRUMsR0FBRyxJQUFJaEUsRUFBRWlKLEVBQUdqRixFQUFFbkQsT0FBT2lFLEVBQUVtRSxFQUFHakYsRUFBRXFHLGNBQWMsTUFBTXJLLEtBQUlBLEVBQUUsR0FBR0EsS0FBTStELEVBQUVsRCxRQUFRa0QsRUFBRWxELE1BQU1iLEdBQUcsTUFBTWdFLEVBQUVxRyxjQUFjdEcsRUFBRXNHLGVBQWVySyxJQUFJK0QsRUFBRXNHLGFBQWFySyxJQUFJLE1BQU04RSxJQUFJZixFQUFFc0csYUFBYSxHQUFHdkYsR0FBRyxTQUFTNkcsR0FBRzVILEdBQUcsSUFBSUMsRUFBRUQsRUFBRTZILFlBQVk1SCxJQUFJRCxFQUFFdUcsY0FBY0csY0FBYyxLQUFLekcsR0FBRyxPQUFPQSxJQUFJRCxFQUFFbEQsTUFBTW1ELEdBQUcsSUFBSTZILEdBQVMsK0JBQy9TLFNBQVNDLEdBQUcvSCxHQUFHLE9BQU9BLEdBQUcsSUFBSyxNQUFNLE1BQU0sNkJBQTZCLElBQUssT0FBTyxNQUFNLHFDQUFxQyxRQUFRLE1BQU0sZ0NBQWdDLFNBQVNnSSxHQUFHaEksRUFBRUMsR0FBRyxPQUFPLE1BQU1ELEdBQUcsaUNBQWlDQSxFQUFFK0gsR0FBRzlILEdBQUcsK0JBQStCRCxHQUFHLGtCQUFrQkMsRUFBRSwrQkFBK0JELEVBQzNVLElBQUlpSSxHQUFlakksR0FBWmtJLElBQVlsSSxHQUFzSixTQUFTQSxFQUFFQyxHQUFHLEdBRnVNLCtCQUVwTUQsRUFBRW1JLGNBQXVCLGNBQWNuSSxFQUFFQSxFQUFFb0ksVUFBVW5JLE1BQU0sQ0FBMkYsS0FBMUZnSSxHQUFHQSxJQUFJcFIsU0FBU0UsY0FBYyxRQUFVcVIsVUFBVSxRQUFRbkksRUFBRW9JLFVBQVVsTSxXQUFXLFNBQWE4RCxFQUFFZ0ksR0FBR0ssV0FBV3RJLEVBQUVzSSxZQUFZdEksRUFBRXVJLFlBQVl2SSxFQUFFc0ksWUFBWSxLQUFLckksRUFBRXFJLFlBQVl0SSxFQUFFekksWUFBWTBJLEVBQUVxSSxjQUFyWixvQkFBcUJFLE9BQU9BLE1BQU1DLHdCQUF3QixTQUFTeEksRUFBRWhFLEVBQUU4RSxFQUFFaEwsR0FBR3lTLE1BQU1DLHlCQUF3QixXQUFXLE9BQU96SSxHQUFFQyxFQUFFaEUsT0FBVStELElBQ3RLLFNBQVMwSSxHQUFHMUksRUFBRUMsR0FBRyxHQUFHQSxFQUFFLENBQUMsSUFBSWhFLEVBQUUrRCxFQUFFc0ksV0FBVyxHQUFHck0sR0FBR0EsSUFBSStELEVBQUUySSxXQUFXLElBQUkxTSxFQUFFMk0sU0FBd0IsWUFBZDNNLEVBQUU0TSxVQUFVNUksR0FBVUQsRUFBRTZILFlBQVk1SCxFQUNySCxJQUFJNkksR0FBRyxDQUFDQyx5QkFBd0IsRUFBR0MsbUJBQWtCLEVBQUdDLGtCQUFpQixFQUFHQyxrQkFBaUIsRUFBR0MsU0FBUSxFQUFHQyxjQUFhLEVBQUdDLGlCQUFnQixFQUFHQyxhQUFZLEVBQUdDLFNBQVEsRUFBR0MsTUFBSyxFQUFHQyxVQUFTLEVBQUdDLGNBQWEsRUFBR0MsWUFBVyxFQUFHQyxjQUFhLEVBQUdDLFdBQVUsRUFBR0MsVUFBUyxFQUFHQyxTQUFRLEVBQUdDLFlBQVcsRUFBR0MsYUFBWSxFQUFHQyxjQUFhLEVBQUdDLFlBQVcsRUFBR0MsZUFBYyxFQUFHQyxnQkFBZSxFQUFHQyxpQkFBZ0IsRUFBR0MsWUFBVyxFQUFHQyxXQUFVLEVBQUdDLFlBQVcsRUFBR0MsU0FBUSxFQUFHQyxPQUFNLEVBQUdDLFNBQVEsRUFBR0MsU0FBUSxFQUFHQyxRQUFPLEVBQUdDLFFBQU8sRUFBR0MsTUFBSyxFQUFHQyxhQUFZLEVBQzFmQyxjQUFhLEVBQUdDLGFBQVksRUFBR0MsaUJBQWdCLEVBQUdDLGtCQUFpQixFQUFHQyxrQkFBaUIsRUFBR0MsZUFBYyxFQUFHQyxhQUFZLEdBQUlDLEdBQUcsQ0FBQyxTQUFTLEtBQUssTUFBTSxLQUE2SCxTQUFTQyxHQUFHMUwsRUFBRUMsRUFBRWhFLEdBQUcsT0FBTyxNQUFNZ0UsR0FBRyxrQkFBbUJBLEdBQUcsS0FBS0EsRUFBRSxHQUFHaEUsR0FBRyxpQkFBa0JnRSxHQUFHLElBQUlBLEdBQUc2SSxHQUFHdFIsZUFBZXdJLElBQUk4SSxHQUFHOUksSUFBSSxHQUFHQyxHQUFHZ0UsT0FBT2hFLEVBQUUsS0FDOVosU0FBUzBMLEdBQUczTCxFQUFFQyxHQUFhLElBQUksSUFBSWhFLEtBQWxCK0QsRUFBRUEsRUFBRTRMLE1BQW1CM0wsRUFBRSxHQUFHQSxFQUFFekksZUFBZXlFLEdBQUcsQ0FBQyxJQUFJOEUsRUFBRSxJQUFJOUUsRUFBRTRQLFFBQVEsTUFBTTlWLEVBQUUyVixHQUFHelAsRUFBRWdFLEVBQUVoRSxHQUFHOEUsR0FBRyxVQUFVOUUsSUFBSUEsRUFBRSxZQUFZOEUsRUFBRWYsRUFBRThMLFlBQVk3UCxFQUFFbEcsR0FBR2lLLEVBQUUvRCxHQUFHbEcsR0FEVHBCLE9BQU9hLEtBQUtzVCxJQUFJdFEsU0FBUSxTQUFTd0gsR0FBR3lMLEdBQUdqVCxTQUFRLFNBQVN5SCxHQUFHQSxFQUFFQSxFQUFFRCxFQUFFK0wsT0FBTyxHQUFHM1AsY0FBYzRELEVBQUVnTSxVQUFVLEdBQUdsRCxHQUFHN0ksR0FBRzZJLEdBQUc5SSxTQUNyRyxJQUFJaU0sR0FBRzlRLEVBQUUsQ0FBQytRLFVBQVMsR0FBSSxDQUFDQyxNQUFLLEVBQUdDLE1BQUssRUFBR0MsSUFBRyxFQUFHQyxLQUFJLEVBQUdDLE9BQU0sRUFBR0MsSUFBRyxFQUFHQyxLQUFJLEVBQUdDLE9BQU0sRUFBR0MsUUFBTyxFQUFHQyxNQUFLLEVBQUdDLE1BQUssRUFBR0MsT0FBTSxFQUFHalUsUUFBTyxFQUFHa1UsT0FBTSxFQUFHQyxLQUFJLElBQ2xULFNBQVNDLEdBQUdqTixFQUFFQyxHQUFHLEdBQUdBLEVBQUUsQ0FBQyxHQUFHZ00sR0FBR2pNLEtBQUssTUFBTUMsRUFBRWdILFVBQVUsTUFBTWhILEVBQUV3SCx5QkFBeUIsTUFBTW5SLE1BQU15SixFQUFFLElBQUlDLElBQUksR0FBRyxNQUFNQyxFQUFFd0gsd0JBQXdCLENBQUMsR0FBRyxNQUFNeEgsRUFBRWdILFNBQVMsTUFBTTNRLE1BQU15SixFQUFFLEtBQUssR0FBSyxpQkFBa0JFLEVBQUV3SCwyQkFBeUIsV0FBV3hILEVBQUV3SCx5QkFBeUIsTUFBTW5SLE1BQU15SixFQUFFLEtBQU0sR0FBRyxNQUFNRSxFQUFFMkwsT0FBTyxpQkFBa0IzTCxFQUFFMkwsTUFBTSxNQUFNdFYsTUFBTXlKLEVBQUUsTUFDNVYsU0FBU21OLEdBQUdsTixFQUFFQyxHQUFHLElBQUksSUFBSUQsRUFBRTZMLFFBQVEsS0FBSyxNQUFNLGlCQUFrQjVMLEVBQUVrTixHQUFHLE9BQU9uTixHQUFHLElBQUssaUJBQWlCLElBQUssZ0JBQWdCLElBQUssWUFBWSxJQUFLLGdCQUFnQixJQUFLLGdCQUFnQixJQUFLLG1CQUFtQixJQUFLLGlCQUFpQixJQUFLLGdCQUFnQixPQUFNLEVBQUcsUUFBUSxPQUFNLEdBQUksU0FBU29OLEdBQUdwTixHQUE2RixPQUExRkEsRUFBRUEsRUFBRXBILFFBQVFvSCxFQUFFcU4sWUFBWTVNLFFBQVM2TSwwQkFBMEJ0TixFQUFFQSxFQUFFc04seUJBQWdDLElBQUl0TixFQUFFNEksU0FBUzVJLEVBQUV1TixXQUFXdk4sRUFBRSxJQUFJd04sR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FDeGIsU0FBU0MsR0FBRzNOLEdBQUcsR0FBR0EsRUFBRTROLEdBQUc1TixHQUFHLENBQUMsR0FBRyxtQkFBb0J3TixHQUFHLE1BQU1sWCxNQUFNeUosRUFBRSxNQUFNLElBQUlFLEVBQUVELEVBQUU2TixVQUFVNU4sSUFBSUEsRUFBRTZOLEdBQUc3TixHQUFHdU4sR0FBR3hOLEVBQUU2TixVQUFVN04sRUFBRXhNLEtBQUt5TSxLQUFLLFNBQVM4TixHQUFHL04sR0FBR3lOLEdBQUdDLEdBQUdBLEdBQUdoVSxLQUFLc0csR0FBRzBOLEdBQUcsQ0FBQzFOLEdBQUd5TixHQUFHek4sRUFBRSxTQUFTZ08sS0FBSyxHQUFHUCxHQUFHLENBQUMsSUFBSXpOLEVBQUV5TixHQUFHeE4sRUFBRXlOLEdBQW9CLEdBQWpCQSxHQUFHRCxHQUFHLEtBQUtFLEdBQUczTixHQUFNQyxFQUFFLElBQUlELEVBQUUsRUFBRUEsRUFBRUMsRUFBRXRNLE9BQU9xTSxJQUFJMk4sR0FBRzFOLEVBQUVELEtBQUssU0FBU2lPLEdBQUdqTyxFQUFFQyxHQUFHLE9BQU9ELEVBQUVDLEdBQUcsU0FBU2lPLEdBQUdsTyxFQUFFQyxFQUFFaEUsRUFBRThFLEVBQUVoTCxHQUFHLE9BQU9pSyxFQUFFQyxFQUFFaEUsRUFBRThFLEVBQUVoTCxHQUFHLFNBQVNvWSxNQUFNLElBQUlDLEdBQUdILEdBQUdJLElBQUcsRUFBR0MsSUFBRyxFQUFHLFNBQVNDLEtBQVEsT0FBT2QsSUFBSSxPQUFPQyxLQUFHUyxLQUFLSCxNQUU5WixTQUFTUSxHQUFHeE8sRUFBRUMsR0FBRyxJQUFJaEUsRUFBRStELEVBQUU2TixVQUFVLEdBQUcsT0FBTzVSLEVBQUUsT0FBTyxLQUFLLElBQUk4RSxFQUFFK00sR0FBRzdSLEdBQUcsR0FBRyxPQUFPOEUsRUFBRSxPQUFPLEtBQUs5RSxFQUFFOEUsRUFBRWQsR0FBR0QsRUFBRSxPQUFPQyxHQUFHLElBQUssVUFBVSxJQUFLLGlCQUFpQixJQUFLLGdCQUFnQixJQUFLLHVCQUF1QixJQUFLLGNBQWMsSUFBSyxxQkFBcUIsSUFBSyxjQUFjLElBQUsscUJBQXFCLElBQUssWUFBWSxJQUFLLG1CQUFtQixJQUFLLGdCQUFnQmMsR0FBR0EsRUFBRXdHLFlBQXFCeEcsSUFBSSxZQUFiZixFQUFFQSxFQUFFeE0sT0FBdUIsVUFBVXdNLEdBQUcsV0FBV0EsR0FBRyxhQUFhQSxJQUFJQSxHQUFHZSxFQUFFLE1BQU1mLEVBQUUsUUFBUUEsR0FBRSxFQUFHLEdBQUdBLEVBQUUsT0FBTyxLQUFLLEdBQUcvRCxHQUFHLG1CQUNsZUEsRUFBRSxNQUFNM0YsTUFBTXlKLEVBQUUsSUFBSUUsU0FBU2hFLElBQUksT0FBT0EsRUFBRSxJQUFJd1MsSUFBRyxFQUFHLEdBQUdqTyxFQUFHLElBQUksSUFBSWtPLEdBQUcsR0FBRy9aLE9BQU9ELGVBQWVnYSxHQUFHLFVBQVUsQ0FBQ2xKLElBQUksV0FBV2lKLElBQUcsS0FBTWhPLE9BQU9rTyxpQkFBaUIsT0FBT0QsR0FBR0EsSUFBSWpPLE9BQU9tTyxvQkFBb0IsT0FBT0YsR0FBR0EsSUFBSSxNQUFNMU8sSUFBR3lPLElBQUcsRUFBRyxTQUFTSSxHQUFHN08sRUFBRUMsRUFBRWhFLEVBQUU4RSxFQUFFaEwsRUFBRWlMLEVBQUVDLEVBQUV3RCxFQUFFRCxHQUFHLElBQUlzSyxFQUFFeFMsTUFBTTFJLFVBQVUwSCxNQUFNcEMsS0FBS25GLFVBQVUsR0FBRyxJQUFJa00sRUFBRThPLE1BQU05UyxFQUFFNlMsR0FBRyxNQUFNMVcsR0FBR2hDLEtBQUs0WSxRQUFRNVcsSUFBSSxJQUFJNlcsSUFBRyxFQUFHQyxHQUFHLEtBQUtDLElBQUcsRUFBR0MsR0FBRyxLQUFLQyxHQUFHLENBQUNMLFFBQVEsU0FBU2hQLEdBQUdpUCxJQUFHLEVBQUdDLEdBQUdsUCxJQUFJLFNBQVNzUCxHQUFHdFAsRUFBRUMsRUFBRWhFLEVBQUU4RSxFQUFFaEwsRUFBRWlMLEVBQUVDLEVBQUV3RCxFQUFFRCxHQUFHeUssSUFBRyxFQUFHQyxHQUFHLEtBQUtMLEdBQUdFLE1BQU1NLEdBQUd0YixXQUN2VixTQUFTd2IsR0FBR3ZQLEdBQUcsSUFBSUMsRUFBRUQsRUFBRS9ELEVBQUUrRCxFQUFFLEdBQUdBLEVBQUV3UCxVQUFVLEtBQUt2UCxFQUFFd1AsUUFBUXhQLEVBQUVBLEVBQUV3UCxXQUFXLENBQUN6UCxFQUFFQyxFQUFFLEdBQU8sSUFBYSxNQUFqQkEsRUFBRUQsR0FBUzNGLFNBQWM0QixFQUFFZ0UsRUFBRXdQLFFBQVF6UCxFQUFFQyxFQUFFd1AsYUFBYXpQLEdBQUcsT0FBTyxJQUFJQyxFQUFFMEUsSUFBSTFJLEVBQUUsS0FBSyxTQUFTeVQsR0FBRzFQLEdBQUcsR0FBRyxLQUFLQSxFQUFFMkUsSUFBSSxDQUFDLElBQUkxRSxFQUFFRCxFQUFFMlAsY0FBc0UsR0FBeEQsT0FBTzFQLEdBQWtCLFFBQWRELEVBQUVBLEVBQUV3UCxhQUFxQnZQLEVBQUVELEVBQUUyUCxlQUFtQixPQUFPMVAsRUFBRSxPQUFPQSxFQUFFMlAsV0FBVyxPQUFPLEtBQUssU0FBU0MsR0FBRzdQLEdBQUcsR0FBR3VQLEdBQUd2UCxLQUFLQSxFQUFFLE1BQU0xSixNQUFNeUosRUFBRSxNQUVwUyxTQUFTK1AsR0FBRzlQLEdBQVcsS0FBUkEsRUFEdE4sU0FBWUEsR0FBRyxJQUFJQyxFQUFFRCxFQUFFd1AsVUFBVSxJQUFJdlAsRUFBRSxDQUFTLEdBQUcsUUFBWEEsRUFBRXNQLEdBQUd2UCxJQUFlLE1BQU0xSixNQUFNeUosRUFBRSxNQUFNLE9BQU9FLElBQUlELEVBQUUsS0FBS0EsRUFBRSxJQUFJLElBQUkvRCxFQUFFK0QsRUFBRWUsRUFBRWQsSUFBSSxDQUFDLElBQUlsSyxFQUFFa0csRUFBRXdULE9BQU8sR0FBRyxPQUFPMVosRUFBRSxNQUFNLElBQUlpTCxFQUFFakwsRUFBRXlaLFVBQVUsR0FBRyxPQUFPeE8sRUFBRSxDQUFZLEdBQUcsUUFBZEQsRUFBRWhMLEVBQUUwWixRQUFtQixDQUFDeFQsRUFBRThFLEVBQUUsU0FBUyxNQUFNLEdBQUdoTCxFQUFFZ2EsUUFBUS9PLEVBQUUrTyxNQUFNLENBQUMsSUFBSS9PLEVBQUVqTCxFQUFFZ2EsTUFBTS9PLEdBQUcsQ0FBQyxHQUFHQSxJQUFJL0UsRUFBRSxPQUFPNFQsR0FBRzlaLEdBQUdpSyxFQUFFLEdBQUdnQixJQUFJRCxFQUFFLE9BQU84TyxHQUFHOVosR0FBR2tLLEVBQUVlLEVBQUVBLEVBQUVnUCxRQUFRLE1BQU0xWixNQUFNeUosRUFBRSxNQUFPLEdBQUc5RCxFQUFFd1QsU0FBUzFPLEVBQUUwTyxPQUFPeFQsRUFBRWxHLEVBQUVnTCxFQUFFQyxNQUFNLENBQUMsSUFBSSxJQUFJQyxHQUFFLEVBQUd3RCxFQUFFMU8sRUFBRWdhLE1BQU10TCxHQUFHLENBQUMsR0FBR0EsSUFBSXhJLEVBQUUsQ0FBQ2dGLEdBQUUsRUFBR2hGLEVBQUVsRyxFQUFFZ0wsRUFBRUMsRUFBRSxNQUFNLEdBQUd5RCxJQUFJMUQsRUFBRSxDQUFDRSxHQUFFLEVBQUdGLEVBQUVoTCxFQUFFa0csRUFBRStFLEVBQUUsTUFBTXlELEVBQUVBLEVBQUV1TCxRQUFRLElBQUkvTyxFQUFFLENBQUMsSUFBSXdELEVBQUV6RCxFQUFFK08sTUFBTXRMLEdBQUcsQ0FBQyxHQUFHQSxJQUM1ZnhJLEVBQUUsQ0FBQ2dGLEdBQUUsRUFBR2hGLEVBQUUrRSxFQUFFRCxFQUFFaEwsRUFBRSxNQUFNLEdBQUcwTyxJQUFJMUQsRUFBRSxDQUFDRSxHQUFFLEVBQUdGLEVBQUVDLEVBQUUvRSxFQUFFbEcsRUFBRSxNQUFNME8sRUFBRUEsRUFBRXVMLFFBQVEsSUFBSS9PLEVBQUUsTUFBTTNLLE1BQU15SixFQUFFLE9BQVEsR0FBRzlELEVBQUV1VCxZQUFZek8sRUFBRSxNQUFNekssTUFBTXlKLEVBQUUsTUFBTyxHQUFHLElBQUk5RCxFQUFFMEksSUFBSSxNQUFNck8sTUFBTXlKLEVBQUUsTUFBTSxPQUFPOUQsRUFBRTRSLFVBQVVvQyxVQUFVaFUsRUFBRStELEVBQUVDLEVBQW1CaVEsQ0FBR2xRLElBQVMsT0FBTyxLQUFLLElBQUksSUFBSUMsRUFBRUQsSUFBSSxDQUFDLEdBQUcsSUFBSUMsRUFBRTBFLEtBQUssSUFBSTFFLEVBQUUwRSxJQUFJLE9BQU8xRSxFQUFFLEdBQUdBLEVBQUU4UCxNQUFNOVAsRUFBRThQLE1BQU1OLE9BQU94UCxFQUFFQSxFQUFFQSxFQUFFOFAsVUFBVSxDQUFDLEdBQUc5UCxJQUFJRCxFQUFFLE1BQU0sTUFBTUMsRUFBRStQLFNBQVMsQ0FBQyxJQUFJL1AsRUFBRXdQLFFBQVF4UCxFQUFFd1AsU0FBU3pQLEVBQUUsT0FBTyxLQUFLQyxFQUFFQSxFQUFFd1AsT0FBT3hQLEVBQUUrUCxRQUFRUCxPQUFPeFAsRUFBRXdQLE9BQU94UCxFQUFFQSxFQUFFK1AsU0FBUyxPQUFPLEtBQzVjLFNBQVNHLEdBQUduUSxFQUFFQyxHQUFHLElBQUksSUFBSWhFLEVBQUUrRCxFQUFFd1AsVUFBVSxPQUFPdlAsR0FBRyxDQUFDLEdBQUdBLElBQUlELEdBQUdDLElBQUloRSxFQUFFLE9BQU0sRUFBR2dFLEVBQUVBLEVBQUV3UCxPQUFPLE9BQU0sRUFBRyxJQUFJVyxHQUFHQyxHQUFHQyxHQUFHQyxHQUFHQyxJQUFHLEVBQUdDLEdBQUcsR0FBR0MsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBRyxJQUFJQyxJQUFJQyxHQUFHLElBQUlELElBQUlFLEdBQUcsR0FBR0MsR0FBRyw2UEFBNlAxWSxNQUFNLEtBQ3JiLFNBQVMyWSxHQUFHbFIsRUFBRUMsRUFBRWhFLEVBQUU4RSxFQUFFaEwsR0FBRyxNQUFNLENBQUNvYixVQUFVblIsRUFBRW9SLGFBQWFuUixFQUFFb1IsaUJBQW1CLEdBQUZwVixFQUFLcVYsWUFBWXZiLEVBQUV3YixpQkFBaUIsQ0FBQ3hRLElBQUksU0FBU3lRLEdBQUd4UixFQUFFQyxHQUFHLE9BQU9ELEdBQUcsSUFBSyxVQUFVLElBQUssV0FBVzBRLEdBQUcsS0FBSyxNQUFNLElBQUssWUFBWSxJQUFLLFlBQVlDLEdBQUcsS0FBSyxNQUFNLElBQUssWUFBWSxJQUFLLFdBQVdDLEdBQUcsS0FBSyxNQUFNLElBQUssY0FBYyxJQUFLLGFBQWFDLEdBQUdZLE9BQU94UixFQUFFeVIsV0FBVyxNQUFNLElBQUssb0JBQW9CLElBQUsscUJBQXFCWCxHQUFHVSxPQUFPeFIsRUFBRXlSLFlBQzNaLFNBQVNDLEdBQUczUixFQUFFQyxFQUFFaEUsRUFBRThFLEVBQUVoTCxFQUFFaUwsR0FBRyxPQUFHLE9BQU9oQixHQUFHQSxFQUFFc1IsY0FBY3RRLEdBQVNoQixFQUFFa1IsR0FBR2pSLEVBQUVoRSxFQUFFOEUsRUFBRWhMLEVBQUVpTCxHQUFHLE9BQU9mLEdBQVksUUFBUkEsRUFBRTJOLEdBQUczTixLQUFhb1EsR0FBR3BRLEdBQUlELElBQUVBLEVBQUVxUixrQkFBa0J0USxFQUFFZCxFQUFFRCxFQUFFdVIsaUJBQWlCLE9BQU94YixJQUFJLElBQUlrSyxFQUFFNEwsUUFBUTlWLElBQUlrSyxFQUFFdkcsS0FBSzNELEdBQVVpSyxHQUU5TSxTQUFTNFIsR0FBRzVSLEdBQUcsSUFBSUMsRUFBRTRSLEdBQUc3UixFQUFFcEgsUUFBUSxHQUFHLE9BQU9xSCxFQUFFLENBQUMsSUFBSWhFLEVBQUVzVCxHQUFHdFAsR0FBRyxHQUFHLE9BQU9oRSxFQUFFLEdBQVcsTUFBUmdFLEVBQUVoRSxFQUFFMEksTUFBWSxHQUFXLFFBQVIxRSxFQUFFeVAsR0FBR3pULElBQW1ILE9BQXRHK0QsRUFBRW1SLFVBQVVsUixPQUFFc1EsR0FBR3ZRLEVBQUU4UixjQUFhLFdBQVdoUyxFQUFFaVMseUJBQXlCL1IsRUFBRWdTLFVBQVMsV0FBVzFCLEdBQUdyVSxjQUFvQixHQUFHLElBQUlnRSxHQUFHaEUsRUFBRTRSLFVBQVVvRSxRQUE4RCxZQUFyRGpTLEVBQUVtUixVQUFVLElBQUlsVixFQUFFMEksSUFBSTFJLEVBQUU0UixVQUFVcUUsY0FBYyxNQUFhbFMsRUFBRW1SLFVBQVUsS0FDMVUsU0FBU2dCLEdBQUduUyxHQUFHLEdBQUcsT0FBT0EsRUFBRW1SLFVBQVUsT0FBTSxFQUFHLElBQUksSUFBSWxSLEVBQUVELEVBQUV1UixpQkFBaUIsRUFBRXRSLEVBQUV0TSxRQUFRLENBQUMsSUFBSXNJLEVBQUVtVyxHQUFHcFMsRUFBRW9SLGFBQWFwUixFQUFFcVIsaUJBQWlCcFIsRUFBRSxHQUFHRCxFQUFFc1IsYUFBYSxHQUFHLE9BQU9yVixFQUFFLE9BQWUsUUFBUmdFLEVBQUUyTixHQUFHM1IsS0FBYW9VLEdBQUdwUSxHQUFHRCxFQUFFbVIsVUFBVWxWLEdBQUUsRUFBR2dFLEVBQUVvUyxRQUFRLE9BQU0sRUFBRyxTQUFTQyxHQUFHdFMsRUFBRUMsRUFBRWhFLEdBQUdrVyxHQUFHblMsSUFBSS9ELEVBQUV3VixPQUFPeFIsR0FDelEsU0FBU3NTLEtBQUssSUFBSS9CLElBQUcsRUFBRyxFQUFFQyxHQUFHOWMsUUFBUSxDQUFDLElBQUlxTSxFQUFFeVEsR0FBRyxHQUFHLEdBQUcsT0FBT3pRLEVBQUVtUixVQUFVLENBQW1CLFFBQWxCblIsRUFBRTROLEdBQUc1TixFQUFFbVIsYUFBcUJmLEdBQUdwUSxHQUFHLE1BQU0sSUFBSSxJQUFJQyxFQUFFRCxFQUFFdVIsaUJBQWlCLEVBQUV0UixFQUFFdE0sUUFBUSxDQUFDLElBQUlzSSxFQUFFbVcsR0FBR3BTLEVBQUVvUixhQUFhcFIsRUFBRXFSLGlCQUFpQnBSLEVBQUUsR0FBR0QsRUFBRXNSLGFBQWEsR0FBRyxPQUFPclYsRUFBRSxDQUFDK0QsRUFBRW1SLFVBQVVsVixFQUFFLE1BQU1nRSxFQUFFb1MsUUFBUSxPQUFPclMsRUFBRW1SLFdBQVdWLEdBQUc0QixRQUFRLE9BQU8zQixJQUFJeUIsR0FBR3pCLE1BQU1BLEdBQUcsTUFBTSxPQUFPQyxJQUFJd0IsR0FBR3hCLE1BQU1BLEdBQUcsTUFBTSxPQUFPQyxJQUFJdUIsR0FBR3ZCLE1BQU1BLEdBQUcsTUFBTUMsR0FBR3JZLFFBQVE4WixJQUFJdkIsR0FBR3ZZLFFBQVE4WixJQUNyWixTQUFTRSxHQUFHeFMsRUFBRUMsR0FBR0QsRUFBRW1SLFlBQVlsUixJQUFJRCxFQUFFbVIsVUFBVSxLQUFLWCxLQUFLQSxJQUFHLEVBQUcxUSxFQUFFMlMsMEJBQTBCM1MsRUFBRTRTLHdCQUF3QkgsTUFDckgsU0FBU0ksR0FBRzNTLEdBQUcsU0FBU0MsRUFBRUEsR0FBRyxPQUFPdVMsR0FBR3ZTLEVBQUVELEdBQUcsR0FBRyxFQUFFeVEsR0FBRzljLE9BQU8sQ0FBQzZlLEdBQUcvQixHQUFHLEdBQUd6USxHQUFHLElBQUksSUFBSS9ELEVBQUUsRUFBRUEsRUFBRXdVLEdBQUc5YyxPQUFPc0ksSUFBSSxDQUFDLElBQUk4RSxFQUFFMFAsR0FBR3hVLEdBQUc4RSxFQUFFb1EsWUFBWW5SLElBQUllLEVBQUVvUSxVQUFVLE9BQStGLElBQXhGLE9BQU9ULElBQUk4QixHQUFHOUIsR0FBRzFRLEdBQUcsT0FBTzJRLElBQUk2QixHQUFHN0IsR0FBRzNRLEdBQUcsT0FBTzRRLElBQUk0QixHQUFHNUIsR0FBRzVRLEdBQUc2USxHQUFHclksUUFBUXlILEdBQUc4USxHQUFHdlksUUFBUXlILEdBQU9oRSxFQUFFLEVBQUVBLEVBQUUrVSxHQUFHcmQsT0FBT3NJLEtBQUk4RSxFQUFFaVEsR0FBRy9VLElBQUtrVixZQUFZblIsSUFBSWUsRUFBRW9RLFVBQVUsTUFBTSxLQUFLLEVBQUVILEdBQUdyZCxRQUFpQixRQUFSc0ksRUFBRStVLEdBQUcsSUFBWUcsV0FBWVMsR0FBRzNWLEdBQUcsT0FBT0EsRUFBRWtWLFdBQVdILEdBQUdxQixRQUMvWCxTQUFTTyxHQUFHNVMsRUFBRUMsR0FBRyxJQUFJaEUsRUFBRSxHQUFrRixPQUEvRUEsRUFBRStELEVBQUUwQixlQUFlekIsRUFBRXlCLGNBQWN6RixFQUFFLFNBQVMrRCxHQUFHLFNBQVNDLEVBQUVoRSxFQUFFLE1BQU0rRCxHQUFHLE1BQU1DLEVBQVNoRSxFQUFFLElBQUk0VyxHQUFHLENBQUNDLGFBQWFGLEdBQUcsWUFBWSxnQkFBZ0JHLG1CQUFtQkgsR0FBRyxZQUFZLHNCQUFzQkksZUFBZUosR0FBRyxZQUFZLGtCQUFrQkssY0FBY0wsR0FBRyxhQUFhLGtCQUFrQk0sR0FBRyxHQUFHQyxHQUFHLEdBQ25GLFNBQVNDLEdBQUdwVCxHQUFHLEdBQUdrVCxHQUFHbFQsR0FBRyxPQUFPa1QsR0FBR2xULEdBQUcsSUFBSTZTLEdBQUc3UyxHQUFHLE9BQU9BLEVBQUUsSUFBWS9ELEVBQVJnRSxFQUFFNFMsR0FBRzdTLEdBQUssSUFBSS9ELEtBQUtnRSxFQUFFLEdBQUdBLEVBQUV6SSxlQUFleUUsSUFBSUEsS0FBS2tYLEdBQUcsT0FBT0QsR0FBR2xULEdBQUdDLEVBQUVoRSxHQUFHLE9BQU8rRCxFQUE5WFEsSUFBSzJTLEdBQUd0YyxTQUFTRSxjQUFjLE9BQU82VSxNQUFNLG1CQUFtQm5MLGdCQUFnQm9TLEdBQUdDLGFBQWFPLGlCQUFpQlIsR0FBR0UsbUJBQW1CTSxpQkFBaUJSLEdBQUdHLGVBQWVLLFdBQVcsb0JBQW9CNVMsZUFBZW9TLEdBQUdJLGNBQWNLLFlBQ3hPLElBQUlDLEdBQUdILEdBQUcsZ0JBQWdCSSxHQUFHSixHQUFHLHNCQUFzQkssR0FBR0wsR0FBRyxrQkFBa0JNLEdBQUdOLEdBQUcsaUJBQWlCTyxHQUFHLElBQUk3QyxJQUFJOEMsR0FBRyxJQUFJOUMsSUFBSStDLEdBQUcsQ0FBQyxRQUFRLFFBQVFOLEdBQUcsZUFBZUMsR0FBRyxxQkFBcUJDLEdBQUcsaUJBQWlCLFVBQVUsVUFBVSxpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsVUFBVSxVQUFVLFlBQVksWUFBWSxRQUFRLFFBQVEsUUFBUSxRQUFRLG9CQUFvQixvQkFBb0IsT0FBTyxPQUFPLGFBQWEsYUFBYSxpQkFBaUIsaUJBQWlCLFlBQVksWUFDL2UscUJBQXFCLHFCQUFxQixVQUFVLFVBQVUsV0FBVyxXQUFXLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLGFBQWEsYUFBYUMsR0FBRyxnQkFBZ0IsVUFBVSxXQUFXLFNBQVNJLEdBQUc5VCxFQUFFQyxHQUFHLElBQUksSUFBSWhFLEVBQUUsRUFBRUEsRUFBRStELEVBQUVyTSxPQUFPc0ksR0FBRyxFQUFFLENBQUMsSUFBSThFLEVBQUVmLEVBQUUvRCxHQUFHbEcsRUFBRWlLLEVBQUUvRCxFQUFFLEdBQUdsRyxFQUFFLE1BQU1BLEVBQUUsR0FBR3FHLGNBQWNyRyxFQUFFdUYsTUFBTSxJQUFJc1ksR0FBR3ZQLElBQUl0RCxFQUFFZCxHQUFHMFQsR0FBR3RQLElBQUl0RCxFQUFFaEwsR0FBR3NLLEVBQUd0SyxFQUFFLENBQUNnTCxNQUEyQmdULEVBQWZqVSxFQUFFa1UsZ0JBQWtCLElBQUlDLEdBQUUsRUFDL1gsU0FBU0MsR0FBR2xVLEdBQUcsR0FBRyxJQUFLLEVBQUVBLEdBQUcsT0FBT2lVLEdBQUUsR0FBRyxFQUFFLEdBQUcsSUFBSyxFQUFFalUsR0FBRyxPQUFPaVUsR0FBRSxHQUFHLEVBQUUsR0FBRyxJQUFLLEVBQUVqVSxHQUFHLE9BQU9pVSxHQUFFLEdBQUcsRUFBRSxJQUFJaFUsRUFBRSxHQUFHRCxFQUFFLE9BQUcsSUFBSUMsR0FBU2dVLEdBQUUsR0FBR2hVLEdBQUssSUFBTyxHQUFGRCxJQUFhaVUsR0FBRSxHQUFHLElBQWMsSUFBWGhVLEVBQUUsSUFBSUQsSUFBa0JpVSxHQUFFLEdBQUdoVSxHQUFLLElBQU8sSUFBRkQsSUFBY2lVLEdBQUUsRUFBRSxLQUFnQixJQUFaaFUsRUFBRSxLQUFLRCxJQUFrQmlVLEdBQUUsRUFBRWhVLEdBQUssSUFBTyxLQUFGRCxJQUFlaVUsR0FBRSxFQUFFLE1BQW9CLElBQWZoVSxFQUFFLFFBQVFELElBQWtCaVUsR0FBRSxFQUFFaFUsR0FBa0IsSUFBaEJBLEVBQUUsU0FBU0QsSUFBa0JpVSxHQUFFLEVBQUVoVSxHQUFPLFNBQUZELEdBQWtCaVUsR0FBRSxFQUFFLFVBQVksSUFBTyxVQUFGalUsSUFBb0JpVSxHQUFFLEVBQUUsV0FBMkIsSUFBakJoVSxFQUFFLFVBQVVELElBQWtCaVUsR0FBRSxFQUFFaFUsR0FBSyxJQUFLLFdBQVdELElBQVVpVSxHQUFFLEVBQUUsYUFDamZBLEdBQUUsRUFBU2pVLEdBQ1gsU0FBU21VLEdBQUduVSxFQUFFQyxHQUFHLElBQUloRSxFQUFFK0QsRUFBRW9VLGFBQWEsR0FBRyxJQUFJblksRUFBRSxPQUFPZ1ksR0FBRSxFQUFFLElBQUlsVCxFQUFFLEVBQUVoTCxFQUFFLEVBQUVpTCxFQUFFaEIsRUFBRXFVLGFBQWFwVCxFQUFFakIsRUFBRXNVLGVBQWU3UCxFQUFFekUsRUFBRXVVLFlBQVksR0FBRyxJQUFJdlQsRUFBRUQsRUFBRUMsRUFBRWpMLEVBQUVrZSxHQUFFLFFBQVEsR0FBaUIsSUFBZGpULEVBQUksVUFBRi9FLEdBQWtCLENBQUMsSUFBSXVJLEVBQUV4RCxHQUFHQyxFQUFFLElBQUl1RCxHQUFHekQsRUFBRW1ULEdBQUcxUCxHQUFHek8sRUFBRWtlLElBQVMsSUFBTHhQLEdBQUd6RCxLQUFVRCxFQUFFbVQsR0FBR3pQLEdBQUcxTyxFQUFFa2UsU0FBZ0IsSUFBUGpULEVBQUUvRSxHQUFHZ0YsSUFBU0YsRUFBRW1ULEdBQUdsVCxHQUFHakwsRUFBRWtlLElBQUcsSUFBSXhQLElBQUkxRCxFQUFFbVQsR0FBR3pQLEdBQUcxTyxFQUFFa2UsSUFBRyxHQUFHLElBQUlsVCxFQUFFLE9BQU8sRUFBcUMsR0FBeEJBLEVBQUU5RSxJQUFJLEdBQWpCOEUsRUFBRSxHQUFHeVQsR0FBR3pULElBQWEsRUFBRSxHQUFHQSxJQUFJLEdBQUcsRUFBSyxJQUFJZCxHQUFHQSxJQUFJYyxHQUFHLElBQUtkLEVBQUVnQixHQUFHLENBQU8sR0FBTmlULEdBQUdqVSxHQUFNbEssR0FBR2tlLEdBQUUsT0FBT2hVLEVBQUVnVSxHQUFFbGUsRUFBcUIsR0FBRyxLQUF0QmtLLEVBQUVELEVBQUV5VSxnQkFBd0IsSUFBSXpVLEVBQUVBLEVBQUUwVSxjQUFjelUsR0FBR2MsRUFBRSxFQUFFZCxHQUFjbEssRUFBRSxJQUFia0csRUFBRSxHQUFHdVksR0FBR3ZVLElBQVVjLEdBQUdmLEVBQUUvRCxHQUFHZ0UsSUFBSWxLLEVBQUUsT0FBT2dMLEVBQzFlLFNBQVM0VCxHQUFHM1UsR0FBZ0MsT0FBTyxJQUFwQ0EsR0FBa0IsV0FBaEJBLEVBQUVvVSxjQUFzQ3BVLEVBQUksV0FBRkEsRUFBYSxXQUFXLEVBQUUsU0FBUzRVLEdBQUc1VSxFQUFFQyxHQUFHLE9BQU9ELEdBQUcsS0FBSyxHQUFHLE9BQU8sRUFBRSxLQUFLLEdBQUcsT0FBTyxFQUFFLEtBQUssR0FBRyxPQUFtQixLQUFaQSxFQUFFNlUsR0FBRyxJQUFJNVUsSUFBUzJVLEdBQUcsR0FBRzNVLEdBQUdELEVBQUUsS0FBSyxHQUFHLE9BQW9CLEtBQWJBLEVBQUU2VSxHQUFHLEtBQUs1VSxJQUFTMlUsR0FBRyxFQUFFM1UsR0FBR0QsRUFBRSxLQUFLLEVBQUUsT0FBcUIsS0FBZEEsRUFBRTZVLEdBQUcsTUFBTTVVLEtBQTRCLEtBQWpCRCxFQUFFNlUsR0FBRyxTQUFTNVUsTUFBV0QsRUFBRSxLQUFNQSxFQUFFLEtBQUssRUFBRSxPQUEwQixLQUFuQkMsRUFBRTRVLEdBQUcsV0FBVzVVLE1BQVdBLEVBQUUsV0FBV0EsRUFBRSxNQUFNM0osTUFBTXlKLEVBQUUsSUFBSUMsSUFBSyxTQUFTNlUsR0FBRzdVLEdBQUcsT0FBT0EsR0FBR0EsRUFBRSxTQUFTOFUsR0FBRzlVLEdBQUcsSUFBSSxJQUFJQyxFQUFFLEdBQUdoRSxFQUFFLEVBQUUsR0FBR0EsRUFBRUEsSUFBSWdFLEVBQUV2RyxLQUFLc0csR0FBRyxPQUFPQyxFQUNyZCxTQUFTOFUsR0FBRy9VLEVBQUVDLEVBQUVoRSxHQUFHK0QsRUFBRW9VLGNBQWNuVSxFQUFFLElBQUljLEVBQUVkLEVBQUUsRUFBRUQsRUFBRXNVLGdCQUFnQnZULEVBQUVmLEVBQUV1VSxhQUFheFQsR0FBRWYsRUFBRUEsRUFBRWdWLFlBQVcvVSxFQUFFLEdBQUd1VSxHQUFHdlUsSUFBUWhFLEVBQUUsSUFBSXVZLEdBQUdTLEtBQUtDLE1BQU1ELEtBQUtDLE1BQWlDLFNBQVlsVixHQUFHLE9BQU8sSUFBSUEsRUFBRSxHQUFHLElBQUltVixHQUFHblYsR0FBR29WLEdBQUcsR0FBRyxHQUF2RUQsR0FBR0YsS0FBS0ksSUFBSUQsR0FBR0gsS0FBS0ssSUFBeURDLEdBQUd6VixFQUFFMFYsOEJBQThCQyxHQUFHM1YsRUFBRWlTLHlCQUF5QjJELElBQUcsRUFBRyxTQUFTQyxHQUFHM1YsRUFBRUMsRUFBRWhFLEVBQUU4RSxHQUFHc04sSUFBSUYsS0FBSyxJQUFJcFksRUFBRTZmLEdBQUc1VSxFQUFFcU4sR0FBR0EsSUFBRyxFQUFHLElBQUlILEdBQUduWSxFQUFFaUssRUFBRUMsRUFBRWhFLEVBQUU4RSxHQUFHLFNBQVNzTixHQUFHck4sSUFBSXVOLE1BQU0sU0FBU3NILEdBQUc3VixFQUFFQyxFQUFFaEUsRUFBRThFLEdBQUcwVSxHQUFHRixHQUFHSyxHQUFHRSxLQUFLLEtBQUs5VixFQUFFQyxFQUFFaEUsRUFBRThFLElBQ2piLFNBQVM2VSxHQUFHNVYsRUFBRUMsRUFBRWhFLEVBQUU4RSxHQUFVLElBQUloTCxFQUFYLEdBQUcyZixHQUFVLElBQUkzZixFQUFFLElBQU8sRUFBRmtLLEtBQU8sRUFBRXdRLEdBQUc5YyxTQUFTLEVBQUVzZCxHQUFHcEYsUUFBUTdMLEdBQUdBLEVBQUVrUixHQUFHLEtBQUtsUixFQUFFQyxFQUFFaEUsRUFBRThFLEdBQUcwUCxHQUFHL1csS0FBS3NHLE9BQU8sQ0FBQyxJQUFJZ0IsRUFBRW9SLEdBQUdwUyxFQUFFQyxFQUFFaEUsRUFBRThFLEdBQUcsR0FBRyxPQUFPQyxFQUFFakwsR0FBR3liLEdBQUd4UixFQUFFZSxPQUFPLENBQUMsR0FBR2hMLEVBQUUsQ0FBQyxJQUFJLEVBQUVrYixHQUFHcEYsUUFBUTdMLEdBQStCLE9BQTNCQSxFQUFFa1IsR0FBR2xRLEVBQUVoQixFQUFFQyxFQUFFaEUsRUFBRThFLFFBQUcwUCxHQUFHL1csS0FBS3NHLEdBQVUsR0FmaE8sU0FBWUEsRUFBRUMsRUFBRWhFLEVBQUU4RSxFQUFFaEwsR0FBRyxPQUFPa0ssR0FBRyxJQUFLLFVBQVUsT0FBT3lRLEdBQUdpQixHQUFHakIsR0FBRzFRLEVBQUVDLEVBQUVoRSxFQUFFOEUsRUFBRWhMLElBQUcsRUFBRyxJQUFLLFlBQVksT0FBTzRhLEdBQUdnQixHQUFHaEIsR0FBRzNRLEVBQUVDLEVBQUVoRSxFQUFFOEUsRUFBRWhMLElBQUcsRUFBRyxJQUFLLFlBQVksT0FBTzZhLEdBQUdlLEdBQUdmLEdBQUc1USxFQUFFQyxFQUFFaEUsRUFBRThFLEVBQUVoTCxJQUFHLEVBQUcsSUFBSyxjQUFjLElBQUlpTCxFQUFFakwsRUFBRTJiLFVBQWtELE9BQXhDYixHQUFHeE0sSUFBSXJELEVBQUUyUSxHQUFHZCxHQUFHckwsSUFBSXhFLElBQUksS0FBS2hCLEVBQUVDLEVBQUVoRSxFQUFFOEUsRUFBRWhMLEtBQVUsRUFBRyxJQUFLLG9CQUFvQixPQUFPaUwsRUFBRWpMLEVBQUUyYixVQUFVWCxHQUFHMU0sSUFBSXJELEVBQUUyUSxHQUFHWixHQUFHdkwsSUFBSXhFLElBQUksS0FBS2hCLEVBQUVDLEVBQUVoRSxFQUFFOEUsRUFBRWhMLEtBQUksRUFBRyxPQUFNLEVBZTlIZ2dCLENBQUcvVSxFQUFFaEIsRUFBRUMsRUFBRWhFLEVBQUU4RSxHQUFHLE9BQU95USxHQUFHeFIsRUFBRWUsR0FBR2lWLEdBQUdoVyxFQUFFQyxFQUFFYyxFQUFFLEtBQUs5RSxLQUM5USxTQUFTbVcsR0FBR3BTLEVBQUVDLEVBQUVoRSxFQUFFOEUsR0FBRyxJQUFJaEwsRUFBRXFYLEdBQUdyTSxHQUFXLEdBQUcsUUFBWGhMLEVBQUU4YixHQUFHOWIsSUFBZSxDQUFDLElBQUlpTCxFQUFFdU8sR0FBR3haLEdBQUcsR0FBRyxPQUFPaUwsRUFBRWpMLEVBQUUsU0FBUyxDQUFDLElBQUlrTCxFQUFFRCxFQUFFMkQsSUFBSSxHQUFHLEtBQUsxRCxFQUFFLENBQVMsR0FBRyxRQUFYbEwsRUFBRTJaLEdBQUcxTyxJQUFlLE9BQU9qTCxFQUFFQSxFQUFFLFVBQVUsR0FBRyxJQUFJa0wsRUFBRSxDQUFDLEdBQUdELEVBQUU2TSxVQUFVb0UsUUFBUSxPQUFPLElBQUlqUixFQUFFMkQsSUFBSTNELEVBQUU2TSxVQUFVcUUsY0FBYyxLQUFLbmMsRUFBRSxVQUFVaUwsSUFBSWpMLElBQUlBLEVBQUUsT0FBcUIsT0FBZGlnQixHQUFHaFcsRUFBRUMsRUFBRWMsRUFBRWhMLEVBQUVrRyxHQUFVLEtBQUssSUFBSWdhLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQ3pULFNBQVNDLEtBQUssR0FBR0QsR0FBRyxPQUFPQSxHQUFHLElBQUluVyxFQUFrQmUsRUFBaEJkLEVBQUVpVyxHQUFHamEsRUFBRWdFLEVBQUV0TSxPQUFTb0MsRUFBRSxVQUFVa2dCLEdBQUdBLEdBQUduWixNQUFNbVosR0FBR3BPLFlBQVk3RyxFQUFFakwsRUFBRXBDLE9BQU8sSUFBSXFNLEVBQUUsRUFBRUEsRUFBRS9ELEdBQUdnRSxFQUFFRCxLQUFLakssRUFBRWlLLEdBQUdBLEtBQUssSUFBSWlCLEVBQUVoRixFQUFFK0QsRUFBRSxJQUFJZSxFQUFFLEVBQUVBLEdBQUdFLEdBQUdoQixFQUFFaEUsRUFBRThFLEtBQUtoTCxFQUFFaUwsRUFBRUQsR0FBR0EsS0FBSyxPQUFPb1YsR0FBR3BnQixFQUFFdUYsTUFBTTBFLEVBQUUsRUFBRWUsRUFBRSxFQUFFQSxPQUFFLEdBQVEsU0FBU3NWLEdBQUdyVyxHQUFHLElBQUlDLEVBQUVELEVBQUVzVyxRQUErRSxNQUF2RSxhQUFhdFcsRUFBZ0IsS0FBYkEsRUFBRUEsRUFBRXVXLFdBQWdCLEtBQUt0VyxJQUFJRCxFQUFFLElBQUtBLEVBQUVDLEVBQUUsS0FBS0QsSUFBSUEsRUFBRSxJQUFXLElBQUlBLEdBQUcsS0FBS0EsRUFBRUEsRUFBRSxFQUFFLFNBQVN3VyxLQUFLLE9BQU0sRUFBRyxTQUFTQyxLQUFLLE9BQU0sRUFDalksU0FBU0MsR0FBRzFXLEdBQUcsU0FBU0MsRUFBRUEsRUFBRWMsRUFBRWhMLEVBQUVpTCxFQUFFQyxHQUE2RyxJQUFJLElBQUloRixLQUFsSDdGLEtBQUt1Z0IsV0FBVzFXLEVBQUU3SixLQUFLd2dCLFlBQVk3Z0IsRUFBRUssS0FBSzVDLEtBQUt1TixFQUFFM0ssS0FBS2tiLFlBQVl0USxFQUFFNUssS0FBS3dDLE9BQU9xSSxFQUFFN0ssS0FBS3lnQixjQUFjLEtBQWtCN1csRUFBRUEsRUFBRXhJLGVBQWV5RSxLQUFLZ0UsRUFBRUQsRUFBRS9ELEdBQUc3RixLQUFLNkYsR0FBR2dFLEVBQUVBLEVBQUVlLEdBQUdBLEVBQUUvRSxJQUFnSSxPQUE1SDdGLEtBQUswZ0Isb0JBQW9CLE1BQU05VixFQUFFK1YsaUJBQWlCL1YsRUFBRStWLGtCQUFpQixJQUFLL1YsRUFBRWdXLGFBQWFSLEdBQUdDLEdBQUdyZ0IsS0FBSzZnQixxQkFBcUJSLEdBQVVyZ0IsS0FDMUUsT0FEK0UrRSxFQUFFOEUsRUFBRXJNLFVBQVUsQ0FBQ3NqQixlQUFlLFdBQVc5Z0IsS0FBSzJnQixrQkFBaUIsRUFBRyxJQUFJL1csRUFBRTVKLEtBQUtrYixZQUFZdFIsSUFBSUEsRUFBRWtYLGVBQWVsWCxFQUFFa1gsaUJBQWlCLGtCQUFtQmxYLEVBQUVnWCxjQUM3ZWhYLEVBQUVnWCxhQUFZLEdBQUk1Z0IsS0FBSzBnQixtQkFBbUJOLEtBQUtXLGdCQUFnQixXQUFXLElBQUluWCxFQUFFNUosS0FBS2tiLFlBQVl0UixJQUFJQSxFQUFFbVgsZ0JBQWdCblgsRUFBRW1YLGtCQUFrQixrQkFBbUJuWCxFQUFFb1gsZUFBZXBYLEVBQUVvWCxjQUFhLEdBQUloaEIsS0FBSzZnQixxQkFBcUJULEtBQUthLFFBQVEsYUFBYUMsYUFBYWQsS0FBWXZXLEVBQ2hSLElBQW9Mc1gsR0FBR0MsR0FBR0MsR0FBdExDLEdBQUcsQ0FBQ0MsV0FBVyxFQUFFQyxRQUFRLEVBQUVDLFdBQVcsRUFBRUMsVUFBVSxTQUFTOVgsR0FBRyxPQUFPQSxFQUFFOFgsV0FBV0MsS0FBS0MsT0FBT2pCLGlCQUFpQixFQUFFa0IsVUFBVSxHQUFHQyxHQUFHeEIsR0FBR2dCLElBQUlTLEdBQUdoZCxFQUFFLEdBQUd1YyxHQUFHLENBQUNVLEtBQUssRUFBRUMsT0FBTyxJQUFJQyxHQUFHNUIsR0FBR3lCLElBQWFJLEdBQUdwZCxFQUFFLEdBQUdnZCxHQUFHLENBQUNLLFFBQVEsRUFBRUMsUUFBUSxFQUFFQyxRQUFRLEVBQUVDLFFBQVEsRUFBRUMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLFFBQVEsRUFBRUMsU0FBUyxFQUFFQyxPQUFPLEVBQUVDLFFBQVEsRUFBRUMsaUJBQWlCQyxHQUFHQyxPQUFPLEVBQUVDLFFBQVEsRUFBRUMsY0FBYyxTQUFTdFosR0FBRyxZQUFPLElBQVNBLEVBQUVzWixjQUFjdFosRUFBRXVaLGNBQWN2WixFQUFFcU4sV0FBV3JOLEVBQUV3WixVQUFVeFosRUFBRXVaLFlBQVl2WixFQUFFc1osZUFBZUcsVUFBVSxTQUFTelosR0FBRyxNQUFHLGNBQzNlQSxFQUFTQSxFQUFFeVosV0FBVXpaLElBQUl5WCxLQUFLQSxJQUFJLGNBQWN6WCxFQUFFeE0sTUFBTStqQixHQUFHdlgsRUFBRXdZLFFBQVFmLEdBQUdlLFFBQVFoQixHQUFHeFgsRUFBRXlZLFFBQVFoQixHQUFHZ0IsU0FBU2pCLEdBQUdELEdBQUcsRUFBRUUsR0FBR3pYLEdBQVV1WCxLQUFJbUMsVUFBVSxTQUFTMVosR0FBRyxNQUFNLGNBQWNBLEVBQUVBLEVBQUUwWixVQUFVbEMsTUFBTW1DLEdBQUdqRCxHQUFHNkIsSUFBaUNxQixHQUFHbEQsR0FBN0J2YixFQUFFLEdBQUdvZCxHQUFHLENBQUNzQixhQUFhLEtBQTRDQyxHQUFHcEQsR0FBOUJ2YixFQUFFLEdBQUdnZCxHQUFHLENBQUNtQixjQUFjLEtBQTBFUyxHQUFHckQsR0FBNUR2YixFQUFFLEdBQUd1YyxHQUFHLENBQUNzQyxjQUFjLEVBQUVDLFlBQVksRUFBRUMsY0FBYyxLQUFzSEMsR0FBR3pELEdBQXhHdmIsRUFBRSxHQUFHdWMsR0FBRyxDQUFDMEMsY0FBYyxTQUFTcGEsR0FBRyxNQUFNLGtCQUFrQkEsRUFBRUEsRUFBRW9hLGNBQWMzWixPQUFPMlosa0JBQWdEQyxHQUFHM0QsR0FBckJ2YixFQUFFLEdBQUd1YyxHQUFHLENBQUNsYixLQUFLLEtBQWM4ZCxHQUFHLENBQUNDLElBQUksU0FDeGZDLFNBQVMsSUFBSUMsS0FBSyxZQUFZQyxHQUFHLFVBQVVDLE1BQU0sYUFBYUMsS0FBSyxZQUFZQyxJQUFJLFNBQVNDLElBQUksS0FBS0MsS0FBSyxjQUFjQyxLQUFLLGNBQWNDLE9BQU8sYUFBYUMsZ0JBQWdCLGdCQUFnQkMsR0FBRyxDQUFDQyxFQUFFLFlBQVlDLEVBQUUsTUFBTUMsR0FBRyxRQUFRQyxHQUFHLFFBQVFDLEdBQUcsUUFBUUMsR0FBRyxVQUFVQyxHQUFHLE1BQU1DLEdBQUcsUUFBUUMsR0FBRyxXQUFXQyxHQUFHLFNBQVNDLEdBQUcsSUFBSUMsR0FBRyxTQUFTQyxHQUFHLFdBQVdDLEdBQUcsTUFBTUMsR0FBRyxPQUFPQyxHQUFHLFlBQVlDLEdBQUcsVUFBVUMsR0FBRyxhQUFhQyxHQUFHLFlBQVlDLEdBQUcsU0FBU0MsR0FBRyxTQUFTQyxJQUFJLEtBQUtDLElBQUksS0FBS0MsSUFBSSxLQUFLQyxJQUFJLEtBQUtDLElBQUksS0FBS0MsSUFBSSxLQUFLQyxJQUFJLEtBQ3RmQyxJQUFJLEtBQUtDLElBQUksS0FBS0MsSUFBSSxNQUFNQyxJQUFJLE1BQU1DLElBQUksTUFBTUMsSUFBSSxVQUFVQyxJQUFJLGFBQWFDLElBQUksUUFBUUMsR0FBRyxDQUFDQyxJQUFJLFNBQVNDLFFBQVEsVUFBVUMsS0FBSyxVQUFVQyxNQUFNLFlBQVksU0FBU0MsR0FBRzdkLEdBQUcsSUFBSUMsRUFBRTdKLEtBQUtrYixZQUFZLE9BQU9yUixFQUFFaVosaUJBQWlCalosRUFBRWlaLGlCQUFpQmxaLE1BQUlBLEVBQUV3ZCxHQUFHeGQsT0FBTUMsRUFBRUQsR0FBTSxTQUFTbVosS0FBSyxPQUFPMEUsR0FDOVIsSUFDaUVDLEdBQUdwSCxHQUQ3RHZiLEVBQUUsR0FBR2dkLEdBQUcsQ0FBQ3RpQixJQUFJLFNBQVNtSyxHQUFHLEdBQUdBLEVBQUVuSyxJQUFJLENBQUMsSUFBSW9LLEVBQUVxYSxHQUFHdGEsRUFBRW5LLE1BQU1tSyxFQUFFbkssSUFBSSxHQUFHLGlCQUFpQm9LLEVBQUUsT0FBT0EsRUFBRSxNQUFNLGFBQWFELEVBQUV4TSxLQUFjLE1BQVJ3TSxFQUFFcVcsR0FBR3JXLElBQVUsUUFBUWhJLE9BQU9FLGFBQWE4SCxHQUFJLFlBQVlBLEVBQUV4TSxNQUFNLFVBQVV3TSxFQUFFeE0sS0FBSzJuQixHQUFHbmIsRUFBRXNXLFVBQVUsZUFBZSxJQUFJeUgsS0FBSyxFQUFFNWYsU0FBUyxFQUFFMmEsUUFBUSxFQUFFQyxTQUFTLEVBQUVDLE9BQU8sRUFBRUMsUUFBUSxFQUFFbmYsT0FBTyxFQUFFa2tCLE9BQU8sRUFBRTlFLGlCQUFpQkMsR0FBRzVDLFNBQVMsU0FBU3ZXLEdBQUcsTUFBTSxhQUFhQSxFQUFFeE0sS0FBSzZpQixHQUFHclcsR0FBRyxHQUFHc1csUUFBUSxTQUFTdFcsR0FBRyxNQUFNLFlBQVlBLEVBQUV4TSxNQUFNLFVBQVV3TSxFQUFFeE0sS0FBS3dNLEVBQUVzVyxRQUFRLEdBQUcySCxNQUFNLFNBQVNqZSxHQUFHLE1BQU0sYUFDN2VBLEVBQUV4TSxLQUFLNmlCLEdBQUdyVyxHQUFHLFlBQVlBLEVBQUV4TSxNQUFNLFVBQVV3TSxFQUFFeE0sS0FBS3dNLEVBQUVzVyxRQUFRLE1BQTRJNEgsR0FBR3hILEdBQTdIdmIsRUFBRSxHQUFHb2QsR0FBRyxDQUFDN0csVUFBVSxFQUFFeU0sTUFBTSxFQUFFQyxPQUFPLEVBQUVDLFNBQVMsRUFBRUMsbUJBQW1CLEVBQUVDLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLFlBQVksRUFBRUMsVUFBVSxLQUFtSUMsR0FBR2xJLEdBQXJIdmIsRUFBRSxHQUFHZ2QsR0FBRyxDQUFDMEcsUUFBUSxFQUFFQyxjQUFjLEVBQUVDLGVBQWUsRUFBRS9GLE9BQU8sRUFBRUMsUUFBUSxFQUFFSCxRQUFRLEVBQUVDLFNBQVMsRUFBRUcsaUJBQWlCQyxNQUEwRTZGLEdBQUd0SSxHQUEzRHZiLEVBQUUsR0FBR3VjLEdBQUcsQ0FBQ3BXLGFBQWEsRUFBRTJZLFlBQVksRUFBRUMsY0FBYyxLQUMvUCtFLEdBQUd2SSxHQUQ2UXZiLEVBQUUsR0FBR29kLEdBQUcsQ0FBQzJHLE9BQU8sU0FBU2xmLEdBQUcsTUFBTSxXQUFXQSxFQUFFQSxFQUFFa2YsT0FBTyxnQkFBZ0JsZixHQUFHQSxFQUFFbWYsWUFBWSxHQUNsZkMsT0FBTyxTQUFTcGYsR0FBRyxNQUFNLFdBQVdBLEVBQUVBLEVBQUVvZixPQUFPLGdCQUFnQnBmLEdBQUdBLEVBQUVxZixZQUFZLGVBQWVyZixHQUFHQSxFQUFFc2YsV0FBVyxHQUFHQyxPQUFPLEVBQUVDLFVBQVUsS0FBY0MsR0FBRyxDQUFDLEVBQUUsR0FBRyxHQUFHLElBQUlDLEdBQUdsZixHQUFJLHFCQUFxQkMsT0FBT2tmLEdBQUcsS0FBS25mLEdBQUksaUJBQWlCM0osV0FBVzhvQixHQUFHOW9CLFNBQVMrb0IsY0FBYyxJQUFJQyxHQUFHcmYsR0FBSSxjQUFjQyxTQUFTa2YsR0FBR0csR0FBR3RmLEtBQU1rZixJQUFJQyxJQUFJLEVBQUVBLElBQUksSUFBSUEsSUFBSUksR0FBRy9uQixPQUFPRSxhQUFhLElBQUk4bkIsSUFBRyxFQUMxVyxTQUFTQyxHQUFHamdCLEVBQUVDLEdBQUcsT0FBT0QsR0FBRyxJQUFLLFFBQVEsT0FBTyxJQUFJeWYsR0FBRzVULFFBQVE1TCxFQUFFcVcsU0FBUyxJQUFLLFVBQVUsT0FBTyxNQUFNclcsRUFBRXFXLFFBQVEsSUFBSyxXQUFXLElBQUssWUFBWSxJQUFLLFdBQVcsT0FBTSxFQUFHLFFBQVEsT0FBTSxHQUFJLFNBQVM0SixHQUFHbGdCLEdBQWMsTUFBTSxpQkFBakJBLEVBQUVBLEVBQUVxWSxTQUFrQyxTQUFTclksRUFBRUEsRUFBRXhELEtBQUssS0FBSyxJQUFJMmpCLElBQUcsRUFFMVFDLEdBQUcsQ0FBQ0MsT0FBTSxFQUFHQyxNQUFLLEVBQUdDLFVBQVMsRUFBRyxrQkFBaUIsRUFBR0MsT0FBTSxFQUFHQyxPQUFNLEVBQUc3aEIsUUFBTyxFQUFHOGhCLFVBQVMsRUFBR0MsT0FBTSxFQUFHQyxRQUFPLEVBQUdDLEtBQUksRUFBR3ZwQixNQUFLLEVBQUd3cEIsTUFBSyxFQUFHQyxLQUFJLEVBQUdDLE1BQUssR0FBSSxTQUFTQyxHQUFHamhCLEdBQUcsSUFBSUMsRUFBRUQsR0FBR0EsRUFBRW9GLFVBQVVwRixFQUFFb0YsU0FBUzFELGNBQWMsTUFBTSxVQUFVekIsSUFBSW1nQixHQUFHcGdCLEVBQUV4TSxNQUFNLGFBQWF5TSxFQUFRLFNBQVNpaEIsR0FBR2xoQixFQUFFQyxFQUFFaEUsRUFBRThFLEdBQUdnTixHQUFHaE4sR0FBc0IsR0FBbkJkLEVBQUVraEIsR0FBR2xoQixFQUFFLGFBQWdCdE0sU0FBU3NJLEVBQUUsSUFBSWljLEdBQUcsV0FBVyxTQUFTLEtBQUtqYyxFQUFFOEUsR0FBR2YsRUFBRXRHLEtBQUssQ0FBQzBuQixNQUFNbmxCLEVBQUVvbEIsVUFBVXBoQixLQUFLLElBQUlxaEIsR0FBRyxLQUFLQyxHQUFHLEtBQUssU0FBU3BrQixHQUFHNkMsR0FBR3doQixHQUFHeGhCLEVBQUUsR0FBRyxTQUFTeWhCLEdBQUd6aEIsR0FBZSxHQUFHK0YsRUFBVDJiLEdBQUcxaEIsSUFBWSxPQUFPQSxFQUNuZSxTQUFTMmhCLEdBQUczaEIsRUFBRUMsR0FBRyxHQUFHLFdBQVdELEVBQUUsT0FBT0MsRUFBRSxJQUFJMmhCLElBQUcsRUFBRyxHQUFHcGhCLEVBQUcsQ0FBQyxJQUFJcWhCLEdBQUcsR0FBR3JoQixFQUFHLENBQUMsSUFBSXNoQixHQUFHLFlBQVlqckIsU0FBUyxJQUFJaXJCLEdBQUcsQ0FBQyxJQUFJQyxHQUFHbHJCLFNBQVNFLGNBQWMsT0FBT2dyQixHQUFHM3FCLGFBQWEsVUFBVSxXQUFXMHFCLEdBQUcsbUJBQW9CQyxHQUFHQyxRQUFRSCxHQUFHQyxRQUFRRCxJQUFHLEVBQUdELEdBQUdDLE1BQU1ockIsU0FBUytvQixjQUFjLEVBQUUvb0IsU0FBUytvQixjQUFjLFNBQVNxQyxLQUFLWCxLQUFLQSxHQUFHWSxZQUFZLG1CQUFtQkMsSUFBSVosR0FBR0QsR0FBRyxNQUFNLFNBQVNhLEdBQUduaUIsR0FBRyxHQUFHLFVBQVVBLEVBQUVzQixjQUFjbWdCLEdBQUdGLElBQUksQ0FBQyxJQUFJdGhCLEVBQUUsR0FBeUIsR0FBdEJpaEIsR0FBR2poQixFQUFFc2hCLEdBQUd2aEIsRUFBRW9OLEdBQUdwTixJQUFJQSxFQUFFN0MsR0FBTWtSLEdBQUdyTyxFQUFFQyxPQUFPLENBQUNvTyxJQUFHLEVBQUcsSUFBSUosR0FBR2pPLEVBQUVDLEdBQUcsUUFBUW9PLElBQUcsRUFBR0UsUUFDM2UsU0FBUzZULEdBQUdwaUIsRUFBRUMsRUFBRWhFLEdBQUcsWUFBWStELEdBQUdpaUIsS0FBVVYsR0FBR3RsQixHQUFScWxCLEdBQUdyaEIsR0FBVW9pQixZQUFZLG1CQUFtQkYsS0FBSyxhQUFhbmlCLEdBQUdpaUIsS0FBSyxTQUFTSyxHQUFHdGlCLEdBQUcsR0FBRyxvQkFBb0JBLEdBQUcsVUFBVUEsR0FBRyxZQUFZQSxFQUFFLE9BQU95aEIsR0FBR0YsSUFBSSxTQUFTZ0IsR0FBR3ZpQixFQUFFQyxHQUFHLEdBQUcsVUFBVUQsRUFBRSxPQUFPeWhCLEdBQUd4aEIsR0FBRyxTQUFTdWlCLEdBQUd4aUIsRUFBRUMsR0FBRyxHQUFHLFVBQVVELEdBQUcsV0FBV0EsRUFBRSxPQUFPeWhCLEdBQUd4aEIsR0FBbUUsSUFBSXdpQixHQUFHLG1CQUFvQjl0QixPQUFPd1ksR0FBR3hZLE9BQU93WSxHQUE1RyxTQUFZbk4sRUFBRUMsR0FBRyxPQUFPRCxJQUFJQyxJQUFJLElBQUlELEdBQUcsRUFBRUEsR0FBSSxFQUFFQyxJQUFJRCxHQUFJQSxHQUFHQyxHQUFJQSxHQUFvRHlpQixHQUFHL3RCLE9BQU9mLFVBQVU0RCxlQUM3YSxTQUFTbXJCLEdBQUczaUIsRUFBRUMsR0FBRyxHQUFHd2lCLEdBQUd6aUIsRUFBRUMsR0FBRyxPQUFNLEVBQUcsR0FBRyxpQkFBa0JELEdBQUcsT0FBT0EsR0FBRyxpQkFBa0JDLEdBQUcsT0FBT0EsRUFBRSxPQUFNLEVBQUcsSUFBSWhFLEVBQUV0SCxPQUFPYSxLQUFLd0ssR0FBR2UsRUFBRXBNLE9BQU9hLEtBQUt5SyxHQUFHLEdBQUdoRSxFQUFFdEksU0FBU29OLEVBQUVwTixPQUFPLE9BQU0sRUFBRyxJQUFJb04sRUFBRSxFQUFFQSxFQUFFOUUsRUFBRXRJLE9BQU9vTixJQUFJLElBQUkyaEIsR0FBR3hwQixLQUFLK0csRUFBRWhFLEVBQUU4RSxNQUFNMGhCLEdBQUd6aUIsRUFBRS9ELEVBQUU4RSxJQUFJZCxFQUFFaEUsRUFBRThFLEtBQUssT0FBTSxFQUFHLE9BQU0sRUFBRyxTQUFTNmhCLEdBQUc1aUIsR0FBRyxLQUFLQSxHQUFHQSxFQUFFc0ksWUFBWXRJLEVBQUVBLEVBQUVzSSxXQUFXLE9BQU90SSxFQUNsVSxTQUFTNmlCLEdBQUc3aUIsRUFBRUMsR0FBRyxJQUF3QmMsRUFBcEI5RSxFQUFFMm1CLEdBQUc1aUIsR0FBTyxJQUFKQSxFQUFFLEVBQVkvRCxHQUFHLENBQUMsR0FBRyxJQUFJQSxFQUFFMk0sU0FBUyxDQUEwQixHQUF6QjdILEVBQUVmLEVBQUUvRCxFQUFFNEwsWUFBWWxVLE9BQVVxTSxHQUFHQyxHQUFHYyxHQUFHZCxFQUFFLE1BQU0sQ0FBQ1osS0FBS3BELEVBQUVaLE9BQU80RSxFQUFFRCxHQUFHQSxFQUFFZSxFQUFFZixFQUFFLENBQUMsS0FBSy9ELEdBQUcsQ0FBQyxHQUFHQSxFQUFFNm1CLFlBQVksQ0FBQzdtQixFQUFFQSxFQUFFNm1CLFlBQVksTUFBTTlpQixFQUFFL0QsRUFBRUEsRUFBRXNSLFdBQVd0UixPQUFFLEVBQU9BLEVBQUUybUIsR0FBRzNtQixJQUFJLFNBQVM4bUIsR0FBRy9pQixFQUFFQyxHQUFHLFNBQU9ELElBQUdDLEtBQUVELElBQUlDLEtBQUtELEdBQUcsSUFBSUEsRUFBRTRJLFlBQVkzSSxHQUFHLElBQUlBLEVBQUUySSxTQUFTbWEsR0FBRy9pQixFQUFFQyxFQUFFc04sWUFBWSxhQUFhdk4sRUFBRUEsRUFBRWdqQixTQUFTL2lCLEtBQUdELEVBQUVpakIsNEJBQXdELEdBQTdCampCLEVBQUVpakIsd0JBQXdCaGpCLE1BQ2xaLFNBQVNpakIsS0FBSyxJQUFJLElBQUlsakIsRUFBRVMsT0FBT1IsRUFBRWdHLElBQUtoRyxhQUFhRCxFQUFFbWpCLG1CQUFtQixDQUFDLElBQUksSUFBSWxuQixFQUFFLGlCQUFrQmdFLEVBQUVtakIsY0FBY2psQixTQUFTa2xCLEtBQUssTUFBTXRpQixHQUFHOUUsR0FBRSxFQUFHLElBQUdBLEVBQXlCLE1BQU1nRSxFQUFFZ0csR0FBL0JqRyxFQUFFQyxFQUFFbWpCLGVBQWdDdnNCLFVBQVUsT0FBT29KLEVBQUUsU0FBU3FqQixHQUFHdGpCLEdBQUcsSUFBSUMsRUFBRUQsR0FBR0EsRUFBRW9GLFVBQVVwRixFQUFFb0YsU0FBUzFELGNBQWMsT0FBT3pCLElBQUksVUFBVUEsSUFBSSxTQUFTRCxFQUFFeE0sTUFBTSxXQUFXd00sRUFBRXhNLE1BQU0sUUFBUXdNLEVBQUV4TSxNQUFNLFFBQVF3TSxFQUFFeE0sTUFBTSxhQUFhd00sRUFBRXhNLE9BQU8sYUFBYXlNLEdBQUcsU0FBU0QsRUFBRXVqQixpQkFDeFosSUFBSUMsR0FBR2hqQixHQUFJLGlCQUFpQjNKLFVBQVUsSUFBSUEsU0FBUytvQixhQUFhNkQsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsSUFBRyxFQUMzRixTQUFTQyxHQUFHN2pCLEVBQUVDLEVBQUVoRSxHQUFHLElBQUk4RSxFQUFFOUUsRUFBRXdFLFNBQVN4RSxFQUFFQSxFQUFFcEYsU0FBUyxJQUFJb0YsRUFBRTJNLFNBQVMzTSxFQUFFQSxFQUFFOEssY0FBYzZjLElBQUksTUFBTUgsSUFBSUEsS0FBS3hkLEVBQUdsRixLQUFzQ0EsRUFBNUIsbUJBQUxBLEVBQUUwaUIsS0FBeUJILEdBQUd2aUIsR0FBSyxDQUFDK2lCLE1BQU0vaUIsRUFBRWdqQixlQUFlem1CLElBQUl5RCxFQUFFaWpCLGNBQXlGLENBQUNDLFlBQTNFbGpCLEdBQUdBLEVBQUVnRyxlQUFlaEcsRUFBRWdHLGNBQWNtZCxhQUFhempCLFFBQVEwakIsZ0JBQStCRixXQUFXRyxhQUFhcmpCLEVBQUVxakIsYUFBYUMsVUFBVXRqQixFQUFFc2pCLFVBQVVDLFlBQVl2akIsRUFBRXVqQixhQUFjWCxJQUFJaEIsR0FBR2dCLEdBQUc1aUIsS0FBSzRpQixHQUFHNWlCLEVBQXNCLEdBQXBCQSxFQUFFb2dCLEdBQUd1QyxHQUFHLGFBQWdCL3ZCLFNBQVNzTSxFQUFFLElBQUlpWSxHQUFHLFdBQVcsU0FBUyxLQUFLalksRUFBRWhFLEdBQUcrRCxFQUFFdEcsS0FBSyxDQUFDMG5CLE1BQU1uaEIsRUFBRW9oQixVQUFVdGdCLElBQUlkLEVBQUVySCxPQUFPNnFCLE1BQ2pmM1AsR0FBRyxtakJBQW1qQnZiLE1BQU0sS0FDNWpCLEdBQUd1YixHQUFHLG9SQUFvUnZiLE1BQU0sS0FBSyxHQUFHdWIsR0FBR0QsR0FBRyxHQUFHLElBQUksSUFBSTBRLEdBQUcscUZBQXFGaHNCLE1BQU0sS0FBS2lzQixHQUFHLEVBQUVBLEdBQUdELEdBQUc1d0IsT0FBTzZ3QixLQUFLNVEsR0FBR3ZQLElBQUlrZ0IsR0FBR0MsSUFBSSxHQUFHbGtCLEVBQUcsZUFBZSxDQUFDLFdBQVcsY0FDbGVBLEVBQUcsZUFBZSxDQUFDLFdBQVcsY0FBY0EsRUFBRyxpQkFBaUIsQ0FBQyxhQUFhLGdCQUFnQkEsRUFBRyxpQkFBaUIsQ0FBQyxhQUFhLGdCQUFnQkQsRUFBRyxXQUFXLG9FQUFvRTlILE1BQU0sTUFBTThILEVBQUcsV0FBVyx1RkFBdUY5SCxNQUFNLE1BQU04SCxFQUFHLGdCQUFnQixDQUFDLGlCQUFpQixXQUFXLFlBQVksVUFBVUEsRUFBRyxtQkFBbUIsMkRBQTJEOUgsTUFBTSxNQUM1ZjhILEVBQUcscUJBQXFCLDZEQUE2RDlILE1BQU0sTUFBTThILEVBQUcsc0JBQXNCLDhEQUE4RDlILE1BQU0sTUFBTSxJQUFJa3NCLEdBQUcsc05BQXNObHNCLE1BQU0sS0FBS21zQixHQUFHLElBQUl2a0IsSUFBSSwwQ0FBMEM1SCxNQUFNLEtBQUs5QyxPQUFPZ3ZCLEtBQ25mLFNBQVNFLEdBQUcza0IsRUFBRUMsRUFBRWhFLEdBQUcsSUFBSThFLEVBQUVmLEVBQUV4TSxNQUFNLGdCQUFnQndNLEVBQUU2VyxjQUFjNWEsRUEvQ2pFLFNBQVkrRCxFQUFFQyxFQUFFaEUsRUFBRThFLEVBQUVoTCxFQUFFaUwsRUFBRUMsRUFBRXdELEVBQUVELEdBQTRCLEdBQXpCOEssR0FBR1AsTUFBTTNZLEtBQUtyQyxXQUFja2IsR0FBRyxDQUFDLElBQUdBLEdBQWdDLE1BQU0zWSxNQUFNeUosRUFBRSxNQUExQyxJQUFJK08sRUFBRUksR0FBR0QsSUFBRyxFQUFHQyxHQUFHLEtBQThCQyxLQUFLQSxJQUFHLEVBQUdDLEdBQUdOLElBK0NqRThWLENBQUc3akIsRUFBRWQsT0FBRSxFQUFPRCxHQUFHQSxFQUFFNlcsY0FBYyxLQUNwRyxTQUFTMkssR0FBR3hoQixFQUFFQyxHQUFHQSxFQUFFLElBQU8sRUFBRkEsR0FBSyxJQUFJLElBQUloRSxFQUFFLEVBQUVBLEVBQUUrRCxFQUFFck0sT0FBT3NJLElBQUksQ0FBQyxJQUFJOEUsRUFBRWYsRUFBRS9ELEdBQUdsRyxFQUFFZ0wsRUFBRXFnQixNQUFNcmdCLEVBQUVBLEVBQUVzZ0IsVUFBVXJoQixFQUFFLENBQUMsSUFBSWdCLE9BQUUsRUFBTyxHQUFHZixFQUFFLElBQUksSUFBSWdCLEVBQUVGLEVBQUVwTixPQUFPLEVBQUUsR0FBR3NOLEVBQUVBLElBQUksQ0FBQyxJQUFJd0QsRUFBRTFELEVBQUVFLEdBQUd1RCxFQUFFQyxFQUFFb2dCLFNBQVMvVixFQUFFckssRUFBRW9TLGNBQTJCLEdBQWJwUyxFQUFFQSxFQUFFcWdCLFNBQVl0Z0IsSUFBSXhELEdBQUdqTCxFQUFFa2hCLHVCQUF1QixNQUFNalgsRUFBRTJrQixHQUFHNXVCLEVBQUUwTyxFQUFFcUssR0FBRzlOLEVBQUV3RCxPQUFPLElBQUl2RCxFQUFFLEVBQUVBLEVBQUVGLEVBQUVwTixPQUFPc04sSUFBSSxDQUFvRCxHQUE1Q3VELEdBQVBDLEVBQUUxRCxFQUFFRSxJQUFPNGpCLFNBQVMvVixFQUFFckssRUFBRW9TLGNBQWNwUyxFQUFFQSxFQUFFcWdCLFNBQVl0Z0IsSUFBSXhELEdBQUdqTCxFQUFFa2hCLHVCQUF1QixNQUFNalgsRUFBRTJrQixHQUFHNXVCLEVBQUUwTyxFQUFFcUssR0FBRzlOLEVBQUV3RCxJQUFJLEdBQUcySyxHQUFHLE1BQU1uUCxFQUFFb1AsR0FBR0QsSUFBRyxFQUFHQyxHQUFHLEtBQUtwUCxFQUMxYSxTQUFTK2tCLEdBQUUva0IsRUFBRUMsR0FBRyxJQUFJaEUsRUFBRStvQixHQUFHL2tCLEdBQUdjLEVBQUVmLEVBQUUsV0FBVy9ELEVBQUVncEIsSUFBSWxrQixLQUFLbWtCLEdBQUdqbEIsRUFBRUQsRUFBRSxHQUFFLEdBQUkvRCxFQUFFc0UsSUFBSVEsSUFBSSxJQUFJb2tCLEdBQUcsa0JBQWtCbFEsS0FBS21RLFNBQVNqcEIsU0FBUyxJQUFJYixNQUFNLEdBQUcsU0FBUytwQixHQUFHcmxCLEdBQUdBLEVBQUVtbEIsTUFBTW5sQixFQUFFbWxCLEtBQUksRUFBR2psQixFQUFHMUgsU0FBUSxTQUFTeUgsR0FBR3lrQixHQUFHTyxJQUFJaGxCLElBQUlxbEIsR0FBR3JsQixHQUFFLEVBQUdELEVBQUUsTUFBTXNsQixHQUFHcmxCLEdBQUUsRUFBR0QsRUFBRSxVQUN0TyxTQUFTc2xCLEdBQUd0bEIsRUFBRUMsRUFBRWhFLEVBQUU4RSxHQUFHLElBQUloTCxFQUFFLEVBQUVoQyxVQUFVSixhQUFRLElBQVNJLFVBQVUsR0FBR0EsVUFBVSxHQUFHLEVBQUVpTixFQUFFL0UsRUFBNkQsR0FBM0Qsb0JBQW9CK0QsR0FBRyxJQUFJL0QsRUFBRTJNLFdBQVc1SCxFQUFFL0UsRUFBRThLLGVBQWtCLE9BQU9oRyxJQUFJZCxHQUFHeWtCLEdBQUdPLElBQUlqbEIsR0FBRyxDQUFDLEdBQUcsV0FBV0EsRUFBRSxPQUFPakssR0FBRyxFQUFFaUwsRUFBRUQsRUFBRSxJQUFJRSxFQUFFK2pCLEdBQUdoa0IsR0FBR3lELEVBQUV6RSxFQUFFLE1BQU1DLEVBQUUsVUFBVSxVQUFVZ0IsRUFBRWdrQixJQUFJeGdCLEtBQUt4RSxJQUFJbEssR0FBRyxHQUFHbXZCLEdBQUdsa0IsRUFBRWhCLEVBQUVqSyxFQUFFa0ssR0FBR2dCLEVBQUVWLElBQUlrRSxJQUNsUyxTQUFTeWdCLEdBQUdsbEIsRUFBRUMsRUFBRWhFLEVBQUU4RSxHQUFHLElBQUloTCxFQUFFNmQsR0FBR3BPLElBQUl2RixHQUFHLFlBQU8sSUFBU2xLLEVBQUUsRUFBRUEsR0FBRyxLQUFLLEVBQUVBLEVBQUU0ZixHQUFHLE1BQU0sS0FBSyxFQUFFNWYsRUFBRThmLEdBQUcsTUFBTSxRQUFROWYsRUFBRTZmLEdBQUczWixFQUFFbEcsRUFBRStmLEtBQUssS0FBSzdWLEVBQUVoRSxFQUFFK0QsR0FBR2pLLE9BQUUsR0FBUTBZLElBQUksZUFBZXhPLEdBQUcsY0FBY0EsR0FBRyxVQUFVQSxJQUFJbEssR0FBRSxHQUFJZ0wsT0FBRSxJQUFTaEwsRUFBRWlLLEVBQUUyTyxpQkFBaUIxTyxFQUFFaEUsRUFBRSxDQUFDVCxTQUFRLEVBQUcrcEIsUUFBUXh2QixJQUFJaUssRUFBRTJPLGlCQUFpQjFPLEVBQUVoRSxHQUFFLFFBQUksSUFBU2xHLEVBQUVpSyxFQUFFMk8saUJBQWlCMU8sRUFBRWhFLEVBQUUsQ0FBQ3NwQixRQUFReHZCLElBQUlpSyxFQUFFMk8saUJBQWlCMU8sRUFBRWhFLEdBQUUsR0FDcFcsU0FBUytaLEdBQUdoVyxFQUFFQyxFQUFFaEUsRUFBRThFLEVBQUVoTCxHQUFHLElBQUlpTCxFQUFFRCxFQUFFLEdBQUcsSUFBTyxFQUFGZCxJQUFNLElBQU8sRUFBRkEsSUFBTSxPQUFPYyxFQUFFZixFQUFFLE9BQU8sQ0FBQyxHQUFHLE9BQU9lLEVBQUUsT0FBTyxJQUFJRSxFQUFFRixFQUFFNEQsSUFBSSxHQUFHLElBQUkxRCxHQUFHLElBQUlBLEVBQUUsQ0FBQyxJQUFJd0QsRUFBRTFELEVBQUU4TSxVQUFVcUUsY0FBYyxHQUFHek4sSUFBSTFPLEdBQUcsSUFBSTBPLEVBQUVtRSxVQUFVbkUsRUFBRThJLGFBQWF4WCxFQUFFLE1BQU0sR0FBRyxJQUFJa0wsRUFBRSxJQUFJQSxFQUFFRixFQUFFME8sT0FBTyxPQUFPeE8sR0FBRyxDQUFDLElBQUl1RCxFQUFFdkQsRUFBRTBELElBQUksSUFBRyxJQUFJSCxHQUFHLElBQUlBLE1BQUtBLEVBQUV2RCxFQUFFNE0sVUFBVXFFLGlCQUFrQm5jLEdBQUcsSUFBSXlPLEVBQUVvRSxVQUFVcEUsRUFBRStJLGFBQWF4WCxHQUFFLE9BQU9rTCxFQUFFQSxFQUFFd08sT0FBTyxLQUFLLE9BQU9oTCxHQUFHLENBQVMsR0FBRyxRQUFYeEQsRUFBRTRRLEdBQUdwTixJQUFlLE9BQWUsR0FBRyxLQUFYRCxFQUFFdkQsRUFBRTBELE1BQWMsSUFBSUgsRUFBRSxDQUFDekQsRUFBRUMsRUFBRUMsRUFBRSxTQUFTakIsRUFBRXlFLEVBQUVBLEVBQUU4SSxZQUFZeE0sRUFBRUEsRUFBRTBPLFFBdkQ3YyxTQUFZelAsRUFBRUMsRUFBRWhFLEdBQUcsR0FBR3FTLEdBQUcsT0FBT3RPLElBQU9zTyxJQUFHLEVBQUcsSUFBV0YsR0FBR3BPLEVBQUVDLEVBQUVoRSxHQUFHLFFBQVFxUyxJQUFHLEVBQUdDLE1BdURvWWlYLEVBQUcsV0FBVyxJQUFJemtCLEVBQUVDLEVBQUVqTCxFQUFFcVgsR0FBR25SLEdBQUdnRixFQUFFLEdBQ3BmakIsRUFBRSxDQUFDLElBQUl5RSxFQUFFa1AsR0FBR25PLElBQUl4RixHQUFHLFFBQUcsSUFBU3lFLEVBQUUsQ0FBQyxJQUFJRCxFQUFFMFQsR0FBR3VOLEVBQUV6bEIsRUFBRSxPQUFPQSxHQUFHLElBQUssV0FBVyxHQUFHLElBQUlxVyxHQUFHcGEsR0FBRyxNQUFNK0QsRUFBRSxJQUFLLFVBQVUsSUFBSyxRQUFRd0UsRUFBRXNaLEdBQUcsTUFBTSxJQUFLLFVBQVUySCxFQUFFLFFBQVFqaEIsRUFBRXNWLEdBQUcsTUFBTSxJQUFLLFdBQVcyTCxFQUFFLE9BQU9qaEIsRUFBRXNWLEdBQUcsTUFBTSxJQUFLLGFBQWEsSUFBSyxZQUFZdFYsRUFBRXNWLEdBQUcsTUFBTSxJQUFLLFFBQVEsR0FBRyxJQUFJN2QsRUFBRW1kLE9BQU8sTUFBTXBaLEVBQUUsSUFBSyxXQUFXLElBQUssV0FBVyxJQUFLLFlBQVksSUFBSyxZQUFZLElBQUssVUFBVSxJQUFLLFdBQVcsSUFBSyxZQUFZLElBQUssY0FBY3dFLEVBQUVtVixHQUFHLE1BQU0sSUFBSyxPQUFPLElBQUssVUFBVSxJQUFLLFlBQVksSUFBSyxXQUFXLElBQUssWUFBWSxJQUFLLFdBQVcsSUFBSyxZQUFZLElBQUssT0FBT25WLEVBQzFpQm9WLEdBQUcsTUFBTSxJQUFLLGNBQWMsSUFBSyxXQUFXLElBQUssWUFBWSxJQUFLLGFBQWFwVixFQUFFb2EsR0FBRyxNQUFNLEtBQUtyTCxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBR2pQLEVBQUV1VixHQUFHLE1BQU0sS0FBS3JHLEdBQUdsUCxFQUFFd2EsR0FBRyxNQUFNLElBQUssU0FBU3hhLEVBQUU4VCxHQUFHLE1BQU0sSUFBSyxRQUFROVQsRUFBRXlhLEdBQUcsTUFBTSxJQUFLLE9BQU8sSUFBSyxNQUFNLElBQUssUUFBUXphLEVBQUUyVixHQUFHLE1BQU0sSUFBSyxvQkFBb0IsSUFBSyxxQkFBcUIsSUFBSyxnQkFBZ0IsSUFBSyxjQUFjLElBQUssY0FBYyxJQUFLLGFBQWEsSUFBSyxjQUFjLElBQUssWUFBWTNWLEVBQUUwWixHQUFHLElBQUl3SCxFQUFFLElBQU8sRUFBRnpsQixHQUFLMGxCLEdBQUdELEdBQUcsV0FBVzFsQixFQUFFNGxCLEVBQUVGLEVBQUUsT0FBT2poQixFQUFFQSxFQUFFLFVBQVUsS0FBS0EsRUFBRWloQixFQUFFLEdBQUcsSUFBSSxJQUFRRyxFQUFKQyxFQUFFL2tCLEVBQUksT0FDL2Ura0IsR0FBRyxDQUFLLElBQUlDLEdBQVJGLEVBQUVDLEdBQVVqWSxVQUFzRixHQUE1RSxJQUFJZ1ksRUFBRWxoQixLQUFLLE9BQU9vaEIsSUFBSUYsRUFBRUUsRUFBRSxPQUFPSCxHQUFjLE9BQVZHLEVBQUV2WCxHQUFHc1gsRUFBRUYsS0FBWUYsRUFBRWhzQixLQUFLc3NCLEdBQUdGLEVBQUVDLEVBQUVGLEtBQVNGLEVBQUUsTUFBTUcsRUFBRUEsRUFBRXJXLE9BQU8sRUFBRWlXLEVBQUUveEIsU0FBUzhRLEVBQUUsSUFBSUQsRUFBRUMsRUFBRWdoQixFQUFFLEtBQUt4cEIsRUFBRWxHLEdBQUdrTCxFQUFFdkgsS0FBSyxDQUFDMG5CLE1BQU0zYyxFQUFFNGMsVUFBVXFFLE1BQU0sR0FBRyxJQUFPLEVBQUZ6bEIsR0FBSyxDQUE0RSxHQUFuQ3VFLEVBQUUsYUFBYXhFLEdBQUcsZUFBZUEsS0FBdEV5RSxFQUFFLGNBQWN6RSxHQUFHLGdCQUFnQkEsSUFBMkMsSUFBTyxHQUFGQyxNQUFRd2xCLEVBQUV4cEIsRUFBRXFkLGVBQWVyZCxFQUFFc2QsZUFBZTFILEdBQUc0VCxLQUFJQSxFQUFFUSxPQUFnQnpoQixHQUFHQyxLQUFHQSxFQUFFMU8sRUFBRTBLLFNBQVMxSyxFQUFFQSxHQUFHME8sRUFBRTFPLEVBQUVnUixlQUFldEMsRUFBRXlmLGFBQWF6ZixFQUFFeWhCLGFBQWF6bEIsT0FBVStELEdBQXFDQSxFQUFFekQsRUFBaUIsUUFBZjBrQixHQUFuQ0EsRUFBRXhwQixFQUFFcWQsZUFBZXJkLEVBQUV1ZCxXQUFrQjNILEdBQUc0VCxHQUFHLFFBQ2xlQSxLQUFSRSxFQUFFcFcsR0FBR2tXLEtBQVUsSUFBSUEsRUFBRTlnQixLQUFLLElBQUk4Z0IsRUFBRTlnQixPQUFLOGdCLEVBQUUsUUFBVWpoQixFQUFFLEtBQUtpaEIsRUFBRTFrQixHQUFLeUQsSUFBSWloQixHQUFFLENBQWdVLEdBQS9UQyxFQUFFL0wsR0FBR29NLEVBQUUsZUFBZUgsRUFBRSxlQUFlRSxFQUFFLFFBQVcsZUFBZTlsQixHQUFHLGdCQUFnQkEsSUFBRTBsQixFQUFFeEgsR0FBRzZILEVBQUUsaUJBQWlCSCxFQUFFLGlCQUFpQkUsRUFBRSxXQUFVSCxFQUFFLE1BQU1uaEIsRUFBRUMsRUFBRWlkLEdBQUdsZCxHQUFHcWhCLEVBQUUsTUFBTUosRUFBRWhoQixFQUFFaWQsR0FBRytELElBQUdoaEIsRUFBRSxJQUFJaWhCLEVBQUVLLEVBQUVELEVBQUUsUUFBUXRoQixFQUFFdkksRUFBRWxHLElBQUs2QyxPQUFPK3NCLEVBQUVsaEIsRUFBRTZVLGNBQWN1TSxFQUFFRSxFQUFFLEtBQUtsVSxHQUFHOWIsS0FBS2dMLEtBQUkya0IsRUFBRSxJQUFJQSxFQUFFRSxFQUFFRSxFQUFFLFFBQVFMLEVBQUV4cEIsRUFBRWxHLElBQUs2QyxPQUFPaXRCLEVBQUVILEVBQUVwTSxjQUFjcU0sRUFBRUksRUFBRUwsR0FBR0MsRUFBRUksRUFBS3ZoQixHQUFHaWhCLEVBQUV4bEIsRUFBRSxDQUFhLElBQVIybEIsRUFBRUgsRUFBRUssRUFBRSxFQUFNRCxFQUFoQkgsRUFBRWxoQixFQUFrQnFoQixFQUFFQSxFQUFFTSxHQUFHTixHQUFHQyxJQUFRLElBQUpELEVBQUUsRUFBTUUsRUFBRUgsRUFBRUcsRUFBRUEsRUFBRUksR0FBR0osR0FBR0YsSUFBSSxLQUFLLEVBQUVDLEVBQUVELEdBQUdILEVBQUVTLEdBQUdULEdBQUdJLElBQUksS0FBSyxFQUFFRCxFQUFFQyxHQUFHRixFQUNwZk8sR0FBR1AsR0FBR0MsSUFBSSxLQUFLQyxLQUFLLENBQUMsR0FBR0osSUFBSUUsR0FBRyxPQUFPQSxHQUFHRixJQUFJRSxFQUFFcFcsVUFBVSxNQUFNdlAsRUFBRXlsQixFQUFFUyxHQUFHVCxHQUFHRSxFQUFFTyxHQUFHUCxHQUFHRixFQUFFLFVBQVVBLEVBQUUsS0FBSyxPQUFPbGhCLEdBQUc0aEIsR0FBR25sQixFQUFFd0QsRUFBRUQsRUFBRWtoQixHQUFFLEdBQUksT0FBT0QsR0FBRyxPQUFPRSxHQUFHUyxHQUFHbmxCLEVBQUUwa0IsRUFBRUYsRUFBRUMsR0FBRSxHQUFpRSxHQUFHLFlBQTFDbGhCLEdBQWpCQyxFQUFFMUQsRUFBRTJnQixHQUFHM2dCLEdBQUdOLFFBQVcyRSxVQUFVWCxFQUFFVyxTQUFTMUQsZ0JBQStCLFVBQVU4QyxHQUFHLFNBQVNDLEVBQUVqUixLQUFLLElBQUk2eUIsRUFBRTFFLFFBQVEsR0FBR1YsR0FBR3hjLEdBQUcsR0FBR21kLEdBQUd5RSxFQUFFN0QsT0FBTyxDQUFDNkQsRUFBRS9ELEdBQUcsSUFBSWdFLEVBQUVsRSxRQUFRNWQsRUFBRUMsRUFBRVcsV0FBVyxVQUFVWixFQUFFOUMsZ0JBQWdCLGFBQWErQyxFQUFFalIsTUFBTSxVQUFVaVIsRUFBRWpSLFFBQVE2eUIsRUFBRTlELElBQ2xWLE9BRHlWOEQsSUFBSUEsRUFBRUEsRUFBRXJtQixFQUFFZSxJQUFLbWdCLEdBQUdqZ0IsRUFBRW9sQixFQUFFcHFCLEVBQUVsRyxJQUFXdXdCLEdBQUdBLEVBQUV0bUIsRUFBRXlFLEVBQUUxRCxHQUFHLGFBQWFmLElBQUlzbUIsRUFBRTdoQixFQUFFOEIsZ0JBQ3RlK2YsRUFBRTNmLFlBQVksV0FBV2xDLEVBQUVqUixNQUFNc1QsR0FBR3JDLEVBQUUsU0FBU0EsRUFBRTNILFFBQU93cEIsRUFBRXZsQixFQUFFMmdCLEdBQUczZ0IsR0FBR04sT0FBY1QsR0FBRyxJQUFLLFdBQWFpaEIsR0FBR3FGLElBQUksU0FBU0EsRUFBRS9DLG1CQUFnQkUsR0FBRzZDLEVBQUU1QyxHQUFHM2lCLEVBQUU0aUIsR0FBRyxNQUFLLE1BQU0sSUFBSyxXQUFXQSxHQUFHRCxHQUFHRCxHQUFHLEtBQUssTUFBTSxJQUFLLFlBQVlHLElBQUcsRUFBRyxNQUFNLElBQUssY0FBYyxJQUFLLFVBQVUsSUFBSyxVQUFVQSxJQUFHLEVBQUdDLEdBQUc1aUIsRUFBRWhGLEVBQUVsRyxHQUFHLE1BQU0sSUFBSyxrQkFBa0IsR0FBR3l0QixHQUFHLE1BQU0sSUFBSyxVQUFVLElBQUssUUFBUUssR0FBRzVpQixFQUFFaEYsRUFBRWxHLEdBQUcsSUFBSXd3QixFQUFFLEdBQUc3RyxHQUFHemYsRUFBRSxDQUFDLE9BQU9ELEdBQUcsSUFBSyxtQkFBbUIsSUFBSXdtQixFQUFFLHFCQUFxQixNQUFNdm1CLEVBQUUsSUFBSyxpQkFBaUJ1bUIsRUFBRSxtQkFBbUIsTUFBTXZtQixFQUNyZixJQUFLLG9CQUFvQnVtQixFQUFFLHNCQUFzQixNQUFNdm1CLEVBQUV1bUIsT0FBRSxPQUFZckcsR0FBR0YsR0FBR2pnQixFQUFFL0QsS0FBS3VxQixFQUFFLG9CQUFvQixZQUFZeG1CLEdBQUcsTUFBTS9ELEVBQUVxYSxVQUFVa1EsRUFBRSxzQkFBc0JBLElBQUkxRyxJQUFJLE9BQU83akIsRUFBRStoQixTQUFTbUMsSUFBSSx1QkFBdUJxRyxFQUFFLHFCQUFxQkEsR0FBR3JHLEtBQUtvRyxFQUFFblEsT0FBWUYsR0FBRyxVQUFSRCxHQUFHbGdCLEdBQWtCa2dCLEdBQUduWixNQUFNbVosR0FBR3BPLFlBQVlzWSxJQUFHLElBQWUsR0FBVm1HLEVBQUVuRixHQUFHcGdCLEVBQUV5bEIsSUFBTzd5QixTQUFTNnlCLEVBQUUsSUFBSW5NLEdBQUdtTSxFQUFFeG1CLEVBQUUsS0FBSy9ELEVBQUVsRyxHQUFHa0wsRUFBRXZILEtBQUssQ0FBQzBuQixNQUFNb0YsRUFBRW5GLFVBQVVpRixLQUFJQyxHQUFvQixRQUFSQSxFQUFFckcsR0FBR2prQixPQUFmdXFCLEVBQUVocUIsS0FBSytwQixNQUFzQ0EsRUFBRTFHLEdBMUJqSyxTQUFZN2YsRUFBRUMsR0FBRyxPQUFPRCxHQUFHLElBQUssaUJBQWlCLE9BQU9rZ0IsR0FBR2pnQixHQUFHLElBQUssV0FBVyxPQUFHLEtBQUtBLEVBQUVnZSxNQUFhLE1BQUsrQixJQUFHLEVBQVVELElBQUcsSUFBSyxZQUFZLE9BQU8vZixFQUFFQyxFQUFFekQsUUFBU3VqQixJQUFJQyxHQUFHLEtBQUtoZ0IsRUFBRSxRQUFRLE9BQU8sTUEwQnhCeW1CLENBQUd6bUIsRUFBRS9ELEdBekIxYixTQUFZK0QsRUFBRUMsR0FBRyxHQUFHa2dCLEdBQUcsTUFBTSxtQkFBbUJuZ0IsSUFBSTBmLElBQUlPLEdBQUdqZ0IsRUFBRUMsSUFBSUQsRUFBRW9XLEtBQUtELEdBQUdELEdBQUdELEdBQUcsS0FBS2tLLElBQUcsRUFBR25nQixHQUFHLEtBQUssT0FBT0EsR0FBRyxJQUFLLFFBQVEsT0FBTyxLQUFLLElBQUssV0FBVyxLQUFLQyxFQUFFNlksU0FBUzdZLEVBQUUrWSxRQUFRL1ksRUFBRWdaLFVBQVVoWixFQUFFNlksU0FBUzdZLEVBQUUrWSxPQUFPLENBQUMsR0FBRy9ZLEVBQUV5bUIsTUFBTSxFQUFFem1CLEVBQUV5bUIsS0FBSy95QixPQUFPLE9BQU9zTSxFQUFFeW1CLEtBQUssR0FBR3ptQixFQUFFZ2UsTUFBTSxPQUFPam1CLE9BQU9FLGFBQWErSCxFQUFFZ2UsT0FBTyxPQUFPLEtBQUssSUFBSyxpQkFBaUIsT0FBTzZCLElBQUksT0FBTzdmLEVBQUUrZCxPQUFPLEtBQUsvZCxFQUFFekQsS0FBSyxRQUFRLE9BQU8sTUF5QjJEbXFCLENBQUczbUIsRUFBRS9ELEtBQTJCLEdBQXhCOEUsRUFBRW9nQixHQUFHcGdCLEVBQUUsa0JBQXFCcE4sU0FBU29DLEVBQUUsSUFBSXNrQixHQUFHLGdCQUNuZixjQUFjLEtBQUtwZSxFQUFFbEcsR0FBR2tMLEVBQUV2SCxLQUFLLENBQUMwbkIsTUFBTXJyQixFQUFFc3JCLFVBQVV0Z0IsSUFBSWhMLEVBQUV5RyxLQUFLK3BCLEdBQUcvRSxHQUFHdmdCLEVBQUVoQixNQUFLLFNBQVMrbEIsR0FBR2htQixFQUFFQyxFQUFFaEUsR0FBRyxNQUFNLENBQUM0b0IsU0FBUzdrQixFQUFFOGtCLFNBQVM3a0IsRUFBRTRXLGNBQWM1YSxHQUFHLFNBQVNrbEIsR0FBR25oQixFQUFFQyxHQUFHLElBQUksSUFBSWhFLEVBQUVnRSxFQUFFLFVBQVVjLEVBQUUsR0FBRyxPQUFPZixHQUFHLENBQUMsSUFBSWpLLEVBQUVpSyxFQUFFZ0IsRUFBRWpMLEVBQUU4WCxVQUFVLElBQUk5WCxFQUFFNE8sS0FBSyxPQUFPM0QsSUFBSWpMLEVBQUVpTCxFQUFZLE9BQVZBLEVBQUV3TixHQUFHeE8sRUFBRS9ELEtBQVk4RSxFQUFFNmxCLFFBQVFaLEdBQUdobUIsRUFBRWdCLEVBQUVqTCxJQUFjLE9BQVZpTCxFQUFFd04sR0FBR3hPLEVBQUVDLEtBQVljLEVBQUVySCxLQUFLc3NCLEdBQUdobUIsRUFBRWdCLEVBQUVqTCxLQUFLaUssRUFBRUEsRUFBRXlQLE9BQU8sT0FBTzFPLEVBQUUsU0FBU29sQixHQUFHbm1CLEdBQUcsR0FBRyxPQUFPQSxFQUFFLE9BQU8sS0FBSyxHQUFHQSxFQUFFQSxFQUFFeVAsYUFBYXpQLEdBQUcsSUFBSUEsRUFBRTJFLEtBQUssT0FBTzNFLEdBQUksS0FDeGEsU0FBU29tQixHQUFHcG1CLEVBQUVDLEVBQUVoRSxFQUFFOEUsRUFBRWhMLEdBQUcsSUFBSSxJQUFJaUwsRUFBRWYsRUFBRTBXLFdBQVcxVixFQUFFLEdBQUcsT0FBT2hGLEdBQUdBLElBQUk4RSxHQUFHLENBQUMsSUFBSTBELEVBQUV4SSxFQUFFdUksRUFBRUMsRUFBRStLLFVBQVVWLEVBQUVySyxFQUFFb0osVUFBVSxHQUFHLE9BQU9ySixHQUFHQSxJQUFJekQsRUFBRSxNQUFNLElBQUkwRCxFQUFFRSxLQUFLLE9BQU9tSyxJQUFJckssRUFBRXFLLEVBQUUvWSxFQUFhLE9BQVZ5TyxFQUFFZ0ssR0FBR3ZTLEVBQUUrRSxLQUFZQyxFQUFFMmxCLFFBQVFaLEdBQUcvcEIsRUFBRXVJLEVBQUVDLElBQUsxTyxHQUFjLE9BQVZ5TyxFQUFFZ0ssR0FBR3ZTLEVBQUUrRSxLQUFZQyxFQUFFdkgsS0FBS3NzQixHQUFHL3BCLEVBQUV1SSxFQUFFQyxLQUFNeEksRUFBRUEsRUFBRXdULE9BQU8sSUFBSXhPLEVBQUV0TixRQUFRcU0sRUFBRXRHLEtBQUssQ0FBQzBuQixNQUFNbmhCLEVBQUVvaEIsVUFBVXBnQixJQUFJLFNBQVM0bEIsTUFBTSxJQUFJQyxHQUFHLEtBQUtDLEdBQUcsS0FBSyxTQUFTQyxHQUFHaG5CLEVBQUVDLEdBQUcsT0FBT0QsR0FBRyxJQUFLLFNBQVMsSUFBSyxRQUFRLElBQUssU0FBUyxJQUFLLFdBQVcsUUFBUUMsRUFBRWduQixVQUFVLE9BQU0sRUFDM2IsU0FBU0MsR0FBR2xuQixFQUFFQyxHQUFHLE1BQU0sYUFBYUQsR0FBRyxXQUFXQSxHQUFHLGFBQWFBLEdBQUcsaUJBQWtCQyxFQUFFZ0gsVUFBVSxpQkFBa0JoSCxFQUFFZ0gsVUFBVSxpQkFBa0JoSCxFQUFFd0gseUJBQXlCLE9BQU94SCxFQUFFd0gseUJBQXlCLE1BQU14SCxFQUFFd0gsd0JBQXdCMGYsT0FBTyxJQUFJQyxHQUFHLG1CQUFvQkMsV0FBV0EsZ0JBQVcsRUFBT0MsR0FBRyxtQkFBb0JDLGFBQWFBLGtCQUFhLEVBQU8sU0FBU0MsR0FBR3huQixJQUFHLElBQUlBLEVBQUU0SSxVQUEwQixJQUFJNUksRUFBRTRJLFVBQW9CLE9BQVQ1SSxFQUFFQSxFQUFFbUcsU0FBdENuRyxFQUFFNkgsWUFBWSxJQUNuWixTQUFTNGYsR0FBR3puQixHQUFHLEtBQUssTUFBTUEsRUFBRUEsRUFBRUEsRUFBRThpQixZQUFZLENBQUMsSUFBSTdpQixFQUFFRCxFQUFFNEksU0FBUyxHQUFHLElBQUkzSSxHQUFHLElBQUlBLEVBQUUsTUFBTSxPQUFPRCxFQUFFLFNBQVMwbkIsR0FBRzFuQixHQUFHQSxFQUFFQSxFQUFFMm5CLGdCQUFnQixJQUFJLElBQUkxbkIsRUFBRSxFQUFFRCxHQUFHLENBQUMsR0FBRyxJQUFJQSxFQUFFNEksU0FBUyxDQUFDLElBQUkzTSxFQUFFK0QsRUFBRXhELEtBQUssR0FBRyxNQUFNUCxHQUFHLE9BQU9BLEdBQUcsT0FBT0EsRUFBRSxDQUFDLEdBQUcsSUFBSWdFLEVBQUUsT0FBT0QsRUFBRUMsUUFBUSxPQUFPaEUsR0FBR2dFLElBQUlELEVBQUVBLEVBQUUybkIsZ0JBQWdCLE9BQU8sS0FBSyxJQUFJQyxHQUFHLEVBQThEQyxHQUFHNVMsS0FBS21RLFNBQVNqcEIsU0FBUyxJQUFJYixNQUFNLEdBQUd3c0IsR0FBRyxnQkFBZ0JELEdBQUdFLEdBQUcsZ0JBQWdCRixHQUFHNUIsR0FBRyxvQkFBb0I0QixHQUFHRyxHQUFHLGlCQUFpQkgsR0FDOWQsU0FBU2hXLEdBQUc3UixHQUFHLElBQUlDLEVBQUVELEVBQUU4bkIsSUFBSSxHQUFHN25CLEVBQUUsT0FBT0EsRUFBRSxJQUFJLElBQUloRSxFQUFFK0QsRUFBRXVOLFdBQVd0UixHQUFHLENBQUMsR0FBR2dFLEVBQUVoRSxFQUFFZ3FCLEtBQUtocUIsRUFBRTZyQixJQUFJLENBQWUsR0FBZDdyQixFQUFFZ0UsRUFBRXVQLFVBQWEsT0FBT3ZQLEVBQUU4UCxPQUFPLE9BQU85VCxHQUFHLE9BQU9BLEVBQUU4VCxNQUFNLElBQUkvUCxFQUFFMG5CLEdBQUcxbkIsR0FBRyxPQUFPQSxHQUFHLENBQUMsR0FBRy9ELEVBQUUrRCxFQUFFOG5CLElBQUksT0FBTzdyQixFQUFFK0QsRUFBRTBuQixHQUFHMW5CLEdBQUcsT0FBT0MsRUFBTWhFLEdBQUorRCxFQUFFL0QsR0FBTXNSLFdBQVcsT0FBTyxLQUFLLFNBQVNLLEdBQUc1TixHQUFrQixRQUFmQSxFQUFFQSxFQUFFOG5CLEtBQUs5bkIsRUFBRWltQixNQUFjLElBQUlqbUIsRUFBRTJFLEtBQUssSUFBSTNFLEVBQUUyRSxLQUFLLEtBQUszRSxFQUFFMkUsS0FBSyxJQUFJM0UsRUFBRTJFLElBQUksS0FBSzNFLEVBQUUsU0FBUzBoQixHQUFHMWhCLEdBQUcsR0FBRyxJQUFJQSxFQUFFMkUsS0FBSyxJQUFJM0UsRUFBRTJFLElBQUksT0FBTzNFLEVBQUU2TixVQUFVLE1BQU12WCxNQUFNeUosRUFBRSxLQUFNLFNBQVMrTixHQUFHOU4sR0FBRyxPQUFPQSxFQUFFK25CLEtBQUssS0FDbGIsU0FBUy9DLEdBQUdobEIsR0FBRyxJQUFJQyxFQUFFRCxFQUFFZ29CLElBQWtDLFlBQTlCLElBQVMvbkIsSUFBSUEsRUFBRUQsRUFBRWdvQixJQUFJLElBQUk3bkIsS0FBWUYsRUFBRSxJQUFJZ29CLEdBQUcsR0FBR0MsSUFBSSxFQUFFLFNBQVNDLEdBQUdub0IsR0FBRyxNQUFNLENBQUNpUSxRQUFRalEsR0FBRyxTQUFTb29CLEdBQUVwb0IsR0FBRyxFQUFFa29CLEtBQUtsb0IsRUFBRWlRLFFBQVFnWSxHQUFHQyxJQUFJRCxHQUFHQyxJQUFJLEtBQUtBLE1BQU0sU0FBU0csR0FBRXJvQixFQUFFQyxHQUFHaW9CLEtBQUtELEdBQUdDLElBQUlsb0IsRUFBRWlRLFFBQVFqUSxFQUFFaVEsUUFBUWhRLEVBQUUsSUFBSXFvQixHQUFHLEdBQUdDLEdBQUVKLEdBQUdHLElBQUlFLEdBQUVMLElBQUcsR0FBSU0sR0FBR0gsR0FDNVAsU0FBU0ksR0FBRzFvQixFQUFFQyxHQUFHLElBQUloRSxFQUFFK0QsRUFBRXhNLEtBQUtSLGFBQWEsSUFBSWlKLEVBQUUsT0FBT3FzQixHQUFHLElBQUl2bkIsRUFBRWYsRUFBRTZOLFVBQVUsR0FBRzlNLEdBQUdBLEVBQUU0bkIsOENBQThDMW9CLEVBQUUsT0FBT2MsRUFBRTZuQiwwQ0FBMEMsSUFBUzVuQixFQUFMakwsRUFBRSxHQUFLLElBQUlpTCxLQUFLL0UsRUFBRWxHLEVBQUVpTCxHQUFHZixFQUFFZSxHQUFvSCxPQUFqSEQsS0FBSWYsRUFBRUEsRUFBRTZOLFdBQVk4YSw0Q0FBNEMxb0IsRUFBRUQsRUFBRTRvQiwwQ0FBMEM3eUIsR0FBVUEsRUFBRSxTQUFTOHlCLEdBQUc3b0IsR0FBeUIsT0FBTyxNQUEzQkEsRUFBRWxOLGtCQUE4QyxTQUFTZzJCLEtBQUtWLEdBQUVJLElBQUdKLEdBQUVHLElBQUcsU0FBU1EsR0FBRy9vQixFQUFFQyxFQUFFaEUsR0FBRyxHQUFHc3NCLEdBQUV0WSxVQUFVcVksR0FBRyxNQUFNaHlCLE1BQU15SixFQUFFLE1BQU1zb0IsR0FBRUUsR0FBRXRvQixHQUFHb29CLEdBQUVHLEdBQUV2c0IsR0FDL2UsU0FBUytzQixHQUFHaHBCLEVBQUVDLEVBQUVoRSxHQUFHLElBQUk4RSxFQUFFZixFQUFFNk4sVUFBZ0MsR0FBdEI3TixFQUFFQyxFQUFFbk4sa0JBQXFCLG1CQUFvQmlPLEVBQUVrb0IsZ0JBQWdCLE9BQU9odEIsRUFBd0IsSUFBSSxJQUFJbEcsS0FBOUJnTCxFQUFFQSxFQUFFa29CLGtCQUFpQyxLQUFLbHpCLEtBQUtpSyxHQUFHLE1BQU0xSixNQUFNeUosRUFBRSxJQUFJOEUsRUFBRzVFLElBQUksVUFBVWxLLElBQUksT0FBT29GLEVBQUUsR0FBR2MsRUFBRThFLEdBQUcsU0FBU21vQixHQUFHbHBCLEdBQXlHLE9BQXRHQSxHQUFHQSxFQUFFQSxFQUFFNk4sWUFBWTdOLEVBQUVtcEIsMkNBQTJDYixHQUFHRyxHQUFHRixHQUFFdFksUUFBUW9ZLEdBQUVFLEdBQUV2b0IsR0FBR3FvQixHQUFFRyxHQUFFQSxHQUFFdlksVUFBZSxFQUFHLFNBQVNtWixHQUFHcHBCLEVBQUVDLEVBQUVoRSxHQUFHLElBQUk4RSxFQUFFZixFQUFFNk4sVUFBVSxJQUFJOU0sRUFBRSxNQUFNekssTUFBTXlKLEVBQUUsTUFBTTlELEdBQUcrRCxFQUFFZ3BCLEdBQUdocEIsRUFBRUMsRUFBRXdvQixJQUFJMW5CLEVBQUVvb0IsMENBQTBDbnBCLEVBQUVvb0IsR0FBRUksSUFBR0osR0FBRUcsSUFBR0YsR0FBRUUsR0FBRXZvQixJQUFJb29CLEdBQUVJLElBQUdILEdBQUVHLEdBQUV2c0IsR0FDN2UsSUFBSW90QixHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBR3pwQixFQUFFaVMseUJBQXlCeVgsR0FBRzFwQixFQUFFMlMsMEJBQTBCZ1gsR0FBRzNwQixFQUFFNHBCLHdCQUF3QkMsR0FBRzdwQixFQUFFOHBCLHFCQUFxQkMsR0FBRy9wQixFQUFFZ3FCLHNCQUFzQkMsR0FBR2pxQixFQUFFa1UsYUFBYWdXLEdBQUdscUIsRUFBRW1xQixpQ0FBaUNDLEdBQUdwcUIsRUFBRXFxQiwyQkFBMkJDLEdBQUd0cUIsRUFBRTBWLDhCQUE4QjZVLEdBQUd2cUIsRUFBRTRTLHdCQUF3QjRYLEdBQUd4cUIsRUFBRXlxQixxQkFBcUJDLEdBQUcxcUIsRUFBRTJxQixzQkFBc0JDLEdBQUcsR0FBR0MsUUFBRyxJQUFTZCxHQUFHQSxHQUFHLGFBQWFlLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxJQUFHLEVBQUdDLEdBQUdoQixLQUFLaUIsR0FBRSxJQUFJRCxHQUFHaEIsR0FBRyxXQUFXLE9BQU9BLEtBQUtnQixJQUN0ZCxTQUFTRSxLQUFLLE9BQU9qQixNQUFNLEtBQUtFLEdBQUcsT0FBTyxHQUFHLEtBQUtFLEdBQUcsT0FBTyxHQUFHLEtBQUtDLEdBQUcsT0FBTyxHQUFHLEtBQUtDLEdBQUcsT0FBTyxHQUFHLEtBQUtFLEdBQUcsT0FBTyxHQUFHLFFBQVEsTUFBTWwwQixNQUFNeUosRUFBRSxPQUFRLFNBQVNtckIsR0FBR2xyQixHQUFHLE9BQU9BLEdBQUcsS0FBSyxHQUFHLE9BQU9rcUIsR0FBRyxLQUFLLEdBQUcsT0FBT0UsR0FBRyxLQUFLLEdBQUcsT0FBT0MsR0FBRyxLQUFLLEdBQUcsT0FBT0MsR0FBRyxLQUFLLEdBQUcsT0FBT0UsR0FBRyxRQUFRLE1BQU1sMEIsTUFBTXlKLEVBQUUsT0FBUSxTQUFTb3JCLEdBQUduckIsRUFBRUMsR0FBVyxPQUFSRCxFQUFFa3JCLEdBQUdsckIsR0FBVXVwQixHQUFHdnBCLEVBQUVDLEdBQUcsU0FBU21yQixHQUFHcHJCLEVBQUVDLEVBQUVoRSxHQUFXLE9BQVIrRCxFQUFFa3JCLEdBQUdsckIsR0FBVXdwQixHQUFHeHBCLEVBQUVDLEVBQUVoRSxHQUFHLFNBQVNvdkIsS0FBSyxHQUFHLE9BQU9SLEdBQUcsQ0FBQyxJQUFJN3FCLEVBQUU2cUIsR0FBR0EsR0FBRyxLQUFLcEIsR0FBR3pwQixHQUFHc3JCLEtBQzNhLFNBQVNBLEtBQUssSUFBSVIsSUFBSSxPQUFPRixHQUFHLENBQUNFLElBQUcsRUFBRyxJQUFJOXFCLEVBQUUsRUFBRSxJQUFJLElBQUlDLEVBQUUycUIsR0FBR08sR0FBRyxJQUFHLFdBQVcsS0FBS25yQixFQUFFQyxFQUFFdE0sT0FBT3FNLElBQUksQ0FBQyxJQUFJL0QsRUFBRWdFLEVBQUVELEdBQUcsR0FBRy9ELEVBQUVBLEdBQUUsU0FBVSxPQUFPQSxPQUFNMnVCLEdBQUcsS0FBSyxNQUFNM3VCLEdBQUcsTUFBTSxPQUFPMnVCLEtBQUtBLEdBQUdBLEdBQUd0dkIsTUFBTTBFLEVBQUUsSUFBSXdwQixHQUFHVSxHQUFHbUIsSUFBSXB2QixFQUFHLFFBQVE2dUIsSUFBRyxJQUFLLElBQUlTLEdBQUdscEIsRUFBR21wQix3QkFBd0IsU0FBU0MsR0FBR3pyQixFQUFFQyxHQUFHLEdBQUdELEdBQUdBLEVBQUUvTSxhQUFhLENBQTRCLElBQUksSUFBSWdKLEtBQW5DZ0UsRUFBRTlFLEVBQUUsR0FBRzhFLEdBQUdELEVBQUVBLEVBQUUvTSxrQkFBNEIsSUFBU2dOLEVBQUVoRSxLQUFLZ0UsRUFBRWhFLEdBQUcrRCxFQUFFL0QsSUFBSSxPQUFPZ0UsRUFBRSxPQUFPQSxFQUFFLElBQUl5ckIsR0FBR3ZELEdBQUcsTUFBTXdELEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQUssU0FBU0MsS0FBS0QsR0FBR0QsR0FBR0QsR0FBRyxLQUM1YixTQUFTSSxHQUFHL3JCLEdBQUcsSUFBSUMsRUFBRXlyQixHQUFHemIsUUFBUW1ZLEdBQUVzRCxJQUFJMXJCLEVBQUV4TSxLQUFLdVIsU0FBU2luQixjQUFjL3JCLEVBQUUsU0FBU2dzQixHQUFHanNCLEVBQUVDLEdBQUcsS0FBSyxPQUFPRCxHQUFHLENBQUMsSUFBSS9ELEVBQUUrRCxFQUFFd1AsVUFBVSxJQUFJeFAsRUFBRWtzQixXQUFXanNCLEtBQUtBLEVBQUUsSUFBRyxPQUFPaEUsSUFBSUEsRUFBRWl3QixXQUFXanNCLEtBQUtBLEVBQUUsTUFBV2hFLEVBQUVpd0IsWUFBWWpzQixPQUFPRCxFQUFFa3NCLFlBQVlqc0IsRUFBRSxPQUFPaEUsSUFBSUEsRUFBRWl3QixZQUFZanNCLEdBQUdELEVBQUVBLEVBQUV5UCxRQUFRLFNBQVMwYyxHQUFHbnNCLEVBQUVDLEdBQUcwckIsR0FBRzNyQixFQUFFNnJCLEdBQUdELEdBQUcsS0FBc0IsUUFBakI1ckIsRUFBRUEsRUFBRW9zQixlQUF1QixPQUFPcHNCLEVBQUVxc0IsZUFBZSxJQUFLcnNCLEVBQUVzc0IsTUFBTXJzQixLQUFLc3NCLElBQUcsR0FBSXZzQixFQUFFcXNCLGFBQWEsTUFDdlksU0FBU0csR0FBR3hzQixFQUFFQyxHQUFHLEdBQUc0ckIsS0FBSzdyQixJQUFHLElBQUtDLEdBQUcsSUFBSUEsRUFBbUcsR0FBN0YsaUJBQWtCQSxHQUFHLGFBQWFBLElBQUU0ckIsR0FBRzdyQixFQUFFQyxFQUFFLFlBQVdBLEVBQUUsQ0FBQ3dzQixRQUFRenNCLEVBQUUwc0IsYUFBYXpzQixFQUFFMUUsS0FBSyxNQUFTLE9BQU9xd0IsR0FBRyxDQUFDLEdBQUcsT0FBT0QsR0FBRyxNQUFNcjFCLE1BQU15SixFQUFFLE1BQU02ckIsR0FBRzNyQixFQUFFMHJCLEdBQUdTLGFBQWEsQ0FBQ0UsTUFBTSxFQUFFRCxhQUFhcHNCLEVBQUUwc0IsV0FBVyxXQUFXZixHQUFHQSxHQUFHcndCLEtBQUswRSxFQUFFLE9BQU9ELEVBQUVnc0IsY0FBYyxJQUFJWSxJQUFHLEVBQUcsU0FBU0MsR0FBRzdzQixHQUFHQSxFQUFFOHNCLFlBQVksQ0FBQ0MsVUFBVS9zQixFQUFFMlAsY0FBY3FkLGdCQUFnQixLQUFLQyxlQUFlLEtBQUtDLE9BQU8sQ0FBQ0MsUUFBUSxNQUFNQyxRQUFRLE1BQzFhLFNBQVNDLEdBQUdydEIsRUFBRUMsR0FBR0QsRUFBRUEsRUFBRThzQixZQUFZN3NCLEVBQUU2c0IsY0FBYzlzQixJQUFJQyxFQUFFNnNCLFlBQVksQ0FBQ0MsVUFBVS9zQixFQUFFK3NCLFVBQVVDLGdCQUFnQmh0QixFQUFFZ3RCLGdCQUFnQkMsZUFBZWp0QixFQUFFaXRCLGVBQWVDLE9BQU9sdEIsRUFBRWt0QixPQUFPRSxRQUFRcHRCLEVBQUVvdEIsVUFBVSxTQUFTRSxHQUFHdHRCLEVBQUVDLEdBQUcsTUFBTSxDQUFDc3RCLFVBQVV2dEIsRUFBRXd0QixLQUFLdnRCLEVBQUUwRSxJQUFJLEVBQUU4b0IsUUFBUSxLQUFLQyxTQUFTLEtBQUtueUIsS0FBSyxNQUFNLFNBQVNveUIsR0FBRzN0QixFQUFFQyxHQUFtQixHQUFHLFFBQW5CRCxFQUFFQSxFQUFFOHNCLGFBQXdCLENBQVksSUFBSTd3QixHQUFmK0QsRUFBRUEsRUFBRWt0QixRQUFlQyxRQUFRLE9BQU9seEIsRUFBRWdFLEVBQUUxRSxLQUFLMEUsR0FBR0EsRUFBRTFFLEtBQUtVLEVBQUVWLEtBQUtVLEVBQUVWLEtBQUswRSxHQUFHRCxFQUFFbXRCLFFBQVFsdEIsR0FDclosU0FBUzJ0QixHQUFHNXRCLEVBQUVDLEdBQUcsSUFBSWhFLEVBQUUrRCxFQUFFOHNCLFlBQVkvckIsRUFBRWYsRUFBRXdQLFVBQVUsR0FBRyxPQUFPek8sR0FBb0I5RSxLQUFoQjhFLEVBQUVBLEVBQUUrckIsYUFBbUIsQ0FBQyxJQUFJLzJCLEVBQUUsS0FBS2lMLEVBQUUsS0FBeUIsR0FBRyxRQUF2Qi9FLEVBQUVBLEVBQUUrd0IsaUJBQTRCLENBQUMsRUFBRSxDQUFDLElBQUkvckIsRUFBRSxDQUFDc3NCLFVBQVV0eEIsRUFBRXN4QixVQUFVQyxLQUFLdnhCLEVBQUV1eEIsS0FBSzdvQixJQUFJMUksRUFBRTBJLElBQUk4b0IsUUFBUXh4QixFQUFFd3hCLFFBQVFDLFNBQVN6eEIsRUFBRXl4QixTQUFTbnlCLEtBQUssTUFBTSxPQUFPeUYsRUFBRWpMLEVBQUVpTCxFQUFFQyxFQUFFRCxFQUFFQSxFQUFFekYsS0FBSzBGLEVBQUVoRixFQUFFQSxFQUFFVixXQUFXLE9BQU9VLEdBQUcsT0FBTytFLEVBQUVqTCxFQUFFaUwsRUFBRWYsRUFBRWUsRUFBRUEsRUFBRXpGLEtBQUswRSxPQUFPbEssRUFBRWlMLEVBQUVmLEVBQWlILE9BQS9HaEUsRUFBRSxDQUFDOHdCLFVBQVVoc0IsRUFBRWdzQixVQUFVQyxnQkFBZ0JqM0IsRUFBRWszQixlQUFlanNCLEVBQUVrc0IsT0FBT25zQixFQUFFbXNCLE9BQU9FLFFBQVFyc0IsRUFBRXFzQixjQUFTcHRCLEVBQUU4c0IsWUFBWTd3QixHQUE0QixRQUFuQitELEVBQUUvRCxFQUFFZ3hCLGdCQUF3Qmh4QixFQUFFK3dCLGdCQUFnQi9zQixFQUFFRCxFQUFFekUsS0FDbmYwRSxFQUFFaEUsRUFBRWd4QixlQUFlaHRCLEVBQ25CLFNBQVM0dEIsR0FBRzd0QixFQUFFQyxFQUFFaEUsRUFBRThFLEdBQUcsSUFBSWhMLEVBQUVpSyxFQUFFOHNCLFlBQVlGLElBQUcsRUFBRyxJQUFJNXJCLEVBQUVqTCxFQUFFaTNCLGdCQUFnQi9yQixFQUFFbEwsRUFBRWszQixlQUFleG9CLEVBQUUxTyxFQUFFbTNCLE9BQU9DLFFBQVEsR0FBRyxPQUFPMW9CLEVBQUUsQ0FBQzFPLEVBQUVtM0IsT0FBT0MsUUFBUSxLQUFLLElBQUkzb0IsRUFBRUMsRUFBRXFLLEVBQUV0SyxFQUFFakosS0FBS2lKLEVBQUVqSixLQUFLLEtBQUssT0FBTzBGLEVBQUVELEVBQUU4TixFQUFFN04sRUFBRTFGLEtBQUt1VCxFQUFFN04sRUFBRXVELEVBQUUsSUFBSXBNLEVBQUU0SCxFQUFFd1AsVUFBVSxHQUFHLE9BQU9wWCxFQUFFLENBQWlCLElBQUkwMUIsR0FBcEIxMUIsRUFBRUEsRUFBRTAwQixhQUFvQkcsZUFBZWEsSUFBSTdzQixJQUFJLE9BQU82c0IsRUFBRTExQixFQUFFNDBCLGdCQUFnQmxlLEVBQUVnZixFQUFFdnlCLEtBQUt1VCxFQUFFMVcsRUFBRTYwQixlQUFlem9CLElBQUksR0FBRyxPQUFPeEQsRUFBRSxDQUE4QixJQUE3QjhzQixFQUFFLzNCLEVBQUVnM0IsVUFBVTlyQixFQUFFLEVBQUU3SSxFQUFFMFcsRUFBRXRLLEVBQUUsT0FBTyxDQUFDQyxFQUFFekQsRUFBRXdzQixLQUFLLElBQUlPLEVBQUUvc0IsRUFBRXVzQixVQUFVLElBQUl4c0IsRUFBRTBELEtBQUtBLEVBQUUsQ0FBQyxPQUFPck0sSUFBSUEsRUFBRUEsRUFBRW1ELEtBQUssQ0FBQ2d5QixVQUFVUSxFQUFFUCxLQUFLLEVBQUU3b0IsSUFBSTNELEVBQUUyRCxJQUFJOG9CLFFBQVF6c0IsRUFBRXlzQixRQUFRQyxTQUFTMXNCLEVBQUUwc0IsU0FDcmZueUIsS0FBSyxPQUFPeUUsRUFBRSxDQUFDLElBQUlndUIsRUFBRWh1QixFQUFFeWxCLEVBQUV6a0IsRUFBVSxPQUFSeUQsRUFBRXhFLEVBQUU4dEIsRUFBRTl4QixFQUFTd3BCLEVBQUU5Z0IsS0FBSyxLQUFLLEVBQWMsR0FBRyxtQkFBZnFwQixFQUFFdkksRUFBRWdJLFNBQWlDLENBQUNLLEVBQUVFLEVBQUU5MEIsS0FBSzYwQixFQUFFRCxFQUFFcnBCLEdBQUcsTUFBTXpFLEVBQUU4dEIsRUFBRUUsRUFBRSxNQUFNaHVCLEVBQUUsS0FBSyxFQUFFZ3VCLEVBQUUzekIsT0FBZSxLQUFUMnpCLEVBQUUzekIsTUFBWSxHQUFHLEtBQUssRUFBc0QsR0FBRyxPQUEzQ29LLEVBQUUsbUJBQWR1cEIsRUFBRXZJLEVBQUVnSSxTQUFnQ08sRUFBRTkwQixLQUFLNjBCLEVBQUVELEVBQUVycEIsR0FBR3VwQixHQUEwQixNQUFNaHVCLEVBQUU4dEIsRUFBRTN5QixFQUFFLEdBQUcyeUIsRUFBRXJwQixHQUFHLE1BQU16RSxFQUFFLEtBQUssRUFBRTRzQixJQUFHLEdBQUksT0FBTzVyQixFQUFFMHNCLFdBQVcxdEIsRUFBRTNGLE9BQU8sR0FBZSxRQUFab0ssRUFBRTFPLEVBQUVxM0IsU0FBaUJyM0IsRUFBRXEzQixRQUFRLENBQUNwc0IsR0FBR3lELEVBQUUvSyxLQUFLc0gsU0FBUytzQixFQUFFLENBQUNSLFVBQVVRLEVBQUVQLEtBQUsvb0IsRUFBRUUsSUFBSTNELEVBQUUyRCxJQUFJOG9CLFFBQVF6c0IsRUFBRXlzQixRQUFRQyxTQUFTMXNCLEVBQUUwc0IsU0FBU255QixLQUFLLE1BQU0sT0FBT25ELEdBQUcwVyxFQUFFMVcsRUFBRTIxQixFQUFFdnBCLEVBQUVzcEIsR0FBRzExQixFQUFFQSxFQUFFbUQsS0FBS3d5QixFQUFFOXNCLEdBQUd3RCxFQUFXLEdBQUcsUUFBWnpELEVBQUVBLEVBQUV6RixNQUMxZSxJQUFzQixRQUFuQmtKLEVBQUUxTyxFQUFFbTNCLE9BQU9DLFNBQWlCLE1BQVduc0IsRUFBRXlELEVBQUVsSixLQUFLa0osRUFBRWxKLEtBQUssS0FBS3hGLEVBQUVrM0IsZUFBZXhvQixFQUFFMU8sRUFBRW0zQixPQUFPQyxRQUFRLE1BQWMsT0FBTy8wQixJQUFJb00sRUFBRXNwQixHQUFHLzNCLEVBQUVnM0IsVUFBVXZvQixFQUFFek8sRUFBRWkzQixnQkFBZ0JsZSxFQUFFL1ksRUFBRWszQixlQUFlNzBCLEVBQUU2MUIsSUFBSWh0QixFQUFFakIsRUFBRXNzQixNQUFNcnJCLEVBQUVqQixFQUFFMlAsY0FBY21lLEdBQUcsU0FBU0ksR0FBR2x1QixFQUFFQyxFQUFFaEUsR0FBOEIsR0FBM0IrRCxFQUFFQyxFQUFFbXRCLFFBQVFudEIsRUFBRW10QixRQUFRLEtBQVEsT0FBT3B0QixFQUFFLElBQUlDLEVBQUUsRUFBRUEsRUFBRUQsRUFBRXJNLE9BQU9zTSxJQUFJLENBQUMsSUFBSWMsRUFBRWYsRUFBRUMsR0FBR2xLLEVBQUVnTCxFQUFFMnNCLFNBQVMsR0FBRyxPQUFPMzNCLEVBQUUsQ0FBcUIsR0FBcEJnTCxFQUFFMnNCLFNBQVMsS0FBSzNzQixFQUFFOUUsRUFBSyxtQkFBb0JsRyxFQUFFLE1BQU1PLE1BQU15SixFQUFFLElBQUloSyxJQUFJQSxFQUFFbUQsS0FBSzZILEtBQUssSUFBSW90QixJQUFHLElBQUt0dUIsRUFBR3V1QixXQUFXQyxLQUMzYixTQUFTQyxHQUFHdHVCLEVBQUVDLEVBQUVoRSxFQUFFOEUsR0FBOEI5RSxFQUFFLE9BQVhBLEVBQUVBLEVBQUU4RSxFQUF0QmQsRUFBRUQsRUFBRTJQLGdCQUE4QzFQLEVBQUU5RSxFQUFFLEdBQUc4RSxFQUFFaEUsR0FBRytELEVBQUUyUCxjQUFjMVQsRUFBRSxJQUFJK0QsRUFBRXNzQixRQUFRdHNCLEVBQUU4c0IsWUFBWUMsVUFBVTl3QixHQUMzSSxJQUFJc3lCLEdBQUcsQ0FBQ0MsVUFBVSxTQUFTeHVCLEdBQUcsU0FBT0EsRUFBRUEsRUFBRXl1QixrQkFBaUJsZixHQUFHdlAsS0FBS0EsR0FBTTB1QixnQkFBZ0IsU0FBUzF1QixFQUFFQyxFQUFFaEUsR0FBRytELEVBQUVBLEVBQUV5dUIsZ0JBQWdCLElBQUkxdEIsRUFBRTR0QixLQUFLNTRCLEVBQUU2NEIsR0FBRzV1QixHQUFHZ0IsRUFBRXNzQixHQUFHdnNCLEVBQUVoTCxHQUFHaUwsRUFBRXlzQixRQUFReHRCLEVBQUUsTUFBU2hFLElBQWMrRSxFQUFFMHNCLFNBQVN6eEIsR0FBRzB4QixHQUFHM3RCLEVBQUVnQixHQUFHNnRCLEdBQUc3dUIsRUFBRWpLLEVBQUVnTCxJQUFJK3RCLG9CQUFvQixTQUFTOXVCLEVBQUVDLEVBQUVoRSxHQUFHK0QsRUFBRUEsRUFBRXl1QixnQkFBZ0IsSUFBSTF0QixFQUFFNHRCLEtBQUs1NEIsRUFBRTY0QixHQUFHNXVCLEdBQUdnQixFQUFFc3NCLEdBQUd2c0IsRUFBRWhMLEdBQUdpTCxFQUFFMkQsSUFBSSxFQUFFM0QsRUFBRXlzQixRQUFReHRCLEVBQUUsTUFBU2hFLElBQWMrRSxFQUFFMHNCLFNBQVN6eEIsR0FBRzB4QixHQUFHM3RCLEVBQUVnQixHQUFHNnRCLEdBQUc3dUIsRUFBRWpLLEVBQUVnTCxJQUFJZ3VCLG1CQUFtQixTQUFTL3VCLEVBQUVDLEdBQUdELEVBQUVBLEVBQUV5dUIsZ0JBQWdCLElBQUl4eUIsRUFBRTB5QixLQUFLNXRCLEVBQUU2dEIsR0FBRzV1QixHQUFHakssRUFBRXUzQixHQUFHcnhCLEVBQUU4RSxHQUFHaEwsRUFBRTRPLElBQUksRUFBRSxNQUFTMUUsSUFBY2xLLEVBQUUyM0IsU0FDamZ6dEIsR0FBRzB0QixHQUFHM3RCLEVBQUVqSyxHQUFHODRCLEdBQUc3dUIsRUFBRWUsRUFBRTlFLEtBQUssU0FBUyt5QixHQUFHaHZCLEVBQUVDLEVBQUVoRSxFQUFFOEUsRUFBRWhMLEVBQUVpTCxFQUFFQyxHQUFpQixNQUFNLG1CQUFwQmpCLEVBQUVBLEVBQUU2TixXQUFzQ29oQixzQkFBc0JqdkIsRUFBRWl2QixzQkFBc0JsdUIsRUFBRUMsRUFBRUMsS0FBR2hCLEVBQUVyTSxXQUFXcU0sRUFBRXJNLFVBQVVzN0Isc0JBQXNCdk0sR0FBRzFtQixFQUFFOEUsSUFBSzRoQixHQUFHNXNCLEVBQUVpTCxJQUMvTSxTQUFTbXVCLEdBQUdudkIsRUFBRUMsRUFBRWhFLEdBQUcsSUFBSThFLEdBQUUsRUFBR2hMLEVBQUV1eUIsR0FBT3RuQixFQUFFZixFQUFFbE4sWUFBMlcsTUFBL1YsaUJBQWtCaU8sR0FBRyxPQUFPQSxFQUFFQSxFQUFFd3JCLEdBQUd4ckIsSUFBSWpMLEVBQUU4eUIsR0FBRzVvQixHQUFHd29CLEdBQUdGLEdBQUV0WSxRQUF5QmpQLEdBQUdELEVBQUUsT0FBdEJBLEVBQUVkLEVBQUVqTixlQUF3QzAxQixHQUFHMW9CLEVBQUVqSyxHQUFHdXlCLElBQUlyb0IsRUFBRSxJQUFJQSxFQUFFaEUsRUFBRStFLEdBQUdoQixFQUFFMlAsY0FBYyxPQUFPMVAsRUFBRW12QixZQUFPLElBQVNudkIsRUFBRW12QixNQUFNbnZCLEVBQUVtdkIsTUFBTSxLQUFLbnZCLEVBQUVvdkIsUUFBUWQsR0FBR3Z1QixFQUFFNk4sVUFBVTVOLEVBQUVBLEVBQUV3dUIsZ0JBQWdCenVCLEVBQUVlLEtBQUlmLEVBQUVBLEVBQUU2TixXQUFZOGEsNENBQTRDNXlCLEVBQUVpSyxFQUFFNG9CLDBDQUEwQzVuQixHQUFVZixFQUMzWixTQUFTcXZCLEdBQUd0dkIsRUFBRUMsRUFBRWhFLEVBQUU4RSxHQUFHZixFQUFFQyxFQUFFbXZCLE1BQU0sbUJBQW9CbnZCLEVBQUVzdkIsMkJBQTJCdHZCLEVBQUVzdkIsMEJBQTBCdHpCLEVBQUU4RSxHQUFHLG1CQUFvQmQsRUFBRXV2QixrQ0FBa0N2dkIsRUFBRXV2QixpQ0FBaUN2ekIsRUFBRThFLEdBQUdkLEVBQUVtdkIsUUFBUXB2QixHQUFHdXVCLEdBQUdPLG9CQUFvQjd1QixFQUFFQSxFQUFFbXZCLE1BQU0sTUFDL1AsU0FBU0ssR0FBR3p2QixFQUFFQyxFQUFFaEUsRUFBRThFLEdBQUcsSUFBSWhMLEVBQUVpSyxFQUFFNk4sVUFBVTlYLEVBQUVpSSxNQUFNL0IsRUFBRWxHLEVBQUVxNUIsTUFBTXB2QixFQUFFMlAsY0FBYzVaLEVBQUVzNEIsS0FBS0YsR0FBR3RCLEdBQUc3c0IsR0FBRyxJQUFJZ0IsRUFBRWYsRUFBRWxOLFlBQVksaUJBQWtCaU8sR0FBRyxPQUFPQSxFQUFFakwsRUFBRTAyQixRQUFRRCxHQUFHeHJCLElBQUlBLEVBQUU2bkIsR0FBRzVvQixHQUFHd29CLEdBQUdGLEdBQUV0WSxRQUFRbGEsRUFBRTAyQixRQUFRL0QsR0FBRzFvQixFQUFFZ0IsSUFBSTZzQixHQUFHN3RCLEVBQUUvRCxFQUFFbEcsRUFBRWdMLEdBQUdoTCxFQUFFcTVCLE1BQU1wdkIsRUFBRTJQLGNBQTJDLG1CQUE3QjNPLEVBQUVmLEVBQUU1TSw0QkFBaURpN0IsR0FBR3R1QixFQUFFQyxFQUFFZSxFQUFFL0UsR0FBR2xHLEVBQUVxNUIsTUFBTXB2QixFQUFFMlAsZUFBZSxtQkFBb0IxUCxFQUFFNU0sMEJBQTBCLG1CQUFvQjBDLEVBQUUyNUIseUJBQXlCLG1CQUFvQjM1QixFQUFFNDVCLDJCQUEyQixtQkFBb0I1NUIsRUFBRTY1QixxQkFDdmUzdkIsRUFBRWxLLEVBQUVxNUIsTUFBTSxtQkFBb0JyNUIsRUFBRTY1QixvQkFBb0I3NUIsRUFBRTY1QixxQkFBcUIsbUJBQW9CNzVCLEVBQUU0NUIsMkJBQTJCNTVCLEVBQUU0NUIsNEJBQTRCMXZCLElBQUlsSyxFQUFFcTVCLE9BQU9iLEdBQUdPLG9CQUFvQi80QixFQUFFQSxFQUFFcTVCLE1BQU0sTUFBTXZCLEdBQUc3dEIsRUFBRS9ELEVBQUVsRyxFQUFFZ0wsR0FBR2hMLEVBQUVxNUIsTUFBTXB2QixFQUFFMlAsZUFBZSxtQkFBb0I1WixFQUFFODVCLG9CQUFvQjd2QixFQUFFM0YsT0FBTyxHQUFHLElBQUl5MUIsR0FBR3h6QixNQUFNbUIsUUFDdlQsU0FBU3N5QixHQUFHL3ZCLEVBQUVDLEVBQUVoRSxHQUFXLEdBQUcsUUFBWCtELEVBQUUvRCxFQUFFK3pCLE1BQWlCLG1CQUFvQmh3QixHQUFHLGlCQUFrQkEsRUFBRSxDQUFDLEdBQUcvRCxFQUFFZzBCLE9BQU8sQ0FBWSxHQUFYaDBCLEVBQUVBLEVBQUVnMEIsT0FBWSxDQUFDLEdBQUcsSUFBSWgwQixFQUFFMEksSUFBSSxNQUFNck8sTUFBTXlKLEVBQUUsTUFBTSxJQUFJZ0IsRUFBRTlFLEVBQUU0UixVQUFVLElBQUk5TSxFQUFFLE1BQU16SyxNQUFNeUosRUFBRSxJQUFJQyxJQUFJLElBQUlqSyxFQUFFLEdBQUdpSyxFQUFFLE9BQUcsT0FBT0MsR0FBRyxPQUFPQSxFQUFFK3ZCLEtBQUssbUJBQW9CL3ZCLEVBQUUrdkIsS0FBSy92QixFQUFFK3ZCLElBQUlFLGFBQWFuNkIsRUFBU2tLLEVBQUUrdkIsTUFBSS92QixFQUFFLFNBQVNELEdBQUcsSUFBSUMsRUFBRWMsRUFBRXN0QixLQUFLcHVCLElBQUlrdUIsS0FBS2x1QixFQUFFYyxFQUFFc3RCLEtBQUssSUFBSSxPQUFPcnVCLFNBQVNDLEVBQUVsSyxHQUFHa0ssRUFBRWxLLEdBQUdpSyxJQUFLa3dCLFdBQVduNkIsRUFBU2tLLEdBQUUsR0FBRyxpQkFBa0JELEVBQUUsTUFBTTFKLE1BQU15SixFQUFFLE1BQU0sSUFBSTlELEVBQUVnMEIsT0FBTyxNQUFNMzVCLE1BQU15SixFQUFFLElBQUlDLElBQUssT0FBT0EsRUFDaGUsU0FBU213QixHQUFHbndCLEVBQUVDLEdBQUcsR0FBRyxhQUFhRCxFQUFFeE0sS0FBSyxNQUFNOEMsTUFBTXlKLEVBQUUsR0FBRyxvQkFBb0JwTCxPQUFPZixVQUFVdUksU0FBU2pELEtBQUsrRyxHQUFHLHFCQUFxQnRMLE9BQU9hLEtBQUt5SyxHQUFHNUgsS0FBSyxNQUFNLElBQUk0SCxJQUNsSyxTQUFTbXdCLEdBQUdwd0IsR0FBRyxTQUFTQyxFQUFFQSxFQUFFaEUsR0FBRyxHQUFHK0QsRUFBRSxDQUFDLElBQUllLEVBQUVkLEVBQUVvd0IsV0FBVyxPQUFPdHZCLEdBQUdBLEVBQUV1dkIsV0FBV3IwQixFQUFFZ0UsRUFBRW93QixXQUFXcDBCLEdBQUdnRSxFQUFFc3dCLFlBQVl0d0IsRUFBRW93QixXQUFXcDBCLEVBQUVBLEVBQUVxMEIsV0FBVyxLQUFLcjBCLEVBQUU1QixNQUFNLEdBQUcsU0FBUzRCLEVBQUVBLEVBQUU4RSxHQUFHLElBQUlmLEVBQUUsT0FBTyxLQUFLLEtBQUssT0FBT2UsR0FBR2QsRUFBRWhFLEVBQUU4RSxHQUFHQSxFQUFFQSxFQUFFaVAsUUFBUSxPQUFPLEtBQUssU0FBU2pQLEVBQUVmLEVBQUVDLEdBQUcsSUFBSUQsRUFBRSxJQUFJOFEsSUFBSSxPQUFPN1EsR0FBRyxPQUFPQSxFQUFFcEssSUFBSW1LLEVBQUVxRSxJQUFJcEUsRUFBRXBLLElBQUlvSyxHQUFHRCxFQUFFcUUsSUFBSXBFLEVBQUVqRixNQUFNaUYsR0FBR0EsRUFBRUEsRUFBRStQLFFBQVEsT0FBT2hRLEVBQUUsU0FBU2pLLEVBQUVpSyxFQUFFQyxHQUFzQyxPQUFuQ0QsRUFBRXd3QixHQUFHeHdCLEVBQUVDLElBQUtqRixNQUFNLEVBQUVnRixFQUFFZ1EsUUFBUSxLQUFZaFEsRUFBRSxTQUFTZ0IsRUFBRWYsRUFBRWhFLEVBQUU4RSxHQUFhLE9BQVZkLEVBQUVqRixNQUFNK0YsRUFBTWYsRUFBNEIsUUFBakJlLEVBQUVkLEVBQUV1UCxZQUE2QnpPLEVBQUVBLEVBQUUvRixPQUFRaUIsR0FBR2dFLEVBQUU1RixNQUFNLEVBQ3BmNEIsR0FBRzhFLEdBQUVkLEVBQUU1RixNQUFNLEVBQVM0QixHQURvYUEsRUFDbGEsU0FBU2dGLEVBQUVoQixHQUFzQyxPQUFuQ0QsR0FBRyxPQUFPQyxFQUFFdVAsWUFBWXZQLEVBQUU1RixNQUFNLEdBQVU0RixFQUFFLFNBQVN3RSxFQUFFekUsRUFBRUMsRUFBRWhFLEVBQUU4RSxHQUFHLE9BQUcsT0FBT2QsR0FBRyxJQUFJQSxFQUFFMEUsTUFBVzFFLEVBQUV3d0IsR0FBR3gwQixFQUFFK0QsRUFBRTB3QixLQUFLM3ZCLElBQUswTyxPQUFPelAsRUFBRUMsS0FBRUEsRUFBRWxLLEVBQUVrSyxFQUFFaEUsSUFBS3dULE9BQU96UCxFQUFTQyxHQUFFLFNBQVN1RSxFQUFFeEUsRUFBRUMsRUFBRWhFLEVBQUU4RSxHQUFHLE9BQUcsT0FBT2QsR0FBR0EsRUFBRWQsY0FBY2xELEVBQUV6SSxPQUFZdU4sRUFBRWhMLEVBQUVrSyxFQUFFaEUsRUFBRStCLFFBQVNneUIsSUFBSUQsR0FBRy92QixFQUFFQyxFQUFFaEUsR0FBRzhFLEVBQUUwTyxPQUFPelAsRUFBRWUsS0FBRUEsRUFBRTR2QixHQUFHMTBCLEVBQUV6SSxLQUFLeUksRUFBRXBHLElBQUlvRyxFQUFFK0IsTUFBTSxLQUFLZ0MsRUFBRTB3QixLQUFLM3ZCLElBQUtpdkIsSUFBSUQsR0FBRy92QixFQUFFQyxFQUFFaEUsR0FBRzhFLEVBQUUwTyxPQUFPelAsRUFBU2UsR0FBRSxTQUFTK04sRUFBRTlPLEVBQUVDLEVBQUVoRSxFQUFFOEUsR0FBRyxPQUFHLE9BQU9kLEdBQUcsSUFBSUEsRUFBRTBFLEtBQUsxRSxFQUFFNE4sVUFBVXFFLGdCQUFnQmpXLEVBQUVpVyxlQUFlalMsRUFBRTROLFVBQVUraUIsaUJBQWlCMzBCLEVBQUUyMEIsaUJBQXNCM3dCLEVBQ3JnQjR3QixHQUFHNTBCLEVBQUUrRCxFQUFFMHdCLEtBQUszdkIsSUFBSzBPLE9BQU96UCxFQUFFQyxLQUFFQSxFQUFFbEssRUFBRWtLLEVBQUVoRSxFQUFFZ0wsVUFBVSxLQUFNd0ksT0FBT3pQLEVBQVNDLEdBQUUsU0FBUzdILEVBQUU0SCxFQUFFQyxFQUFFaEUsRUFBRThFLEVBQUVDLEdBQUcsT0FBRyxPQUFPZixHQUFHLElBQUlBLEVBQUUwRSxNQUFXMUUsRUFBRTZ3QixHQUFHNzBCLEVBQUUrRCxFQUFFMHdCLEtBQUszdkIsRUFBRUMsSUFBS3lPLE9BQU96UCxFQUFFQyxLQUFFQSxFQUFFbEssRUFBRWtLLEVBQUVoRSxJQUFLd1QsT0FBT3pQLEVBQVNDLEdBQUUsU0FBUzZ0QixFQUFFOXRCLEVBQUVDLEVBQUVoRSxHQUFHLEdBQUcsaUJBQWtCZ0UsR0FBRyxpQkFBa0JBLEVBQUUsT0FBT0EsRUFBRXd3QixHQUFHLEdBQUd4d0IsRUFBRUQsRUFBRTB3QixLQUFLejBCLElBQUt3VCxPQUFPelAsRUFBRUMsRUFBRSxHQUFHLGlCQUFrQkEsR0FBRyxPQUFPQSxFQUFFLENBQUMsT0FBT0EsRUFBRTZFLFVBQVUsS0FBS3ZDLEVBQUcsT0FBT3RHLEVBQUUwMEIsR0FBRzF3QixFQUFFek0sS0FBS3lNLEVBQUVwSyxJQUFJb0ssRUFBRWpDLE1BQU0sS0FBS2dDLEVBQUUwd0IsS0FBS3owQixJQUFLK3pCLElBQUlELEdBQUcvdkIsRUFBRSxLQUFLQyxHQUFHaEUsRUFBRXdULE9BQU96UCxFQUFFL0QsRUFBRSxLQUFLdUcsRUFBRyxPQUFPdkMsRUFBRTR3QixHQUFHNXdCLEVBQUVELEVBQUUwd0IsS0FBS3owQixJQUFLd1QsT0FBT3pQLEVBQUVDLEVBQUUsR0FBRzZ2QixHQUFHN3ZCLElBQUk2RCxFQUFHN0QsR0FBRyxPQUFPQSxFQUFFNndCLEdBQUc3d0IsRUFDbmZELEVBQUUwd0IsS0FBS3owQixFQUFFLE9BQVF3VCxPQUFPelAsRUFBRUMsRUFBRWt3QixHQUFHbndCLEVBQUVDLEdBQUcsT0FBTyxLQUFLLFNBQVM4dEIsRUFBRS90QixFQUFFQyxFQUFFaEUsRUFBRThFLEdBQUcsSUFBSWhMLEVBQUUsT0FBT2tLLEVBQUVBLEVBQUVwSyxJQUFJLEtBQUssR0FBRyxpQkFBa0JvRyxHQUFHLGlCQUFrQkEsRUFBRSxPQUFPLE9BQU9sRyxFQUFFLEtBQUswTyxFQUFFekUsRUFBRUMsRUFBRSxHQUFHaEUsRUFBRThFLEdBQUcsR0FBRyxpQkFBa0I5RSxHQUFHLE9BQU9BLEVBQUUsQ0FBQyxPQUFPQSxFQUFFNkksVUFBVSxLQUFLdkMsRUFBRyxPQUFPdEcsRUFBRXBHLE1BQU1FLEVBQUVrRyxFQUFFekksT0FBT2lQLEVBQUdySyxFQUFFNEgsRUFBRUMsRUFBRWhFLEVBQUUrQixNQUFNaUosU0FBU2xHLEVBQUVoTCxHQUFHeU8sRUFBRXhFLEVBQUVDLEVBQUVoRSxFQUFFOEUsR0FBRyxLQUFLLEtBQUt5QixFQUFHLE9BQU92RyxFQUFFcEcsTUFBTUUsRUFBRStZLEVBQUU5TyxFQUFFQyxFQUFFaEUsRUFBRThFLEdBQUcsS0FBSyxHQUFHK3VCLEdBQUc3ekIsSUFBSTZILEVBQUc3SCxHQUFHLE9BQU8sT0FBT2xHLEVBQUUsS0FBS3FDLEVBQUU0SCxFQUFFQyxFQUFFaEUsRUFBRThFLEVBQUUsTUFBTW92QixHQUFHbndCLEVBQUUvRCxHQUFHLE9BQU8sS0FBSyxTQUFTK3hCLEVBQUVodUIsRUFBRUMsRUFBRWhFLEVBQUU4RSxFQUFFaEwsR0FBRyxHQUFHLGlCQUFrQmdMLEdBQUcsaUJBQWtCQSxFQUFFLE9BQ2xlMEQsRUFBRXhFLEVBRHVlRCxFQUFFQSxFQUFFd0YsSUFBSXZKLElBQ3RmLEtBQVcsR0FBRzhFLEVBQUVoTCxHQUFHLEdBQUcsaUJBQWtCZ0wsR0FBRyxPQUFPQSxFQUFFLENBQUMsT0FBT0EsRUFBRStELFVBQVUsS0FBS3ZDLEVBQUcsT0FBT3ZDLEVBQUVBLEVBQUV3RixJQUFJLE9BQU96RSxFQUFFbEwsSUFBSW9HLEVBQUU4RSxFQUFFbEwsTUFBTSxLQUFLa0wsRUFBRXZOLE9BQU9pUCxFQUFHckssRUFBRTZILEVBQUVELEVBQUVlLEVBQUUvQyxNQUFNaUosU0FBU2xSLEVBQUVnTCxFQUFFbEwsS0FBSzJPLEVBQUV2RSxFQUFFRCxFQUFFZSxFQUFFaEwsR0FBRyxLQUFLeU0sRUFBRyxPQUEyQ3NNLEVBQUU3TyxFQUF0Q0QsRUFBRUEsRUFBRXdGLElBQUksT0FBT3pFLEVBQUVsTCxJQUFJb0csRUFBRThFLEVBQUVsTCxNQUFNLEtBQVdrTCxFQUFFaEwsR0FBRyxHQUFHKzVCLEdBQUcvdUIsSUFBSStDLEVBQUcvQyxHQUFHLE9BQXdCM0ksRUFBRTZILEVBQW5CRCxFQUFFQSxFQUFFd0YsSUFBSXZKLElBQUksS0FBVzhFLEVBQUVoTCxFQUFFLE1BQU1vNkIsR0FBR2x3QixFQUFFYyxHQUFHLE9BQU8sS0FBSyxTQUFTMGtCLEVBQUUxdkIsRUFBRWtMLEVBQUV3RCxFQUFFRCxHQUFHLElBQUksSUFBSXNLLEVBQUUsS0FBS2dYLEVBQUUsS0FBS0YsRUFBRTNrQixFQUFFMGtCLEVBQUUxa0IsRUFBRSxFQUFFNGtCLEVBQUUsS0FBSyxPQUFPRCxHQUFHRCxFQUFFbGhCLEVBQUU5USxPQUFPZ3lCLElBQUksQ0FBQ0MsRUFBRTVxQixNQUFNMnFCLEdBQUdFLEVBQUVELEVBQUVBLEVBQUUsTUFBTUMsRUFBRUQsRUFBRTVWLFFBQVEsSUFBSTVYLEVBQUUyMUIsRUFBRWg0QixFQUFFNnZCLEVBQUVuaEIsRUFBRWtoQixHQUFHbmhCLEdBQUcsR0FBRyxPQUFPcE0sRUFBRSxDQUFDLE9BQU93dEIsSUFBSUEsRUFBRUMsR0FBRyxNQUFNN2xCLEdBQUc0bEIsR0FBRyxPQUNqZnh0QixFQUFFb1gsV0FBV3ZQLEVBQUVsSyxFQUFFNnZCLEdBQUcza0IsRUFBRUQsRUFBRTVJLEVBQUU2SSxFQUFFMGtCLEdBQUcsT0FBT0csRUFBRWhYLEVBQUUxVyxFQUFFMHRCLEVBQUU5VixRQUFRNVgsRUFBRTB0QixFQUFFMXRCLEVBQUV3dEIsRUFBRUMsRUFBRSxHQUFHRixJQUFJbGhCLEVBQUU5USxPQUFPLE9BQU9zSSxFQUFFbEcsRUFBRTZ2QixHQUFHOVcsRUFBRSxHQUFHLE9BQU84VyxFQUFFLENBQUMsS0FBS0QsRUFBRWxoQixFQUFFOVEsT0FBT2d5QixJQUFrQixRQUFkQyxFQUFFa0ksRUFBRS8zQixFQUFFME8sRUFBRWtoQixHQUFHbmhCLE1BQWN2RCxFQUFFRCxFQUFFNGtCLEVBQUUza0IsRUFBRTBrQixHQUFHLE9BQU9HLEVBQUVoWCxFQUFFOFcsRUFBRUUsRUFBRTlWLFFBQVE0VixFQUFFRSxFQUFFRixHQUFHLE9BQU85VyxFQUFFLElBQUk4VyxFQUFFN2tCLEVBQUVoTCxFQUFFNnZCLEdBQUdELEVBQUVsaEIsRUFBRTlRLE9BQU9neUIsSUFBc0IsUUFBbEJFLEVBQUVtSSxFQUFFcEksRUFBRTd2QixFQUFFNHZCLEVBQUVsaEIsRUFBRWtoQixHQUFHbmhCLE1BQWN4RSxHQUFHLE9BQU82bEIsRUFBRXJXLFdBQVdvVyxFQUFFblUsT0FBTyxPQUFPb1UsRUFBRWh3QixJQUFJOHZCLEVBQUVFLEVBQUVod0IsS0FBS29MLEVBQUVELEVBQUU2a0IsRUFBRTVrQixFQUFFMGtCLEdBQUcsT0FBT0csRUFBRWhYLEVBQUUrVyxFQUFFQyxFQUFFOVYsUUFBUTZWLEVBQUVDLEVBQUVELEdBQTRDLE9BQXpDN2xCLEdBQUc0bEIsRUFBRXB0QixTQUFRLFNBQVN3SCxHQUFHLE9BQU9DLEVBQUVsSyxFQUFFaUssTUFBWThPLEVBQUUsU0FBUzRXLEVBQUUzdkIsRUFBRWtMLEVBQUV3RCxFQUFFRCxHQUFHLElBQUlzSyxFQUFFaEwsRUFBR1csR0FBRyxHQUFHLG1CQUFvQnFLLEVBQUUsTUFBTXhZLE1BQU15SixFQUFFLE1BQWtCLEdBQUcsT0FBZjBFLEVBQUVxSyxFQUFFNVYsS0FBS3VMLElBQzFlLE1BQU1uTyxNQUFNeUosRUFBRSxNQUFNLElBQUksSUFBSStsQixFQUFFaFgsRUFBRSxLQUFLOFcsRUFBRTNrQixFQUFFMGtCLEVBQUUxa0IsRUFBRSxFQUFFNGtCLEVBQUUsS0FBS3p0QixFQUFFcU0sRUFBRWxKLE9BQU8sT0FBT3FxQixJQUFJeHRCLEVBQUUyNEIsS0FBS3BMLElBQUl2dEIsRUFBRXFNLEVBQUVsSixPQUFPLENBQUNxcUIsRUFBRTVxQixNQUFNMnFCLEdBQUdFLEVBQUVELEVBQUVBLEVBQUUsTUFBTUMsRUFBRUQsRUFBRTVWLFFBQVEsSUFBSTBWLEVBQUVxSSxFQUFFaDRCLEVBQUU2dkIsRUFBRXh0QixFQUFFMEUsTUFBTTBILEdBQUcsR0FBRyxPQUFPa2hCLEVBQUUsQ0FBQyxPQUFPRSxJQUFJQSxFQUFFQyxHQUFHLE1BQU03bEIsR0FBRzRsQixHQUFHLE9BQU9GLEVBQUVsVyxXQUFXdlAsRUFBRWxLLEVBQUU2dkIsR0FBRzNrQixFQUFFRCxFQUFFMGtCLEVBQUV6a0IsRUFBRTBrQixHQUFHLE9BQU9HLEVBQUVoWCxFQUFFNFcsRUFBRUksRUFBRTlWLFFBQVEwVixFQUFFSSxFQUFFSixFQUFFRSxFQUFFQyxFQUFFLEdBQUd6dEIsRUFBRTI0QixLQUFLLE9BQU85MEIsRUFBRWxHLEVBQUU2dkIsR0FBRzlXLEVBQUUsR0FBRyxPQUFPOFcsRUFBRSxDQUFDLE1BQU14dEIsRUFBRTI0QixLQUFLcEwsSUFBSXZ0QixFQUFFcU0sRUFBRWxKLE9BQXdCLFFBQWpCbkQsRUFBRTAxQixFQUFFLzNCLEVBQUVxQyxFQUFFMEUsTUFBTTBILE1BQWN2RCxFQUFFRCxFQUFFNUksRUFBRTZJLEVBQUUwa0IsR0FBRyxPQUFPRyxFQUFFaFgsRUFBRTFXLEVBQUUwdEIsRUFBRTlWLFFBQVE1WCxFQUFFMHRCLEVBQUUxdEIsR0FBRyxPQUFPMFcsRUFBRSxJQUFJOFcsRUFBRTdrQixFQUFFaEwsRUFBRTZ2QixJQUFJeHRCLEVBQUUyNEIsS0FBS3BMLElBQUl2dEIsRUFBRXFNLEVBQUVsSixPQUE0QixRQUFyQm5ELEVBQUU0MUIsRUFBRXBJLEVBQUU3dkIsRUFBRTR2QixFQUFFdnRCLEVBQUUwRSxNQUFNMEgsTUFBY3hFLEdBQUcsT0FBTzVILEVBQUVvWCxXQUNoZm9XLEVBQUVuVSxPQUFPLE9BQU9yWixFQUFFdkMsSUFBSTh2QixFQUFFdnRCLEVBQUV2QyxLQUFLb0wsRUFBRUQsRUFBRTVJLEVBQUU2SSxFQUFFMGtCLEdBQUcsT0FBT0csRUFBRWhYLEVBQUUxVyxFQUFFMHRCLEVBQUU5VixRQUFRNVgsRUFBRTB0QixFQUFFMXRCLEdBQTRDLE9BQXpDNEgsR0FBRzRsQixFQUFFcHRCLFNBQVEsU0FBU3dILEdBQUcsT0FBT0MsRUFBRWxLLEVBQUVpSyxNQUFZOE8sRUFBRSxPQUFPLFNBQVM5TyxFQUFFZSxFQUFFQyxFQUFFeUQsR0FBRyxJQUFJRCxFQUFFLGlCQUFrQnhELEdBQUcsT0FBT0EsR0FBR0EsRUFBRXhOLE9BQU9pUCxHQUFJLE9BQU96QixFQUFFbkwsSUFBSTJPLElBQUl4RCxFQUFFQSxFQUFFaEQsTUFBTWlKLFVBQVUsSUFBSTZILEVBQUUsaUJBQWtCOU4sR0FBRyxPQUFPQSxFQUFFLEdBQUc4TixFQUFFLE9BQU85TixFQUFFOEQsVUFBVSxLQUFLdkMsRUFBR3ZDLEVBQUUsQ0FBUyxJQUFSOE8sRUFBRTlOLEVBQUVuTCxJQUFRMk8sRUFBRXpELEVBQUUsT0FBT3lELEdBQUcsQ0FBQyxHQUFHQSxFQUFFM08sTUFBTWlaLEVBQUUsQ0FBQyxPQUFPdEssRUFBRUcsS0FBSyxLQUFLLEVBQUUsR0FBRzNELEVBQUV4TixPQUFPaVAsRUFBRyxDQUFDeEcsRUFBRStELEVBQUV3RSxFQUFFd0wsVUFBU2pQLEVBQUVoTCxFQUFFeU8sRUFBRXhELEVBQUVoRCxNQUFNaUosV0FBWXdJLE9BQU96UCxFQUFFQSxFQUFFZSxFQUFFLE1BQU1mLEVBQUUsTUFBTSxRQUFRLEdBQUd3RSxFQUFFckYsY0FBYzZCLEVBQUV4TixLQUFLLENBQUN5SSxFQUFFK0QsRUFBRXdFLEVBQUV3TCxVQUM1ZWpQLEVBQUVoTCxFQUFFeU8sRUFBRXhELEVBQUVoRCxRQUFTZ3lCLElBQUlELEdBQUcvdkIsRUFBRXdFLEVBQUV4RCxHQUFHRCxFQUFFME8sT0FBT3pQLEVBQUVBLEVBQUVlLEVBQUUsTUFBTWYsR0FBRy9ELEVBQUUrRCxFQUFFd0UsR0FBRyxNQUFXdkUsRUFBRUQsRUFBRXdFLEdBQUdBLEVBQUVBLEVBQUV3TCxRQUFRaFAsRUFBRXhOLE9BQU9pUCxJQUFJMUIsRUFBRSt2QixHQUFHOXZCLEVBQUVoRCxNQUFNaUosU0FBU2pILEVBQUUwd0IsS0FBS2pzQixFQUFFekQsRUFBRW5MLE1BQU80WixPQUFPelAsRUFBRUEsRUFBRWUsS0FBSTBELEVBQUVrc0IsR0FBRzN2QixFQUFFeE4sS0FBS3dOLEVBQUVuTCxJQUFJbUwsRUFBRWhELE1BQU0sS0FBS2dDLEVBQUUwd0IsS0FBS2pzQixJQUFLdXJCLElBQUlELEdBQUcvdkIsRUFBRWUsRUFBRUMsR0FBR3lELEVBQUVnTCxPQUFPelAsRUFBRUEsRUFBRXlFLEdBQUcsT0FBT3hELEVBQUVqQixHQUFHLEtBQUt3QyxFQUFHeEMsRUFBRSxDQUFDLElBQUl3RSxFQUFFeEQsRUFBRW5MLElBQUksT0FBT2tMLEdBQUcsQ0FBQyxHQUFHQSxFQUFFbEwsTUFBTTJPLEVBQUUsSUFBRyxJQUFJekQsRUFBRTRELEtBQUs1RCxFQUFFOE0sVUFBVXFFLGdCQUFnQmxSLEVBQUVrUixlQUFlblIsRUFBRThNLFVBQVUraUIsaUJBQWlCNXZCLEVBQUU0dkIsZUFBZSxDQUFDMzBCLEVBQUUrRCxFQUFFZSxFQUFFaVAsVUFBU2pQLEVBQUVoTCxFQUFFZ0wsRUFBRUMsRUFBRWlHLFVBQVUsS0FBTXdJLE9BQU96UCxFQUFFQSxFQUFFZSxFQUFFLE1BQU1mLEVBQU8vRCxFQUFFK0QsRUFBRWUsR0FBRyxNQUFXZCxFQUFFRCxFQUFFZSxHQUFHQSxFQUFFQSxFQUFFaVAsU0FBUWpQLEVBQ3BmOHZCLEdBQUc3dkIsRUFBRWhCLEVBQUUwd0IsS0FBS2pzQixJQUFLZ0wsT0FBT3pQLEVBQUVBLEVBQUVlLEVBQUUsT0FBT0UsRUFBRWpCLEdBQUcsR0FBRyxpQkFBa0JnQixHQUFHLGlCQUFrQkEsRUFBRSxPQUFPQSxFQUFFLEdBQUdBLEVBQUUsT0FBT0QsR0FBRyxJQUFJQSxFQUFFNEQsS0FBSzFJLEVBQUUrRCxFQUFFZSxFQUFFaVAsVUFBU2pQLEVBQUVoTCxFQUFFZ0wsRUFBRUMsSUFBS3lPLE9BQU96UCxFQUFFQSxFQUFFZSxJQUFJOUUsRUFBRStELEVBQUVlLElBQUdBLEVBQUUwdkIsR0FBR3p2QixFQUFFaEIsRUFBRTB3QixLQUFLanNCLElBQUtnTCxPQUFPelAsRUFBRUEsRUFBRWUsR0FBR0UsRUFBRWpCLEdBQUcsR0FBRzh2QixHQUFHOXVCLEdBQUcsT0FBT3lrQixFQUFFemxCLEVBQUVlLEVBQUVDLEVBQUV5RCxHQUFHLEdBQUdYLEVBQUc5QyxHQUFHLE9BQU8wa0IsRUFBRTFsQixFQUFFZSxFQUFFQyxFQUFFeUQsR0FBYyxHQUFYcUssR0FBR3FoQixHQUFHbndCLEVBQUVnQixRQUFNLElBQXFCQSxJQUFJd0QsRUFBRSxPQUFPeEUsRUFBRTJFLEtBQUssS0FBSyxFQUFFLEtBQUssR0FBRyxLQUFLLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRyxNQUFNck8sTUFBTXlKLEVBQUUsSUFBSThFLEVBQUc3RSxFQUFFeE0sT0FBTyxjQUFlLE9BQU95SSxFQUFFK0QsRUFBRWUsSUFBSSxJQUFJaXdCLEdBQUdaLElBQUcsR0FBSWEsR0FBR2IsSUFBRyxHQUFJYyxHQUFHLEdBQUdDLEdBQUdoSixHQUFHK0ksSUFBSUUsR0FBR2pKLEdBQUcrSSxJQUFJRyxHQUFHbEosR0FBRytJLElBQ3RkLFNBQVNJLEdBQUd0eEIsR0FBRyxHQUFHQSxJQUFJa3hCLEdBQUcsTUFBTTU2QixNQUFNeUosRUFBRSxNQUFNLE9BQU9DLEVBQUUsU0FBU3V4QixHQUFHdnhCLEVBQUVDLEdBQXlDLE9BQXRDb29CLEdBQUVnSixHQUFHcHhCLEdBQUdvb0IsR0FBRStJLEdBQUdweEIsR0FBR3FvQixHQUFFOEksR0FBR0QsSUFBSWx4QixFQUFFQyxFQUFFMkksVUFBbUIsS0FBSyxFQUFFLEtBQUssR0FBRzNJLEdBQUdBLEVBQUVBLEVBQUV1eEIsaUJBQWlCdnhCLEVBQUVrSSxhQUFhSCxHQUFHLEtBQUssSUFBSSxNQUFNLFFBQWtFL0gsRUFBRStILEdBQXJDL0gsR0FBdkJELEVBQUUsSUFBSUEsRUFBRUMsRUFBRXNOLFdBQVd0TixHQUFNa0ksY0FBYyxLQUFLbkksRUFBRUEsRUFBRXl4QixTQUFrQnJKLEdBQUUrSSxJQUFJOUksR0FBRThJLEdBQUdseEIsR0FBRyxTQUFTeXhCLEtBQUt0SixHQUFFK0ksSUFBSS9JLEdBQUVnSixJQUFJaEosR0FBRWlKLElBQUksU0FBU00sR0FBRzN4QixHQUFHc3hCLEdBQUdELEdBQUdwaEIsU0FBUyxJQUFJaFEsRUFBRXF4QixHQUFHSCxHQUFHbGhCLFNBQWFoVSxFQUFFK0wsR0FBRy9ILEVBQUVELEVBQUV4TSxNQUFNeU0sSUFBSWhFLElBQUlvc0IsR0FBRStJLEdBQUdweEIsR0FBR3FvQixHQUFFOEksR0FBR2wxQixJQUFJLFNBQVMyMUIsR0FBRzV4QixHQUFHb3hCLEdBQUduaEIsVUFBVWpRLElBQUlvb0IsR0FBRStJLElBQUkvSSxHQUFFZ0osS0FBSyxJQUFJUyxHQUFFMUosR0FBRyxHQUM5YyxTQUFTMkosR0FBRzl4QixHQUFHLElBQUksSUFBSUMsRUFBRUQsRUFBRSxPQUFPQyxHQUFHLENBQUMsR0FBRyxLQUFLQSxFQUFFMEUsSUFBSSxDQUFDLElBQUkxSSxFQUFFZ0UsRUFBRTBQLGNBQWMsR0FBRyxPQUFPMVQsSUFBbUIsUUFBZkEsRUFBRUEsRUFBRTJULGFBQXFCLE9BQU8zVCxFQUFFTyxNQUFNLE9BQU9QLEVBQUVPLE1BQU0sT0FBT3lELE9BQU8sR0FBRyxLQUFLQSxFQUFFMEUsVUFBSyxJQUFTMUUsRUFBRTh4QixjQUFjQyxhQUFhLEdBQUcsSUFBYSxHQUFSL3hCLEVBQUU1RixPQUFVLE9BQU80RixPQUFPLEdBQUcsT0FBT0EsRUFBRThQLE1BQU0sQ0FBQzlQLEVBQUU4UCxNQUFNTixPQUFPeFAsRUFBRUEsRUFBRUEsRUFBRThQLE1BQU0sU0FBUyxHQUFHOVAsSUFBSUQsRUFBRSxNQUFNLEtBQUssT0FBT0MsRUFBRStQLFNBQVMsQ0FBQyxHQUFHLE9BQU8vUCxFQUFFd1AsUUFBUXhQLEVBQUV3UCxTQUFTelAsRUFBRSxPQUFPLEtBQUtDLEVBQUVBLEVBQUV3UCxPQUFPeFAsRUFBRStQLFFBQVFQLE9BQU94UCxFQUFFd1AsT0FBT3hQLEVBQUVBLEVBQUUrUCxRQUFRLE9BQU8sS0FBSyxJQUFJaWlCLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxJQUFHLEVBQ3BkLFNBQVNDLEdBQUdweUIsRUFBRUMsR0FBRyxJQUFJaEUsRUFBRW8yQixHQUFHLEVBQUUsS0FBSyxLQUFLLEdBQUdwMkIsRUFBRWtELFlBQVksVUFBVWxELEVBQUV6SSxLQUFLLFVBQVV5SSxFQUFFNFIsVUFBVTVOLEVBQUVoRSxFQUFFd1QsT0FBT3pQLEVBQUUvRCxFQUFFNUIsTUFBTSxFQUFFLE9BQU8yRixFQUFFcXdCLFlBQVlyd0IsRUFBRXF3QixXQUFXQyxXQUFXcjBCLEVBQUUrRCxFQUFFcXdCLFdBQVdwMEIsR0FBRytELEVBQUV1d0IsWUFBWXZ3QixFQUFFcXdCLFdBQVdwMEIsRUFBRSxTQUFTcTJCLEdBQUd0eUIsRUFBRUMsR0FBRyxPQUFPRCxFQUFFMkUsS0FBSyxLQUFLLEVBQUUsSUFBSTFJLEVBQUUrRCxFQUFFeE0sS0FBeUUsT0FBTyxRQUEzRXlNLEVBQUUsSUFBSUEsRUFBRTJJLFVBQVUzTSxFQUFFeUYsZ0JBQWdCekIsRUFBRW1GLFNBQVMxRCxjQUFjLEtBQUt6QixLQUFtQkQsRUFBRTZOLFVBQVU1TixHQUFFLEdBQU8sS0FBSyxFQUFFLE9BQW9ELFFBQTdDQSxFQUFFLEtBQUtELEVBQUV1eUIsY0FBYyxJQUFJdHlCLEVBQUUySSxTQUFTLEtBQUszSSxLQUFZRCxFQUFFNk4sVUFBVTVOLEdBQUUsR0FBTyxLQUFLLEdBQVksUUFBUSxPQUFNLEdBQ3ZlLFNBQVN1eUIsR0FBR3h5QixHQUFHLEdBQUdteUIsR0FBRyxDQUFDLElBQUlseUIsRUFBRWl5QixHQUFHLEdBQUdqeUIsRUFBRSxDQUFDLElBQUloRSxFQUFFZ0UsRUFBRSxJQUFJcXlCLEdBQUd0eUIsRUFBRUMsR0FBRyxDQUFxQixLQUFwQkEsRUFBRXduQixHQUFHeHJCLEVBQUU2bUIsZ0JBQXFCd1AsR0FBR3R5QixFQUFFQyxHQUF1QyxPQUFuQ0QsRUFBRTNGLE9BQWUsS0FBVDJGLEVBQUUzRixNQUFZLEVBQUU4M0IsSUFBRyxPQUFHRixHQUFHanlCLEdBQVNveUIsR0FBR0gsR0FBR2gyQixHQUFHZzJCLEdBQUdqeUIsRUFBRWt5QixHQUFHekssR0FBR3huQixFQUFFcUksaUJBQWlCdEksRUFBRTNGLE9BQWUsS0FBVDJGLEVBQUUzRixNQUFZLEVBQUU4M0IsSUFBRyxFQUFHRixHQUFHanlCLEdBQUcsU0FBU3l5QixHQUFHenlCLEdBQUcsSUFBSUEsRUFBRUEsRUFBRXlQLE9BQU8sT0FBT3pQLEdBQUcsSUFBSUEsRUFBRTJFLEtBQUssSUFBSTNFLEVBQUUyRSxLQUFLLEtBQUszRSxFQUFFMkUsS0FBSzNFLEVBQUVBLEVBQUV5UCxPQUFPd2lCLEdBQUdqeUIsRUFDNVMsU0FBUzB5QixHQUFHMXlCLEdBQUcsR0FBR0EsSUFBSWl5QixHQUFHLE9BQU0sRUFBRyxJQUFJRSxHQUFHLE9BQU9NLEdBQUd6eUIsR0FBR215QixJQUFHLEdBQUcsRUFBRyxJQUFJbHlCLEVBQUVELEVBQUV4TSxLQUFLLEdBQUcsSUFBSXdNLEVBQUUyRSxLQUFLLFNBQVMxRSxHQUFHLFNBQVNBLElBQUlpbkIsR0FBR2puQixFQUFFRCxFQUFFK3hCLGVBQWUsSUFBSTl4QixFQUFFaXlCLEdBQUdqeUIsR0FBR215QixHQUFHcHlCLEVBQUVDLEdBQUdBLEVBQUV3bkIsR0FBR3huQixFQUFFNmlCLGFBQW1CLEdBQU4yUCxHQUFHenlCLEdBQU0sS0FBS0EsRUFBRTJFLElBQUksQ0FBZ0QsS0FBN0IzRSxFQUFFLFFBQXBCQSxFQUFFQSxFQUFFMlAsZUFBeUIzUCxFQUFFNFAsV0FBVyxNQUFXLE1BQU10WixNQUFNeUosRUFBRSxNQUFNQyxFQUFFLENBQWlCLElBQWhCQSxFQUFFQSxFQUFFOGlCLFlBQWdCN2lCLEVBQUUsRUFBRUQsR0FBRyxDQUFDLEdBQUcsSUFBSUEsRUFBRTRJLFNBQVMsQ0FBQyxJQUFJM00sRUFBRStELEVBQUV4RCxLQUFLLEdBQUcsT0FBT1AsRUFBRSxDQUFDLEdBQUcsSUFBSWdFLEVBQUUsQ0FBQ2l5QixHQUFHekssR0FBR3puQixFQUFFOGlCLGFBQWEsTUFBTTlpQixFQUFFQyxRQUFRLE1BQU1oRSxHQUFHLE9BQU9BLEdBQUcsT0FBT0EsR0FBR2dFLElBQUlELEVBQUVBLEVBQUU4aUIsWUFBWW9QLEdBQUcsV0FBV0EsR0FBR0QsR0FBR3hLLEdBQUd6bkIsRUFBRTZOLFVBQVVpVixhQUFhLEtBQUssT0FBTSxFQUN0ZixTQUFTNlAsS0FBS1QsR0FBR0QsR0FBRyxLQUFLRSxJQUFHLEVBQUcsSUFBSVMsR0FBRyxHQUFHLFNBQVNDLEtBQUssSUFBSSxJQUFJN3lCLEVBQUUsRUFBRUEsRUFBRTR5QixHQUFHai9CLE9BQU9xTSxJQUFJNHlCLEdBQUc1eUIsR0FBRzh5Qiw4QkFBOEIsS0FBS0YsR0FBR2ovQixPQUFPLEVBQUUsSUFBSW8vQixHQUFHMXdCLEVBQUcyd0IsdUJBQXVCQyxHQUFHNXdCLEVBQUdtcEIsd0JBQXdCMEgsR0FBRyxFQUFFQyxHQUFFLEtBQUtDLEdBQUUsS0FBS0MsR0FBRSxLQUFLQyxJQUFHLEVBQUdDLElBQUcsRUFBRyxTQUFTQyxLQUFLLE1BQU1sOUIsTUFBTXlKLEVBQUUsTUFBTyxTQUFTMHpCLEdBQUd6ekIsRUFBRUMsR0FBRyxHQUFHLE9BQU9BLEVBQUUsT0FBTSxFQUFHLElBQUksSUFBSWhFLEVBQUUsRUFBRUEsRUFBRWdFLEVBQUV0TSxRQUFRc0ksRUFBRStELEVBQUVyTSxPQUFPc0ksSUFBSSxJQUFJd21CLEdBQUd6aUIsRUFBRS9ELEdBQUdnRSxFQUFFaEUsSUFBSSxPQUFNLEVBQUcsT0FBTSxFQUM5WCxTQUFTeTNCLEdBQUcxekIsRUFBRUMsRUFBRWhFLEVBQUU4RSxFQUFFaEwsRUFBRWlMLEdBQXlILEdBQXRIa3lCLEdBQUdseUIsRUFBRW15QixHQUFFbHpCLEVBQUVBLEVBQUUwUCxjQUFjLEtBQUsxUCxFQUFFNnNCLFlBQVksS0FBSzdzQixFQUFFcXNCLE1BQU0sRUFBRXlHLEdBQUc5aUIsUUFBUSxPQUFPalEsR0FBRyxPQUFPQSxFQUFFMlAsY0FBY2drQixHQUFHQyxHQUFHNXpCLEVBQUUvRCxFQUFFOEUsRUFBRWhMLEdBQU13OUIsR0FBRyxDQUFDdnlCLEVBQUUsRUFBRSxFQUFFLENBQU8sR0FBTnV5QixJQUFHLElBQVEsR0FBR3Z5QixHQUFHLE1BQU0xSyxNQUFNeUosRUFBRSxNQUFNaUIsR0FBRyxFQUFFcXlCLEdBQUVELEdBQUUsS0FBS256QixFQUFFNnNCLFlBQVksS0FBS2lHLEdBQUc5aUIsUUFBUTRqQixHQUFHN3pCLEVBQUUvRCxFQUFFOEUsRUFBRWhMLFNBQVN3OUIsSUFBa0UsR0FBOURSLEdBQUc5aUIsUUFBUTZqQixHQUFHN3pCLEVBQUUsT0FBT216QixJQUFHLE9BQU9BLEdBQUU3M0IsS0FBSzIzQixHQUFHLEVBQUVHLEdBQUVELEdBQUVELEdBQUUsS0FBS0csSUFBRyxFQUFNcnpCLEVBQUUsTUFBTTNKLE1BQU15SixFQUFFLE1BQU0sT0FBT0MsRUFBRSxTQUFTK3pCLEtBQUssSUFBSS96QixFQUFFLENBQUMyUCxjQUFjLEtBQUtvZCxVQUFVLEtBQUtpSCxVQUFVLEtBQUtDLE1BQU0sS0FBSzE0QixLQUFLLE1BQThDLE9BQXhDLE9BQU84M0IsR0FBRUYsR0FBRXhqQixjQUFjMGpCLEdBQUVyekIsRUFBRXF6QixHQUFFQSxHQUFFOTNCLEtBQUt5RSxFQUFTcXpCLEdBQy9lLFNBQVNhLEtBQUssR0FBRyxPQUFPZCxHQUFFLENBQUMsSUFBSXB6QixFQUFFbXpCLEdBQUUzakIsVUFBVXhQLEVBQUUsT0FBT0EsRUFBRUEsRUFBRTJQLGNBQWMsVUFBVTNQLEVBQUVvekIsR0FBRTczQixLQUFLLElBQUkwRSxFQUFFLE9BQU9vekIsR0FBRUYsR0FBRXhqQixjQUFjMGpCLEdBQUU5M0IsS0FBSyxHQUFHLE9BQU8wRSxFQUFFb3pCLEdBQUVwekIsRUFBRW16QixHQUFFcHpCLE1BQU0sQ0FBQyxHQUFHLE9BQU9BLEVBQUUsTUFBTTFKLE1BQU15SixFQUFFLE1BQVVDLEVBQUUsQ0FBQzJQLGVBQVB5akIsR0FBRXB6QixHQUFxQjJQLGNBQWNvZCxVQUFVcUcsR0FBRXJHLFVBQVVpSCxVQUFVWixHQUFFWSxVQUFVQyxNQUFNYixHQUFFYSxNQUFNMTRCLEtBQUssTUFBTSxPQUFPODNCLEdBQUVGLEdBQUV4akIsY0FBYzBqQixHQUFFcnpCLEVBQUVxekIsR0FBRUEsR0FBRTkzQixLQUFLeUUsRUFBRSxPQUFPcXpCLEdBQUUsU0FBU2MsR0FBR24wQixFQUFFQyxHQUFHLE1BQU0sbUJBQW9CQSxFQUFFQSxFQUFFRCxHQUFHQyxFQUN2WSxTQUFTbTBCLEdBQUdwMEIsR0FBRyxJQUFJQyxFQUFFaTBCLEtBQUtqNEIsRUFBRWdFLEVBQUVnMEIsTUFBTSxHQUFHLE9BQU9oNEIsRUFBRSxNQUFNM0YsTUFBTXlKLEVBQUUsTUFBTTlELEVBQUVvNEIsb0JBQW9CcjBCLEVBQUUsSUFBSWUsRUFBRXF5QixHQUFFcjlCLEVBQUVnTCxFQUFFaXpCLFVBQVVoekIsRUFBRS9FLEVBQUVreEIsUUFBUSxHQUFHLE9BQU9uc0IsRUFBRSxDQUFDLEdBQUcsT0FBT2pMLEVBQUUsQ0FBQyxJQUFJa0wsRUFBRWxMLEVBQUV3RixLQUFLeEYsRUFBRXdGLEtBQUt5RixFQUFFekYsS0FBS3lGLEVBQUV6RixLQUFLMEYsRUFBRUYsRUFBRWl6QixVQUFVaitCLEVBQUVpTCxFQUFFL0UsRUFBRWt4QixRQUFRLEtBQUssR0FBRyxPQUFPcDNCLEVBQUUsQ0FBQ0EsRUFBRUEsRUFBRXdGLEtBQUt3RixFQUFFQSxFQUFFZ3NCLFVBQVUsSUFBSXRvQixFQUFFeEQsRUFBRUQsRUFBRSxLQUFLd0QsRUFBRXpPLEVBQUUsRUFBRSxDQUFDLElBQUkrWSxFQUFFdEssRUFBRWdwQixLQUFLLElBQUkwRixHQUFHcGtCLEtBQUtBLEVBQUUsT0FBT3JLLElBQUlBLEVBQUVBLEVBQUVsSixLQUFLLENBQUNpeUIsS0FBSyxFQUFFOEcsT0FBTzl2QixFQUFFOHZCLE9BQU9DLGFBQWEvdkIsRUFBRSt2QixhQUFhQyxXQUFXaHdCLEVBQUVnd0IsV0FBV2o1QixLQUFLLE9BQU93RixFQUFFeUQsRUFBRSt2QixlQUFldjBCLEVBQUV3RSxFQUFFZ3dCLFdBQVd4MEIsRUFBRWUsRUFBRXlELEVBQUU4dkIsWUFBWSxDQUFDLElBQUlsOEIsRUFBRSxDQUFDbzFCLEtBQUsxZSxFQUFFd2xCLE9BQU85dkIsRUFBRTh2QixPQUFPQyxhQUFhL3ZCLEVBQUUrdkIsYUFDOWZDLFdBQVdod0IsRUFBRWd3QixXQUFXajVCLEtBQUssTUFBTSxPQUFPa0osR0FBR3hELEVBQUV3RCxFQUFFck0sRUFBRTRJLEVBQUVELEdBQUcwRCxFQUFFQSxFQUFFbEosS0FBS25ELEVBQUUrNkIsR0FBRTdHLE9BQU94ZCxFQUFFbWYsSUFBSW5mLEVBQUV0SyxFQUFFQSxFQUFFakosV0FBVyxPQUFPaUosR0FBR0EsSUFBSXpPLEdBQUcsT0FBTzBPLEVBQUV6RCxFQUFFRCxFQUFFMEQsRUFBRWxKLEtBQUswRixFQUFFd2hCLEdBQUcxaEIsRUFBRWQsRUFBRTBQLGlCQUFpQjRjLElBQUcsR0FBSXRzQixFQUFFMFAsY0FBYzVPLEVBQUVkLEVBQUU4c0IsVUFBVS9yQixFQUFFZixFQUFFK3pCLFVBQVV2dkIsRUFBRXhJLEVBQUV3NEIsa0JBQWtCMXpCLEVBQUUsTUFBTSxDQUFDZCxFQUFFMFAsY0FBYzFULEVBQUV5NEIsVUFDdFEsU0FBU0MsR0FBRzMwQixHQUFHLElBQUlDLEVBQUVpMEIsS0FBS2o0QixFQUFFZ0UsRUFBRWcwQixNQUFNLEdBQUcsT0FBT2g0QixFQUFFLE1BQU0zRixNQUFNeUosRUFBRSxNQUFNOUQsRUFBRW80QixvQkFBb0JyMEIsRUFBRSxJQUFJZSxFQUFFOUUsRUFBRXk0QixTQUFTMytCLEVBQUVrRyxFQUFFa3hCLFFBQVFuc0IsRUFBRWYsRUFBRTBQLGNBQWMsR0FBRyxPQUFPNVosRUFBRSxDQUFDa0csRUFBRWt4QixRQUFRLEtBQUssSUFBSWxzQixFQUFFbEwsRUFBRUEsRUFBRXdGLEtBQUssR0FBR3lGLEVBQUVoQixFQUFFZ0IsRUFBRUMsRUFBRXF6QixRQUFRcnpCLEVBQUVBLEVBQUUxRixXQUFXMEYsSUFBSWxMLEdBQUcwc0IsR0FBR3poQixFQUFFZixFQUFFMFAsaUJBQWlCNGMsSUFBRyxHQUFJdHNCLEVBQUUwUCxjQUFjM08sRUFBRSxPQUFPZixFQUFFK3pCLFlBQVkvekIsRUFBRThzQixVQUFVL3JCLEdBQUcvRSxFQUFFdzRCLGtCQUFrQnp6QixFQUFFLE1BQU0sQ0FBQ0EsRUFBRUQsR0FDblYsU0FBUzZ6QixHQUFHNTBCLEVBQUVDLEVBQUVoRSxHQUFHLElBQUk4RSxFQUFFZCxFQUFFNDBCLFlBQVk5ekIsRUFBRUEsRUFBRWQsRUFBRTYwQixTQUFTLElBQUkvK0IsRUFBRWtLLEVBQUU2eUIsOEJBQXlJLEdBQXhHLE9BQU8vOEIsRUFBRWlLLEVBQUVqSyxJQUFJZ0wsR0FBVWYsRUFBRUEsRUFBRSswQixrQkFBaUIvMEIsR0FBR2t6QixHQUFHbHpCLEtBQUtBLEtBQUVDLEVBQUU2eUIsOEJBQThCL3hCLEVBQUU2eEIsR0FBR2w1QixLQUFLdUcsS0FBTUQsRUFBRSxPQUFPL0QsRUFBRWdFLEVBQUU2MEIsU0FBb0IsTUFBWGxDLEdBQUdsNUIsS0FBS3VHLEdBQVMzSixNQUFNeUosRUFBRSxNQUN6UCxTQUFTaTFCLEdBQUdoMUIsRUFBRUMsRUFBRWhFLEVBQUU4RSxHQUFHLElBQUloTCxFQUFFay9CLEdBQUUsR0FBRyxPQUFPbC9CLEVBQUUsTUFBTU8sTUFBTXlKLEVBQUUsTUFBTSxJQUFJaUIsRUFBRWYsRUFBRTQwQixZQUFZNXpCLEVBQUVELEVBQUVmLEVBQUU2MEIsU0FBU3J3QixFQUFFc3VCLEdBQUc5aUIsUUFBUXpMLEVBQUVDLEVBQUV5d0IsVUFBUyxXQUFXLE9BQU9OLEdBQUc3K0IsRUFBRWtLLEVBQUVoRSxNQUFLNlMsRUFBRXRLLEVBQUUsR0FBR3BNLEVBQUVvTSxFQUFFLEdBQUdBLEVBQUU2dUIsR0FBRSxJQUFJdkYsRUFBRTl0QixFQUFFMlAsY0FBY29lLEVBQUVELEVBQUVPLEtBQUtMLEVBQUVELEVBQUVvSCxZQUFZMVAsRUFBRXFJLEVBQUVqMUIsT0FBT2kxQixFQUFFQSxFQUFFc0gsVUFBVSxJQUFJMVAsRUFBRXlOLEdBQ3VPLE9BRHJPbnpCLEVBQUUyUCxjQUFjLENBQUMwZSxLQUFLTixFQUFFbDFCLE9BQU9vSCxFQUFFbTFCLFVBQVVyMEIsR0FBRzBELEVBQUU0d0IsV0FBVSxXQUFXdEgsRUFBRW9ILFlBQVlsNUIsRUFBRTh4QixFQUFFdUgsWUFBWXhtQixFQUFFLElBQUk5TyxFQUFFZ0IsRUFBRWYsRUFBRTYwQixTQUFTLElBQUlyUyxHQUFHeGhCLEVBQUVqQixHQUFHLENBQUNBLEVBQUUvRCxFQUFFZ0UsRUFBRTYwQixTQUFTclMsR0FBR3JxQixFQUFFNEgsS0FBSzhPLEVBQUU5TyxHQUFHQSxFQUFFNHVCLEdBQUdsSixHQUFHM3ZCLEVBQUVnL0Isa0JBQWtCLzBCLEVBQUVqSyxFQUFFcWUsY0FBY3BVLEVBQUVqSyxFQUFFZy9CLGlCQUFpQmgvQixFQUFFMGUsZ0JBQWdCelUsRUFBRSxJQUFJLElBQUllLEVBQzVmaEwsRUFBRTJlLGNBQWNqUSxFQUFFekUsRUFBRSxFQUFFeUUsR0FBRyxDQUFDLElBQUlELEVBQUUsR0FBR2dRLEdBQUcvUCxHQUFHc2hCLEVBQUUsR0FBR3ZoQixFQUFFekQsRUFBRXlELElBQUl4RSxFQUFFeUUsSUFBSXNoQixNQUFLLENBQUM5cEIsRUFBRWdFLEVBQUVjLElBQUkwRCxFQUFFNHdCLFdBQVUsV0FBVyxPQUFPdDBCLEVBQUVkLEVBQUU2MEIsU0FBUSxXQUFXLElBQUk5MEIsRUFBRSt0QixFQUFFb0gsWUFBWWw1QixFQUFFOHhCLEVBQUV1SCxZQUFZLElBQUlyNUIsRUFBRStELEVBQUVDLEVBQUU2MEIsVUFBVSxJQUFJL3pCLEVBQUU2dEIsR0FBR2xKLEdBQUczdkIsRUFBRWcvQixrQkFBa0JoMEIsRUFBRWhMLEVBQUVxZSxhQUFhLE1BQU15UixHQUFHNXBCLEdBQUUsV0FBVyxNQUFNNHBCLFdBQVMsQ0FBQzVsQixFQUFFYyxJQUFJMGhCLEdBQUd1TCxFQUFFL3hCLElBQUl3bUIsR0FBR2dELEVBQUV4bEIsSUFBSXdpQixHQUFHcUwsRUFBRS9zQixNQUFLZixFQUFFLENBQUNtdEIsUUFBUSxLQUFLdUgsU0FBUyxLQUFLTCxvQkFBb0JGLEdBQUdNLGtCQUFrQnI4QixJQUFLczhCLFNBQVM1bEIsRUFBRXltQixHQUFHemYsS0FBSyxLQUFLcWQsR0FBRW56QixHQUFHd0UsRUFBRXl2QixNQUFNajBCLEVBQUV3RSxFQUFFd3ZCLFVBQVUsS0FBSzU3QixFQUFFdzhCLEdBQUc3K0IsRUFBRWtLLEVBQUVoRSxHQUFHdUksRUFBRW1MLGNBQWNuTCxFQUFFdW9CLFVBQVUzMEIsR0FBVUEsRUFDdGUsU0FBU285QixHQUFHeDFCLEVBQUVDLEVBQUVoRSxHQUFjLE9BQU8rNEIsR0FBWmQsS0FBaUJsMEIsRUFBRUMsRUFBRWhFLEdBQUcsU0FBU3c1QixHQUFHejFCLEdBQUcsSUFBSUMsRUFBRTh6QixLQUFtTCxNQUE5SyxtQkFBb0IvekIsSUFBSUEsRUFBRUEsS0FBS0MsRUFBRTBQLGNBQWMxUCxFQUFFOHNCLFVBQVUvc0IsRUFBb0ZBLEdBQWxGQSxFQUFFQyxFQUFFZzBCLE1BQU0sQ0FBQzlHLFFBQVEsS0FBS3VILFNBQVMsS0FBS0wsb0JBQW9CRixHQUFHTSxrQkFBa0J6MEIsSUFBTzAwQixTQUFTYSxHQUFHemYsS0FBSyxLQUFLcWQsR0FBRW56QixHQUFTLENBQUNDLEVBQUUwUCxjQUFjM1AsR0FDaFIsU0FBUzAxQixHQUFHMTFCLEVBQUVDLEVBQUVoRSxFQUFFOEUsR0FBa08sT0FBL05mLEVBQUUsQ0FBQzJFLElBQUkzRSxFQUFFMjFCLE9BQU8xMUIsRUFBRTIxQixRQUFRMzVCLEVBQUU0NUIsS0FBSzkwQixFQUFFeEYsS0FBSyxNQUFzQixRQUFoQjBFLEVBQUVrekIsR0FBRXJHLGNBQXNCN3NCLEVBQUUsQ0FBQ293QixXQUFXLE1BQU04QyxHQUFFckcsWUFBWTdzQixFQUFFQSxFQUFFb3dCLFdBQVdyd0IsRUFBRXpFLEtBQUt5RSxHQUFtQixRQUFmL0QsRUFBRWdFLEVBQUVvd0IsWUFBb0Jwd0IsRUFBRW93QixXQUFXcndCLEVBQUV6RSxLQUFLeUUsR0FBR2UsRUFBRTlFLEVBQUVWLEtBQUtVLEVBQUVWLEtBQUt5RSxFQUFFQSxFQUFFekUsS0FBS3dGLEVBQUVkLEVBQUVvd0IsV0FBV3J3QixHQUFXQSxFQUFFLFNBQVM4MUIsR0FBRzkxQixHQUE0QixPQUFkQSxFQUFFLENBQUNpUSxRQUFRalEsR0FBaEIrekIsS0FBNEJwa0IsY0FBYzNQLEVBQUUsU0FBUysxQixLQUFLLE9BQU83QixLQUFLdmtCLGNBQWMsU0FBU3FtQixHQUFHaDJCLEVBQUVDLEVBQUVoRSxFQUFFOEUsR0FBRyxJQUFJaEwsRUFBRWcrQixLQUFLWixHQUFFOTRCLE9BQU8yRixFQUFFakssRUFBRTRaLGNBQWMrbEIsR0FBRyxFQUFFejFCLEVBQUVoRSxPQUFFLE9BQU8sSUFBUzhFLEVBQUUsS0FBS0EsR0FDamMsU0FBU2sxQixHQUFHajJCLEVBQUVDLEVBQUVoRSxFQUFFOEUsR0FBRyxJQUFJaEwsRUFBRW0rQixLQUFLbnpCLE9BQUUsSUFBU0EsRUFBRSxLQUFLQSxFQUFFLElBQUlDLE9BQUUsRUFBTyxHQUFHLE9BQU9veUIsR0FBRSxDQUFDLElBQUlueUIsRUFBRW15QixHQUFFempCLGNBQTBCLEdBQVozTyxFQUFFQyxFQUFFMjBCLFFBQVcsT0FBTzcwQixHQUFHMHlCLEdBQUcxeUIsRUFBRUUsRUFBRTQwQixNQUFtQixZQUFaSCxHQUFHejFCLEVBQUVoRSxFQUFFK0UsRUFBRUQsR0FBV295QixHQUFFOTRCLE9BQU8yRixFQUFFakssRUFBRTRaLGNBQWMrbEIsR0FBRyxFQUFFejFCLEVBQUVoRSxFQUFFK0UsRUFBRUQsR0FBRyxTQUFTbTFCLEdBQUdsMkIsRUFBRUMsR0FBRyxPQUFPKzFCLEdBQUcsSUFBSSxFQUFFaDJCLEVBQUVDLEdBQUcsU0FBU2syQixHQUFHbjJCLEVBQUVDLEdBQUcsT0FBT2cyQixHQUFHLElBQUksRUFBRWoyQixFQUFFQyxHQUFHLFNBQVNtMkIsR0FBR3AyQixFQUFFQyxHQUFHLE9BQU9nMkIsR0FBRyxFQUFFLEVBQUVqMkIsRUFBRUMsR0FBRyxTQUFTbzJCLEdBQUdyMkIsRUFBRUMsR0FBRyxNQUFHLG1CQUFvQkEsR0FBU0QsRUFBRUEsSUFBSUMsRUFBRUQsR0FBRyxXQUFXQyxFQUFFLFFBQVUsTUFBT0EsR0FBcUJELEVBQUVBLElBQUlDLEVBQUVnUSxRQUFRalEsRUFBRSxXQUFXQyxFQUFFZ1EsUUFBUSxZQUF0RSxFQUN4WSxTQUFTcW1CLEdBQUd0MkIsRUFBRUMsRUFBRWhFLEdBQTZDLE9BQTFDQSxFQUFFLE1BQU9BLEVBQWNBLEVBQUV4RyxPQUFPLENBQUN1SyxJQUFJLEtBQVlpMkIsR0FBRyxFQUFFLEVBQUVJLEdBQUd2Z0IsS0FBSyxLQUFLN1YsRUFBRUQsR0FBRy9ELEdBQUcsU0FBU3M2QixNQUFNLFNBQVNDLEdBQUd4MkIsRUFBRUMsR0FBRyxJQUFJaEUsRUFBRWk0QixLQUFLajBCLE9BQUUsSUFBU0EsRUFBRSxLQUFLQSxFQUFFLElBQUljLEVBQUU5RSxFQUFFMFQsY0FBYyxPQUFHLE9BQU81TyxHQUFHLE9BQU9kLEdBQUd3ekIsR0FBR3h6QixFQUFFYyxFQUFFLElBQVdBLEVBQUUsSUFBRzlFLEVBQUUwVCxjQUFjLENBQUMzUCxFQUFFQyxHQUFVRCxHQUFFLFNBQVN5MkIsR0FBR3oyQixFQUFFQyxHQUFHLElBQUloRSxFQUFFaTRCLEtBQUtqMEIsT0FBRSxJQUFTQSxFQUFFLEtBQUtBLEVBQUUsSUFBSWMsRUFBRTlFLEVBQUUwVCxjQUFjLE9BQUcsT0FBTzVPLEdBQUcsT0FBT2QsR0FBR3d6QixHQUFHeHpCLEVBQUVjLEVBQUUsSUFBV0EsRUFBRSxJQUFHZixFQUFFQSxJQUFJL0QsRUFBRTBULGNBQWMsQ0FBQzNQLEVBQUVDLEdBQVVELEdBQ3paLFNBQVMwMkIsR0FBRzEyQixFQUFFQyxHQUFHLElBQUloRSxFQUFFZ3ZCLEtBQUtFLEdBQUcsR0FBR2x2QixFQUFFLEdBQUdBLEdBQUUsV0FBVytELEdBQUUsTUFBTW1yQixHQUFHLEdBQUdsdkIsRUFBRSxHQUFHQSxHQUFFLFdBQVcsSUFBSUEsRUFBRWczQixHQUFHM2YsV0FBVzJmLEdBQUczZixXQUFXLEVBQUUsSUFBSXRULEdBQUUsR0FBSUMsSUFBSSxRQUFRZ3pCLEdBQUczZixXQUFXclgsTUFDNUosU0FBU3M1QixHQUFHdjFCLEVBQUVDLEVBQUVoRSxHQUFHLElBQUk4RSxFQUFFNHRCLEtBQUs1NEIsRUFBRTY0QixHQUFHNXVCLEdBQUdnQixFQUFFLENBQUN3c0IsS0FBS3ozQixFQUFFdStCLE9BQU9yNEIsRUFBRXM0QixhQUFhLEtBQUtDLFdBQVcsS0FBS2o1QixLQUFLLE1BQU0wRixFQUFFaEIsRUFBRWt0QixRQUE2RSxHQUFyRSxPQUFPbHNCLEVBQUVELEVBQUV6RixLQUFLeUYsR0FBR0EsRUFBRXpGLEtBQUswRixFQUFFMUYsS0FBSzBGLEVBQUUxRixLQUFLeUYsR0FBR2YsRUFBRWt0QixRQUFRbnNCLEVBQUVDLEVBQUVqQixFQUFFd1AsVUFBYXhQLElBQUltekIsSUFBRyxPQUFPbHlCLEdBQUdBLElBQUlreUIsR0FBRUksR0FBR0QsSUFBRyxNQUFPLENBQUMsR0FBRyxJQUFJdHpCLEVBQUVzc0IsUUFBUSxPQUFPcnJCLEdBQUcsSUFBSUEsRUFBRXFyQixRQUFpQyxRQUF4QnJyQixFQUFFaEIsRUFBRW8wQixxQkFBOEIsSUFBSSxJQUFJNXZCLEVBQUV4RSxFQUFFdzBCLGtCQUFrQmp3QixFQUFFdkQsRUFBRXdELEVBQUV4SSxHQUFtQyxHQUFoQytFLEVBQUV1ekIsYUFBYXR6QixFQUFFRCxFQUFFd3pCLFdBQVdod0IsRUFBS2llLEdBQUdqZSxFQUFFQyxHQUFHLE9BQU8sTUFBTXFLLElBQWErZixHQUFHN3VCLEVBQUVqSyxFQUFFZ0wsSUFDOVosSUFBSSt5QixHQUFHLENBQUM2QyxZQUFZbkssR0FBR29LLFlBQVlwRCxHQUFHcUQsV0FBV3JELEdBQUc2QixVQUFVN0IsR0FBR3NELG9CQUFvQnRELEdBQUd1RCxnQkFBZ0J2RCxHQUFHd0QsUUFBUXhELEdBQUd5RCxXQUFXekQsR0FBRzBELE9BQU8xRCxHQUFHMEIsU0FBUzFCLEdBQUcyRCxjQUFjM0QsR0FBRzRELGlCQUFpQjVELEdBQUc2RCxjQUFjN0QsR0FBRzhELGlCQUFpQjlELEdBQUcrRCxvQkFBb0IvRCxHQUFHZ0UsMEJBQXlCLEdBQUk3RCxHQUFHLENBQUNnRCxZQUFZbkssR0FBR29LLFlBQVksU0FBUzUyQixFQUFFQyxHQUE0QyxPQUF6Qzh6QixLQUFLcGtCLGNBQWMsQ0FBQzNQLE9BQUUsSUFBU0MsRUFBRSxLQUFLQSxHQUFVRCxHQUFHNjJCLFdBQVdySyxHQUFHNkksVUFBVWEsR0FBR1ksb0JBQW9CLFNBQVM5MkIsRUFBRUMsRUFBRWhFLEdBQTZDLE9BQTFDQSxFQUFFLE1BQU9BLEVBQWNBLEVBQUV4RyxPQUFPLENBQUN1SyxJQUFJLEtBQVlnMkIsR0FBRyxFQUFFLEVBQUVLLEdBQUd2Z0IsS0FBSyxLQUN2ZjdWLEVBQUVELEdBQUcvRCxJQUFJODZCLGdCQUFnQixTQUFTLzJCLEVBQUVDLEdBQUcsT0FBTysxQixHQUFHLEVBQUUsRUFBRWgyQixFQUFFQyxJQUFJKzJCLFFBQVEsU0FBU2gzQixFQUFFQyxHQUFHLElBQUloRSxFQUFFODNCLEtBQXFELE9BQWhEOXpCLE9BQUUsSUFBU0EsRUFBRSxLQUFLQSxFQUFFRCxFQUFFQSxJQUFJL0QsRUFBRTBULGNBQWMsQ0FBQzNQLEVBQUVDLEdBQVVELEdBQUdpM0IsV0FBVyxTQUFTajNCLEVBQUVDLEVBQUVoRSxHQUFHLElBQUk4RSxFQUFFZ3pCLEtBQXVLLE9BQWxLOXpCLE9BQUUsSUFBU2hFLEVBQUVBLEVBQUVnRSxHQUFHQSxFQUFFYyxFQUFFNE8sY0FBYzVPLEVBQUVnc0IsVUFBVTlzQixFQUFtRkQsR0FBakZBLEVBQUVlLEVBQUVrekIsTUFBTSxDQUFDOUcsUUFBUSxLQUFLdUgsU0FBUyxLQUFLTCxvQkFBb0JyMEIsRUFBRXkwQixrQkFBa0J4MEIsSUFBT3kwQixTQUFTYSxHQUFHemYsS0FBSyxLQUFLcWQsR0FBRW56QixHQUFTLENBQUNlLEVBQUU0TyxjQUFjM1AsSUFBSWszQixPQUFPcEIsR0FBR1osU0FBU08sR0FBRzBCLGNBQWNaLEdBQUdhLGlCQUFpQixTQUFTcDNCLEdBQUcsSUFBSUMsRUFBRXcxQixHQUFHejFCLEdBQUcvRCxFQUFFZ0UsRUFBRSxHQUFHYyxFQUFFZCxFQUFFLEdBQzVaLE9BRCtaaTJCLElBQUcsV0FBVyxJQUFJajJCLEVBQUVnekIsR0FBRzNmLFdBQzllMmYsR0FBRzNmLFdBQVcsRUFBRSxJQUFJdlMsRUFBRWYsR0FBRyxRQUFRaXpCLEdBQUczZixXQUFXclQsS0FBSSxDQUFDRCxJQUFXL0QsR0FBR283QixjQUFjLFdBQVcsSUFBSXIzQixFQUFFeTFCLElBQUcsR0FBSXgxQixFQUFFRCxFQUFFLEdBQThCLE9BQU44MUIsR0FBckI5MUIsRUFBRTAyQixHQUFHNWdCLEtBQUssS0FBSzlWLEVBQUUsS0FBZ0IsQ0FBQ0EsRUFBRUMsSUFBSXEzQixpQkFBaUIsU0FBU3QzQixFQUFFQyxFQUFFaEUsR0FBRyxJQUFJOEUsRUFBRWd6QixLQUFrRixPQUE3RWh6QixFQUFFNE8sY0FBYyxDQUFDMGUsS0FBSyxDQUFDOEcsWUFBWWwxQixFQUFFcTFCLFlBQVksTUFBTXo4QixPQUFPbUgsRUFBRW8xQixVQUFVbjVCLEdBQVUrNEIsR0FBR2owQixFQUFFZixFQUFFQyxFQUFFaEUsSUFBSXM3QixvQkFBb0IsV0FBVyxHQUFHcEYsR0FBRyxDQUFDLElBQUlueUIsR0FBRSxFQUFHQyxFQXpEbEQsU0FBWUQsR0FBRyxNQUFNLENBQUM4RSxTQUFTMUIsRUFBR2pILFNBQVM2RCxFQUFFcUksUUFBUXJJLEdBeUREeTNCLEVBQUcsV0FBaUQsTUFBdEN6M0IsSUFBSUEsR0FBRSxFQUFHL0QsRUFBRSxNQUFNMnJCLE1BQU16ckIsU0FBUyxNQUFZN0YsTUFBTXlKLEVBQUUsU0FBUzlELEVBQUV3NUIsR0FBR3gxQixHQUFHLEdBQzFaLE9BRDZaLElBQVksRUFBUGt6QixHQUFFekMsUUFBVXlDLEdBQUU5NEIsT0FBTyxJQUFJcTdCLEdBQUcsR0FBRSxXQUFXejVCLEVBQUUsTUFBTTJyQixNQUFNenJCLFNBQVMsWUFDaGYsRUFBTyxPQUFjOEQsRUFBbUMsT0FBTncxQixHQUEzQngxQixFQUFFLE1BQU0ybkIsTUFBTXpyQixTQUFTLEtBQWlCOEQsR0FBR3UzQiwwQkFBeUIsR0FBSTVELEdBQUcsQ0FBQytDLFlBQVluSyxHQUFHb0ssWUFBWUosR0FBR0ssV0FBV3JLLEdBQUc2SSxVQUFVYyxHQUFHVyxvQkFBb0JSLEdBQUdTLGdCQUFnQlgsR0FBR1ksUUFBUVAsR0FBR1EsV0FBVzdDLEdBQUc4QyxPQUFPbkIsR0FBR2IsU0FBUyxXQUFXLE9BQU9kLEdBQUdELEtBQUtnRCxjQUFjWixHQUFHYSxpQkFBaUIsU0FBU3AzQixHQUFHLElBQUlDLEVBQUVtMEIsR0FBR0QsSUFBSWw0QixFQUFFZ0UsRUFBRSxHQUFHYyxFQUFFZCxFQUFFLEdBQTZGLE9BQTFGazJCLElBQUcsV0FBVyxJQUFJbDJCLEVBQUVnekIsR0FBRzNmLFdBQVcyZixHQUFHM2YsV0FBVyxFQUFFLElBQUl2UyxFQUFFZixHQUFHLFFBQVFpekIsR0FBRzNmLFdBQVdyVCxLQUFJLENBQUNELElBQVcvRCxHQUFHbzdCLGNBQWMsV0FBVyxJQUFJcjNCLEVBQUVvMEIsR0FBR0QsSUFBSSxHQUFHLE1BQU0sQ0FBQzRCLEtBQUs5bEIsUUFDOWVqUSxJQUFJczNCLGlCQUFpQjlCLEdBQUcrQixvQkFBb0IsV0FBVyxPQUFPbkQsR0FBR0QsSUFBSSxJQUFJcUQsMEJBQXlCLEdBQUkzRCxHQUFHLENBQUM4QyxZQUFZbkssR0FBR29LLFlBQVlKLEdBQUdLLFdBQVdySyxHQUFHNkksVUFBVWMsR0FBR1csb0JBQW9CUixHQUFHUyxnQkFBZ0JYLEdBQUdZLFFBQVFQLEdBQUdRLFdBQVd0QyxHQUFHdUMsT0FBT25CLEdBQUdiLFNBQVMsV0FBVyxPQUFPUCxHQUFHUixLQUFLZ0QsY0FBY1osR0FBR2EsaUJBQWlCLFNBQVNwM0IsR0FBRyxJQUFJQyxFQUFFMDBCLEdBQUdSLElBQUlsNEIsRUFBRWdFLEVBQUUsR0FBR2MsRUFBRWQsRUFBRSxHQUE2RixPQUExRmsyQixJQUFHLFdBQVcsSUFBSWwyQixFQUFFZ3pCLEdBQUczZixXQUFXMmYsR0FBRzNmLFdBQVcsRUFBRSxJQUFJdlMsRUFBRWYsR0FBRyxRQUFRaXpCLEdBQUczZixXQUFXclQsS0FBSSxDQUFDRCxJQUFXL0QsR0FBR283QixjQUFjLFdBQVcsSUFBSXIzQixFQUFFMjBCLEdBQUdSLElBQUksR0FBRyxNQUFNLENBQUM0QixLQUFLOWxCLFFBQ3JmalEsSUFBSXMzQixpQkFBaUI5QixHQUFHK0Isb0JBQW9CLFdBQVcsT0FBTzVDLEdBQUdSLElBQUksSUFBSXFELDBCQUF5QixHQUFJRSxHQUFHcjFCLEVBQUdzMUIsa0JBQWtCcEwsSUFBRyxFQUFHLFNBQVNxTCxHQUFHNTNCLEVBQUVDLEVBQUVoRSxFQUFFOEUsR0FBR2QsRUFBRThQLE1BQU0sT0FBTy9QLEVBQUVpeEIsR0FBR2h4QixFQUFFLEtBQUtoRSxFQUFFOEUsR0FBR2l3QixHQUFHL3dCLEVBQUVELEVBQUUrUCxNQUFNOVQsRUFBRThFLEdBQUcsU0FBUzgyQixHQUFHNzNCLEVBQUVDLEVBQUVoRSxFQUFFOEUsRUFBRWhMLEdBQUdrRyxFQUFFQSxFQUFFekgsT0FBTyxJQUFJd00sRUFBRWYsRUFBRSt2QixJQUE4QixPQUExQjdELEdBQUdsc0IsRUFBRWxLLEdBQUdnTCxFQUFFMnlCLEdBQUcxekIsRUFBRUMsRUFBRWhFLEVBQUU4RSxFQUFFQyxFQUFFakwsR0FBTSxPQUFPaUssR0FBSXVzQixJQUEwRXRzQixFQUFFNUYsT0FBTyxFQUFFdTlCLEdBQUc1M0IsRUFBRUMsRUFBRWMsRUFBRWhMLEdBQVVrSyxFQUFFOFAsUUFBaEc5UCxFQUFFNnNCLFlBQVk5c0IsRUFBRThzQixZQUFZN3NCLEVBQUU1RixRQUFRLElBQUkyRixFQUFFc3NCLFFBQVF2MkIsRUFBRStoQyxHQUFHOTNCLEVBQUVDLEVBQUVsSyxJQUN4VyxTQUFTZ2lDLEdBQUcvM0IsRUFBRUMsRUFBRWhFLEVBQUU4RSxFQUFFaEwsRUFBRWlMLEdBQUcsR0FBRyxPQUFPaEIsRUFBRSxDQUFDLElBQUlpQixFQUFFaEYsRUFBRXpJLEtBQUssTUFBRyxtQkFBb0J5TixHQUFJKzJCLEdBQUcvMkIsU0FBSSxJQUFTQSxFQUFFaE8sY0FBYyxPQUFPZ0osRUFBRS9ILGNBQVMsSUFBUytILEVBQUVoSixlQUFzRCtNLEVBQUUyd0IsR0FBRzEwQixFQUFFekksS0FBSyxLQUFLdU4sRUFBRWQsRUFBRUEsRUFBRXl3QixLQUFLMXZCLElBQUtndkIsSUFBSS92QixFQUFFK3ZCLElBQUlod0IsRUFBRXlQLE9BQU94UCxFQUFTQSxFQUFFOFAsTUFBTS9QLElBQXZHQyxFQUFFMEUsSUFBSSxHQUFHMUUsRUFBRXpNLEtBQUt5TixFQUFFZzNCLEdBQUdqNEIsRUFBRUMsRUFBRWdCLEVBQUVGLEVBQUVoTCxFQUFFaUwsSUFBb0YsT0FBVkMsRUFBRWpCLEVBQUUrUCxNQUFTLElBQUtoYSxFQUFFaUwsS0FBS2pMLEVBQUVrTCxFQUFFOHdCLGVBQTBCOTFCLEVBQUUsUUFBZEEsRUFBRUEsRUFBRS9ILFNBQW1CK0gsRUFBRTBtQixJQUFLNXNCLEVBQUVnTCxJQUFJZixFQUFFZ3dCLE1BQU0vdkIsRUFBRSt2QixLQUFZOEgsR0FBRzkzQixFQUFFQyxFQUFFZSxJQUFHZixFQUFFNUYsT0FBTyxHQUFFMkYsRUFBRXd3QixHQUFHdnZCLEVBQUVGLElBQUtpdkIsSUFBSS92QixFQUFFK3ZCLElBQUlod0IsRUFBRXlQLE9BQU94UCxFQUFTQSxFQUFFOFAsTUFBTS9QLEdBQ2xiLFNBQVNpNEIsR0FBR2o0QixFQUFFQyxFQUFFaEUsRUFBRThFLEVBQUVoTCxFQUFFaUwsR0FBRyxHQUFHLE9BQU9oQixHQUFHMmlCLEdBQUczaUIsRUFBRSt4QixjQUFjaHhCLElBQUlmLEVBQUVnd0IsTUFBTS92QixFQUFFK3ZCLElBQUksSUFBR3pELElBQUcsRUFBRyxJQUFLdnJCLEVBQUVqTCxHQUFxQyxPQUFPa0ssRUFBRXFzQixNQUFNdHNCLEVBQUVzc0IsTUFBTXdMLEdBQUc5M0IsRUFBRUMsRUFBRWUsR0FBaEUsSUFBYSxNQUFSaEIsRUFBRTNGLFNBQWVreUIsSUFBRyxHQUEwQyxPQUFPMkwsR0FBR2w0QixFQUFFQyxFQUFFaEUsRUFBRThFLEVBQUVDLEdBQ25MLFNBQVNtM0IsR0FBR240QixFQUFFQyxFQUFFaEUsR0FBRyxJQUFJOEUsRUFBRWQsRUFBRXN5QixhQUFheDhCLEVBQUVnTCxFQUFFa0csU0FBU2pHLEVBQUUsT0FBT2hCLEVBQUVBLEVBQUUyUCxjQUFjLEtBQUssR0FBRyxXQUFXNU8sRUFBRTJ2QixNQUFNLGtDQUFrQzN2QixFQUFFMnZCLEtBQUssR0FBRyxJQUFZLEVBQVB6d0IsRUFBRXl3QixNQUFRendCLEVBQUUwUCxjQUFjLENBQUN5b0IsVUFBVSxHQUFHQyxHQUFHcDRCLEVBQUVoRSxPQUFRLElBQUcsSUFBTyxXQUFGQSxHQUE4RSxPQUFPK0QsRUFBRSxPQUFPZ0IsRUFBRUEsRUFBRW8zQixVQUFVbjhCLEVBQUVBLEVBQUVnRSxFQUFFcXNCLE1BQU1yc0IsRUFBRWlzQixXQUFXLFdBQVdqc0IsRUFBRTBQLGNBQWMsQ0FBQ3lvQixVQUFVcDRCLEdBQUdxNEIsR0FBR3A0QixFQUFFRCxHQUFHLEtBQXhLQyxFQUFFMFAsY0FBYyxDQUFDeW9CLFVBQVUsR0FBR0MsR0FBR3A0QixFQUFFLE9BQU9lLEVBQUVBLEVBQUVvM0IsVUFBVW44QixRQUEwSCxPQUFPK0UsR0FBR0QsRUFBRUMsRUFBRW8zQixVQUFVbjhCLEVBQUVnRSxFQUFFMFAsY0FBYyxNQUFNNU8sRUFBRTlFLEVBQUVvOEIsR0FBR3A0QixFQUFFYyxHQUFlLE9BQVo2MkIsR0FBRzUzQixFQUFFQyxFQUFFbEssRUFBRWtHLEdBQVVnRSxFQUFFOFAsTUFDMWUsU0FBU3VvQixHQUFHdDRCLEVBQUVDLEdBQUcsSUFBSWhFLEVBQUVnRSxFQUFFK3ZCLEtBQU8sT0FBT2h3QixHQUFHLE9BQU8vRCxHQUFHLE9BQU8rRCxHQUFHQSxFQUFFZ3dCLE1BQU0vekIsS0FBRWdFLEVBQUU1RixPQUFPLEtBQUksU0FBUzY5QixHQUFHbDRCLEVBQUVDLEVBQUVoRSxFQUFFOEUsRUFBRWhMLEdBQUcsSUFBSWlMLEVBQUU2bkIsR0FBRzVzQixHQUFHd3NCLEdBQUdGLEdBQUV0WSxRQUE0QyxPQUFwQ2pQLEVBQUUwbkIsR0FBR3pvQixFQUFFZSxHQUFHbXJCLEdBQUdsc0IsRUFBRWxLLEdBQUdrRyxFQUFFeTNCLEdBQUcxekIsRUFBRUMsRUFBRWhFLEVBQUU4RSxFQUFFQyxFQUFFakwsR0FBTSxPQUFPaUssR0FBSXVzQixJQUEwRXRzQixFQUFFNUYsT0FBTyxFQUFFdTlCLEdBQUc1M0IsRUFBRUMsRUFBRWhFLEVBQUVsRyxHQUFVa0ssRUFBRThQLFFBQWhHOVAsRUFBRTZzQixZQUFZOXNCLEVBQUU4c0IsWUFBWTdzQixFQUFFNUYsUUFBUSxJQUFJMkYsRUFBRXNzQixRQUFRdjJCLEVBQUUraEMsR0FBRzkzQixFQUFFQyxFQUFFbEssSUFDOVAsU0FBU3dpQyxHQUFHdjRCLEVBQUVDLEVBQUVoRSxFQUFFOEUsRUFBRWhMLEdBQUcsR0FBRzh5QixHQUFHNXNCLEdBQUcsQ0FBQyxJQUFJK0UsR0FBRSxFQUFHa29CLEdBQUdqcEIsUUFBUWUsR0FBRSxFQUFXLEdBQVJtckIsR0FBR2xzQixFQUFFbEssR0FBTSxPQUFPa0ssRUFBRTROLFVBQVUsT0FBTzdOLElBQUlBLEVBQUV3UCxVQUFVLEtBQUt2UCxFQUFFdVAsVUFBVSxLQUFLdlAsRUFBRTVGLE9BQU8sR0FBRzgwQixHQUFHbHZCLEVBQUVoRSxFQUFFOEUsR0FBRzB1QixHQUFHeHZCLEVBQUVoRSxFQUFFOEUsRUFBRWhMLEdBQUdnTCxHQUFFLE9BQVEsR0FBRyxPQUFPZixFQUFFLENBQUMsSUFBSWlCLEVBQUVoQixFQUFFNE4sVUFBVXBKLEVBQUV4RSxFQUFFOHhCLGNBQWM5d0IsRUFBRWpELE1BQU15RyxFQUFFLElBQUlELEVBQUV2RCxFQUFFd3JCLFFBQVEzZCxFQUFFN1MsRUFBRWxKLFlBQTBDK2IsRUFBOUIsaUJBQWtCQSxHQUFHLE9BQU9BLEVBQUkwZCxHQUFHMWQsR0FBMkI0WixHQUFHem9CLEVBQTFCNk8sRUFBRStaLEdBQUc1c0IsR0FBR3dzQixHQUFHRixHQUFFdFksU0FBbUIsSUFBSTdYLEVBQUU2RCxFQUFFNUkseUJBQXlCeTZCLEVBQUUsbUJBQW9CMTFCLEdBQUcsbUJBQW9CNkksRUFBRXl1Qix3QkFBd0I1QixHQUFHLG1CQUFvQjdzQixFQUFFdXVCLGtDQUNwZCxtQkFBb0J2dUIsRUFBRXN1Qiw0QkFBNEI5cUIsSUFBSTFELEdBQUd5RCxJQUFJc0ssSUFBSXdnQixHQUFHcnZCLEVBQUVnQixFQUFFRixFQUFFK04sR0FBRzhkLElBQUcsRUFBRyxJQUFJbUIsRUFBRTl0QixFQUFFMFAsY0FBYzFPLEVBQUVtdUIsTUFBTXJCLEVBQUVGLEdBQUc1dEIsRUFBRWMsRUFBRUUsRUFBRWxMLEdBQUd5TyxFQUFFdkUsRUFBRTBQLGNBQWNsTCxJQUFJMUQsR0FBR2d0QixJQUFJdnBCLEdBQUdna0IsR0FBRXZZLFNBQVMyYyxJQUFJLG1CQUFvQngwQixJQUFJazJCLEdBQUdydUIsRUFBRWhFLEVBQUU3RCxFQUFFMkksR0FBR3lELEVBQUV2RSxFQUFFMFAsZ0JBQWdCbEwsRUFBRW1vQixJQUFJb0MsR0FBRy91QixFQUFFaEUsRUFBRXdJLEVBQUUxRCxFQUFFZ3RCLEVBQUV2cEIsRUFBRXNLLEtBQUtnZixHQUFHLG1CQUFvQjdzQixFQUFFMHVCLDJCQUEyQixtQkFBb0IxdUIsRUFBRTJ1QixxQkFBcUIsbUJBQW9CM3VCLEVBQUUydUIsb0JBQW9CM3VCLEVBQUUydUIscUJBQXFCLG1CQUFvQjN1QixFQUFFMHVCLDJCQUEyQjF1QixFQUFFMHVCLDZCQUE2QixtQkFDemUxdUIsRUFBRTR1QixvQkFBb0I1dkIsRUFBRTVGLE9BQU8sS0FBSyxtQkFBb0I0RyxFQUFFNHVCLG9CQUFvQjV2QixFQUFFNUYsT0FBTyxHQUFHNEYsRUFBRTh4QixjQUFjaHhCLEVBQUVkLEVBQUUwUCxjQUFjbkwsR0FBR3ZELEVBQUVqRCxNQUFNK0MsRUFBRUUsRUFBRW11QixNQUFNNXFCLEVBQUV2RCxFQUFFd3JCLFFBQVEzZCxFQUFFL04sRUFBRTBELElBQUksbUJBQW9CeEQsRUFBRTR1QixvQkFBb0I1dkIsRUFBRTVGLE9BQU8sR0FBRzBHLEdBQUUsT0FBUSxDQUFDRSxFQUFFaEIsRUFBRTROLFVBQVV3ZixHQUFHcnRCLEVBQUVDLEdBQUd3RSxFQUFFeEUsRUFBRTh4QixjQUFjampCLEVBQUU3TyxFQUFFek0sT0FBT3lNLEVBQUVkLFlBQVlzRixFQUFFZ25CLEdBQUd4ckIsRUFBRXpNLEtBQUtpUixHQUFHeEQsRUFBRWpELE1BQU04USxFQUFFZ2YsRUFBRTd0QixFQUFFc3lCLGFBQWF4RSxFQUFFOXNCLEVBQUV3ckIsUUFBc0Rqb0IsRUFBOUIsaUJBQWhCQSxFQUFFdkksRUFBRWxKLGNBQWlDLE9BQU95UixFQUFJZ29CLEdBQUdob0IsR0FBMkJra0IsR0FBR3pvQixFQUExQnVFLEVBQUVxa0IsR0FBRzVzQixHQUFHd3NCLEdBQUdGLEdBQUV0WSxTQUFtQixJQUFJK2QsRUFBRS94QixFQUFFNUksMEJBQTBCK0UsRUFBRSxtQkFBb0I0MUIsR0FDbmYsbUJBQW9CL3NCLEVBQUV5dUIsMEJBQTBCLG1CQUFvQnp1QixFQUFFdXVCLGtDQUFrQyxtQkFBb0J2dUIsRUFBRXN1Qiw0QkFBNEI5cUIsSUFBSXFwQixHQUFHQyxJQUFJdnBCLElBQUk4cUIsR0FBR3J2QixFQUFFZ0IsRUFBRUYsRUFBRXlELEdBQUdvb0IsSUFBRyxFQUFHbUIsRUFBRTl0QixFQUFFMFAsY0FBYzFPLEVBQUVtdUIsTUFBTXJCLEVBQUVGLEdBQUc1dEIsRUFBRWMsRUFBRUUsRUFBRWxMLEdBQUcsSUFBSTB2QixFQUFFeGxCLEVBQUUwUCxjQUFjbEwsSUFBSXFwQixHQUFHQyxJQUFJdEksR0FBRytDLEdBQUV2WSxTQUFTMmMsSUFBSSxtQkFBb0JvQixJQUFJTSxHQUFHcnVCLEVBQUVoRSxFQUFFK3hCLEVBQUVqdEIsR0FBRzBrQixFQUFFeGxCLEVBQUUwUCxnQkFBZ0JiLEVBQUU4ZCxJQUFJb0MsR0FBRy91QixFQUFFaEUsRUFBRTZTLEVBQUUvTixFQUFFZ3RCLEVBQUV0SSxFQUFFamhCLEtBQUtwTSxHQUFHLG1CQUFvQjZJLEVBQUV1M0IsNEJBQTRCLG1CQUFvQnYzQixFQUFFdzNCLHNCQUFzQixtQkFBb0J4M0IsRUFBRXczQixxQkFBcUJ4M0IsRUFBRXczQixvQkFBb0IxM0IsRUFDMWdCMGtCLEVBQUVqaEIsR0FBRyxtQkFBb0J2RCxFQUFFdTNCLDRCQUE0QnYzQixFQUFFdTNCLDJCQUEyQnozQixFQUFFMGtCLEVBQUVqaEIsSUFBSSxtQkFBb0J2RCxFQUFFeTNCLHFCQUFxQno0QixFQUFFNUYsT0FBTyxHQUFHLG1CQUFvQjRHLEVBQUV5dUIsMEJBQTBCenZCLEVBQUU1RixPQUFPLE9BQU8sbUJBQW9CNEcsRUFBRXkzQixvQkFBb0JqMEIsSUFBSXpFLEVBQUUreEIsZUFBZWhFLElBQUkvdEIsRUFBRTJQLGdCQUFnQjFQLEVBQUU1RixPQUFPLEdBQUcsbUJBQW9CNEcsRUFBRXl1Qix5QkFBeUJqckIsSUFBSXpFLEVBQUUreEIsZUFBZWhFLElBQUkvdEIsRUFBRTJQLGdCQUFnQjFQLEVBQUU1RixPQUFPLEtBQUs0RixFQUFFOHhCLGNBQWNoeEIsRUFBRWQsRUFBRTBQLGNBQWM4VixHQUFHeGtCLEVBQUVqRCxNQUFNK0MsRUFBRUUsRUFBRW11QixNQUFNM0osRUFBRXhrQixFQUFFd3JCLFFBQVFqb0IsRUFBRXpELEVBQUUrTixJQUFJLG1CQUFvQjdOLEVBQUV5M0Isb0JBQzdmajBCLElBQUl6RSxFQUFFK3hCLGVBQWVoRSxJQUFJL3RCLEVBQUUyUCxnQkFBZ0IxUCxFQUFFNUYsT0FBTyxHQUFHLG1CQUFvQjRHLEVBQUV5dUIseUJBQXlCanJCLElBQUl6RSxFQUFFK3hCLGVBQWVoRSxJQUFJL3RCLEVBQUUyUCxnQkFBZ0IxUCxFQUFFNUYsT0FBTyxLQUFLMEcsR0FBRSxHQUFJLE9BQU80M0IsR0FBRzM0QixFQUFFQyxFQUFFaEUsRUFBRThFLEVBQUVDLEVBQUVqTCxHQUN6TCxTQUFTNGlDLEdBQUczNEIsRUFBRUMsRUFBRWhFLEVBQUU4RSxFQUFFaEwsRUFBRWlMLEdBQUdzM0IsR0FBR3Q0QixFQUFFQyxHQUFHLElBQUlnQixFQUFFLElBQWEsR0FBUmhCLEVBQUU1RixPQUFVLElBQUkwRyxJQUFJRSxFQUFFLE9BQU9sTCxHQUFHcXpCLEdBQUducEIsRUFBRWhFLEdBQUUsR0FBSTY3QixHQUFHOTNCLEVBQUVDLEVBQUVlLEdBQUdELEVBQUVkLEVBQUU0TixVQUFVNnBCLEdBQUd6bkIsUUFBUWhRLEVBQUUsSUFBSXdFLEVBQUV4RCxHQUFHLG1CQUFvQmhGLEVBQUU3SSx5QkFBeUIsS0FBSzJOLEVBQUV2TSxTQUF3SSxPQUEvSHlMLEVBQUU1RixPQUFPLEVBQUUsT0FBTzJGLEdBQUdpQixHQUFHaEIsRUFBRThQLE1BQU1paEIsR0FBRy93QixFQUFFRCxFQUFFK1AsTUFBTSxLQUFLL08sR0FBR2YsRUFBRThQLE1BQU1paEIsR0FBRy93QixFQUFFLEtBQUt3RSxFQUFFekQsSUFBSTQyQixHQUFHNTNCLEVBQUVDLEVBQUV3RSxFQUFFekQsR0FBR2YsRUFBRTBQLGNBQWM1TyxFQUFFcXVCLE1BQU1yNUIsR0FBR3F6QixHQUFHbnBCLEVBQUVoRSxHQUFFLEdBQVdnRSxFQUFFOFAsTUFBTSxTQUFTNm9CLEdBQUc1NEIsR0FBRyxJQUFJQyxFQUFFRCxFQUFFNk4sVUFBVTVOLEVBQUU0NEIsZUFBZTlQLEdBQUcvb0IsRUFBRUMsRUFBRTQ0QixlQUFlNTRCLEVBQUU0NEIsaUJBQWlCNTRCLEVBQUV3c0IsU0FBU3hzQixFQUFFd3NCLFNBQVMxRCxHQUFHL29CLEVBQUVDLEVBQUV3c0IsU0FBUSxHQUFJOEUsR0FBR3Z4QixFQUFFQyxFQUFFaVMsZUFDN2QsSUFTMFY0bUIsR0FBTUMsR0FBR0MsR0FUL1ZDLEdBQUcsQ0FBQ3JwQixXQUFXLEtBQUtzcEIsVUFBVSxHQUNsQyxTQUFTQyxHQUFHbjVCLEVBQUVDLEVBQUVoRSxHQUFHLElBQXNDZ0YsRUFBbENGLEVBQUVkLEVBQUVzeUIsYUFBYXg4QixFQUFFODdCLEdBQUU1aEIsUUFBUWpQLEdBQUUsRUFBNk0sT0FBdk1DLEVBQUUsSUFBYSxHQUFSaEIsRUFBRTVGLFVBQWE0RyxHQUFFLE9BQU9qQixHQUFHLE9BQU9BLEVBQUUyUCxnQkFBaUIsSUFBTyxFQUFGNVosSUFBTWtMLEdBQUdELEdBQUUsRUFBR2YsRUFBRTVGLFFBQVEsSUFBSSxPQUFPMkYsR0FBRyxPQUFPQSxFQUFFMlAsb0JBQWUsSUFBUzVPLEVBQUVxNEIsV0FBVSxJQUFLcjRCLEVBQUVzNEIsNkJBQTZCdGpDLEdBQUcsR0FBR3N5QixHQUFFd0osR0FBSSxFQUFGOTdCLEdBQVEsT0FBT2lLLFFBQUcsSUFBU2UsRUFBRXE0QixVQUFVNUcsR0FBR3Z5QixHQUFHRCxFQUFFZSxFQUFFa0csU0FBU2xSLEVBQUVnTCxFQUFFcTRCLFNBQVlwNEIsR0FBU2hCLEVBQUVzNUIsR0FBR3I1QixFQUFFRCxFQUFFakssRUFBRWtHLEdBQUdnRSxFQUFFOFAsTUFBTUosY0FBYyxDQUFDeW9CLFVBQVVuOEIsR0FBR2dFLEVBQUUwUCxjQUFjc3BCLEdBQUdqNUIsR0FBSyxpQkFBa0JlLEVBQUV3NEIsMkJBQWlDdjVCLEVBQUVzNUIsR0FBR3I1QixFQUFFRCxFQUFFakssRUFBRWtHLEdBQUdnRSxFQUFFOFAsTUFBTUosY0FBYyxDQUFDeW9CLFVBQVVuOEIsR0FDL2ZnRSxFQUFFMFAsY0FBY3NwQixHQUFHaDVCLEVBQUVxc0IsTUFBTSxTQUFTdHNCLEtBQUUvRCxFQUFFdTlCLEdBQUcsQ0FBQzlJLEtBQUssVUFBVXpwQixTQUFTakgsR0FBR0MsRUFBRXl3QixLQUFLejBCLEVBQUUsT0FBUXdULE9BQU94UCxFQUFTQSxFQUFFOFAsTUFBTTlULEtBQVkrRCxFQUFFMlAsY0FBa0IzTyxHQUFTRCxFQUd6SixTQUFZZixFQUFFQyxFQUFFaEUsRUFBRThFLEVBQUVoTCxHQUFHLElBQUlpTCxFQUFFZixFQUFFeXdCLEtBQUt6dkIsRUFBRWpCLEVBQUUrUCxNQUFNL1AsRUFBRWlCLEVBQUUrTyxRQUFRLElBQUl2TCxFQUFFLENBQUNpc0IsS0FBSyxTQUFTenBCLFNBQVNoTCxHQUFvUyxPQUFqUyxJQUFPLEVBQUYrRSxJQUFNZixFQUFFOFAsUUFBUTlPLElBQUdoRixFQUFFZ0UsRUFBRThQLE9BQVFtYyxXQUFXLEVBQUVqd0IsRUFBRXMyQixhQUFhOXRCLEVBQWlCLFFBQWZ4RCxFQUFFaEYsRUFBRW8wQixhQUFxQnB3QixFQUFFc3dCLFlBQVl0MEIsRUFBRXMwQixZQUFZdHdCLEVBQUVvd0IsV0FBV3B2QixFQUFFQSxFQUFFcXZCLFdBQVcsTUFBTXJ3QixFQUFFc3dCLFlBQVl0d0IsRUFBRW93QixXQUFXLE1BQU1wMEIsRUFBRXUwQixHQUFHdnZCLEVBQUV3RCxHQUFHLE9BQU96RSxFQUFFZSxFQUFFeXZCLEdBQUd4d0IsRUFBRWUsSUFBSUEsRUFBRSt2QixHQUFHL3ZCLEVBQUVDLEVBQUVqTCxFQUFFLE9BQVFzRSxPQUFPLEVBQUcwRyxFQUFFME8sT0FBT3hQLEVBQUVoRSxFQUFFd1QsT0FBT3hQLEVBQUVoRSxFQUFFK1QsUUFBUWpQLEVBQUVkLEVBQUU4UCxNQUFNOVQsRUFBUzhFLEVBSHhPMDRCLENBQUd6NUIsRUFBRUMsRUFBRWMsRUFBRWtHLFNBQVNsRyxFQUFFcTRCLFNBQVNuOUIsR0FBRytFLEVBQUVmLEVBQUU4UCxNQUFNaGEsRUFBRWlLLEVBQUUrUCxNQUFNSixjQUFjM08sRUFBRTJPLGNBQWMsT0FBTzVaLEVBQUUsQ0FBQ3FpQyxVQUFVbjhCLEdBQUcsQ0FBQ204QixVQUFVcmlDLEVBQUVxaUMsVUFBVW44QixHQUFHK0UsRUFBRWtyQixXQUFXbHNCLEVBQUVrc0IsWUFBWWp3QixFQUFFZ0UsRUFBRTBQLGNBQWNzcEIsR0FBR2w0QixJQUFFOUUsRUFFaFYsU0FBWStELEVBQUVDLEVBQUVoRSxFQUFFOEUsR0FBRyxJQUFJaEwsRUFBRWlLLEVBQUUrUCxNQUFpTCxPQUEzSy9QLEVBQUVqSyxFQUFFaWEsUUFBUS9ULEVBQUV1MEIsR0FBR3o2QixFQUFFLENBQUMyNkIsS0FBSyxVQUFVenBCLFNBQVNoTCxJQUFJLElBQVksRUFBUGdFLEVBQUV5d0IsUUFBVXowQixFQUFFcXdCLE1BQU12ckIsR0FBRzlFLEVBQUV3VCxPQUFPeFAsRUFBRWhFLEVBQUUrVCxRQUFRLEtBQUssT0FBT2hRLElBQUlBLEVBQUVzd0IsV0FBVyxLQUFLdHdCLEVBQUUzRixNQUFNLEVBQUU0RixFQUFFc3dCLFlBQVl0d0IsRUFBRW93QixXQUFXcndCLEdBQVVDLEVBQUU4UCxNQUFNOVQsRUFGcUh5OUIsQ0FBRzE1QixFQUFFQyxFQUFFYyxFQUFFa0csU0FBU2hMLEdBQUdnRSxFQUFFMFAsY0FBYyxLQUFZMVQsSUFDbFEsU0FBU3E5QixHQUFHdDVCLEVBQUVDLEVBQUVoRSxFQUFFOEUsR0FBRyxJQUFJaEwsRUFBRWlLLEVBQUUwd0IsS0FBSzF2QixFQUFFaEIsRUFBRStQLE1BQXVLLE9BQWpLOVAsRUFBRSxDQUFDeXdCLEtBQUssU0FBU3pwQixTQUFTaEgsR0FBRyxJQUFPLEVBQUZsSyxJQUFNLE9BQU9pTCxHQUFHQSxFQUFFa3JCLFdBQVcsRUFBRWxyQixFQUFFdXhCLGFBQWF0eUIsR0FBR2UsRUFBRXc0QixHQUFHdjVCLEVBQUVsSyxFQUFFLEVBQUUsTUFBTWtHLEVBQUU2MEIsR0FBRzcwQixFQUFFbEcsRUFBRWdMLEVBQUUsTUFBTUMsRUFBRXlPLE9BQU96UCxFQUFFL0QsRUFBRXdULE9BQU96UCxFQUFFZ0IsRUFBRWdQLFFBQVEvVCxFQUFFK0QsRUFBRStQLE1BQU0vTyxFQUFTL0UsRUFFZ0QsU0FBUzA5QixHQUFHMzVCLEVBQUVDLEdBQUdELEVBQUVzc0IsT0FBT3JzQixFQUFFLElBQUloRSxFQUFFK0QsRUFBRXdQLFVBQVUsT0FBT3ZULElBQUlBLEVBQUVxd0IsT0FBT3JzQixHQUFHZ3NCLEdBQUdqc0IsRUFBRXlQLE9BQU94UCxHQUN0ZCxTQUFTMjVCLEdBQUc1NUIsRUFBRUMsRUFBRWhFLEVBQUU4RSxFQUFFaEwsRUFBRWlMLEdBQUcsSUFBSUMsRUFBRWpCLEVBQUUyUCxjQUFjLE9BQU8xTyxFQUFFakIsRUFBRTJQLGNBQWMsQ0FBQ2txQixZQUFZNTVCLEVBQUU2NUIsVUFBVSxLQUFLQyxtQkFBbUIsRUFBRUMsS0FBS2o1QixFQUFFazVCLEtBQUtoK0IsRUFBRWkrQixTQUFTbmtDLEVBQUVzNkIsV0FBV3J2QixJQUFJQyxFQUFFNDRCLFlBQVk1NUIsRUFBRWdCLEVBQUU2NEIsVUFBVSxLQUFLNzRCLEVBQUU4NEIsbUJBQW1CLEVBQUU5NEIsRUFBRSs0QixLQUFLajVCLEVBQUVFLEVBQUVnNUIsS0FBS2grQixFQUFFZ0YsRUFBRWk1QixTQUFTbmtDLEVBQUVrTCxFQUFFb3ZCLFdBQVdydkIsR0FDdlEsU0FBU201QixHQUFHbjZCLEVBQUVDLEVBQUVoRSxHQUFHLElBQUk4RSxFQUFFZCxFQUFFc3lCLGFBQWF4OEIsRUFBRWdMLEVBQUVpeEIsWUFBWWh4QixFQUFFRCxFQUFFazVCLEtBQXNDLEdBQWpDckMsR0FBRzUzQixFQUFFQyxFQUFFYyxFQUFFa0csU0FBU2hMLEdBQWtCLElBQU8sR0FBdEI4RSxFQUFFOHdCLEdBQUU1aEIsVUFBcUJsUCxFQUFJLEVBQUZBLEVBQUksRUFBRWQsRUFBRTVGLE9BQU8sT0FBTyxDQUFDLEdBQUcsT0FBTzJGLEdBQUcsSUFBYSxHQUFSQSxFQUFFM0YsT0FBVTJGLEVBQUUsSUFBSUEsRUFBRUMsRUFBRThQLE1BQU0sT0FBTy9QLEdBQUcsQ0FBQyxHQUFHLEtBQUtBLEVBQUUyRSxJQUFJLE9BQU8zRSxFQUFFMlAsZUFBZWdxQixHQUFHMzVCLEVBQUUvRCxRQUFRLEdBQUcsS0FBSytELEVBQUUyRSxJQUFJZzFCLEdBQUczNUIsRUFBRS9ELFFBQVEsR0FBRyxPQUFPK0QsRUFBRStQLE1BQU0sQ0FBQy9QLEVBQUUrUCxNQUFNTixPQUFPelAsRUFBRUEsRUFBRUEsRUFBRStQLE1BQU0sU0FBUyxHQUFHL1AsSUFBSUMsRUFBRSxNQUFNRCxFQUFFLEtBQUssT0FBT0EsRUFBRWdRLFNBQVMsQ0FBQyxHQUFHLE9BQU9oUSxFQUFFeVAsUUFBUXpQLEVBQUV5UCxTQUFTeFAsRUFBRSxNQUFNRCxFQUFFQSxFQUFFQSxFQUFFeVAsT0FBT3pQLEVBQUVnUSxRQUFRUCxPQUFPelAsRUFBRXlQLE9BQU96UCxFQUFFQSxFQUFFZ1EsUUFBUWpQLEdBQUcsRUFBUyxHQUFQc25CLEdBQUV3SixHQUFFOXdCLEdBQU0sSUFBWSxFQUFQZCxFQUFFeXdCLE1BQVF6d0IsRUFBRTBQLGNBQ3plLFVBQVUsT0FBTzVaLEdBQUcsSUFBSyxXQUFxQixJQUFWa0csRUFBRWdFLEVBQUU4UCxNQUFVaGEsRUFBRSxLQUFLLE9BQU9rRyxHQUFpQixRQUFkK0QsRUFBRS9ELEVBQUV1VCxZQUFvQixPQUFPc2lCLEdBQUc5eEIsS0FBS2pLLEVBQUVrRyxHQUFHQSxFQUFFQSxFQUFFK1QsUUFBWSxRQUFKL1QsRUFBRWxHLElBQVlBLEVBQUVrSyxFQUFFOFAsTUFBTTlQLEVBQUU4UCxNQUFNLE9BQU9oYSxFQUFFa0csRUFBRStULFFBQVEvVCxFQUFFK1QsUUFBUSxNQUFNNHBCLEdBQUczNUIsR0FBRSxFQUFHbEssRUFBRWtHLEVBQUUrRSxFQUFFZixFQUFFb3dCLFlBQVksTUFBTSxJQUFLLFlBQTZCLElBQWpCcDBCLEVBQUUsS0FBS2xHLEVBQUVrSyxFQUFFOFAsTUFBVTlQLEVBQUU4UCxNQUFNLEtBQUssT0FBT2hhLEdBQUcsQ0FBZSxHQUFHLFFBQWpCaUssRUFBRWpLLEVBQUV5WixZQUF1QixPQUFPc2lCLEdBQUc5eEIsR0FBRyxDQUFDQyxFQUFFOFAsTUFBTWhhLEVBQUUsTUFBTWlLLEVBQUVqSyxFQUFFaWEsUUFBUWphLEVBQUVpYSxRQUFRL1QsRUFBRUEsRUFBRWxHLEVBQUVBLEVBQUVpSyxFQUFFNDVCLEdBQUczNUIsR0FBRSxFQUFHaEUsRUFBRSxLQUFLK0UsRUFBRWYsRUFBRW93QixZQUFZLE1BQU0sSUFBSyxXQUFXdUosR0FBRzM1QixHQUFFLEVBQUcsS0FBSyxVQUFLLEVBQU9BLEVBQUVvd0IsWUFBWSxNQUFNLFFBQVFwd0IsRUFBRTBQLGNBQWMsS0FBSyxPQUFPMVAsRUFBRThQLE1BQy9mLFNBQVMrbkIsR0FBRzkzQixFQUFFQyxFQUFFaEUsR0FBeUQsR0FBdEQsT0FBTytELElBQUlDLEVBQUVtc0IsYUFBYXBzQixFQUFFb3NCLGNBQWM2QixJQUFJaHVCLEVBQUVxc0IsTUFBUyxJQUFLcndCLEVBQUVnRSxFQUFFaXNCLFlBQVksQ0FBQyxHQUFHLE9BQU9sc0IsR0FBR0MsRUFBRThQLFFBQVEvUCxFQUFFK1AsTUFBTSxNQUFNelosTUFBTXlKLEVBQUUsTUFBTSxHQUFHLE9BQU9FLEVBQUU4UCxNQUFNLENBQTRDLElBQWpDOVQsRUFBRXUwQixHQUFaeHdCLEVBQUVDLEVBQUU4UCxNQUFhL1AsRUFBRXV5QixjQUFjdHlCLEVBQUU4UCxNQUFNOVQsRUFBTUEsRUFBRXdULE9BQU94UCxFQUFFLE9BQU9ELEVBQUVnUSxTQUFTaFEsRUFBRUEsRUFBRWdRLFNBQVEvVCxFQUFFQSxFQUFFK1QsUUFBUXdnQixHQUFHeHdCLEVBQUVBLEVBQUV1eUIsZUFBZ0I5aUIsT0FBT3hQLEVBQUVoRSxFQUFFK1QsUUFBUSxLQUFLLE9BQU8vUCxFQUFFOFAsTUFBTSxPQUFPLEtBSzVQLFNBQVNxcUIsR0FBR3A2QixFQUFFQyxHQUFHLElBQUlreUIsR0FBRyxPQUFPbnlCLEVBQUVrNkIsVUFBVSxJQUFLLFNBQVNqNkIsRUFBRUQsRUFBRWk2QixLQUFLLElBQUksSUFBSWgrQixFQUFFLEtBQUssT0FBT2dFLEdBQUcsT0FBT0EsRUFBRXVQLFlBQVl2VCxFQUFFZ0UsR0FBR0EsRUFBRUEsRUFBRStQLFFBQVEsT0FBTy9ULEVBQUUrRCxFQUFFaTZCLEtBQUssS0FBS2grQixFQUFFK1QsUUFBUSxLQUFLLE1BQU0sSUFBSyxZQUFZL1QsRUFBRStELEVBQUVpNkIsS0FBSyxJQUFJLElBQUlsNUIsRUFBRSxLQUFLLE9BQU85RSxHQUFHLE9BQU9BLEVBQUV1VCxZQUFZek8sRUFBRTlFLEdBQUdBLEVBQUVBLEVBQUUrVCxRQUFRLE9BQU9qUCxFQUFFZCxHQUFHLE9BQU9ELEVBQUVpNkIsS0FBS2o2QixFQUFFaTZCLEtBQUssS0FBS2o2QixFQUFFaTZCLEtBQUtqcUIsUUFBUSxLQUFLalAsRUFBRWlQLFFBQVEsTUFDN1osU0FBU3FxQixHQUFHcjZCLEVBQUVDLEVBQUVoRSxHQUFHLElBQUk4RSxFQUFFZCxFQUFFc3lCLGFBQWEsT0FBT3R5QixFQUFFMEUsS0FBSyxLQUFLLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRyxLQUFLLEVBQUUsS0FBSyxHQUFHLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxHQUFHLEtBQUssRUFBRSxLQUFLLEdBQUcsT0FBTyxLQUFLLEtBQUssRUFBRSxPQUFPa2tCLEdBQUc1b0IsRUFBRXpNLE9BQU9zMUIsS0FBSyxLQUFLLEtBQUssRUFBc0wsT0FBcEw0SSxLQUFLdEosR0FBRUksSUFBR0osR0FBRUcsSUFBR3NLLE1BQUs5eEIsRUFBRWQsRUFBRTROLFdBQVlnckIsaUJBQWlCOTNCLEVBQUUwckIsUUFBUTFyQixFQUFFODNCLGVBQWU5M0IsRUFBRTgzQixlQUFlLE1BQVMsT0FBTzc0QixHQUFHLE9BQU9BLEVBQUUrUCxRQUFNMmlCLEdBQUd6eUIsR0FBR0EsRUFBRTVGLE9BQU8sRUFBRTBHLEVBQUVrUixVQUFVaFMsRUFBRTVGLE9BQU8sTUFBa0IsS0FBSyxLQUFLLEVBQUV1M0IsR0FBRzN4QixHQUFHLElBQUlsSyxFQUFFdTdCLEdBQUdELEdBQUdwaEIsU0FBa0IsR0FBVGhVLEVBQUVnRSxFQUFFek0sS0FBUSxPQUFPd00sR0FBRyxNQUFNQyxFQUFFNE4sVUFBVWtyQixHQUFHLzRCLEVBQUVDLEVBQUVoRSxFQUFFOEUsR0FBS2YsRUFBRWd3QixNQUFNL3ZCLEVBQUUrdkIsTUFBTS92QixFQUFFNUYsT0FBTyxTQUFTLENBQUMsSUFBSTBHLEVBQUUsQ0FBQyxHQUFHLE9BQzdmZCxFQUFFNE4sVUFBVSxNQUFNdlgsTUFBTXlKLEVBQUUsTUFBTSxPQUFPLEtBQXNCLEdBQWpCQyxFQUFFc3hCLEdBQUdILEdBQUdsaEIsU0FBWXlpQixHQUFHenlCLEdBQUcsQ0FBQ2MsRUFBRWQsRUFBRTROLFVBQVU1UixFQUFFZ0UsRUFBRXpNLEtBQUssSUFBSXdOLEVBQUVmLEVBQUU4eEIsY0FBOEIsT0FBaEJoeEIsRUFBRSttQixJQUFJN25CLEVBQUVjLEVBQUVnbkIsSUFBSS9tQixFQUFTL0UsR0FBRyxJQUFLLFNBQVM4b0IsR0FBRSxTQUFTaGtCLEdBQUdna0IsR0FBRSxRQUFRaGtCLEdBQUcsTUFBTSxJQUFLLFNBQVMsSUFBSyxTQUFTLElBQUssUUFBUWdrQixHQUFFLE9BQU9oa0IsR0FBRyxNQUFNLElBQUssUUFBUSxJQUFLLFFBQVEsSUFBSWYsRUFBRSxFQUFFQSxFQUFFeWtCLEdBQUc5d0IsT0FBT3FNLElBQUkra0IsR0FBRU4sR0FBR3prQixHQUFHZSxHQUFHLE1BQU0sSUFBSyxTQUFTZ2tCLEdBQUUsUUFBUWhrQixHQUFHLE1BQU0sSUFBSyxNQUFNLElBQUssUUFBUSxJQUFLLE9BQU9na0IsR0FBRSxRQUFRaGtCLEdBQUdna0IsR0FBRSxPQUFPaGtCLEdBQUcsTUFBTSxJQUFLLFVBQVVna0IsR0FBRSxTQUFTaGtCLEdBQUcsTUFBTSxJQUFLLFFBQVEwRixHQUFHMUYsRUFBRUMsR0FBRytqQixHQUFFLFVBQVVoa0IsR0FBRyxNQUFNLElBQUssU0FBU0EsRUFBRXdGLGNBQzVmLENBQUMrekIsY0FBY3Q1QixFQUFFdTVCLFVBQVV4VixHQUFFLFVBQVVoa0IsR0FBRyxNQUFNLElBQUssV0FBVzJHLEdBQUczRyxFQUFFQyxHQUFHK2pCLEdBQUUsVUFBVWhrQixHQUFrQixJQUFJLElBQUlFLEtBQXZCZ00sR0FBR2hSLEVBQUUrRSxHQUFHaEIsRUFBRSxLQUFrQmdCLEVBQUVBLEVBQUV4SixlQUFleUosS0FBS2xMLEVBQUVpTCxFQUFFQyxHQUFHLGFBQWFBLEVBQUUsaUJBQWtCbEwsRUFBRWdMLEVBQUU4RyxjQUFjOVIsSUFBSWlLLEVBQUUsQ0FBQyxXQUFXakssSUFBSSxpQkFBa0JBLEdBQUdnTCxFQUFFOEcsY0FBYyxHQUFHOVIsSUFBSWlLLEVBQUUsQ0FBQyxXQUFXLEdBQUdqSyxJQUFJcUssRUFBRzVJLGVBQWV5SixJQUFJLE1BQU1sTCxHQUFHLGFBQWFrTCxHQUFHOGpCLEdBQUUsU0FBU2hrQixJQUFJLE9BQU85RSxHQUFHLElBQUssUUFBUW9KLEVBQUd0RSxHQUFHN0ssR0FBRzZLLEVBQUVDLEdBQUUsR0FBSSxNQUFNLElBQUssV0FBV3FFLEVBQUd0RSxHQUFHNkcsR0FBRzdHLEdBQUcsTUFBTSxJQUFLLFNBQVMsSUFBSyxTQUFTLE1BQU0sUUFBUSxtQkFBb0JDLEVBQUV3NUIsVUFBVXo1QixFQUFFMDVCLFFBQ3RmNVQsSUFBSTlsQixFQUFFZixFQUFFQyxFQUFFNnNCLFlBQVkvckIsRUFBRSxPQUFPQSxJQUFJZCxFQUFFNUYsT0FBTyxPQUFPLENBQWlaLE9BQWhaNEcsRUFBRSxJQUFJbEwsRUFBRTZTLFNBQVM3UyxFQUFFQSxFQUFFZ1IsY0FBYy9HLElBQUk4SCxLQUFVOUgsRUFBRStILEdBQUc5TCxJQUFJK0QsSUFBSThILEdBQVEsV0FBVzdMLElBQUcrRCxFQUFFaUIsRUFBRWxLLGNBQWMsUUFBU3FSLFVBQVUscUJBQXVCcEksRUFBRUEsRUFBRXVJLFlBQVl2SSxFQUFFc0ksYUFBYSxpQkFBa0J2SCxFQUFFb00sR0FBR25OLEVBQUVpQixFQUFFbEssY0FBY2tGLEVBQUUsQ0FBQ2tSLEdBQUdwTSxFQUFFb00sTUFBTW5OLEVBQUVpQixFQUFFbEssY0FBY2tGLEdBQUcsV0FBV0EsSUFBSWdGLEVBQUVqQixFQUFFZSxFQUFFdzVCLFNBQVN0NUIsRUFBRXM1QixVQUFTLEVBQUd4NUIsRUFBRTI1QixPQUFPejVCLEVBQUV5NUIsS0FBSzM1QixFQUFFMjVCLFFBQVExNkIsRUFBRWlCLEVBQUUwNUIsZ0JBQWdCMzZCLEVBQUUvRCxHQUFHK0QsRUFBRThuQixJQUFJN25CLEVBQUVELEVBQUUrbkIsSUFBSWhuQixFQUFFKzNCLEdBQUc5NEIsRUFBRUMsR0FBU0EsRUFBRTROLFVBQVU3TixFQUFFaUIsRUFBRWlNLEdBQUdqUixFQUFFOEUsR0FBVTlFLEdBQUcsSUFBSyxTQUFTOG9CLEdBQUUsU0FBUy9rQixHQUFHK2tCLEdBQUUsUUFBUS9rQixHQUNwZmpLLEVBQUVnTCxFQUFFLE1BQU0sSUFBSyxTQUFTLElBQUssU0FBUyxJQUFLLFFBQVFna0IsR0FBRSxPQUFPL2tCLEdBQUdqSyxFQUFFZ0wsRUFBRSxNQUFNLElBQUssUUFBUSxJQUFLLFFBQVEsSUFBSWhMLEVBQUUsRUFBRUEsRUFBRTB1QixHQUFHOXdCLE9BQU9vQyxJQUFJZ3ZCLEdBQUVOLEdBQUcxdUIsR0FBR2lLLEdBQUdqSyxFQUFFZ0wsRUFBRSxNQUFNLElBQUssU0FBU2drQixHQUFFLFFBQVEva0IsR0FBR2pLLEVBQUVnTCxFQUFFLE1BQU0sSUFBSyxNQUFNLElBQUssUUFBUSxJQUFLLE9BQU9na0IsR0FBRSxRQUFRL2tCLEdBQUcra0IsR0FBRSxPQUFPL2tCLEdBQUdqSyxFQUFFZ0wsRUFBRSxNQUFNLElBQUssVUFBVWdrQixHQUFFLFNBQVMva0IsR0FBR2pLLEVBQUVnTCxFQUFFLE1BQU0sSUFBSyxRQUFRMEYsR0FBR3pHLEVBQUVlLEdBQUdoTCxFQUFFcVEsRUFBR3BHLEVBQUVlLEdBQUdna0IsR0FBRSxVQUFVL2tCLEdBQUcsTUFBTSxJQUFLLFNBQVNqSyxFQUFFaVIsR0FBR2hILEVBQUVlLEdBQUcsTUFBTSxJQUFLLFNBQVNmLEVBQUV1RyxjQUFjLENBQUMrekIsY0FBY3Y1QixFQUFFdzVCLFVBQVV4a0MsRUFBRW9GLEVBQUUsR0FBRzRGLEVBQUUsQ0FBQ2pFLFdBQU0sSUFBU2lvQixHQUFFLFVBQVUva0IsR0FBRyxNQUFNLElBQUssV0FBVzBILEdBQUcxSCxFQUFFZSxHQUFHaEwsRUFDcGZ5UixHQUFHeEgsRUFBRWUsR0FBR2drQixHQUFFLFVBQVUva0IsR0FBRyxNQUFNLFFBQVFqSyxFQUFFZ0wsRUFBRWtNLEdBQUdoUixFQUFFbEcsR0FBRyxJQUFJME8sRUFBRTFPLEVBQUUsSUFBSWlMLEtBQUt5RCxFQUFFLEdBQUdBLEVBQUVqTixlQUFld0osR0FBRyxDQUFDLElBQUl3RCxFQUFFQyxFQUFFekQsR0FBRyxVQUFVQSxFQUFFMkssR0FBRzNMLEVBQUV3RSxHQUFHLDRCQUE0QnhELEVBQXVCLE9BQXBCd0QsRUFBRUEsRUFBRUEsRUFBRTJpQixZQUFPLElBQWdCamYsR0FBR2xJLEVBQUV3RSxHQUFJLGFBQWF4RCxFQUFFLGlCQUFrQndELEdBQUcsYUFBYXZJLEdBQUcsS0FBS3VJLElBQUlrRSxHQUFHMUksRUFBRXdFLEdBQUcsaUJBQWtCQSxHQUFHa0UsR0FBRzFJLEVBQUUsR0FBR3dFLEdBQUcsbUNBQW1DeEQsR0FBRyw2QkFBNkJBLEdBQUcsY0FBY0EsSUFBSVosRUFBRzVJLGVBQWV3SixHQUFHLE1BQU13RCxHQUFHLGFBQWF4RCxHQUFHK2pCLEdBQUUsU0FBUy9rQixHQUFHLE1BQU13RSxHQUFHM0MsRUFBRzdCLEVBQUVnQixFQUFFd0QsRUFBRXZELElBQUksT0FBT2hGLEdBQUcsSUFBSyxRQUFRb0osRUFBR3JGLEdBQUc5SixHQUFHOEosRUFBRWUsR0FBRSxHQUNuZixNQUFNLElBQUssV0FBV3NFLEVBQUdyRixHQUFHNEgsR0FBRzVILEdBQUcsTUFBTSxJQUFLLFNBQVMsTUFBTWUsRUFBRWpFLE9BQU9rRCxFQUFFNUksYUFBYSxRQUFRLEdBQUc4TixFQUFHbkUsRUFBRWpFLFFBQVEsTUFBTSxJQUFLLFNBQVNrRCxFQUFFdTZCLFdBQVd4NUIsRUFBRXc1QixTQUFtQixPQUFWdjVCLEVBQUVELEVBQUVqRSxPQUFjc0ssR0FBR3BILElBQUllLEVBQUV3NUIsU0FBU3Y1QixHQUFFLEdBQUksTUFBTUQsRUFBRXVGLGNBQWNjLEdBQUdwSCxJQUFJZSxFQUFFdzVCLFNBQVN4NUIsRUFBRXVGLGNBQWEsR0FBSSxNQUFNLFFBQVEsbUJBQW9CdlEsRUFBRXlrQyxVQUFVeDZCLEVBQUV5NkIsUUFBUTVULElBQUlHLEdBQUcvcUIsRUFBRThFLEtBQUtkLEVBQUU1RixPQUFPLEdBQUcsT0FBTzRGLEVBQUUrdkIsTUFBTS92QixFQUFFNUYsT0FBTyxLQUFLLE9BQU8sS0FBSyxLQUFLLEVBQUUsR0FBRzJGLEdBQUcsTUFBTUMsRUFBRTROLFVBQVVtckIsR0FBR2g1QixFQUFFQyxFQUFFRCxFQUFFK3hCLGNBQWNoeEIsT0FBTyxDQUFDLEdBQUcsaUJBQWtCQSxHQUFHLE9BQU9kLEVBQUU0TixVQUFVLE1BQU12WCxNQUFNeUosRUFBRSxNQUMvZTlELEVBQUVxMUIsR0FBR0QsR0FBR3BoQixTQUFTcWhCLEdBQUdILEdBQUdsaEIsU0FBU3lpQixHQUFHenlCLElBQUljLEVBQUVkLEVBQUU0TixVQUFVNVIsRUFBRWdFLEVBQUU4eEIsY0FBY2h4QixFQUFFK21CLElBQUk3bkIsRUFBRWMsRUFBRThILFlBQVk1TSxJQUFJZ0UsRUFBRTVGLE9BQU8sTUFBSzBHLEdBQUcsSUFBSTlFLEVBQUUyTSxTQUFTM00sRUFBRUEsRUFBRThLLGVBQWU2ekIsZUFBZTc1QixJQUFLK21CLElBQUk3bkIsRUFBRUEsRUFBRTROLFVBQVU5TSxHQUFHLE9BQU8sS0FBSyxLQUFLLEdBQTBCLE9BQXZCcW5CLEdBQUV5SixJQUFHOXdCLEVBQUVkLEVBQUUwUCxjQUFpQixJQUFhLEdBQVIxUCxFQUFFNUYsUUFBaUI0RixFQUFFcXNCLE1BQU1yd0IsRUFBRWdFLElBQUVjLEVBQUUsT0FBT0EsRUFBRTlFLEdBQUUsRUFBRyxPQUFPK0QsT0FBRSxJQUFTQyxFQUFFOHhCLGNBQWNxSCxVQUFVMUcsR0FBR3p5QixHQUFHaEUsRUFBRSxPQUFPK0QsRUFBRTJQLGNBQWlCNU8sSUFBSTlFLEdBQUcsSUFBWSxFQUFQZ0UsRUFBRXl3QixRQUFXLE9BQU8xd0IsSUFBRyxJQUFLQyxFQUFFOHhCLGNBQWNzSCw0QkFBNEIsSUFBZSxFQUFWeEgsR0FBRTVoQixTQUFXLElBQUk0cUIsS0FBSUEsR0FBRSxJQUFXLElBQUlBLElBQUcsSUFBSUEsS0FBRUEsR0FDcmYsR0FBRSxPQUFPNUYsSUFBRyxJQUFRLFVBQUhoSCxLQUFlLElBQVEsVUFBSDZNLEtBQWVDLEdBQUc5RixHQUFFK0YsT0FBTWo2QixHQUFHOUUsS0FBRWdFLEVBQUU1RixPQUFPLEdBQVMsTUFBSyxLQUFLLEVBQUUsT0FBT3EzQixLQUFXLE9BQU8xeEIsR0FBR3FsQixHQUFHcGxCLEVBQUU0TixVQUFVcUUsZUFBZSxLQUFLLEtBQUssR0FBRyxPQUFPNlosR0FBRzlyQixHQUFHLEtBQUssS0FBSyxHQUFHLE9BQU80b0IsR0FBRzVvQixFQUFFek0sT0FBT3MxQixLQUFLLEtBQUssS0FBSyxHQUEwQixHQUF2QlYsR0FBRXlKLElBQXdCLFFBQXJCOXdCLEVBQUVkLEVBQUUwUCxlQUEwQixPQUFPLEtBQXNDLEdBQWpDM08sRUFBRSxJQUFhLEdBQVJmLEVBQUU1RixPQUEyQixRQUFqQjRHLEVBQUVGLEVBQUUrNEIsV0FBc0IsR0FBRzk0QixFQUFFbzVCLEdBQUdyNUIsR0FBRSxPQUFRLENBQUMsR0FBRyxJQUFJODVCLElBQUcsT0FBTzc2QixHQUFHLElBQWEsR0FBUkEsRUFBRTNGLE9BQVUsSUFBSTJGLEVBQUVDLEVBQUU4UCxNQUFNLE9BQU8vUCxHQUFHLENBQVMsR0FBRyxRQUFYaUIsRUFBRTZ3QixHQUFHOXhCLElBQWUsQ0FDalcsSUFEa1dDLEVBQUU1RixPQUFPLEdBQUcrL0IsR0FBR3I1QixHQUFFLEdBQW9CLFFBQWhCQyxFQUFFQyxFQUFFNnJCLGVBQXVCN3NCLEVBQUU2c0IsWUFBWTlyQixFQUFFZixFQUFFNUYsT0FBTyxHQUNuZixPQUFPMEcsRUFBRXN2QixhQUFhcHdCLEVBQUVzd0IsWUFBWSxNQUFNdHdCLEVBQUVvd0IsV0FBV3R2QixFQUFFc3ZCLFdBQVd0dkIsRUFBRTlFLEVBQU1BLEVBQUVnRSxFQUFFOFAsTUFBTSxPQUFPOVQsR0FBTytELEVBQUVlLEdBQU5DLEVBQUUvRSxHQUFRNUIsT0FBTyxFQUFFMkcsRUFBRXN2QixXQUFXLEtBQUt0dkIsRUFBRXV2QixZQUFZLEtBQUt2dkIsRUFBRXF2QixXQUFXLEtBQW1CLFFBQWRwdkIsRUFBRUQsRUFBRXdPLFlBQW9CeE8sRUFBRWtyQixXQUFXLEVBQUVsckIsRUFBRXNyQixNQUFNdHNCLEVBQUVnQixFQUFFK08sTUFBTSxLQUFLL08sRUFBRSt3QixjQUFjLEtBQUsvd0IsRUFBRTJPLGNBQWMsS0FBSzNPLEVBQUU4ckIsWUFBWSxLQUFLOXJCLEVBQUVvckIsYUFBYSxLQUFLcHJCLEVBQUU2TSxVQUFVLE9BQU83TSxFQUFFa3JCLFdBQVdqckIsRUFBRWlyQixXQUFXbHJCLEVBQUVzckIsTUFBTXJyQixFQUFFcXJCLE1BQU10ckIsRUFBRStPLE1BQU05TyxFQUFFOE8sTUFBTS9PLEVBQUUrd0IsY0FBYzl3QixFQUFFOHdCLGNBQWMvd0IsRUFBRTJPLGNBQWMxTyxFQUFFME8sY0FBYzNPLEVBQUU4ckIsWUFBWTdyQixFQUFFNnJCLFlBQVk5ckIsRUFBRXhOLEtBQUt5TixFQUFFek4sS0FBS3dNLEVBQUVpQixFQUFFbXJCLGFBQ3BmcHJCLEVBQUVvckIsYUFBYSxPQUFPcHNCLEVBQUUsS0FBSyxDQUFDc3NCLE1BQU10c0IsRUFBRXNzQixNQUFNRCxhQUFhcnNCLEVBQUVxc0IsZUFBZXB3QixFQUFFQSxFQUFFK1QsUUFBMkIsT0FBbkJxWSxHQUFFd0osR0FBWSxFQUFWQSxHQUFFNWhCLFFBQVUsR0FBVWhRLEVBQUU4UCxNQUFNL1AsRUFBRUEsRUFBRWdRLFFBQVEsT0FBT2pQLEVBQUVrNUIsTUFBTWpQLEtBQUlpUSxLQUFLaDdCLEVBQUU1RixPQUFPLEdBQUcyRyxHQUFFLEVBQUdvNUIsR0FBR3I1QixHQUFFLEdBQUlkLEVBQUVxc0IsTUFBTSxjQUFjLENBQUMsSUFBSXRyQixFQUFFLEdBQVcsUUFBUmhCLEVBQUU4eEIsR0FBRzd3QixLQUFhLEdBQUdoQixFQUFFNUYsT0FBTyxHQUFHMkcsR0FBRSxFQUFtQixRQUFoQi9FLEVBQUUrRCxFQUFFOHNCLGVBQXVCN3NCLEVBQUU2c0IsWUFBWTd3QixFQUFFZ0UsRUFBRTVGLE9BQU8sR0FBRysvQixHQUFHcjVCLEdBQUUsR0FBSSxPQUFPQSxFQUFFazVCLE1BQU0sV0FBV2w1QixFQUFFbTVCLFdBQVdqNUIsRUFBRXVPLFlBQVkyaUIsR0FBRyxPQUFtQyxRQUE1Qmx5QixFQUFFQSxFQUFFb3dCLFdBQVd0dkIsRUFBRXN2QixjQUFzQnB3QixFQUFFcXdCLFdBQVcsTUFBTSxVQUFVLEVBQUV0RixLQUFJanFCLEVBQUVnNUIsbUJBQW1Ca0IsSUFBSSxhQUFhaC9CLElBQUlnRSxFQUFFNUYsT0FDamYsR0FBRzJHLEdBQUUsRUFBR281QixHQUFHcjVCLEdBQUUsR0FBSWQsRUFBRXFzQixNQUFNLFVBQVV2ckIsRUFBRTg0QixhQUFhNTRCLEVBQUUrTyxRQUFRL1AsRUFBRThQLE1BQU05UCxFQUFFOFAsTUFBTTlPLElBQWEsUUFBVGhGLEVBQUU4RSxFQUFFaTVCLE1BQWMvOUIsRUFBRStULFFBQVEvTyxFQUFFaEIsRUFBRThQLE1BQU05TyxFQUFFRixFQUFFaTVCLEtBQUsvNEIsR0FBRyxPQUFPLE9BQU9GLEVBQUVrNUIsTUFBTWgrQixFQUFFOEUsRUFBRWs1QixLQUFLbDVCLEVBQUUrNEIsVUFBVTc5QixFQUFFOEUsRUFBRWs1QixLQUFLaCtCLEVBQUUrVCxRQUFRalAsRUFBRXN2QixXQUFXcHdCLEVBQUVvd0IsV0FBV3R2QixFQUFFZzVCLG1CQUFtQi9PLEtBQUkvdUIsRUFBRStULFFBQVEsS0FBSy9QLEVBQUU0eEIsR0FBRTVoQixRQUFRb1ksR0FBRXdKLEdBQUU3d0IsRUFBSSxFQUFGZixFQUFJLEVBQUksRUFBRkEsR0FBS2hFLEdBQUcsS0FBSyxLQUFLLEdBQUcsS0FBSyxHQUFHLE9BQU9pL0IsS0FBSyxPQUFPbDdCLEdBQUcsT0FBT0EsRUFBRTJQLGdCQUFpQixPQUFPMVAsRUFBRTBQLGdCQUFnQixrQ0FBa0M1TyxFQUFFMnZCLE9BQU96d0IsRUFBRTVGLE9BQU8sR0FBRyxLQUFLLE1BQU0vRCxNQUFNeUosRUFBRSxJQUFJRSxFQUFFMEUsTUFDaGQsU0FBU3cyQixHQUFHbjdCLEdBQUcsT0FBT0EsRUFBRTJFLEtBQUssS0FBSyxFQUFFa2tCLEdBQUc3b0IsRUFBRXhNLE9BQU9zMUIsS0FBSyxJQUFJN29CLEVBQUVELEVBQUUzRixNQUFNLE9BQVMsS0FBRjRGLEdBQVFELEVBQUUzRixPQUFTLEtBQUg0RixFQUFRLEdBQUdELEdBQUcsS0FBSyxLQUFLLEVBQWdDLEdBQTlCMHhCLEtBQUt0SixHQUFFSSxJQUFHSixHQUFFRyxJQUFHc0ssS0FBa0IsSUFBTyxJQUFwQjV5QixFQUFFRCxFQUFFM0YsUUFBb0IsTUFBTS9ELE1BQU15SixFQUFFLE1BQXlCLE9BQW5CQyxFQUFFM0YsT0FBUyxLQUFINEYsRUFBUSxHQUFVRCxFQUFFLEtBQUssRUFBRSxPQUFPNHhCLEdBQUc1eEIsR0FBRyxLQUFLLEtBQUssR0FBRyxPQUFPb29CLEdBQUV5SixJQUFlLE1BQVo1eEIsRUFBRUQsRUFBRTNGLFFBQWMyRixFQUFFM0YsT0FBUyxLQUFINEYsRUFBUSxHQUFHRCxHQUFHLEtBQUssS0FBSyxHQUFHLE9BQU9vb0IsR0FBRXlKLElBQUcsS0FBSyxLQUFLLEVBQUUsT0FBT0gsS0FBSyxLQUFLLEtBQUssR0FBRyxPQUFPM0YsR0FBRy9yQixHQUFHLEtBQUssS0FBSyxHQUFHLEtBQUssR0FBRyxPQUFPazdCLEtBQUssS0FBSyxRQUFRLE9BQU8sTUFDcmEsU0FBU0UsR0FBR3A3QixFQUFFQyxHQUFHLElBQUksSUFBSWhFLEVBQUUsR0FBRzhFLEVBQUVkLEVBQUUsR0FBR2hFLEdBQUd5SSxFQUFHM0QsR0FBR0EsRUFBRUEsRUFBRTBPLGFBQWExTyxHQUFHLElBQUloTCxFQUFFa0csRUFBRSxNQUFNK0UsR0FBR2pMLEVBQUUsNkJBQTZCaUwsRUFBRXE2QixRQUFRLEtBQUtyNkIsRUFBRWdELE1BQU0sTUFBTSxDQUFDbEgsTUFBTWtELEVBQUVuSCxPQUFPb0gsRUFBRStELE1BQU1qTyxHQUFHLFNBQVN1bEMsR0FBR3Q3QixFQUFFQyxHQUFHLElBQUlzN0IsUUFBUUMsTUFBTXY3QixFQUFFbkQsT0FBTyxNQUFNYixHQUFHb3JCLFlBQVcsV0FBVyxNQUFNcHJCLE1BbEIzUDY4QixHQUFHLFNBQVM5NEIsRUFBRUMsR0FBRyxJQUFJLElBQUloRSxFQUFFZ0UsRUFBRThQLE1BQU0sT0FBTzlULEdBQUcsQ0FBQyxHQUFHLElBQUlBLEVBQUUwSSxLQUFLLElBQUkxSSxFQUFFMEksSUFBSTNFLEVBQUV6SSxZQUFZMEUsRUFBRTRSLGdCQUFnQixHQUFHLElBQUk1UixFQUFFMEksS0FBSyxPQUFPMUksRUFBRThULE1BQU0sQ0FBQzlULEVBQUU4VCxNQUFNTixPQUFPeFQsRUFBRUEsRUFBRUEsRUFBRThULE1BQU0sU0FBUyxHQUFHOVQsSUFBSWdFLEVBQUUsTUFBTSxLQUFLLE9BQU9oRSxFQUFFK1QsU0FBUyxDQUFDLEdBQUcsT0FBTy9ULEVBQUV3VCxRQUFReFQsRUFBRXdULFNBQVN4UCxFQUFFLE9BQU9oRSxFQUFFQSxFQUFFd1QsT0FBT3hULEVBQUUrVCxRQUFRUCxPQUFPeFQsRUFBRXdULE9BQU94VCxFQUFFQSxFQUFFK1QsVUFDaFMrb0IsR0FBRyxTQUFTLzRCLEVBQUVDLEVBQUVoRSxFQUFFOEUsR0FBRyxJQUFJaEwsRUFBRWlLLEVBQUUreEIsY0FBYyxHQUFHaDhCLElBQUlnTCxFQUFFLENBQUNmLEVBQUVDLEVBQUU0TixVQUFVeWpCLEdBQUdILEdBQUdsaEIsU0FBUyxJQUF5VWhQLEVBQXJVRCxFQUFFLEtBQUssT0FBTy9FLEdBQUcsSUFBSyxRQUFRbEcsRUFBRXFRLEVBQUdwRyxFQUFFakssR0FBR2dMLEVBQUVxRixFQUFHcEcsRUFBRWUsR0FBR0MsRUFBRSxHQUFHLE1BQU0sSUFBSyxTQUFTakwsRUFBRWlSLEdBQUdoSCxFQUFFakssR0FBR2dMLEVBQUVpRyxHQUFHaEgsRUFBRWUsR0FBR0MsRUFBRSxHQUFHLE1BQU0sSUFBSyxTQUFTakwsRUFBRW9GLEVBQUUsR0FBR3BGLEVBQUUsQ0FBQytHLFdBQU0sSUFBU2lFLEVBQUU1RixFQUFFLEdBQUc0RixFQUFFLENBQUNqRSxXQUFNLElBQVNrRSxFQUFFLEdBQUcsTUFBTSxJQUFLLFdBQVdqTCxFQUFFeVIsR0FBR3hILEVBQUVqSyxHQUFHZ0wsRUFBRXlHLEdBQUd4SCxFQUFFZSxHQUFHQyxFQUFFLEdBQUcsTUFBTSxRQUFRLG1CQUFvQmpMLEVBQUV5a0MsU0FBUyxtQkFBb0J6NUIsRUFBRXk1QixVQUFVeDZCLEVBQUV5NkIsUUFBUTVULElBQXlCLElBQUkvWCxLQUF6QjdCLEdBQUdoUixFQUFFOEUsR0FBUzlFLEVBQUUsS0FBY2xHLEVBQUUsSUFBSWdMLEVBQUV2SixlQUFlc1gsSUFBSS9ZLEVBQUV5QixlQUFlc1gsSUFBSSxNQUFNL1ksRUFBRStZLEdBQUcsR0FBRyxVQUMzZUEsRUFBRSxDQUFDLElBQUlySyxFQUFFMU8sRUFBRStZLEdBQUcsSUFBSTdOLEtBQUt3RCxFQUFFQSxFQUFFak4sZUFBZXlKLEtBQUtoRixJQUFJQSxFQUFFLElBQUlBLEVBQUVnRixHQUFHLFFBQVEsNEJBQTRCNk4sR0FBRyxhQUFhQSxHQUFHLG1DQUFtQ0EsR0FBRyw2QkFBNkJBLEdBQUcsY0FBY0EsSUFBSTFPLEVBQUc1SSxlQUFlc1gsR0FBRzlOLElBQUlBLEVBQUUsS0FBS0EsRUFBRUEsR0FBRyxJQUFJdEgsS0FBS29WLEVBQUUsT0FBTyxJQUFJQSxLQUFLL04sRUFBRSxDQUFDLElBQUl5RCxFQUFFekQsRUFBRStOLEdBQXlCLEdBQXRCckssRUFBRSxNQUFNMU8sRUFBRUEsRUFBRStZLFFBQUcsRUFBVS9OLEVBQUV2SixlQUFlc1gsSUFBSXRLLElBQUlDLElBQUksTUFBTUQsR0FBRyxNQUFNQyxHQUFHLEdBQUcsVUFBVXFLLEVBQUUsR0FBR3JLLEVBQUUsQ0FBQyxJQUFJeEQsS0FBS3dELEdBQUdBLEVBQUVqTixlQUFleUosSUFBSXVELEdBQUdBLEVBQUVoTixlQUFleUosS0FBS2hGLElBQUlBLEVBQUUsSUFBSUEsRUFBRWdGLEdBQUcsSUFBSSxJQUFJQSxLQUFLdUQsRUFBRUEsRUFBRWhOLGVBQWV5SixJQUFJd0QsRUFBRXhELEtBQUt1RCxFQUFFdkQsS0FBS2hGLElBQ2xmQSxFQUFFLElBQUlBLEVBQUVnRixHQUFHdUQsRUFBRXZELFNBQVNoRixJQUFJK0UsSUFBSUEsRUFBRSxJQUFJQSxFQUFFdEgsS0FBS29WLEVBQUU3UyxJQUFJQSxFQUFFdUksTUFBTSw0QkFBNEJzSyxHQUFHdEssRUFBRUEsRUFBRUEsRUFBRTJpQixZQUFPLEVBQU8xaUIsRUFBRUEsRUFBRUEsRUFBRTBpQixZQUFPLEVBQU8sTUFBTTNpQixHQUFHQyxJQUFJRCxJQUFJeEQsRUFBRUEsR0FBRyxJQUFJdEgsS0FBS29WLEVBQUV0SyxJQUFJLGFBQWFzSyxFQUFFLGlCQUFrQnRLLEdBQUcsaUJBQWtCQSxJQUFJeEQsRUFBRUEsR0FBRyxJQUFJdEgsS0FBS29WLEVBQUUsR0FBR3RLLEdBQUcsbUNBQW1Dc0ssR0FBRyw2QkFBNkJBLElBQUkxTyxFQUFHNUksZUFBZXNYLElBQUksTUFBTXRLLEdBQUcsYUFBYXNLLEdBQUdpVyxHQUFFLFNBQVMva0IsR0FBR2dCLEdBQUd5RCxJQUFJRCxJQUFJeEQsRUFBRSxLQUFLLGlCQUFrQndELEdBQUcsT0FBT0EsR0FBR0EsRUFBRU0sV0FBVzFCLEVBQUdvQixFQUFFckksWUFBWTZFLEVBQUVBLEdBQUcsSUFBSXRILEtBQUtvVixFQUFFdEssSUFBSXZJLElBQUkrRSxFQUFFQSxHQUFHLElBQUl0SCxLQUFLLFFBQy9ldUMsR0FBRyxJQUFJNlMsRUFBRTlOLEdBQUtmLEVBQUU2c0IsWUFBWWhlLEtBQUU3TyxFQUFFNUYsT0FBTyxLQUFJMitCLEdBQUcsU0FBU2g1QixFQUFFQyxFQUFFaEUsRUFBRThFLEdBQUc5RSxJQUFJOEUsSUFBSWQsRUFBRTVGLE9BQU8sSUFjZ0wsSUFBSW9oQyxHQUFHLG1CQUFvQkMsUUFBUUEsUUFBUTVxQixJQUFJLFNBQVM2cUIsR0FBRzM3QixFQUFFQyxFQUFFaEUsSUFBR0EsRUFBRXF4QixJQUFJLEVBQUVyeEIsSUFBSzBJLElBQUksRUFBRTFJLEVBQUV3eEIsUUFBUSxDQUFDdnVCLFFBQVEsTUFBTSxJQUFJNkIsRUFBRWQsRUFBRW5ELE1BQXNELE9BQWhEYixFQUFFeXhCLFNBQVMsV0FBV2tPLEtBQUtBLElBQUcsRUFBR0MsR0FBRzk2QixHQUFHdTZCLEdBQUd0N0IsRUFBRUMsSUFBV2hFLEVBQ3BiLFNBQVM2L0IsR0FBRzk3QixFQUFFQyxFQUFFaEUsSUFBR0EsRUFBRXF4QixJQUFJLEVBQUVyeEIsSUFBSzBJLElBQUksRUFBRSxJQUFJNUQsRUFBRWYsRUFBRXhNLEtBQUtKLHlCQUF5QixHQUFHLG1CQUFvQjJOLEVBQUUsQ0FBQyxJQUFJaEwsRUFBRWtLLEVBQUVuRCxNQUFNYixFQUFFd3hCLFFBQVEsV0FBbUIsT0FBUjZOLEdBQUd0N0IsRUFBRUMsR0FBVWMsRUFBRWhMLElBQUksSUFBSWlMLEVBQUVoQixFQUFFNk4sVUFBOE8sT0FBcE8sT0FBTzdNLEdBQUcsbUJBQW9CQSxFQUFFKzZCLG9CQUFvQjkvQixFQUFFeXhCLFNBQVMsV0FBVyxtQkFBb0Izc0IsSUFBSSxPQUFPaTdCLEdBQUdBLEdBQUcsSUFBSTc3QixJQUFJLENBQUMvSixPQUFPNGxDLEdBQUd6N0IsSUFBSW5LLE1BQU1rbEMsR0FBR3Q3QixFQUFFQyxJQUFJLElBQUloRSxFQUFFZ0UsRUFBRStELE1BQU01TixLQUFLMmxDLGtCQUFrQjk3QixFQUFFbkQsTUFBTSxDQUFDbS9CLGVBQWUsT0FBT2hnQyxFQUFFQSxFQUFFLE9BQWNBLEVBQUUsSUFBSWlnQyxHQUFHLG1CQUFvQkMsUUFBUUEsUUFBUWg4QixJQUN4YyxTQUFTaThCLEdBQUdwOEIsR0FBRyxJQUFJQyxFQUFFRCxFQUFFZ3dCLElBQUksR0FBRyxPQUFPL3ZCLEVBQUUsR0FBRyxtQkFBb0JBLEVBQUUsSUFBSUEsRUFBRSxNQUFNLE1BQU1oRSxHQUFHb2dDLEdBQUdyOEIsRUFBRS9ELFFBQVFnRSxFQUFFZ1EsUUFBUSxLQUFLLFNBQVNxc0IsR0FBR3Q4QixFQUFFQyxHQUFHLE9BQU9BLEVBQUUwRSxLQUFLLEtBQUssRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHLEtBQUssR0FBRyxPQUFPLEtBQUssRUFBRSxHQUFXLElBQVIxRSxFQUFFNUYsT0FBVyxPQUFPMkYsRUFBRSxDQUFDLElBQUkvRCxFQUFFK0QsRUFBRSt4QixjQUFjaHhCLEVBQUVmLEVBQUUyUCxjQUE0QjFQLEdBQWRELEVBQUVDLEVBQUU0TixXQUFjNmhCLHdCQUF3Qnp2QixFQUFFZCxjQUFjYyxFQUFFek0sS0FBS3lJLEVBQUV3dkIsR0FBR3hyQixFQUFFek0sS0FBS3lJLEdBQUc4RSxHQUFHZixFQUFFdThCLG9DQUFvQ3Q4QixFQUFFLE9BQU8sS0FBSyxFQUE2QyxZQUFuQyxJQUFSQSxFQUFFNUYsT0FBV210QixHQUFHdm5CLEVBQUU0TixVQUFVcUUsZ0JBQXNCLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssR0FBRyxPQUFPLE1BQU01YixNQUFNeUosRUFBRSxNQUM1ZSxTQUFTeThCLEdBQUd4OEIsRUFBRUMsRUFBRWhFLEdBQUcsT0FBT0EsRUFBRTBJLEtBQUssS0FBSyxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUcsS0FBSyxHQUFnRCxHQUFHLFFBQWhDMUUsRUFBRSxRQUFsQkEsRUFBRWhFLEVBQUU2d0IsYUFBdUI3c0IsRUFBRW93QixXQUFXLE1BQWlCLENBQUNyd0IsRUFBRUMsRUFBRUEsRUFBRTFFLEtBQUssRUFBRSxDQUFDLEdBQUcsSUFBVyxFQUFOeUUsRUFBRTJFLEtBQU8sQ0FBQyxJQUFJNUQsRUFBRWYsRUFBRTIxQixPQUFPMzFCLEVBQUU0MUIsUUFBUTcwQixJQUFJZixFQUFFQSxFQUFFekUsV0FBV3lFLElBQUlDLEdBQWdELEdBQUcsUUFBaENBLEVBQUUsUUFBbEJBLEVBQUVoRSxFQUFFNndCLGFBQXVCN3NCLEVBQUVvd0IsV0FBVyxNQUFpQixDQUFDcndCLEVBQUVDLEVBQUVBLEVBQUUxRSxLQUFLLEVBQUUsQ0FBQyxJQUFJeEYsRUFBRWlLLEVBQUVlLEVBQUVoTCxFQUFFd0YsS0FBYSxJQUFPLEdBQWZ4RixFQUFFQSxFQUFFNE8sT0FBZSxJQUFPLEVBQUY1TyxLQUFPMG1DLEdBQUd4Z0MsRUFBRStELEdBQUcwOEIsR0FBR3pnQyxFQUFFK0QsSUFBSUEsRUFBRWUsUUFBUWYsSUFBSUMsR0FBRyxPQUFPLEtBQUssRUFDdFIsT0FEd1JELEVBQUUvRCxFQUFFNFIsVUFBa0IsRUFBUjVSLEVBQUU1QixRQUFVLE9BQU80RixFQUFFRCxFQUFFNnZCLHFCQUFxQjl1QixFQUFFOUUsRUFBRWtELGNBQWNsRCxFQUFFekksS0FBS3lNLEVBQUU4eEIsY0FBY3RHLEdBQUd4dkIsRUFBRXpJLEtBQUt5TSxFQUFFOHhCLGVBQWUveEIsRUFBRTA0QixtQkFBbUIzM0IsRUFDeGdCZCxFQUFFMFAsY0FBYzNQLEVBQUV1OEIsNENBQXVELFFBQWhCdDhCLEVBQUVoRSxFQUFFNndCLGNBQXNCb0IsR0FBR2p5QixFQUFFZ0UsRUFBRUQsSUFBVSxLQUFLLEVBQWtCLEdBQUcsUUFBbkJDLEVBQUVoRSxFQUFFNndCLGFBQXdCLENBQVEsR0FBUDlzQixFQUFFLEtBQVEsT0FBTy9ELEVBQUU4VCxNQUFNLE9BQU85VCxFQUFFOFQsTUFBTXBMLEtBQUssS0FBSyxFQUFFM0UsRUFBRS9ELEVBQUU4VCxNQUFNbEMsVUFBVSxNQUFNLEtBQUssRUFBRTdOLEVBQUUvRCxFQUFFOFQsTUFBTWxDLFVBQVVxZ0IsR0FBR2p5QixFQUFFZ0UsRUFBRUQsR0FBRyxPQUFPLEtBQUssRUFBMkUsT0FBekVBLEVBQUUvRCxFQUFFNFIsZUFBVSxPQUFPNU4sR0FBVyxFQUFSaEUsRUFBRTVCLE9BQVMyc0IsR0FBRy9xQixFQUFFekksS0FBS3lJLEVBQUU4MUIsZ0JBQWdCL3hCLEVBQUUyOEIsU0FBZSxLQUFLLEVBQVMsS0FBSyxFQUFTLEtBQUssR0FBRyxPQUFPLEtBQUssR0FDelksWUFENFksT0FBTzFnQyxFQUFFMFQsZ0JBQWdCMVQsRUFBRUEsRUFBRXVULFVBQVUsT0FBT3ZULElBQUlBLEVBQUVBLEVBQUUwVCxjQUFjLE9BQU8xVCxJQUFJQSxFQUFFQSxFQUFFMlQsV0FBVyxPQUFPM1QsR0FBRzBXLEdBQUcxVyxPQUNoZixLQUFLLEdBQUcsS0FBSyxHQUFHLEtBQUssR0FBRyxLQUFLLEdBQUcsS0FBSyxHQUFHLEtBQUssR0FBRyxPQUFPLE1BQU0zRixNQUFNeUosRUFBRSxNQUM1RSxTQUFTNjhCLEdBQUc1OEIsRUFBRUMsR0FBRyxJQUFJLElBQUloRSxFQUFFK0QsSUFBSSxDQUFDLEdBQUcsSUFBSS9ELEVBQUUwSSxJQUFJLENBQUMsSUFBSTVELEVBQUU5RSxFQUFFNFIsVUFBVSxHQUFHNU4sRUFBWSxtQkFBVmMsRUFBRUEsRUFBRTZLLE9BQTRCRSxZQUFZL0ssRUFBRStLLFlBQVksVUFBVSxPQUFPLGFBQWEvSyxFQUFFODdCLFFBQVEsV0FBVyxDQUFDOTdCLEVBQUU5RSxFQUFFNFIsVUFBVSxJQUFJOVgsRUFBRWtHLEVBQUU4MUIsY0FBY25tQixNQUFNN1YsRUFBRSxNQUFTQSxHQUFhQSxFQUFFeUIsZUFBZSxXQUFXekIsRUFBRThtQyxRQUFRLEtBQUs5N0IsRUFBRTZLLE1BQU1peEIsUUFBUW54QixHQUFHLFVBQVUzVixTQUFTLEdBQUcsSUFBSWtHLEVBQUUwSSxJQUFJMUksRUFBRTRSLFVBQVVoRixVQUFVNUksRUFBRSxHQUFHaEUsRUFBRTgxQixtQkFBbUIsSUFBSSxLQUFLOTFCLEVBQUUwSSxLQUFLLEtBQUsxSSxFQUFFMEksS0FBSyxPQUFPMUksRUFBRTBULGVBQWUxVCxJQUFJK0QsSUFBSSxPQUFPL0QsRUFBRThULE1BQU0sQ0FBQzlULEVBQUU4VCxNQUFNTixPQUFPeFQsRUFBRUEsRUFBRUEsRUFBRThULE1BQU0sU0FBUyxHQUFHOVQsSUFDdGYrRCxFQUFFLE1BQU0sS0FBSyxPQUFPL0QsRUFBRStULFNBQVMsQ0FBQyxHQUFHLE9BQU8vVCxFQUFFd1QsUUFBUXhULEVBQUV3VCxTQUFTelAsRUFBRSxPQUFPL0QsRUFBRUEsRUFBRXdULE9BQU94VCxFQUFFK1QsUUFBUVAsT0FBT3hULEVBQUV3VCxPQUFPeFQsRUFBRUEsRUFBRStULFNBQ2pILFNBQVM4c0IsR0FBRzk4QixFQUFFQyxHQUFHLEdBQUdxcEIsSUFBSSxtQkFBb0JBLEdBQUd5VCxxQkFBcUIsSUFBSXpULEdBQUd5VCxxQkFBcUIxVCxHQUFHcHBCLEdBQUcsTUFBTWUsSUFBSSxPQUFPZixFQUFFMEUsS0FBSyxLQUFLLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRyxLQUFLLEdBQUcsS0FBSyxHQUFtQixHQUFHLFFBQW5CM0UsRUFBRUMsRUFBRTZzQixjQUF5QyxRQUFmOXNCLEVBQUVBLEVBQUVxd0IsWUFBcUIsQ0FBQyxJQUFJcDBCLEVBQUUrRCxFQUFFQSxFQUFFekUsS0FBSyxFQUFFLENBQUMsSUFBSXdGLEVBQUU5RSxFQUFFbEcsRUFBRWdMLEVBQUU2MEIsUUFBZ0IsR0FBUjcwQixFQUFFQSxFQUFFNEQsU0FBTyxJQUFTNU8sRUFBRSxHQUFHLElBQU8sRUFBRmdMLEdBQUswN0IsR0FBR3g4QixFQUFFaEUsT0FBTyxDQUFDOEUsRUFBRWQsRUFBRSxJQUFJbEssSUFBSSxNQUFNaUwsR0FBR3E3QixHQUFHdDdCLEVBQUVDLElBQUkvRSxFQUFFQSxFQUFFVixXQUFXVSxJQUFJK0QsR0FBRyxNQUFNLEtBQUssRUFBc0IsR0FBcEJvOEIsR0FBR244QixHQUFvQixtQkFBakJELEVBQUVDLEVBQUU0TixXQUFtQ212QixxQkFBcUIsSUFBSWg5QixFQUFFaEMsTUFBTWlDLEVBQUU4eEIsY0FBYy94QixFQUFFb3ZCLE1BQU1udkIsRUFBRTBQLGNBQWMzUCxFQUFFZzlCLHVCQUF1QixNQUFNaDhCLEdBQUdxN0IsR0FBR3A4QixFQUMvZ0JlLEdBQUcsTUFBTSxLQUFLLEVBQUVvN0IsR0FBR244QixHQUFHLE1BQU0sS0FBSyxFQUFFZzlCLEdBQUdqOUIsRUFBRUMsSUFBSSxTQUFTaTlCLEdBQUdsOUIsR0FBR0EsRUFBRXdQLFVBQVUsS0FBS3hQLEVBQUUrUCxNQUFNLEtBQUsvUCxFQUFFb3NCLGFBQWEsS0FBS3BzQixFQUFFdXdCLFlBQVksS0FBS3Z3QixFQUFFcXdCLFdBQVcsS0FBS3J3QixFQUFFK3hCLGNBQWMsS0FBSy94QixFQUFFMlAsY0FBYyxLQUFLM1AsRUFBRXV5QixhQUFhLEtBQUt2eUIsRUFBRXlQLE9BQU8sS0FBS3pQLEVBQUU4c0IsWUFBWSxLQUFLLFNBQVNxUSxHQUFHbjlCLEdBQUcsT0FBTyxJQUFJQSxFQUFFMkUsS0FBSyxJQUFJM0UsRUFBRTJFLEtBQUssSUFBSTNFLEVBQUUyRSxJQUNuUyxTQUFTeTRCLEdBQUdwOUIsR0FBR0EsRUFBRSxDQUFDLElBQUksSUFBSUMsRUFBRUQsRUFBRXlQLE9BQU8sT0FBT3hQLEdBQUcsQ0FBQyxHQUFHazlCLEdBQUdsOUIsR0FBRyxNQUFNRCxFQUFFQyxFQUFFQSxFQUFFd1AsT0FBTyxNQUFNblosTUFBTXlKLEVBQUUsTUFBTyxJQUFJOUQsRUFBRWdFLEVBQWdCLE9BQWRBLEVBQUVoRSxFQUFFNFIsVUFBaUI1UixFQUFFMEksS0FBSyxLQUFLLEVBQUUsSUFBSTVELEdBQUUsRUFBRyxNQUFNLEtBQUssRUFBK0IsS0FBSyxFQUFFZCxFQUFFQSxFQUFFaVMsY0FBY25SLEdBQUUsRUFBRyxNQUFNLFFBQVEsTUFBTXpLLE1BQU15SixFQUFFLE1BQWUsR0FBUjlELEVBQUU1QixRQUFXcU8sR0FBR3pJLEVBQUUsSUFBSWhFLEVBQUU1QixRQUFRLElBQUkyRixFQUFFQyxFQUFFLElBQUloRSxFQUFFK0QsSUFBSSxDQUFDLEtBQUssT0FBTy9ELEVBQUUrVCxTQUFTLENBQUMsR0FBRyxPQUFPL1QsRUFBRXdULFFBQVEwdEIsR0FBR2xoQyxFQUFFd1QsUUFBUSxDQUFDeFQsRUFBRSxLQUFLLE1BQU0rRCxFQUFFL0QsRUFBRUEsRUFBRXdULE9BQWlDLElBQTFCeFQsRUFBRStULFFBQVFQLE9BQU94VCxFQUFFd1QsT0FBV3hULEVBQUVBLEVBQUUrVCxRQUFRLElBQUkvVCxFQUFFMEksS0FBSyxJQUFJMUksRUFBRTBJLEtBQUssS0FBSzFJLEVBQUUwSSxLQUFLLENBQUMsR0FBVyxFQUFSMUksRUFBRTVCLE1BQVEsU0FBUzRGLEVBQUUsR0FBRyxPQUMvZWhFLEVBQUU4VCxPQUFPLElBQUk5VCxFQUFFMEksSUFBSSxTQUFTMUUsRUFBT2hFLEVBQUU4VCxNQUFNTixPQUFPeFQsRUFBRUEsRUFBRUEsRUFBRThULE1BQU0sS0FBYSxFQUFSOVQsRUFBRTVCLE9BQVMsQ0FBQzRCLEVBQUVBLEVBQUU0UixVQUFVLE1BQU03TixHQUFHZSxFQUFFczhCLEdBQUdyOUIsRUFBRS9ELEVBQUVnRSxHQUFHcTlCLEdBQUd0OUIsRUFBRS9ELEVBQUVnRSxHQUN6SCxTQUFTbzlCLEdBQUdyOUIsRUFBRUMsRUFBRWhFLEdBQUcsSUFBSThFLEVBQUVmLEVBQUUyRSxJQUFJNU8sRUFBRSxJQUFJZ0wsR0FBRyxJQUFJQSxFQUFFLEdBQUdoTCxFQUFFaUssRUFBRWpLLEVBQUVpSyxFQUFFNk4sVUFBVTdOLEVBQUU2TixVQUFVZ1gsU0FBUzVrQixFQUFFLElBQUloRSxFQUFFMk0sU0FBUzNNLEVBQUVzUixXQUFXZ3dCLGFBQWF2OUIsRUFBRUMsR0FBR2hFLEVBQUVzaEMsYUFBYXY5QixFQUFFQyxJQUFJLElBQUloRSxFQUFFMk0sVUFBVTNJLEVBQUVoRSxFQUFFc1IsWUFBYWd3QixhQUFhdjlCLEVBQUUvRCxJQUFLZ0UsRUFBRWhFLEdBQUkxRSxZQUFZeUksR0FBNEIsT0FBeEIvRCxFQUFFQSxFQUFFdWhDLHNCQUEwQyxPQUFPdjlCLEVBQUV3NkIsVUFBVXg2QixFQUFFdzZCLFFBQVE1VCxVQUFVLEdBQUcsSUFBSTlsQixHQUFjLFFBQVZmLEVBQUVBLEVBQUUrUCxPQUFnQixJQUFJc3RCLEdBQUdyOUIsRUFBRUMsRUFBRWhFLEdBQUcrRCxFQUFFQSxFQUFFZ1EsUUFBUSxPQUFPaFEsR0FBR3E5QixHQUFHcjlCLEVBQUVDLEVBQUVoRSxHQUFHK0QsRUFBRUEsRUFBRWdRLFFBQzlZLFNBQVNzdEIsR0FBR3Q5QixFQUFFQyxFQUFFaEUsR0FBRyxJQUFJOEUsRUFBRWYsRUFBRTJFLElBQUk1TyxFQUFFLElBQUlnTCxHQUFHLElBQUlBLEVBQUUsR0FBR2hMLEVBQUVpSyxFQUFFakssRUFBRWlLLEVBQUU2TixVQUFVN04sRUFBRTZOLFVBQVVnWCxTQUFTNWtCLEVBQUVoRSxFQUFFc2hDLGFBQWF2OUIsRUFBRUMsR0FBR2hFLEVBQUUxRSxZQUFZeUksUUFBUSxHQUFHLElBQUllLEdBQWMsUUFBVmYsRUFBRUEsRUFBRStQLE9BQWdCLElBQUl1dEIsR0FBR3Q5QixFQUFFQyxFQUFFaEUsR0FBRytELEVBQUVBLEVBQUVnUSxRQUFRLE9BQU9oUSxHQUFHczlCLEdBQUd0OUIsRUFBRUMsRUFBRWhFLEdBQUcrRCxFQUFFQSxFQUFFZ1EsUUFDck4sU0FBU2l0QixHQUFHajlCLEVBQUVDLEdBQUcsSUFBSSxJQUFhbEssRUFBRWlMLEVBQVgvRSxFQUFFZ0UsRUFBRWMsR0FBRSxJQUFTLENBQUMsSUFBSUEsRUFBRSxDQUFDQSxFQUFFOUUsRUFBRXdULE9BQU96UCxFQUFFLE9BQU8sQ0FBQyxHQUFHLE9BQU9lLEVBQUUsTUFBTXpLLE1BQU15SixFQUFFLE1BQW9CLE9BQWRoSyxFQUFFZ0wsRUFBRThNLFVBQWlCOU0sRUFBRTRELEtBQUssS0FBSyxFQUFFM0QsR0FBRSxFQUFHLE1BQU1oQixFQUFFLEtBQUssRUFBaUMsS0FBSyxFQUFFakssRUFBRUEsRUFBRW1jLGNBQWNsUixHQUFFLEVBQUcsTUFBTWhCLEVBQUVlLEVBQUVBLEVBQUUwTyxPQUFPMU8sR0FBRSxFQUFHLEdBQUcsSUFBSTlFLEVBQUUwSSxLQUFLLElBQUkxSSxFQUFFMEksSUFBSSxDQUFDM0UsRUFBRSxJQUFJLElBQUlpQixFQUFFakIsRUFBRXlFLEVBQUV4SSxFQUFFdUksRUFBRUMsSUFBSSxHQUFHcTRCLEdBQUc3N0IsRUFBRXVELEdBQUcsT0FBT0EsRUFBRXVMLE9BQU8sSUFBSXZMLEVBQUVHLElBQUlILEVBQUV1TCxNQUFNTixPQUFPakwsRUFBRUEsRUFBRUEsRUFBRXVMLFVBQVUsQ0FBQyxHQUFHdkwsSUFBSUMsRUFBRSxNQUFNekUsRUFBRSxLQUFLLE9BQU93RSxFQUFFd0wsU0FBUyxDQUFDLEdBQUcsT0FBT3hMLEVBQUVpTCxRQUFRakwsRUFBRWlMLFNBQVNoTCxFQUFFLE1BQU16RSxFQUFFd0UsRUFBRUEsRUFBRWlMLE9BQU9qTCxFQUFFd0wsUUFBUVAsT0FBT2pMLEVBQUVpTCxPQUFPakwsRUFBRUEsRUFBRXdMLFFBQVFoUCxHQUFHQyxFQUFFbEwsRUFBRTBPLEVBQUV4SSxFQUFFNFIsVUFDcmYsSUFBSTVNLEVBQUUySCxTQUFTM0gsRUFBRXNNLFdBQVdoRixZQUFZOUQsR0FBR3hELEVBQUVzSCxZQUFZOUQsSUFBSTFPLEVBQUV3UyxZQUFZdE0sRUFBRTRSLGdCQUFnQixHQUFHLElBQUk1UixFQUFFMEksS0FBSyxHQUFHLE9BQU8xSSxFQUFFOFQsTUFBTSxDQUFDaGEsRUFBRWtHLEVBQUU0UixVQUFVcUUsY0FBY2xSLEdBQUUsRUFBRy9FLEVBQUU4VCxNQUFNTixPQUFPeFQsRUFBRUEsRUFBRUEsRUFBRThULE1BQU0sZUFBZSxHQUFHK3NCLEdBQUc5OEIsRUFBRS9ELEdBQUcsT0FBT0EsRUFBRThULE1BQU0sQ0FBQzlULEVBQUU4VCxNQUFNTixPQUFPeFQsRUFBRUEsRUFBRUEsRUFBRThULE1BQU0sU0FBUyxHQUFHOVQsSUFBSWdFLEVBQUUsTUFBTSxLQUFLLE9BQU9oRSxFQUFFK1QsU0FBUyxDQUFDLEdBQUcsT0FBTy9ULEVBQUV3VCxRQUFReFQsRUFBRXdULFNBQVN4UCxFQUFFLE9BQWtCLEtBQVhoRSxFQUFFQSxFQUFFd1QsUUFBYTlLLE1BQU01RCxHQUFFLEdBQUk5RSxFQUFFK1QsUUFBUVAsT0FBT3hULEVBQUV3VCxPQUFPeFQsRUFBRUEsRUFBRStULFNBQ2xaLFNBQVN5dEIsR0FBR3o5QixFQUFFQyxHQUFHLE9BQU9BLEVBQUUwRSxLQUFLLEtBQUssRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHLEtBQUssR0FBRyxLQUFLLEdBQUcsSUFBSTFJLEVBQUVnRSxFQUFFNnNCLFlBQXlDLEdBQUcsUUFBaEM3d0IsRUFBRSxPQUFPQSxFQUFFQSxFQUFFbzBCLFdBQVcsTUFBaUIsQ0FBQyxJQUFJdHZCLEVBQUU5RSxFQUFFQSxFQUFFVixLQUFLLEdBQUcsSUFBVyxFQUFOd0YsRUFBRTRELE9BQVMzRSxFQUFFZSxFQUFFNjBCLFFBQVE3MEIsRUFBRTYwQixhQUFRLE9BQU8sSUFBUzUxQixHQUFHQSxLQUFLZSxFQUFFQSxFQUFFeEYsV0FBV3dGLElBQUk5RSxHQUFHLE9BQU8sS0FBSyxFQUFFLE9BQU8sS0FBSyxFQUFnQixHQUFHLE9BQWpCQSxFQUFFZ0UsRUFBRTROLFdBQXFCLENBQUM5TSxFQUFFZCxFQUFFOHhCLGNBQWMsSUFBSWg4QixFQUFFLE9BQU9pSyxFQUFFQSxFQUFFK3hCLGNBQWNoeEIsRUFBRWYsRUFBRUMsRUFBRXpNLEtBQUssSUFBSXdOLEVBQUVmLEVBQUU2c0IsWUFBK0IsR0FBbkI3c0IsRUFBRTZzQixZQUFZLEtBQVEsT0FBTzlyQixFQUFFLENBQWdGLElBQS9FL0UsRUFBRThyQixJQUFJaG5CLEVBQUUsVUFBVWYsR0FBRyxVQUFVZSxFQUFFdk4sTUFBTSxNQUFNdU4sRUFBRXJOLE1BQU1rVCxHQUFHM0ssRUFBRThFLEdBQUdtTSxHQUFHbE4sRUFBRWpLLEdBQUdrSyxFQUFFaU4sR0FBR2xOLEVBQUVlLEdBQU9oTCxFQUFFLEVBQUVBLEVBQUVpTCxFQUFFck4sT0FBT29DLEdBQ2xmLEVBQUUsQ0FBQyxJQUFJa0wsRUFBRUQsRUFBRWpMLEdBQUcwTyxFQUFFekQsRUFBRWpMLEVBQUUsR0FBRyxVQUFVa0wsRUFBRTBLLEdBQUcxUCxFQUFFd0ksR0FBRyw0QkFBNEJ4RCxFQUFFaUgsR0FBR2pNLEVBQUV3SSxHQUFHLGFBQWF4RCxFQUFFeUgsR0FBR3pNLEVBQUV3SSxHQUFHNUMsRUFBRzVGLEVBQUVnRixFQUFFd0QsRUFBRXhFLEdBQUcsT0FBT0QsR0FBRyxJQUFLLFFBQVE2RyxHQUFHNUssRUFBRThFLEdBQUcsTUFBTSxJQUFLLFdBQVc0RyxHQUFHMUwsRUFBRThFLEdBQUcsTUFBTSxJQUFLLFNBQVNmLEVBQUUvRCxFQUFFc0ssY0FBYyt6QixZQUFZcitCLEVBQUVzSyxjQUFjK3pCLGNBQWN2NUIsRUFBRXc1QixTQUFtQixPQUFWdjVCLEVBQUVELEVBQUVqRSxPQUFjc0ssR0FBR25MLElBQUk4RSxFQUFFdzVCLFNBQVN2NUIsR0FBRSxHQUFJaEIsTUFBTWUsRUFBRXc1QixXQUFXLE1BQU14NUIsRUFBRXVGLGFBQWFjLEdBQUduTCxJQUFJOEUsRUFBRXc1QixTQUFTeDVCLEVBQUV1RixjQUFhLEdBQUljLEdBQUduTCxJQUFJOEUsRUFBRXc1QixTQUFTeDVCLEVBQUV3NUIsU0FBUyxHQUFHLElBQUcsTUFBTyxPQUFPLEtBQUssRUFBRSxHQUFHLE9BQU90NkIsRUFBRTROLFVBQVUsTUFBTXZYLE1BQU15SixFQUFFLE1BQy9jLFlBRHFkRSxFQUFFNE4sVUFBVWhGLFVBQ2pmNUksRUFBRTh4QixlQUFxQixLQUFLLEVBQThELGFBQTVEOTFCLEVBQUVnRSxFQUFFNE4sV0FBWW9FLFVBQVVoVyxFQUFFZ1csU0FBUSxFQUFHVSxHQUFHMVcsRUFBRWlXLGlCQUF1QixLQUFLLEdBQUcsT0FBTyxLQUFLLEdBQXlELE9BQXRELE9BQU9qUyxFQUFFMFAsZ0JBQWdCK3RCLEdBQUcxUyxLQUFJNFIsR0FBRzM4QixFQUFFOFAsT0FBTSxTQUFLNHRCLEdBQUcxOUIsR0FBVSxLQUFLLEdBQVMsWUFBTjA5QixHQUFHMTlCLEdBQVUsS0FBSyxHQUFHLE9BQU8sS0FBSyxHQUFHLEtBQUssR0FBZ0MsWUFBN0IyOEIsR0FBRzM4QixFQUFFLE9BQU9BLEVBQUUwUCxlQUFzQixNQUFNclosTUFBTXlKLEVBQUUsTUFBTyxTQUFTNDlCLEdBQUczOUIsR0FBRyxJQUFJQyxFQUFFRCxFQUFFOHNCLFlBQVksR0FBRyxPQUFPN3NCLEVBQUUsQ0FBQ0QsRUFBRThzQixZQUFZLEtBQUssSUFBSTd3QixFQUFFK0QsRUFBRTZOLFVBQVUsT0FBTzVSLElBQUlBLEVBQUUrRCxFQUFFNk4sVUFBVSxJQUFJcXVCLElBQUlqOEIsRUFBRXpILFNBQVEsU0FBU3lILEdBQUcsSUFBSWMsRUFBRTY4QixHQUFHOW5CLEtBQUssS0FBSzlWLEVBQUVDLEdBQUdoRSxFQUFFZ3BCLElBQUlobEIsS0FBS2hFLEVBQUVzRSxJQUFJTixHQUFHQSxFQUFFNDlCLEtBQUs5OEIsRUFBRUEsUUFDbmUsU0FBUys4QixHQUFHOTlCLEVBQUVDLEdBQUcsT0FBTyxPQUFPRCxJQUFzQixRQUFsQkEsRUFBRUEsRUFBRTJQLGdCQUF3QixPQUFPM1AsRUFBRTRQLGFBQStCLFFBQWxCM1AsRUFBRUEsRUFBRTBQLGdCQUF3QixPQUFPMVAsRUFBRTJQLFdBQWUsSUFBSW11QixHQUFHOW9CLEtBQUsrb0IsS0FBS0MsR0FBRzU3QixFQUFHMndCLHVCQUF1QmtMLEdBQUc3N0IsRUFBR3MxQixrQkFBa0J3RyxHQUFFLEVBQUVsSixHQUFFLEtBQUttSixHQUFFLEtBQUtwRCxHQUFFLEVBQUVxRCxHQUFHLEVBQUVDLEdBQUduVyxHQUFHLEdBQUcwUyxHQUFFLEVBQUUwRCxHQUFHLEtBQUtDLEdBQUcsRUFBRXZRLEdBQUcsRUFBRTZNLEdBQUcsRUFBRTJELEdBQUcsRUFBRUMsR0FBRyxLQUFLaEIsR0FBRyxFQUFFekMsR0FBRzBELElBQVMsU0FBU0MsS0FBSzNELEdBQUdqUSxLQUFJLElBQUksSUE4QnNGNlQsR0E5QmxGQyxHQUFFLEtBQUtsRCxJQUFHLEVBQUdDLEdBQUcsS0FBS0csR0FBRyxLQUFLK0MsSUFBRyxFQUFHQyxHQUFHLEtBQUtDLEdBQUcsR0FBR0MsR0FBRyxHQUFHQyxHQUFHLEdBQUdDLEdBQUcsS0FBS0MsR0FBRyxFQUFFQyxHQUFHLEtBQUtDLElBQUksRUFBRUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsS0FBS0MsSUFBRyxFQUFHLFNBQVNoUixLQUFLLE9BQU8sSUFBTyxHQUFGd1AsSUFBTW5ULE1BQUssSUFBSXVVLEdBQUdBLEdBQUdBLEdBQUd2VSxLQUMzZSxTQUFTNEQsR0FBRzV1QixHQUFZLEdBQUcsSUFBTyxHQUFuQkEsRUFBRUEsRUFBRTB3QixPQUFrQixPQUFPLEVBQUUsR0FBRyxJQUFPLEVBQUYxd0IsR0FBSyxPQUFPLEtBQUtpckIsS0FBSyxFQUFFLEVBQWtCLEdBQWhCLElBQUl1VSxLQUFLQSxHQUFHaEIsSUFBTyxJQUFJalQsR0FBR2pZLFdBQVcsQ0FBQyxJQUFJbXNCLEtBQUtBLEdBQUcsT0FBT2YsR0FBR0EsR0FBR3RxQixhQUFhLEdBQUdwVSxFQUFFdy9CLEdBQUcsSUFBSXYvQixFQUFFLFNBQVN3L0IsR0FBc0QsT0FBN0MsSUFBTngvQixJQUFJQSxJQUE4QixJQUFQQSxHQUFiRCxFQUFFLFNBQVNBLElBQU9BLEtBQVVDLEVBQUUsTUFBY0EsRUFBNEQsT0FBMURELEVBQUVpckIsS0FBdUJqckIsRUFBRTRVLEdBQXBCLElBQU8sRUFBRnVwQixLQUFNLEtBQUtuK0IsRUFBTyxHQUFRQSxFQXRLM1EsU0FBWUEsR0FBRyxPQUFPQSxHQUFHLEtBQUssR0FBRyxPQUFPLEdBQUcsS0FBSyxHQUFHLE9BQU8sR0FBRyxLQUFLLEdBQUcsS0FBSyxHQUFHLE9BQU8sRUFBRSxLQUFLLEdBQUcsT0FBTyxFQUFFLFFBQVEsT0FBTyxHQXNLdUo0L0IsQ0FBRzUvQixHQUFWdy9CLElBQ25SLFNBQVMzUSxHQUFHN3VCLEVBQUVDLEVBQUVoRSxHQUFHLEdBQUcsR0FBR29qQyxHQUFHLE1BQU1BLEdBQUcsRUFBRUMsR0FBRyxLQUFLaHBDLE1BQU15SixFQUFFLE1BQWdCLEdBQUcsUUFBYkMsRUFBRTYvQixHQUFHNy9CLEVBQUVDLElBQWUsT0FBTyxLQUFLOFUsR0FBRy9VLEVBQUVDLEVBQUVoRSxHQUFHK0QsSUFBSWkxQixLQUFJNkYsSUFBSTc2QixFQUFFLElBQUk0NkIsSUFBR0UsR0FBRy82QixFQUFFZzdCLEtBQUksSUFBSWo2QixFQUFFa3FCLEtBQUssSUFBSWhyQixFQUFFLElBQU8sRUFBRmsrQixLQUFNLElBQU8sR0FBRkEsSUFBTTJCLEdBQUc5L0IsSUFBSSsvQixHQUFHLy9CLEVBQUUvRCxHQUFHLElBQUlraUMsS0FBSVMsS0FBS3ZULFFBQVEsSUFBTyxFQUFGOFMsS0FBTSxLQUFLcDlCLEdBQUcsS0FBS0EsSUFBSSxPQUFPcStCLEdBQUdBLEdBQUcsSUFBSWovQixJQUFJLENBQUNILElBQUlvL0IsR0FBRzcrQixJQUFJUCxJQUFJKy9CLEdBQUcvL0IsRUFBRS9ELElBQUl5aUMsR0FBRzErQixFQUFFLFNBQVM2L0IsR0FBRzcvQixFQUFFQyxHQUFHRCxFQUFFc3NCLE9BQU9yc0IsRUFBRSxJQUFJaEUsRUFBRStELEVBQUV3UCxVQUFxQyxJQUEzQixPQUFPdlQsSUFBSUEsRUFBRXF3QixPQUFPcnNCLEdBQUdoRSxFQUFFK0QsRUFBTUEsRUFBRUEsRUFBRXlQLE9BQU8sT0FBT3pQLEdBQUdBLEVBQUVrc0IsWUFBWWpzQixFQUFnQixRQUFkaEUsRUFBRStELEVBQUV3UCxhQUFxQnZULEVBQUVpd0IsWUFBWWpzQixHQUFHaEUsRUFBRStELEVBQUVBLEVBQUVBLEVBQUV5UCxPQUFPLE9BQU8sSUFBSXhULEVBQUUwSSxJQUFJMUksRUFBRTRSLFVBQVUsS0FDemUsU0FBU2t5QixHQUFHLy9CLEVBQUVDLEdBQUcsSUFBSSxJQUFJaEUsRUFBRStELEVBQUVnZ0MsYUFBYWovQixFQUFFZixFQUFFc1UsZUFBZXZlLEVBQUVpSyxFQUFFdVUsWUFBWXZULEVBQUVoQixFQUFFaWdDLGdCQUFnQmgvQixFQUFFakIsRUFBRW9VLGFBQWEsRUFBRW5ULEdBQUcsQ0FBQyxJQUFJd0QsRUFBRSxHQUFHK1AsR0FBR3ZULEdBQUd1RCxFQUFFLEdBQUdDLEVBQUVxSyxFQUFFOU4sRUFBRXlELEdBQUcsSUFBSSxJQUFJcUssR0FBRyxHQUFHLElBQUt0SyxFQUFFekQsSUFBSSxJQUFLeUQsRUFBRXpPLEdBQUcsQ0FBQytZLEVBQUU3TyxFQUFFaVUsR0FBRzFQLEdBQUcsSUFBSXBNLEVBQUU2YixHQUFFalQsRUFBRXlELEdBQUcsSUFBSXJNLEVBQUUwVyxFQUFFLElBQUksR0FBRzFXLEVBQUUwVyxFQUFFLEtBQUssUUFBUUEsR0FBRzdPLElBQUlELEVBQUVxVSxjQUFjN1AsR0FBR3ZELElBQUl1RCxFQUF3QixHQUF0QnpELEVBQUVvVCxHQUFHblUsRUFBRUEsSUFBSWkxQixHQUFFK0YsR0FBRSxHQUFHLzZCLEVBQUVnVSxHQUFLLElBQUlsVCxFQUFFLE9BQU85RSxJQUFJQSxJQUFJeXVCLElBQUlqQixHQUFHeHRCLEdBQUcrRCxFQUFFZ2dDLGFBQWEsS0FBS2hnQyxFQUFFa2dDLGlCQUFpQixPQUFPLENBQUMsR0FBRyxPQUFPamtDLEVBQUUsQ0FBQyxHQUFHK0QsRUFBRWtnQyxtQkFBbUJqZ0MsRUFBRSxPQUFPaEUsSUFBSXl1QixJQUFJakIsR0FBR3h0QixHQUFHLEtBQUtnRSxHQUFHaEUsRUFBRTZqQyxHQUFHaHFCLEtBQUssS0FBSzlWLEdBQUcsT0FBTzRxQixJQUFJQSxHQUFHLENBQUMzdUIsR0FBRzR1QixHQUFHckIsR0FBR1UsR0FBR29CLEtBQUtWLEdBQUdseEIsS0FBS3VDLEdBQ3JmQSxFQUFFeXVCLElBQVd6dUIsRUFBUCxLQUFLZ0UsRUFBSW1yQixHQUFHLEdBQUcwVSxHQUFHaHFCLEtBQUssS0FBSzlWLElBQWVvckIsR0FBVm52QixFQXpLK0YsU0FBWStELEdBQUcsT0FBT0EsR0FBRyxLQUFLLEdBQUcsS0FBSyxHQUFHLE9BQU8sR0FBRyxLQUFLLEdBQUcsS0FBSyxHQUFHLEtBQUssR0FBRyxLQUFLLEdBQUcsT0FBTyxHQUFHLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLE9BQU8sR0FBRyxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxPQUFPLEdBQUcsS0FBSyxFQUFFLE9BQU8sR0FBRyxRQUFRLE1BQU0xSixNQUFNeUosRUFBRSxJQUFJQyxLQXlLeFRtZ0MsQ0FBR2xnQyxHQUFVbWdDLEdBQUd0cUIsS0FBSyxLQUFLOVYsSUFBS0EsRUFBRWtnQyxpQkFBaUJqZ0MsRUFBRUQsRUFBRWdnQyxhQUFhL2pDLEdBQzVHLFNBQVNta0MsR0FBR3BnQyxHQUFpQixHQUFkdS9CLElBQUksRUFBRUUsR0FBR0QsR0FBRyxFQUFLLElBQU8sR0FBRnJCLElBQU0sTUFBTTduQyxNQUFNeUosRUFBRSxNQUFNLElBQUlFLEVBQUVELEVBQUVnZ0MsYUFBYSxHQUFHSyxNQUFNcmdDLEVBQUVnZ0MsZUFBZS8vQixFQUFFLE9BQU8sS0FBSyxJQUFJaEUsRUFBRWtZLEdBQUduVSxFQUFFQSxJQUFJaTFCLEdBQUUrRixHQUFFLEdBQUcsR0FBRyxJQUFJLytCLEVBQUUsT0FBTyxLQUFLLElBQUk4RSxFQUFFOUUsRUFBTWxHLEVBQUVvb0MsR0FBRUEsSUFBRyxHQUFHLElBQUluOUIsRUFBRXMvQixLQUFrQyxJQUExQnJMLEtBQUlqMUIsR0FBR2c3QixLQUFJajZCLElBQUU2OUIsS0FBSzJCLEdBQUd2Z0MsRUFBRWUsVUFBVXkvQixLQUFLLE1BQU0sTUFBTS83QixHQUFHZzhCLEdBQUd6Z0MsRUFBRXlFLEdBQWdFLEdBQXBEcW5CLEtBQUttUyxHQUFHaHVCLFFBQVFqUCxFQUFFbTlCLEdBQUVwb0MsRUFBRSxPQUFPcW9DLEdBQUVyOUIsRUFBRSxHQUFHazBCLEdBQUUsS0FBSytGLEdBQUUsRUFBRWo2QixFQUFFODVCLElBQU0sSUFBSzJELEdBQUcxRCxJQUFJeUYsR0FBR3ZnQyxFQUFFLFFBQVEsR0FBRyxJQUFJZSxFQUFFLENBQXlGLEdBQXhGLElBQUlBLElBQUlvOUIsSUFBRyxHQUFHbitCLEVBQUVpUyxVQUFValMsRUFBRWlTLFNBQVEsRUFBR3VWLEdBQUd4bkIsRUFBRWtTLGdCQUF3QixLQUFSalcsRUFBRTBZLEdBQUczVSxNQUFXZSxFQUFFMi9CLEdBQUcxZ0MsRUFBRS9ELEtBQVEsSUFBSThFLEVBQUUsTUFBTWQsRUFBRXMrQixHQUFHZ0MsR0FBR3ZnQyxFQUFFLEdBQUcrNkIsR0FBRy82QixFQUFFL0QsR0FBRzhqQyxHQUFHLy9CLEVBQUVnckIsTUFBSy9xQixFQUMzYyxPQUQ2Y0QsRUFBRTJnQyxhQUNyZjNnQyxFQUFFaVEsUUFBUVQsVUFBVXhQLEVBQUU0Z0MsY0FBYzNrQyxFQUFTOEUsR0FBRyxLQUFLLEVBQUUsS0FBSyxFQUFFLE1BQU16SyxNQUFNeUosRUFBRSxNQUFNLEtBQUssRUFBRThnQyxHQUFHN2dDLEdBQUcsTUFBTSxLQUFLLEVBQVUsR0FBUis2QixHQUFHLzZCLEVBQUUvRCxJQUFTLFNBQUZBLEtBQWNBLEdBQWlCLElBQWI4RSxFQUFFMjhCLEdBQUcsSUFBSTFTLE1BQVUsQ0FBQyxHQUFHLElBQUk3VyxHQUFHblUsRUFBRSxHQUFHLE1BQXlCLEtBQW5CakssRUFBRWlLLEVBQUVzVSxnQkFBcUJyWSxLQUFLQSxFQUFFLENBQUMweUIsS0FBSzN1QixFQUFFdVUsYUFBYXZVLEVBQUVzVSxlQUFldmUsRUFBRSxNQUFNaUssRUFBRThnQyxjQUFjMVosR0FBR3laLEdBQUcvcUIsS0FBSyxLQUFLOVYsR0FBR2UsR0FBRyxNQUFNOC9CLEdBQUc3Z0MsR0FBRyxNQUFNLEtBQUssRUFBVSxHQUFSKzZCLEdBQUcvNkIsRUFBRS9ELElBQVMsUUFBRkEsS0FBYUEsRUFBRSxNQUFxQixJQUFmOEUsRUFBRWYsRUFBRWdWLFdBQWVqZixHQUFHLEVBQUUsRUFBRWtHLEdBQUcsQ0FBQyxJQUFJZ0YsRUFBRSxHQUFHdVQsR0FBR3ZZLEdBQUcrRSxFQUFFLEdBQUdDLEdBQUVBLEVBQUVGLEVBQUVFLElBQUtsTCxJQUFJQSxFQUFFa0wsR0FBR2hGLElBQUkrRSxFQUNqWixHQURtWi9FLEVBQUVsRyxFQUNsWixJQUQ0WmtHLEdBQUcsS0FBWEEsRUFBRSt1QixLQUFJL3VCLEdBQVcsSUFBSSxJQUFJQSxFQUFFLElBQUksS0FBS0EsRUFBRSxLQUFLLEtBQUtBLEVBQUUsS0FBSyxJQUFJQSxFQUFFLElBQUksS0FDbGZBLEVBQUUsS0FBSyxLQUFLOGhDLEdBQUc5aEMsRUFBRSxPQUFPQSxHQUFVLENBQUMrRCxFQUFFOGdDLGNBQWMxWixHQUFHeVosR0FBRy9xQixLQUFLLEtBQUs5VixHQUFHL0QsR0FBRyxNQUFNNGtDLEdBQUc3Z0MsR0FBRyxNQUFNLEtBQUssRUFBRTZnQyxHQUFHN2dDLEdBQUcsTUFBTSxRQUFRLE1BQU0xSixNQUFNeUosRUFBRSxPQUFrQixPQUFWZ2dDLEdBQUcvL0IsRUFBRWdyQixNQUFZaHJCLEVBQUVnZ0MsZUFBZS8vQixFQUFFbWdDLEdBQUd0cUIsS0FBSyxLQUFLOVYsR0FBRyxLQUFLLFNBQVMrNkIsR0FBRy82QixFQUFFQyxHQUF1RCxJQUFwREEsSUFBSXcrQixHQUFHeCtCLElBQUk2NkIsR0FBRzk2QixFQUFFc1UsZ0JBQWdCclUsRUFBRUQsRUFBRXVVLGNBQWN0VSxFQUFNRCxFQUFFQSxFQUFFaWdDLGdCQUFnQixFQUFFaGdDLEdBQUcsQ0FBQyxJQUFJaEUsRUFBRSxHQUFHdVksR0FBR3ZVLEdBQUdjLEVBQUUsR0FBRzlFLEVBQUUrRCxFQUFFL0QsSUFBSSxFQUFFZ0UsSUFBSWMsR0FDMVUsU0FBUysrQixHQUFHOS9CLEdBQUcsR0FBRyxJQUFPLEdBQUZtK0IsSUFBTSxNQUFNN25DLE1BQU15SixFQUFFLE1BQVcsR0FBTHNnQyxLQUFRcmdDLElBQUlpMUIsSUFBRyxJQUFLajFCLEVBQUVxVSxhQUFhMm1CLElBQUcsQ0FBQyxJQUFJLzZCLEVBQUUrNkIsR0FBTS8rQixFQUFFeWtDLEdBQUcxZ0MsRUFBRUMsR0FBRyxJQUFLdStCLEdBQUcxRCxNQUFnQjcrQixFQUFFeWtDLEdBQUcxZ0MsRUFBZkMsRUFBRWtVLEdBQUduVSxFQUFFQyxVQUE2QmhFLEVBQUV5a0MsR0FBRzFnQyxFQUFmQyxFQUFFa1UsR0FBR25VLEVBQUUsSUFBZ0gsR0FBbkcsSUFBSUEsRUFBRTJFLEtBQUssSUFBSTFJLElBQUlraUMsSUFBRyxHQUFHbitCLEVBQUVpUyxVQUFValMsRUFBRWlTLFNBQVEsRUFBR3VWLEdBQUd4bkIsRUFBRWtTLGdCQUF3QixLQUFSalMsRUFBRTBVLEdBQUczVSxNQUFXL0QsRUFBRXlrQyxHQUFHMWdDLEVBQUVDLEtBQVEsSUFBSWhFLEVBQUUsTUFBTUEsRUFBRXNpQyxHQUFHZ0MsR0FBR3ZnQyxFQUFFLEdBQUcrNkIsR0FBRy82QixFQUFFQyxHQUFHOC9CLEdBQUcvL0IsRUFBRWdyQixNQUFLL3VCLEVBQXVFLE9BQXJFK0QsRUFBRTJnQyxhQUFhM2dDLEVBQUVpUSxRQUFRVCxVQUFVeFAsRUFBRTRnQyxjQUFjM2dDLEVBQUU0Z0MsR0FBRzdnQyxHQUFHKy9CLEdBQUcvL0IsRUFBRWdyQixNQUFZLEtBQ25SLFNBQVMrVixHQUFHL2dDLEVBQUVDLEdBQUcsSUFBSWhFLEVBQUVraUMsR0FBRUEsSUFBRyxFQUFFLElBQUksT0FBT24rQixFQUFFQyxHQUFHLFFBQVksS0FBSmsrQixHQUFFbGlDLEtBQVUyaUMsS0FBS3ZULE9BQU8sU0FBUzJWLEdBQUdoaEMsRUFBRUMsR0FBRyxJQUFJaEUsRUFBRWtpQyxHQUFFQSxLQUFJLEVBQUVBLElBQUcsRUFBRSxJQUFJLE9BQU9uK0IsRUFBRUMsR0FBRyxRQUFZLEtBQUprK0IsR0FBRWxpQyxLQUFVMmlDLEtBQUt2VCxPQUFPLFNBQVNnTixHQUFHcjRCLEVBQUVDLEdBQUdvb0IsR0FBRWlXLEdBQUdELElBQUlBLElBQUlwK0IsRUFBRXUrQixJQUFJditCLEVBQUUsU0FBU2k3QixLQUFLbUQsR0FBR0MsR0FBR3J1QixRQUFRbVksR0FBRWtXLElBQzVWLFNBQVNpQyxHQUFHdmdDLEVBQUVDLEdBQUdELEVBQUUyZ0MsYUFBYSxLQUFLM2dDLEVBQUU0Z0MsY0FBYyxFQUFFLElBQUkza0MsRUFBRStELEVBQUU4Z0MsY0FBaUQsSUFBbEMsSUFBSTdrQyxJQUFJK0QsRUFBRThnQyxlQUFlLEVBQUV4WixHQUFHcnJCLElBQU8sT0FBT21pQyxHQUFFLElBQUluaUMsRUFBRW1pQyxHQUFFM3VCLE9BQU8sT0FBT3hULEdBQUcsQ0FBQyxJQUFJOEUsRUFBRTlFLEVBQUUsT0FBTzhFLEVBQUU0RCxLQUFLLEtBQUssRUFBNkIsT0FBM0I1RCxFQUFFQSxFQUFFdk4sS0FBS1Ysb0JBQXdDZzJCLEtBQUssTUFBTSxLQUFLLEVBQUU0SSxLQUFLdEosR0FBRUksSUFBR0osR0FBRUcsSUFBR3NLLEtBQUssTUFBTSxLQUFLLEVBQUVqQixHQUFHN3dCLEdBQUcsTUFBTSxLQUFLLEVBQUUyd0IsS0FBSyxNQUFNLEtBQUssR0FBYyxLQUFLLEdBQUd0SixHQUFFeUosSUFBRyxNQUFNLEtBQUssR0FBRzlGLEdBQUdockIsR0FBRyxNQUFNLEtBQUssR0FBRyxLQUFLLEdBQUdtNkIsS0FBS2ovQixFQUFFQSxFQUFFd1QsT0FBT3dsQixHQUFFajFCLEVBQUVvK0IsR0FBRTVOLEdBQUd4d0IsRUFBRWlRLFFBQVEsTUFBTStxQixHQUFFcUQsR0FBR0csR0FBR3YrQixFQUFFNDZCLEdBQUUsRUFBRTBELEdBQUcsS0FBS0UsR0FBRzNELEdBQUc3TSxHQUFHLEVBQ3ZjLFNBQVN3UyxHQUFHemdDLEVBQUVDLEdBQUcsT0FBRSxDQUFDLElBQUloRSxFQUFFbWlDLEdBQUUsSUFBdUIsR0FBbkJ0UyxLQUFLaUgsR0FBRzlpQixRQUFRNmpCLEdBQU1SLEdBQUcsQ0FBQyxJQUFJLElBQUl2eUIsRUFBRW95QixHQUFFeGpCLGNBQWMsT0FBTzVPLEdBQUcsQ0FBQyxJQUFJaEwsRUFBRWdMLEVBQUVrekIsTUFBTSxPQUFPbCtCLElBQUlBLEVBQUVvM0IsUUFBUSxNQUFNcHNCLEVBQUVBLEVBQUV4RixLQUFLKzNCLElBQUcsRUFBeUMsR0FBdENKLEdBQUcsRUFBRUcsR0FBRUQsR0FBRUQsR0FBRSxLQUFLSSxJQUFHLEVBQUcySyxHQUFHanVCLFFBQVEsS0FBUSxPQUFPaFUsR0FBRyxPQUFPQSxFQUFFd1QsT0FBTyxDQUFDb3JCLEdBQUUsRUFBRTBELEdBQUd0K0IsRUFBRW0rQixHQUFFLEtBQUssTUFBTXArQixFQUFFLENBQUMsSUFBSWdCLEVBQUVoQixFQUFFaUIsRUFBRWhGLEVBQUV3VCxPQUFPaEwsRUFBRXhJLEVBQUV1SSxFQUFFdkUsRUFBb0QsR0FBbERBLEVBQUUrNkIsR0FBRXYyQixFQUFFcEssT0FBTyxLQUFLb0ssRUFBRThyQixZQUFZOXJCLEVBQUU0ckIsV0FBVyxLQUFRLE9BQU83ckIsR0FBRyxpQkFBa0JBLEdBQUcsbUJBQW9CQSxFQUFFcTVCLEtBQUssQ0FBQyxJQUFJL3VCLEVBQUV0SyxFQUFFLEdBQUcsSUFBWSxFQUFQQyxFQUFFaXNCLE1BQVEsQ0FBQyxJQUFJdDRCLEVBQUVxTSxFQUFFK0ssVUFBVXBYLEdBQUdxTSxFQUFFcW9CLFlBQVkxMEIsRUFBRTAwQixZQUFZcm9CLEVBQUVrTCxjQUFjdlgsRUFBRXVYLGNBQWNsTCxFQUFFNm5CLE1BQU1sMEIsRUFBRWswQixRQUNwZjduQixFQUFFcW9CLFlBQVksS0FBS3JvQixFQUFFa0wsY0FBYyxNQUFNLElBQUltZSxFQUFFLElBQWUsRUFBVitELEdBQUU1aEIsU0FBVzhkLEVBQUU5c0IsRUFBRSxFQUFFLENBQUMsSUFBSStzQixFQUFFLEdBQUdBLEVBQUUsS0FBS0QsRUFBRXBwQixJQUFJLENBQUMsSUFBSThnQixFQUFFc0ksRUFBRXBlLGNBQWMsR0FBRyxPQUFPOFYsRUFBRXVJLEVBQUUsT0FBT3ZJLEVBQUU3VixlQUFxQixDQUFDLElBQUk4VixFQUFFcUksRUFBRWdFLGNBQWMvRCxPQUFFLElBQVN0SSxFQUFFMFQsWUFBWSxJQUFLMVQsRUFBRTJULDZCQUE4QnZMLElBQVMsR0FBR0UsRUFBRSxDQUFDLElBQUlySSxFQUFFb0ksRUFBRWpCLFlBQVksR0FBRyxPQUFPbkgsRUFBRSxDQUFDLElBQUlDLEVBQUUsSUFBSXpsQixJQUFJeWxCLEVBQUVybEIsSUFBSXVPLEdBQUdpZixFQUFFakIsWUFBWWxILE9BQU9ELEVBQUVwbEIsSUFBSXVPLEdBQUcsR0FBRyxJQUFZLEVBQVBpZixFQUFFMkMsTUFBUSxDQUEyQyxHQUExQzNDLEVBQUUxekIsT0FBTyxHQUFHb0ssRUFBRXBLLE9BQU8sTUFBTW9LLEVBQUVwSyxRQUFRLEtBQVEsSUFBSW9LLEVBQUVFLElBQUksR0FBRyxPQUFPRixFQUFFK0ssVUFBVS9LLEVBQUVFLElBQUksT0FBTyxDQUFDLElBQUltaEIsRUFBRXdILElBQUksRUFBRSxHQUFHeEgsRUFBRW5oQixJQUFJLEVBQUVncEIsR0FBR2xwQixFQUFFcWhCLEdBQUdyaEIsRUFBRTZuQixPQUFPLEVBQUUsTUFBTXRzQixFQUFFd0UsT0FDNWYsRUFBT0MsRUFBRXhFLEVBQUUsSUFBSTRsQixFQUFFN2tCLEVBQUVpZ0MsVUFBK0csR0FBckcsT0FBT3BiLEdBQUdBLEVBQUU3a0IsRUFBRWlnQyxVQUFVLElBQUl4RixHQUFHajNCLEVBQUUsSUFBSXJFLElBQUkwbEIsRUFBRXhoQixJQUFJeUssRUFBRXRLLFNBQWdCLEtBQVhBLEVBQUVxaEIsRUFBRXJnQixJQUFJc0osTUFBZ0J0SyxFQUFFLElBQUlyRSxJQUFJMGxCLEVBQUV4aEIsSUFBSXlLLEVBQUV0SyxLQUFTQSxFQUFFeWdCLElBQUl4Z0IsR0FBRyxDQUFDRCxFQUFFakUsSUFBSWtFLEdBQUcsSUFBSXNoQixFQUFFbWIsR0FBR3ByQixLQUFLLEtBQUs5VSxFQUFFOE4sRUFBRXJLLEdBQUdxSyxFQUFFK3VCLEtBQUs5WCxFQUFFQSxHQUFHZ0ksRUFBRTF6QixPQUFPLEtBQUswekIsRUFBRXpCLE1BQU1yc0IsRUFBRSxNQUFNRCxFQUFFK3RCLEVBQUVBLEVBQUV0ZSxhQUFhLE9BQU9zZSxHQUFHdnBCLEVBQUVsTyxPQUFPdU8sRUFBR0osRUFBRWpSLE9BQU8scUJBQXFCLHlMQUF5TCxJQUFJcW5DLEtBQUlBLEdBQUUsR0FBR3IyQixFQUFFNDJCLEdBQUc1MkIsRUFBRUMsR0FBR3NwQixFQUNwZjlzQixFQUFFLEVBQUUsQ0FBQyxPQUFPOHNCLEVBQUVwcEIsS0FBSyxLQUFLLEVBQUUzRCxFQUFFd0QsRUFBRXVwQixFQUFFMXpCLE9BQU8sS0FBSzRGLElBQUlBLEVBQUU4dEIsRUFBRXpCLE9BQU9yc0IsRUFBa0IydEIsR0FBR0csRUFBYjROLEdBQUc1TixFQUFFL3NCLEVBQUVmLElBQVcsTUFBTUQsRUFBRSxLQUFLLEVBQUVnQixFQUFFd0QsRUFBRSxJQUFJOGhCLEVBQUV5SCxFQUFFdjZCLEtBQUsreUIsRUFBRXdILEVBQUVsZ0IsVUFBVSxHQUFHLElBQWEsR0FBUmtnQixFQUFFMXpCLFNBQVksbUJBQW9CaXNCLEVBQUVsekIsMEJBQTBCLE9BQU9tekIsR0FBRyxtQkFBb0JBLEVBQUV3VixvQkFBb0IsT0FBT0MsS0FBS0EsR0FBRy9XLElBQUlzQixLQUFLLENBQUN3SCxFQUFFMXpCLE9BQU8sS0FBSzRGLElBQUlBLEVBQUU4dEIsRUFBRXpCLE9BQU9yc0IsRUFBa0IydEIsR0FBR0csRUFBYitOLEdBQUcvTixFQUFFL3NCLEVBQUVmLElBQVcsTUFBTUQsR0FBRyt0QixFQUFFQSxFQUFFdGUsYUFBYSxPQUFPc2UsR0FBR29ULEdBQUdsbEMsR0FBRyxNQUFNbWxDLEdBQUluaEMsRUFBRW1oQyxFQUFHaEQsS0FBSW5pQyxHQUFHLE9BQU9BLElBQUltaUMsR0FBRW5pQyxFQUFFQSxFQUFFd1QsUUFBUSxTQUFTLE9BQy9hLFNBQVM2d0IsS0FBSyxJQUFJdGdDLEVBQUVpK0IsR0FBR2h1QixRQUFzQixPQUFkZ3VCLEdBQUdodUIsUUFBUTZqQixHQUFVLE9BQU85ekIsRUFBRTh6QixHQUFHOXpCLEVBQUUsU0FBUzBnQyxHQUFHMWdDLEVBQUVDLEdBQUcsSUFBSWhFLEVBQUVraUMsR0FBRUEsSUFBRyxHQUFHLElBQUlwOUIsRUFBRXUvQixLQUEyQixJQUF0QnJMLEtBQUlqMUIsR0FBR2c3QixLQUFJLzZCLEdBQUdzZ0MsR0FBR3ZnQyxFQUFFQyxTQUFVb2hDLEtBQUssTUFBTSxNQUFNdHJDLEdBQUcwcUMsR0FBR3pnQyxFQUFFakssR0FBa0MsR0FBdEIrMUIsS0FBS3FTLEdBQUVsaUMsRUFBRWdpQyxHQUFHaHVCLFFBQVFsUCxFQUFLLE9BQU9xOUIsR0FBRSxNQUFNOW5DLE1BQU15SixFQUFFLE1BQWlCLE9BQVhrMUIsR0FBRSxLQUFLK0YsR0FBRSxFQUFTSCxHQUFFLFNBQVN3RyxLQUFLLEtBQUssT0FBT2pELElBQUdrRCxHQUFHbEQsSUFBRyxTQUFTb0MsS0FBSyxLQUFLLE9BQU9wQyxLQUFJelUsTUFBTTJYLEdBQUdsRCxJQUFHLFNBQVNrRCxHQUFHdGhDLEdBQUcsSUFBSUMsRUFBRTQrQixHQUFHNytCLEVBQUV3UCxVQUFVeFAsRUFBRXErQixJQUFJcitCLEVBQUUreEIsY0FBYy94QixFQUFFdXlCLGFBQWEsT0FBT3R5QixFQUFFa2hDLEdBQUduaEMsR0FBR28rQixHQUFFbitCLEVBQUVpK0IsR0FBR2p1QixRQUFRLEtBQzVhLFNBQVNreEIsR0FBR25oQyxHQUFHLElBQUlDLEVBQUVELEVBQUUsRUFBRSxDQUFDLElBQUkvRCxFQUFFZ0UsRUFBRXVQLFVBQXFCLEdBQVh4UCxFQUFFQyxFQUFFd1AsT0FBVSxJQUFhLEtBQVJ4UCxFQUFFNUYsT0FBWSxDQUFjLEdBQUcsUUFBaEI0QixFQUFFbytCLEdBQUdwK0IsRUFBRWdFLEVBQUVvK0IsS0FBcUIsWUFBSkQsR0FBRW5pQyxHQUFhLEdBQUcsTUFBUEEsRUFBRWdFLEdBQVkwRSxLQUFLLEtBQUsxSSxFQUFFMEksS0FBSyxPQUFPMUksRUFBRTBULGVBQWUsSUFBUSxXQUFIMHVCLEtBQWdCLElBQVksRUFBUHBpQyxFQUFFeTBCLE1BQVEsQ0FBQyxJQUFJLElBQUkzdkIsRUFBRSxFQUFFaEwsRUFBRWtHLEVBQUU4VCxNQUFNLE9BQU9oYSxHQUFHZ0wsR0FBR2hMLEVBQUV1MkIsTUFBTXYyQixFQUFFbTJCLFdBQVduMkIsRUFBRUEsRUFBRWlhLFFBQVEvVCxFQUFFaXdCLFdBQVduckIsRUFBRSxPQUFPZixHQUFHLElBQWEsS0FBUkEsRUFBRTNGLFNBQWMsT0FBTzJGLEVBQUV1d0IsY0FBY3Z3QixFQUFFdXdCLFlBQVl0d0IsRUFBRXN3QixhQUFhLE9BQU90d0IsRUFBRW93QixhQUFhLE9BQU9yd0IsRUFBRXF3QixhQUFhcndCLEVBQUVxd0IsV0FBV0MsV0FBV3J3QixFQUFFc3dCLGFBQWF2d0IsRUFBRXF3QixXQUFXcHdCLEVBQUVvd0IsWUFBWSxFQUFFcHdCLEVBQUU1RixRQUFRLE9BQy9lMkYsRUFBRXF3QixXQUFXcndCLEVBQUVxd0IsV0FBV0MsV0FBV3J3QixFQUFFRCxFQUFFdXdCLFlBQVl0d0IsRUFBRUQsRUFBRXF3QixXQUFXcHdCLFFBQVEsQ0FBUyxHQUFHLFFBQVhoRSxFQUFFay9CLEdBQUdsN0IsSUFBa0MsT0FBbEJoRSxFQUFFNUIsT0FBTyxVQUFLK2pDLEdBQUVuaUMsR0FBUyxPQUFPK0QsSUFBSUEsRUFBRXV3QixZQUFZdndCLEVBQUVxd0IsV0FBVyxLQUFLcndCLEVBQUUzRixPQUFPLE1BQWtCLEdBQUcsUUFBZjRGLEVBQUVBLEVBQUUrUCxTQUF5QixZQUFKb3VCLEdBQUVuK0IsR0FBU20rQixHQUFFbitCLEVBQUVELFFBQVEsT0FBT0MsR0FBRyxJQUFJNDZCLEtBQUlBLEdBQUUsR0FBRyxTQUFTZ0csR0FBRzdnQyxHQUFHLElBQUlDLEVBQUVnckIsS0FBOEIsT0FBekJFLEdBQUcsR0FBR29XLEdBQUd6ckIsS0FBSyxLQUFLOVYsRUFBRUMsSUFBVyxLQUN0VCxTQUFTc2hDLEdBQUd2aEMsRUFBRUMsR0FBRyxHQUFHb2dDLFdBQVcsT0FBT3JCLElBQUksR0FBRyxJQUFPLEdBQUZiLElBQU0sTUFBTTduQyxNQUFNeUosRUFBRSxNQUFNLElBQUk5RCxFQUFFK0QsRUFBRTJnQyxhQUFhLEdBQUcsT0FBTzFrQyxFQUFFLE9BQU8sS0FBMkMsR0FBdEMrRCxFQUFFMmdDLGFBQWEsS0FBSzNnQyxFQUFFNGdDLGNBQWMsRUFBSzNrQyxJQUFJK0QsRUFBRWlRLFFBQVEsTUFBTTNaLE1BQU15SixFQUFFLE1BQU1DLEVBQUVnZ0MsYUFBYSxLQUFLLElBQUlqL0IsRUFBRTlFLEVBQUVxd0IsTUFBTXJ3QixFQUFFaXdCLFdBQVduMkIsRUFBRWdMLEVBQUVDLEVBQUVoQixFQUFFb1UsY0FBY3JlLEVBQUVpSyxFQUFFb1UsYUFBYXJlLEVBQUVpSyxFQUFFc1UsZUFBZSxFQUFFdFUsRUFBRXVVLFlBQVksRUFBRXZVLEVBQUVxVSxjQUFjdGUsRUFBRWlLLEVBQUUrMEIsa0JBQWtCaC9CLEVBQUVpSyxFQUFFeVUsZ0JBQWdCMWUsRUFBRUEsRUFBRWlLLEVBQUUwVSxjQUFjLElBQUksSUFBSXpULEVBQUVqQixFQUFFZ1YsV0FBV3ZRLEVBQUV6RSxFQUFFaWdDLGdCQUFnQixFQUFFai9CLEdBQUcsQ0FBQyxJQUFJd0QsRUFBRSxHQUFHZ1EsR0FBR3hULEdBQUc4TixFQUFFLEdBQUd0SyxFQUFFek8sRUFBRXlPLEdBQUcsRUFBRXZELEVBQUV1RCxJQUFJLEVBQUVDLEVBQUVELElBQUksRUFBRXhELElBQUk4TixFQUNuVixHQURxVixPQUNqZnN3QixJQUFJLElBQU8sR0FBRnIrQixJQUFPcStCLEdBQUduYSxJQUFJamxCLElBQUlvL0IsR0FBRzN0QixPQUFPelIsR0FBR0EsSUFBSWkxQixLQUFJbUosR0FBRW5KLEdBQUUsS0FBSytGLEdBQUUsR0FBRyxFQUFFLytCLEVBQUU1QixNQUFNLE9BQU80QixFQUFFbzBCLFlBQVlwMEIsRUFBRW8wQixXQUFXQyxXQUFXcjBCLEVBQUU4RSxFQUFFOUUsRUFBRXMwQixhQUFheHZCLEVBQUU5RSxFQUFFOEUsRUFBRTlFLEVBQUVzMEIsWUFBZSxPQUFPeHZCLEVBQUUsQ0FBd0MsR0FBdkNoTCxFQUFFb29DLEdBQUVBLElBQUcsR0FBR0QsR0FBR2p1QixRQUFRLEtBQUs2VyxHQUFHcFIsR0FBYTROLEdBQVZyaUIsRUFBRWlpQixNQUFjLENBQUMsR0FBRyxtQkFBbUJqaUIsRUFBRXdELEVBQUUsQ0FBQ3FmLE1BQU03aUIsRUFBRThpQixlQUFlem1CLElBQUkyRCxFQUFFK2lCLG1CQUFtQmhrQixFQUFFLEdBQUd5RSxHQUFHQSxFQUFFeEQsRUFBRThGLGdCQUFnQnRDLEVBQUV5ZixhQUFhempCLFFBQVFxTyxFQUFFckssRUFBRTBmLGNBQWMxZixFQUFFMGYsaUJBQWlCLElBQUlyVixFQUFFMHlCLFdBQVcsQ0FBQy84QixFQUFFcUssRUFBRW1WLFdBQVdqakIsRUFBRThOLEVBQUVzVixhQUFhNWYsRUFBRXNLLEVBQUV1VixVQUFVdlYsRUFBRUEsRUFBRXdWLFlBQVksSUFBSTdmLEVBQUVtRSxTQUFTcEUsRUFBRW9FLFNBQVMsTUFBTXc0QixHQUFJMzhCLEVBQUUsS0FDbmYsTUFBTXpFLEVBQUUsSUFBSTVILEVBQUUsRUFBRTAxQixHQUFHLEVBQUVDLEdBQUcsRUFBRUMsRUFBRSxFQUFFdkksRUFBRSxFQUFFQyxFQUFFemtCLEVBQUUwa0IsRUFBRSxLQUFLMWxCLEVBQUUsT0FBTyxDQUFDLElBQUksSUFBSTJsQixFQUFLRixJQUFJamhCLEdBQUcsSUFBSXpELEdBQUcsSUFBSTBrQixFQUFFOWMsV0FBV2tsQixFQUFFMTFCLEVBQUU0SSxHQUFHMGtCLElBQUlsaEIsR0FBRyxJQUFJc0ssR0FBRyxJQUFJNFcsRUFBRTljLFdBQVdtbEIsRUFBRTMxQixFQUFFMFcsR0FBRyxJQUFJNFcsRUFBRTljLFdBQVd4USxHQUFHc3RCLEVBQUU3YyxVQUFVbFYsUUFBVyxRQUFRaXlCLEVBQUVGLEVBQUVwZCxhQUFrQnFkLEVBQUVELEVBQUVBLEVBQUVFLEVBQUUsT0FBTyxDQUFDLEdBQUdGLElBQUl6a0IsRUFBRSxNQUFNaEIsRUFBOEMsR0FBNUMwbEIsSUFBSWxoQixLQUFLdXBCLElBQUlodEIsSUFBSThzQixFQUFFMTFCLEdBQUd1dEIsSUFBSW5oQixLQUFLaWhCLElBQUkzVyxJQUFJaWYsRUFBRTMxQixHQUFNLFFBQVF3dEIsRUFBRUYsRUFBRTVDLGFBQWEsTUFBVTZDLEdBQUpELEVBQUVDLEdBQU1wWSxXQUFXbVksRUFBRUUsRUFBRW5oQixHQUFHLElBQUlxcEIsSUFBSSxJQUFJQyxFQUFFLEtBQUssQ0FBQ2pLLE1BQU1nSyxFQUFFeHdCLElBQUl5d0IsUUFBUXRwQixFQUFFLEtBQUtBLEVBQUVBLEdBQUcsQ0FBQ3FmLE1BQU0sRUFBRXhtQixJQUFJLFFBQVFtSCxFQUFFLEtBQUtzaUIsR0FBRyxDQUFDMGEsWUFBWXhnQyxFQUFFeWdDLGVBQWVqOUIsR0FBR2lSLElBQUcsRUFBR2dxQixHQUFHLEtBQUtDLElBQUcsRUFBR2IsR0FBRS85QixFQUFFLE9BQU80Z0MsS0FBSyxNQUFNUCxHQUFJLEdBQUcsT0FDdmdCdEMsR0FBRSxNQUFNeG9DLE1BQU15SixFQUFFLE1BQU1zOEIsR0FBR3lDLEdBQUVzQyxHQUFJdEMsR0FBRUEsR0FBRXhPLGtCQUFpQixPQUFPd08sSUFBR1ksR0FBRyxLQUFLWixHQUFFLzlCLEVBQUUsT0FBTyxJQUFJRSxFQUFFakIsRUFBRSxPQUFPOCtCLElBQUcsQ0FBQyxJQUFJaFosRUFBRWdaLEdBQUV6a0MsTUFBK0IsR0FBdkIsR0FBRnlyQixHQUFNcGQsR0FBR28yQixHQUFFanhCLFVBQVUsSUFBUyxJQUFGaVksRUFBTSxDQUFDLElBQUlELEVBQUVpWixHQUFFdHZCLFVBQVUsR0FBRyxPQUFPcVcsRUFBRSxDQUFDLElBQUlFLEVBQUVGLEVBQUVtSyxJQUFJLE9BQU9qSyxJQUFJLG1CQUFvQkEsRUFBRUEsRUFBRSxNQUFNQSxFQUFFOVYsUUFBUSxPQUFPLE9BQVMsS0FBRjZWLEdBQVEsS0FBSyxFQUFFc1gsR0FBRzBCLElBQUdBLEdBQUV6a0MsUUFBUSxFQUFFLE1BQU0sS0FBSyxFQUFFK2lDLEdBQUcwQixJQUFHQSxHQUFFemtDLFFBQVEsRUFBRW9qQyxHQUFHcUIsR0FBRXR2QixVQUFVc3ZCLElBQUcsTUFBTSxLQUFLLEtBQUtBLEdBQUV6a0MsUUFBUSxLQUFLLE1BQU0sS0FBSyxLQUFLeWtDLEdBQUV6a0MsUUFBUSxLQUFLb2pDLEdBQUdxQixHQUFFdHZCLFVBQVVzdkIsSUFBRyxNQUFNLEtBQUssRUFBRXJCLEdBQUdxQixHQUFFdHZCLFVBQVVzdkIsSUFBRyxNQUFNLEtBQUssRUFBTTdCLEdBQUdoOEIsRUFBUHdELEVBQUVxNkIsSUFBVSxJQUFJelksRUFBRTVoQixFQUFFK0ssVUFBVTB0QixHQUFHejRCLEdBQUcsT0FDbmY0aEIsR0FBRzZXLEdBQUc3VyxHQUFHeVksR0FBRUEsR0FBRXhPLFlBQVksTUFBTThRLEdBQUksR0FBRyxPQUFPdEMsR0FBRSxNQUFNeG9DLE1BQU15SixFQUFFLE1BQU1zOEIsR0FBR3lDLEdBQUVzQyxHQUFJdEMsR0FBRUEsR0FBRXhPLGtCQUFpQixPQUFPd08sSUFBa0QsR0FBL0MvWSxFQUFFZ0IsR0FBR2xCLEVBQUUzQyxLQUFLNEMsRUFBRUMsRUFBRTBiLFlBQVl4Z0MsRUFBRThrQixFQUFFMmIsZUFBa0I3YixJQUFJQyxHQUFHQSxHQUFHQSxFQUFFL2UsZUFBZWdjLEdBQUcrQyxFQUFFL2UsY0FBY3lxQixnQkFBZ0IxTCxHQUFHLENBQUMsT0FBTzdrQixHQUFHcWlCLEdBQUd3QyxLQUFLRCxFQUFFNWtCLEVBQUU2aUIsV0FBYyxLQUFSaUMsRUFBRTlrQixFQUFFM0QsT0FBaUJ5b0IsRUFBRUYsR0FBRyxtQkFBbUJDLEdBQUdBLEVBQUUvQixlQUFlOEIsRUFBRUMsRUFBRTlCLGFBQWEvTyxLQUFLMnNCLElBQUk3YixFQUFFRCxFQUFFaHBCLE1BQU1uSixVQUFVb3lCLEdBQUdGLEVBQUVDLEVBQUUvZSxlQUFlbFEsV0FBV2d2QixFQUFFM0IsYUFBYXpqQixRQUFTMGpCLGVBQWU0QixFQUFFQSxFQUFFNUIsZUFBZTFmLEVBQUVxaEIsRUFBRWplLFlBQVlsVSxPQUFPMHlCLEVBQUVwUixLQUFLMnNCLElBQUkzZ0MsRUFBRTZpQixNQUFNcmYsR0FBR3hELE9BQUUsSUFDcGZBLEVBQUUzRCxJQUFJK29CLEVBQUVwUixLQUFLMnNCLElBQUkzZ0MsRUFBRTNELElBQUltSCxJQUFJc2hCLEVBQUU4YixRQUFReGIsRUFBRXBsQixJQUFJd0QsRUFBRXhELEVBQUVBLEVBQUVvbEIsRUFBRUEsRUFBRTVoQixHQUFHQSxFQUFFb2UsR0FBR2lELEVBQUVPLEdBQUdybEIsRUFBRTZoQixHQUFHaUQsRUFBRTdrQixHQUFHd0QsR0FBR3pELElBQUksSUFBSStrQixFQUFFeWIsWUFBWXpiLEVBQUU5QixhQUFheGYsRUFBRXBGLE1BQU0wbUIsRUFBRTNCLGVBQWUzZixFQUFFcEosUUFBUTBxQixFQUFFMUIsWUFBWXJqQixFQUFFM0IsTUFBTTBtQixFQUFFekIsY0FBY3RqQixFQUFFM0YsV0FBVXdxQixFQUFFQSxFQUFFaWMsZUFBZ0JDLFNBQVN0OUIsRUFBRXBGLEtBQUtvRixFQUFFcEosUUFBUTBxQixFQUFFaWMsa0JBQWtCM2IsRUFBRXBsQixHQUFHOGtCLEVBQUVrYyxTQUFTcGMsR0FBR0UsRUFBRThiLE9BQU83Z0MsRUFBRTNCLEtBQUsyQixFQUFFM0YsVUFBVXdxQixFQUFFcWMsT0FBT2xoQyxFQUFFM0IsS0FBSzJCLEVBQUUzRixRQUFRMHFCLEVBQUVrYyxTQUFTcGMsT0FBUUEsRUFBRSxHQUFHLElBQUlFLEVBQUVELEVBQUVDLEVBQUVBLEVBQUV4WSxZQUFZLElBQUl3WSxFQUFFbmQsVUFBVWlkLEVBQUVuc0IsS0FBSyxDQUFDd0YsUUFBUTZtQixFQUFFb2MsS0FBS3BjLEVBQUVxYyxXQUFXQyxJQUFJdGMsRUFBRXVjLFlBQW1ELElBQXZDLG1CQUFvQnhjLEVBQUU2VyxPQUFPN1csRUFBRTZXLFFBQVk3VyxFQUNyZixFQUFFQSxFQUFFRCxFQUFFbHlCLE9BQU9teUIsS0FBSUMsRUFBRUYsRUFBRUMsSUFBSzVtQixRQUFRa2pDLFdBQVdyYyxFQUFFb2MsS0FBS3BjLEVBQUU3bUIsUUFBUW9qQyxVQUFVdmMsRUFBRXNjLElBQUkzc0IsS0FBS29SLEdBQUdDLEdBQUdELEdBQUcsS0FBSzltQixFQUFFaVEsUUFBUWhVLEVBQUU2aUMsR0FBRS85QixFQUFFLE9BQU8sSUFBSStrQixFQUFFOWxCLEVBQUUsT0FBTzgrQixJQUFHLENBQUMsSUFBSXhZLEVBQUV3WSxHQUFFemtDLE1BQWdDLEdBQXhCLEdBQUZpc0IsR0FBTWtXLEdBQUcxVyxFQUFFZ1osR0FBRXR2QixVQUFVc3ZCLElBQVEsSUFBRnhZLEVBQU0sQ0FBQ1QsT0FBRSxFQUFPLElBQUlVLEVBQUV1WSxHQUFFOU8sSUFBSSxHQUFHLE9BQU96SixFQUFFLENBQUMsSUFBSUMsRUFBRXNZLEdBQUVqeEIsVUFBVSxPQUFPaXhCLEdBQUVuNkIsS0FBSyxLQUFLLEVBQUVraEIsRUFBRVcsRUFBRSxNQUFNLFFBQVFYLEVBQUVXLEVBQUUsbUJBQW9CRCxFQUFFQSxFQUFFVixHQUFHVSxFQUFFdFcsUUFBUTRWLEdBQUdpWixHQUFFQSxHQUFFeE8sWUFBWSxNQUFNOFEsR0FBSSxHQUFHLE9BQU90QyxHQUFFLE1BQU14b0MsTUFBTXlKLEVBQUUsTUFBTXM4QixHQUFHeUMsR0FBRXNDLEdBQUl0QyxHQUFFQSxHQUFFeE8sa0JBQWlCLE9BQU93TyxJQUFHQSxHQUFFLEtBQUtuVSxLQUFLd1QsR0FBRXBvQyxPQUFPaUssRUFBRWlRLFFBQVFoVSxFQUFFLEdBQUc4aUMsR0FBR0EsSUFBRyxFQUFHQyxHQUFHaC9CLEVBQUVpL0IsR0FBR2gvQixPQUFPLElBQUk2K0IsR0FBRS85QixFQUFFLE9BQU8rOUIsSUFBRzcrQixFQUNwZjYrQixHQUFFeE8sV0FBV3dPLEdBQUV4TyxXQUFXLEtBQWEsRUFBUndPLEdBQUV6a0MsU0FBVWlzQixFQUFFd1ksSUFBSTl1QixRQUFRLEtBQUtzVyxFQUFFelksVUFBVSxNQUFNaXhCLEdBQUU3K0IsRUFBcUYsR0FBbEUsS0FBakJjLEVBQUVmLEVBQUVvVSxnQkFBcUI0bkIsR0FBRyxNQUFNLElBQUlqN0IsRUFBRWYsSUFBSXMvQixHQUFHRCxNQUFNQSxHQUFHLEVBQUVDLEdBQUd0L0IsR0FBR3EvQixHQUFHLEVBQUVwakMsRUFBRUEsRUFBRTRSLFVBQWF5YixJQUFJLG1CQUFvQkEsR0FBR2laLGtCQUFrQixJQUFJalosR0FBR2laLGtCQUFrQmxaLEdBQUdwdEIsT0FBRSxFQUFPLEtBQXNCLEdBQWhCQSxFQUFFZ1UsUUFBUTVWLFFBQVcsTUFBTSttQyxJQUFlLEdBQVZyQixHQUFHLy9CLEVBQUVnckIsTUFBUTRRLEdBQUcsTUFBTUEsSUFBRyxFQUFHNTdCLEVBQUU2N0IsR0FBR0EsR0FBRyxLQUFLNzdCLEVBQUUsT0FBRyxJQUFPLEVBQUZtK0IsS0FBaUI5UyxLQUFMLEtBQ2pXLFNBQVNzVyxLQUFLLEtBQUssT0FBTzdDLElBQUcsQ0FBQyxJQUFJOStCLEVBQUU4K0IsR0FBRXR2QixVQUFVbXdCLElBQUksT0FBT0QsS0FBSyxJQUFhLEVBQVJaLEdBQUV6a0MsT0FBUzhWLEdBQUcydUIsR0FBRVksTUFBTUMsSUFBRyxHQUFJLEtBQUtiLEdBQUVuNkIsS0FBS201QixHQUFHOTlCLEVBQUU4K0IsS0FBSTN1QixHQUFHMnVCLEdBQUVZLE1BQU1DLElBQUcsSUFBSyxJQUFJMS9CLEVBQUU2K0IsR0FBRXprQyxNQUFNLElBQU8sSUFBRjRGLElBQVFxOEIsR0FBR3Q4QixFQUFFOCtCLElBQUcsSUFBTyxJQUFGNytCLElBQVE4K0IsS0FBS0EsSUFBRyxFQUFHM1QsR0FBRyxJQUFHLFdBQWdCLE9BQUxpVixLQUFZLFNBQVF2QixHQUFFQSxHQUFFeE8sWUFBWSxTQUFTK1AsS0FBSyxHQUFHLEtBQUtwQixHQUFHLENBQUMsSUFBSWovQixFQUFFLEdBQUdpL0IsR0FBRyxHQUFHQSxHQUFTLE9BQU5BLEdBQUcsR0FBVTlULEdBQUduckIsRUFBRXdpQyxJQUFJLE9BQU0sRUFBRyxTQUFTOUYsR0FBRzE4QixFQUFFQyxHQUFHaS9CLEdBQUd4bEMsS0FBS3VHLEVBQUVELEdBQUcrK0IsS0FBS0EsSUFBRyxFQUFHM1QsR0FBRyxJQUFHLFdBQWdCLE9BQUxpVixLQUFZLFNBQVEsU0FBUzVELEdBQUd6OEIsRUFBRUMsR0FBR2svQixHQUFHemxDLEtBQUt1RyxFQUFFRCxHQUFHKytCLEtBQUtBLElBQUcsRUFBRzNULEdBQUcsSUFBRyxXQUFnQixPQUFMaVYsS0FBWSxTQUN6ZCxTQUFTbUMsS0FBSyxHQUFHLE9BQU94RCxHQUFHLE9BQU0sRUFBRyxJQUFJaC9CLEVBQUVnL0IsR0FBVyxHQUFSQSxHQUFHLEtBQVEsSUFBTyxHQUFGYixJQUFNLE1BQU03bkMsTUFBTXlKLEVBQUUsTUFBTSxJQUFJRSxFQUFFaytCLEdBQUVBLElBQUcsR0FBRyxJQUFJbGlDLEVBQUVrakMsR0FBR0EsR0FBRyxHQUFHLElBQUksSUFBSXArQixFQUFFLEVBQUVBLEVBQUU5RSxFQUFFdEksT0FBT29OLEdBQUcsRUFBRSxDQUFDLElBQUloTCxFQUFFa0csRUFBRThFLEdBQUdDLEVBQUUvRSxFQUFFOEUsRUFBRSxHQUFHRSxFQUFFbEwsRUFBRTYvQixRQUF5QixHQUFqQjcvQixFQUFFNi9CLGFBQVEsRUFBVSxtQkFBb0IzMEIsRUFBRSxJQUFJQSxJQUFJLE1BQU11RCxHQUFHLEdBQUcsT0FBT3hELEVBQUUsTUFBTTFLLE1BQU15SixFQUFFLE1BQU1zOEIsR0FBR3I3QixFQUFFd0QsSUFBZSxJQUFYdkksRUFBRWlqQyxHQUFHQSxHQUFHLEdBQU9uK0IsRUFBRSxFQUFFQSxFQUFFOUUsRUFBRXRJLE9BQU9vTixHQUFHLEVBQUUsQ0FBQ2hMLEVBQUVrRyxFQUFFOEUsR0FBR0MsRUFBRS9FLEVBQUU4RSxFQUFFLEdBQUcsSUFBSSxJQUFJMEQsRUFBRTFPLEVBQUU0L0IsT0FBTzUvQixFQUFFNi9CLFFBQVFueEIsSUFBSSxNQUFNRCxHQUFHLEdBQUcsT0FBT3hELEVBQUUsTUFBTTFLLE1BQU15SixFQUFFLE1BQU1zOEIsR0FBR3I3QixFQUFFd0QsSUFBSSxJQUFJQyxFQUFFekUsRUFBRWlRLFFBQVFzZ0IsWUFBWSxPQUFPOXJCLEdBQUd6RSxFQUFFeUUsRUFBRTZyQixXQUFXN3JCLEVBQUU2ckIsV0FBVyxLQUFhLEVBQVI3ckIsRUFBRXBLLFFBQVVvSyxFQUFFdUwsUUFDamYsS0FBS3ZMLEVBQUVvSixVQUFVLE1BQU1wSixFQUFFekUsRUFBVyxPQUFUbStCLEdBQUVsK0IsRUFBRW9yQixNQUFXLEVBQUcsU0FBU29YLEdBQUd6aUMsRUFBRUMsRUFBRWhFLEdBQXlCMHhCLEdBQUczdEIsRUFBZkMsRUFBRTA3QixHQUFHMzdCLEVBQWZDLEVBQUVtN0IsR0FBR24vQixFQUFFZ0UsR0FBWSxJQUFXQSxFQUFFMHVCLEtBQWUsUUFBVjN1QixFQUFFNi9CLEdBQUc3L0IsRUFBRSxNQUFjK1UsR0FBRy9VLEVBQUUsRUFBRUMsR0FBRzgvQixHQUFHLy9CLEVBQUVDLElBQ3pJLFNBQVNvOEIsR0FBR3I4QixFQUFFQyxHQUFHLEdBQUcsSUFBSUQsRUFBRTJFLElBQUk4OUIsR0FBR3ppQyxFQUFFQSxFQUFFQyxRQUFRLElBQUksSUFBSWhFLEVBQUUrRCxFQUFFeVAsT0FBTyxPQUFPeFQsR0FBRyxDQUFDLEdBQUcsSUFBSUEsRUFBRTBJLElBQUksQ0FBQzg5QixHQUFHeG1DLEVBQUUrRCxFQUFFQyxHQUFHLE1BQVcsR0FBRyxJQUFJaEUsRUFBRTBJLElBQUksQ0FBQyxJQUFJNUQsRUFBRTlFLEVBQUU0UixVQUFVLEdBQUcsbUJBQW9CNVIsRUFBRXpJLEtBQUtKLDBCQUEwQixtQkFBb0IyTixFQUFFZzdCLG9CQUFvQixPQUFPQyxLQUFLQSxHQUFHL1csSUFBSWxrQixJQUFJLENBQVcsSUFBSWhMLEVBQUUrbEMsR0FBRzcvQixFQUFuQitELEVBQUVvN0IsR0FBR243QixFQUFFRCxHQUFnQixHQUE0QixHQUF6QjJ0QixHQUFHMXhCLEVBQUVsRyxHQUFHQSxFQUFFNDRCLEtBQWtCLFFBQWIxeUIsRUFBRTRqQyxHQUFHNWpDLEVBQUUsSUFBZThZLEdBQUc5WSxFQUFFLEVBQUVsRyxHQUFHZ3FDLEdBQUc5akMsRUFBRWxHLFFBQVEsR0FBRyxtQkFBb0JnTCxFQUFFZzdCLG9CQUFvQixPQUFPQyxLQUFLQSxHQUFHL1csSUFBSWxrQixJQUFJLElBQUlBLEVBQUVnN0Isa0JBQWtCOTdCLEVBQUVELEdBQUcsTUFBTWdCLElBQUksT0FBTy9FLEVBQUVBLEVBQUV3VCxRQUNwZCxTQUFTeXhCLEdBQUdsaEMsRUFBRUMsRUFBRWhFLEdBQUcsSUFBSThFLEVBQUVmLEVBQUVpaEMsVUFBVSxPQUFPbGdDLEdBQUdBLEVBQUUwUSxPQUFPeFIsR0FBR0EsRUFBRTB1QixLQUFLM3VCLEVBQUV1VSxhQUFhdlUsRUFBRXNVLGVBQWVyWSxFQUFFZzVCLEtBQUlqMUIsSUFBSWc3QixHQUFFLytCLEtBQUtBLElBQUksSUFBSTQrQixJQUFHLElBQUlBLEtBQU0sU0FBRkcsTUFBY0EsSUFBRyxJQUFJaFEsS0FBSTBTLEdBQUc2QyxHQUFHdmdDLEVBQUUsR0FBR3krQixJQUFJeGlDLEdBQUc4akMsR0FBRy8vQixFQUFFQyxHQUFHLFNBQVMyOUIsR0FBRzU5QixFQUFFQyxHQUFHLElBQUloRSxFQUFFK0QsRUFBRTZOLFVBQVUsT0FBTzVSLEdBQUdBLEVBQUV3VixPQUFPeFIsR0FBTyxJQUFKQSxFQUFFLEtBQW1CLElBQU8sR0FBaEJBLEVBQUVELEVBQUUwd0IsT0FBZXp3QixFQUFFLEVBQUUsSUFBTyxFQUFGQSxHQUFLQSxFQUFFLEtBQUtnckIsS0FBSyxFQUFFLEdBQUcsSUFBSXVVLEtBQUtBLEdBQUdoQixJQUF1QixLQUFuQnYrQixFQUFFNFUsR0FBRyxVQUFVMnFCLE9BQVl2L0IsRUFBRSxXQUFXaEUsRUFBRTB5QixLQUFlLFFBQVYzdUIsRUFBRTYvQixHQUFHNy9CLEVBQUVDLE1BQWM4VSxHQUFHL1UsRUFBRUMsRUFBRWhFLEdBQUc4akMsR0FBRy8vQixFQUFFL0QsSUFValosU0FBU3ltQyxHQUFHMWlDLEVBQUVDLEVBQUVoRSxFQUFFOEUsR0FBRzNLLEtBQUt1TyxJQUFJM0UsRUFBRTVKLEtBQUtQLElBQUlvRyxFQUFFN0YsS0FBSzRaLFFBQVE1WixLQUFLMlosTUFBTTNaLEtBQUtxWixPQUFPclosS0FBS3lYLFVBQVV6WCxLQUFLNUMsS0FBSzRDLEtBQUsrSSxZQUFZLEtBQUsvSSxLQUFLNEUsTUFBTSxFQUFFNUUsS0FBSzQ1QixJQUFJLEtBQUs1NUIsS0FBS204QixhQUFhdHlCLEVBQUU3SixLQUFLZzJCLGFBQWFoMkIsS0FBS3VaLGNBQWN2WixLQUFLMDJCLFlBQVkxMkIsS0FBSzI3QixjQUFjLEtBQUszN0IsS0FBS3M2QixLQUFLM3ZCLEVBQUUzSyxLQUFLaUUsTUFBTSxFQUFFakUsS0FBS2k2QixXQUFXajZCLEtBQUttNkIsWUFBWW42QixLQUFLazZCLFdBQVcsS0FBS2w2QixLQUFLODFCLFdBQVc5MUIsS0FBS2syQixNQUFNLEVBQUVsMkIsS0FBS29aLFVBQVUsS0FBSyxTQUFTNmlCLEdBQUdyeUIsRUFBRUMsRUFBRWhFLEVBQUU4RSxHQUFHLE9BQU8sSUFBSTJoQyxHQUFHMWlDLEVBQUVDLEVBQUVoRSxFQUFFOEUsR0FBRyxTQUFTaTNCLEdBQUdoNEIsR0FBaUIsVUFBZEEsRUFBRUEsRUFBRXBNLGFBQXVCb00sRUFBRTJpQyxrQkFFcmQsU0FBU25TLEdBQUd4d0IsRUFBRUMsR0FBRyxJQUFJaEUsRUFBRStELEVBQUV3UCxVQUN1QixPQURiLE9BQU92VCxJQUFHQSxFQUFFbzJCLEdBQUdyeUIsRUFBRTJFLElBQUkxRSxFQUFFRCxFQUFFbkssSUFBSW1LLEVBQUUwd0IsT0FBUXZ4QixZQUFZYSxFQUFFYixZQUFZbEQsRUFBRXpJLEtBQUt3TSxFQUFFeE0sS0FBS3lJLEVBQUU0UixVQUFVN04sRUFBRTZOLFVBQVU1UixFQUFFdVQsVUFBVXhQLEVBQUVBLEVBQUV3UCxVQUFVdlQsSUFBSUEsRUFBRXMyQixhQUFhdHlCLEVBQUVoRSxFQUFFekksS0FBS3dNLEVBQUV4TSxLQUFLeUksRUFBRTVCLE1BQU0sRUFBRTRCLEVBQUVxMEIsV0FBVyxLQUFLcjBCLEVBQUVzMEIsWUFBWSxLQUFLdDBCLEVBQUVvMEIsV0FBVyxNQUFNcDBCLEVBQUVpd0IsV0FBV2xzQixFQUFFa3NCLFdBQVdqd0IsRUFBRXF3QixNQUFNdHNCLEVBQUVzc0IsTUFBTXJ3QixFQUFFOFQsTUFBTS9QLEVBQUUrUCxNQUFNOVQsRUFBRTgxQixjQUFjL3hCLEVBQUUreEIsY0FBYzkxQixFQUFFMFQsY0FBYzNQLEVBQUUyUCxjQUFjMVQsRUFBRTZ3QixZQUFZOXNCLEVBQUU4c0IsWUFBWTdzQixFQUFFRCxFQUFFb3NCLGFBQWFud0IsRUFBRW13QixhQUFhLE9BQU9uc0IsRUFBRSxLQUFLLENBQUNxc0IsTUFBTXJzQixFQUFFcXNCLE1BQU1ELGFBQWFwc0IsRUFBRW9zQixjQUMzZXB3QixFQUFFK1QsUUFBUWhRLEVBQUVnUSxRQUFRL1QsRUFBRWpCLE1BQU1nRixFQUFFaEYsTUFBTWlCLEVBQUUrekIsSUFBSWh3QixFQUFFZ3dCLElBQVcvekIsRUFDdkQsU0FBUzAwQixHQUFHM3dCLEVBQUVDLEVBQUVoRSxFQUFFOEUsRUFBRWhMLEVBQUVpTCxHQUFHLElBQUlDLEVBQUUsRUFBTSxHQUFKRixFQUFFZixFQUFLLG1CQUFvQkEsRUFBRWc0QixHQUFHaDRCLEtBQUtpQixFQUFFLFFBQVEsR0FBRyxpQkFBa0JqQixFQUFFaUIsRUFBRSxPQUFPakIsRUFBRSxPQUFPQSxHQUFHLEtBQUt5QyxFQUFHLE9BQU9xdUIsR0FBRzcwQixFQUFFZ0wsU0FBU2xSLEVBQUVpTCxFQUFFZixHQUFHLEtBQUtvRCxFQUFHcEMsRUFBRSxFQUFFbEwsR0FBRyxHQUFHLE1BQU0sS0FBSzJNLEVBQUd6QixFQUFFLEVBQUVsTCxHQUFHLEVBQUUsTUFBTSxLQUFLNE0sRUFBRyxPQUFPM0MsRUFBRXF5QixHQUFHLEdBQUdwMkIsRUFBRWdFLEVBQUksRUFBRmxLLElBQU9vSixZQUFZd0QsRUFBRzNDLEVBQUV4TSxLQUFLbVAsRUFBRzNDLEVBQUVzc0IsTUFBTXRyQixFQUFFaEIsRUFBRSxLQUFLK0MsRUFBRyxPQUFPL0MsRUFBRXF5QixHQUFHLEdBQUdwMkIsRUFBRWdFLEVBQUVsSyxJQUFLdkMsS0FBS3VQLEVBQUcvQyxFQUFFYixZQUFZNEQsRUFBRy9DLEVBQUVzc0IsTUFBTXRyQixFQUFFaEIsRUFBRSxLQUFLZ0QsRUFBRyxPQUFPaEQsRUFBRXF5QixHQUFHLEdBQUdwMkIsRUFBRWdFLEVBQUVsSyxJQUFLb0osWUFBWTZELEVBQUdoRCxFQUFFc3NCLE1BQU10ckIsRUFBRWhCLEVBQUUsS0FBS3NELEVBQUcsT0FBT2syQixHQUFHdjlCLEVBQUVsRyxFQUFFaUwsRUFBRWYsR0FBRyxLQUFLc0QsRUFBRyxPQUFPdkQsRUFBRXF5QixHQUFHLEdBQUdwMkIsRUFBRWdFLEVBQUVsSyxJQUFLb0osWUFBWW9FLEVBQUd2RCxFQUFFc3NCLE1BQU10ckIsRUFBRWhCLEVBQUUsUUFBUSxHQUFHLGlCQUNoZkEsR0FBRyxPQUFPQSxFQUFFLE9BQU9BLEVBQUU4RSxVQUFVLEtBQUtsQyxFQUFHM0IsRUFBRSxHQUFHLE1BQU1qQixFQUFFLEtBQUs2QyxFQUFHNUIsRUFBRSxFQUFFLE1BQU1qQixFQUFFLEtBQUs4QyxFQUFHN0IsRUFBRSxHQUFHLE1BQU1qQixFQUFFLEtBQUtpRCxFQUFHaEMsRUFBRSxHQUFHLE1BQU1qQixFQUFFLEtBQUtrRCxFQUFHakMsRUFBRSxHQUFHRixFQUFFLEtBQUssTUFBTWYsRUFBRSxLQUFLbUQsRUFBR2xDLEVBQUUsR0FBRyxNQUFNakIsRUFBRSxNQUFNMUosTUFBTXlKLEVBQUUsSUFBSSxNQUFNQyxFQUFFQSxTQUFTQSxFQUFFLEtBQXVELE9BQWpEQyxFQUFFb3lCLEdBQUdweEIsRUFBRWhGLEVBQUVnRSxFQUFFbEssSUFBS29KLFlBQVlhLEVBQUVDLEVBQUV6TSxLQUFLdU4sRUFBRWQsRUFBRXFzQixNQUFNdHJCLEVBQVNmLEVBQUUsU0FBUzZ3QixHQUFHOXdCLEVBQUVDLEVBQUVoRSxFQUFFOEUsR0FBMkIsT0FBeEJmLEVBQUVxeUIsR0FBRyxFQUFFcnlCLEVBQUVlLEVBQUVkLElBQUtxc0IsTUFBTXJ3QixFQUFTK0QsRUFBRSxTQUFTdzVCLEdBQUd4NUIsRUFBRUMsRUFBRWhFLEVBQUU4RSxHQUE2QyxPQUExQ2YsRUFBRXF5QixHQUFHLEdBQUdyeUIsRUFBRWUsRUFBRWQsSUFBS2QsWUFBWW1FLEVBQUd0RCxFQUFFc3NCLE1BQU1yd0IsRUFBUytELEVBQUUsU0FBU3l3QixHQUFHendCLEVBQUVDLEVBQUVoRSxHQUE4QixPQUEzQitELEVBQUVxeUIsR0FBRyxFQUFFcnlCLEVBQUUsS0FBS0MsSUFBS3FzQixNQUFNcndCLEVBQVMrRCxFQUNsYyxTQUFTNndCLEdBQUc3d0IsRUFBRUMsRUFBRWhFLEdBQThKLE9BQTNKZ0UsRUFBRW95QixHQUFHLEVBQUUsT0FBT3J5QixFQUFFaUgsU0FBU2pILEVBQUVpSCxTQUFTLEdBQUdqSCxFQUFFbkssSUFBSW9LLElBQUtxc0IsTUFBTXJ3QixFQUFFZ0UsRUFBRTROLFVBQVUsQ0FBQ3FFLGNBQWNsUyxFQUFFa1MsY0FBYzB3QixnQkFBZ0IsS0FBS2hTLGVBQWU1d0IsRUFBRTR3QixnQkFBdUIzd0IsRUFDckwsU0FBUzRpQyxHQUFHN2lDLEVBQUVDLEVBQUVoRSxHQUFHN0YsS0FBS3VPLElBQUkxRSxFQUFFN0osS0FBSzhiLGNBQWNsUyxFQUFFNUosS0FBS3VxQyxhQUFhdnFDLEtBQUs2cUMsVUFBVTdxQyxLQUFLNlosUUFBUTdaLEtBQUt3c0MsZ0JBQWdCLEtBQUt4c0MsS0FBSzBxQyxlQUFlLEVBQUUxcUMsS0FBS3lpQyxlQUFlemlDLEtBQUtxMkIsUUFBUSxLQUFLcjJCLEtBQUs2YixRQUFRaFcsRUFBRTdGLEtBQUs0cEMsYUFBYSxLQUFLNXBDLEtBQUs4cEMsaUJBQWlCLEVBQUU5cEMsS0FBSzRlLFdBQVdGLEdBQUcsR0FBRzFlLEtBQUs2cEMsZ0JBQWdCbnJCLElBQUksR0FBRzFlLEtBQUtxZSxlQUFlcmUsS0FBS3dxQyxjQUFjeHFDLEtBQUsyK0IsaUJBQWlCMytCLEtBQUtpZSxhQUFhamUsS0FBS21lLFlBQVluZSxLQUFLa2UsZUFBZWxlLEtBQUtnZSxhQUFhLEVBQUVoZSxLQUFLc2UsY0FBY0ksR0FBRyxHQUFHMWUsS0FBSzBzQyxnQ0FBZ0MsS0FDN2UsU0FBU0MsR0FBRy9pQyxFQUFFQyxFQUFFaEUsR0FBRyxJQUFJOEUsRUFBRSxFQUFFaE4sVUFBVUosYUFBUSxJQUFTSSxVQUFVLEdBQUdBLFVBQVUsR0FBRyxLQUFLLE1BQU0sQ0FBQytRLFNBQVN0QyxFQUFHM00sSUFBSSxNQUFNa0wsRUFBRSxLQUFLLEdBQUdBLEVBQUVrRyxTQUFTakgsRUFBRWtTLGNBQWNqUyxFQUFFMndCLGVBQWUzMEIsR0FDeEssU0FBUyttQyxHQUFHaGpDLEVBQUVDLEVBQUVoRSxFQUFFOEUsR0FBRyxJQUFJaEwsRUFBRWtLLEVBQUVnUSxRQUFRalAsRUFBRTJ0QixLQUFLMXRCLEVBQUUydEIsR0FBRzc0QixHQUFHaUssRUFBRSxHQUFHL0QsRUFBRSxDQUFxQmdFLEVBQUUsQ0FBQyxHQUFHc1AsR0FBMUJ0VCxFQUFFQSxFQUFFd3lCLG1CQUE4Qnh5QixHQUFHLElBQUlBLEVBQUUwSSxJQUFJLE1BQU1yTyxNQUFNeUosRUFBRSxNQUFNLElBQUkwRSxFQUFFeEksRUFBRSxFQUFFLENBQUMsT0FBT3dJLEVBQUVFLEtBQUssS0FBSyxFQUFFRixFQUFFQSxFQUFFb0osVUFBVTRlLFFBQVEsTUFBTXhzQixFQUFFLEtBQUssRUFBRSxHQUFHNG9CLEdBQUdwa0IsRUFBRWpSLE1BQU0sQ0FBQ2lSLEVBQUVBLEVBQUVvSixVQUFVc2IsMENBQTBDLE1BQU1scEIsR0FBR3dFLEVBQUVBLEVBQUVnTCxhQUFhLE9BQU9oTCxHQUFHLE1BQU1uTyxNQUFNeUosRUFBRSxNQUFPLEdBQUcsSUFBSTlELEVBQUUwSSxJQUFJLENBQUMsSUFBSUgsRUFBRXZJLEVBQUV6SSxLQUFLLEdBQUdxMUIsR0FBR3JrQixHQUFHLENBQUN2SSxFQUFFK3NCLEdBQUcvc0IsRUFBRXVJLEVBQUVDLEdBQUcsTUFBTXpFLEdBQUcvRCxFQUFFd0ksT0FBT3hJLEVBQUVxc0IsR0FDclcsT0FEd1csT0FBT3JvQixFQUFFd3NCLFFBQVF4c0IsRUFBRXdzQixRQUFReHdCLEVBQUVnRSxFQUFFNDRCLGVBQWU1OEIsR0FBRWdFLEVBQUVxdEIsR0FBR3RzQixFQUFFQyxJQUFLd3NCLFFBQVEsQ0FBQ3Z1QixRQUFRYyxHQUF1QixRQUFwQmUsT0FBRSxJQUFTQSxFQUFFLEtBQUtBLEtBQzFlZCxFQUFFeXRCLFNBQVMzc0IsR0FBRzRzQixHQUFHNTNCLEVBQUVrSyxHQUFHNHVCLEdBQUc5NEIsRUFBRWtMLEVBQUVELEdBQVVDLEVBQUUsU0FBU2dpQyxHQUFHampDLEdBQWUsS0FBWkEsRUFBRUEsRUFBRWlRLFNBQWNGLE1BQU0sT0FBTyxLQUFLLE9BQU8vUCxFQUFFK1AsTUFBTXBMLEtBQUssS0FBSyxFQUEyQixRQUFRLE9BQU8zRSxFQUFFK1AsTUFBTWxDLFdBQVcsU0FBU3ExQixHQUFHbGpDLEVBQUVDLEdBQXFCLEdBQUcsUUFBckJELEVBQUVBLEVBQUUyUCxnQkFBMkIsT0FBTzNQLEVBQUU0UCxXQUFXLENBQUMsSUFBSTNULEVBQUUrRCxFQUFFazVCLFVBQVVsNUIsRUFBRWs1QixVQUFVLElBQUlqOUIsR0FBR0EsRUFBRWdFLEVBQUVoRSxFQUFFZ0UsR0FBRyxTQUFTa2pDLEdBQUduakMsRUFBRUMsR0FBR2lqQyxHQUFHbGpDLEVBQUVDLElBQUlELEVBQUVBLEVBQUV3UCxZQUFZMHpCLEdBQUdsakMsRUFBRUMsR0FDeFYsU0FBU21qQyxHQUFHcGpDLEVBQUVDLEVBQUVoRSxHQUFHLElBQUk4RSxFQUFFLE1BQU05RSxHQUFHLE1BQU1BLEVBQUVvbkMsa0JBQWtCcG5DLEVBQUVvbkMsaUJBQWlCQyxnQkFBZ0IsS0FBaUssR0FBNUpybkMsRUFBRSxJQUFJNG1DLEdBQUc3aUMsRUFBRUMsRUFBRSxNQUFNaEUsSUFBRyxJQUFLQSxFQUFFZ1csU0FBU2hTLEVBQUVveUIsR0FBRyxFQUFFLEtBQUssS0FBSyxJQUFJcHlCLEVBQUUsRUFBRSxJQUFJQSxFQUFFLEVBQUUsR0FBR2hFLEVBQUVnVSxRQUFRaFEsRUFBRUEsRUFBRTROLFVBQVU1UixFQUFFNHdCLEdBQUc1c0IsR0FBR0QsRUFBRWltQixJQUFJaHFCLEVBQUVnVSxRQUFRb1YsR0FBRyxJQUFJcmxCLEVBQUU0SSxTQUFTNUksRUFBRXVOLFdBQVd2TixHQUFNZSxFQUFFLElBQUlmLEVBQUUsRUFBRUEsRUFBRWUsRUFBRXBOLE9BQU9xTSxJQUFJLENBQVEsSUFBSWpLLEdBQVhrSyxFQUFFYyxFQUFFZixJQUFXNjBCLFlBQVk5K0IsRUFBRUEsRUFBRWtLLEVBQUU2MEIsU0FBUyxNQUFNNzRCLEVBQUU2bUMsZ0NBQWdDN21DLEVBQUU2bUMsZ0NBQWdDLENBQUM3aUMsRUFBRWxLLEdBQUdrRyxFQUFFNm1DLGdDQUFnQ3BwQyxLQUFLdUcsRUFBRWxLLEdBQUdLLEtBQUttdEMsY0FBY3RuQyxFQUMvUixTQUFTdW5DLEdBQUd4akMsR0FBRyxTQUFTQSxHQUFHLElBQUlBLEVBQUU0SSxVQUFVLElBQUk1SSxFQUFFNEksVUFBVSxLQUFLNUksRUFBRTRJLFdBQVcsSUFBSTVJLEVBQUU0SSxVQUFVLGlDQUFpQzVJLEVBQUU2SSxZQUV2VCxTQUFTNDZCLEdBQUd6akMsRUFBRUMsRUFBRWhFLEVBQUU4RSxFQUFFaEwsR0FBRyxJQUFJaUwsRUFBRS9FLEVBQUV1aEMsb0JBQW9CLEdBQUd4OEIsRUFBRSxDQUFDLElBQUlDLEVBQUVELEVBQUV1aUMsY0FBYyxHQUFHLG1CQUFvQnh0QyxFQUFFLENBQUMsSUFBSTBPLEVBQUUxTyxFQUFFQSxFQUFFLFdBQVcsSUFBSWlLLEVBQUVpakMsR0FBR2hpQyxHQUFHd0QsRUFBRXZMLEtBQUs4RyxJQUFJZ2pDLEdBQUcvaUMsRUFBRWdCLEVBQUVqQixFQUFFakssT0FBTyxDQUFtRCxHQUFsRGlMLEVBQUUvRSxFQUFFdWhDLG9CQUQxSyxTQUFZeDlCLEVBQUVDLEdBQTBILEdBQXZIQSxJQUEyREEsTUFBdkRBLEVBQUVELEVBQUUsSUFBSUEsRUFBRTRJLFNBQVM1SSxFQUFFd3hCLGdCQUFnQnh4QixFQUFFc0ksV0FBVyxPQUFhLElBQUlySSxFQUFFMkksV0FBVzNJLEVBQUV5akMsYUFBYSxxQkFBd0J6akMsRUFBRSxJQUFJLElBQUloRSxFQUFFQSxFQUFFK0QsRUFBRTJJLFdBQVczSSxFQUFFdUksWUFBWXRNLEdBQUcsT0FBTyxJQUFJbW5DLEdBQUdwakMsRUFBRSxFQUFFQyxFQUFFLENBQUNnUyxTQUFRLFFBQUksR0FDM0IweEIsQ0FBRzFuQyxFQUFFOEUsR0FBR0UsRUFBRUQsRUFBRXVpQyxjQUFpQixtQkFBb0J4dEMsRUFBRSxDQUFDLElBQUl5TyxFQUFFek8sRUFBRUEsRUFBRSxXQUFXLElBQUlpSyxFQUFFaWpDLEdBQUdoaUMsR0FBR3VELEVBQUV0TCxLQUFLOEcsSUFBSWdoQyxJQUFHLFdBQVdnQyxHQUFHL2lDLEVBQUVnQixFQUFFakIsRUFBRWpLLE1BQUssT0FBT2t0QyxHQUFHaGlDLEdBR2xHLFNBQVMyaUMsR0FBRzVqQyxFQUFFQyxHQUFHLElBQUloRSxFQUFFLEVBQUVsSSxVQUFVSixhQUFRLElBQVNJLFVBQVUsR0FBR0EsVUFBVSxHQUFHLEtBQUssSUFBSXl2QyxHQUFHdmpDLEdBQUcsTUFBTTNKLE1BQU15SixFQUFFLE1BQU0sT0FBT2dqQyxHQUFHL2lDLEVBQUVDLEVBQUUsS0FBS2hFLEdBMUJ0VzRpQyxHQUFHLFNBQVM3K0IsRUFBRUMsRUFBRWhFLEdBQUcsSUFBSThFLEVBQUVkLEVBQUVxc0IsTUFBTSxHQUFHLE9BQU90c0IsRUFBRSxHQUFHQSxFQUFFK3hCLGdCQUFnQjl4QixFQUFFc3lCLGNBQWMvSixHQUFFdlksUUFBUXNjLElBQUcsTUFBUSxJQUFHLElBQUt0d0IsRUFBRThFLEdBQW9DLENBQU8sT0FBTndyQixJQUFHLEVBQVV0c0IsRUFBRTBFLEtBQUssS0FBSyxFQUFFaTBCLEdBQUczNEIsR0FBRzB5QixLQUFLLE1BQU0sS0FBSyxFQUFFaEIsR0FBRzF4QixHQUFHLE1BQU0sS0FBSyxFQUFFNG9CLEdBQUc1b0IsRUFBRXpNLE9BQU8wMUIsR0FBR2pwQixHQUFHLE1BQU0sS0FBSyxFQUFFc3hCLEdBQUd0eEIsRUFBRUEsRUFBRTROLFVBQVVxRSxlQUFlLE1BQU0sS0FBSyxHQUFHblIsRUFBRWQsRUFBRTh4QixjQUFjajFCLE1BQU0sSUFBSS9HLEVBQUVrSyxFQUFFek0sS0FBS3VSLFNBQVNzakIsR0FBRXFELEdBQUczMUIsRUFBRWkyQixlQUFlajJCLEVBQUVpMkIsY0FBY2pyQixFQUFFLE1BQU0sS0FBSyxHQUFHLEdBQUcsT0FBT2QsRUFBRTBQLGNBQWUsT0FBRyxJQUFLMVQsRUFBRWdFLEVBQUU4UCxNQUFNbWMsWUFBbUJpTixHQUFHbjVCLEVBQUVDLEVBQUVoRSxJQUFHb3NCLEdBQUV3SixHQUFZLEVBQVZBLEdBQUU1aEIsU0FBOEIsUUFBbkJoUSxFQUFFNjNCLEdBQUc5M0IsRUFBRUMsRUFBRWhFLElBQy9lZ0UsRUFBRStQLFFBQVEsTUFBS3FZLEdBQUV3SixHQUFZLEVBQVZBLEdBQUU1aEIsU0FBVyxNQUFNLEtBQUssR0FBMEIsR0FBdkJsUCxFQUFFLElBQUs5RSxFQUFFZ0UsRUFBRWlzQixZQUFlLElBQWEsR0FBUmxzQixFQUFFM0YsT0FBVSxDQUFDLEdBQUcwRyxFQUFFLE9BQU9vNUIsR0FBR242QixFQUFFQyxFQUFFaEUsR0FBR2dFLEVBQUU1RixPQUFPLEdBQStGLEdBQTFFLFFBQWxCdEUsRUFBRWtLLEVBQUUwUCxpQkFBeUI1WixFQUFFK2pDLFVBQVUsS0FBSy9qQyxFQUFFa2tDLEtBQUssS0FBS2xrQyxFQUFFczZCLFdBQVcsTUFBTWhJLEdBQUV3SixHQUFFQSxHQUFFNWhCLFNBQVlsUCxFQUFFLE1BQVcsT0FBTyxLQUFLLEtBQUssR0FBRyxLQUFLLEdBQUcsT0FBT2QsRUFBRXFzQixNQUFNLEVBQUU2TCxHQUFHbjRCLEVBQUVDLEVBQUVoRSxHQUFHLE9BQU82N0IsR0FBRzkzQixFQUFFQyxFQUFFaEUsR0FEM0xzd0IsR0FBRyxJQUFhLE1BQVJ2c0IsRUFBRTNGLFlBQ3lMa3lCLElBQUcsRUFBYSxPQUFWdHNCLEVBQUVxc0IsTUFBTSxFQUFTcnNCLEVBQUUwRSxLQUFLLEtBQUssRUFBK0ksR0FBN0k1RCxFQUFFZCxFQUFFek0sS0FBSyxPQUFPd00sSUFBSUEsRUFBRXdQLFVBQVUsS0FBS3ZQLEVBQUV1UCxVQUFVLEtBQUt2UCxFQUFFNUYsT0FBTyxHQUFHMkYsRUFBRUMsRUFBRXN5QixhQUFheDhCLEVBQUUyeUIsR0FBR3pvQixFQUFFc29CLEdBQUV0WSxTQUFTa2MsR0FBR2xzQixFQUFFaEUsR0FBR2xHLEVBQUUyOUIsR0FBRyxLQUFLenpCLEVBQUVjLEVBQUVmLEVBQUVqSyxFQUFFa0csR0FBR2dFLEVBQUU1RixPQUFPLEVBQUssaUJBQ3JldEUsR0FBRyxPQUFPQSxHQUFHLG1CQUFvQkEsRUFBRXZCLGFBQVEsSUFBU3VCLEVBQUUrTyxTQUFTLENBQWlELEdBQWhEN0UsRUFBRTBFLElBQUksRUFBRTFFLEVBQUUwUCxjQUFjLEtBQUsxUCxFQUFFNnNCLFlBQVksS0FBUWpFLEdBQUc5bkIsR0FBRyxDQUFDLElBQUlDLEdBQUUsRUFBR2tvQixHQUFHanBCLFFBQVFlLEdBQUUsRUFBR2YsRUFBRTBQLGNBQWMsT0FBTzVaLEVBQUVxNUIsWUFBTyxJQUFTcjVCLEVBQUVxNUIsTUFBTXI1QixFQUFFcTVCLE1BQU0sS0FBS3ZDLEdBQUc1c0IsR0FBRyxJQUFJZ0IsRUFBRUYsRUFBRTFOLHlCQUF5QixtQkFBb0I0TixHQUFHcXRCLEdBQUdydUIsRUFBRWMsRUFBRUUsRUFBRWpCLEdBQUdqSyxFQUFFczVCLFFBQVFkLEdBQUd0dUIsRUFBRTROLFVBQVU5WCxFQUFFQSxFQUFFMDRCLGdCQUFnQnh1QixFQUFFd3ZCLEdBQUd4dkIsRUFBRWMsRUFBRWYsRUFBRS9ELEdBQUdnRSxFQUFFMDRCLEdBQUcsS0FBSzE0QixFQUFFYyxHQUFFLEVBQUdDLEVBQUUvRSxRQUFRZ0UsRUFBRTBFLElBQUksRUFBRWl6QixHQUFHLEtBQUszM0IsRUFBRWxLLEVBQUVrRyxHQUFHZ0UsRUFBRUEsRUFBRThQLE1BQU0sT0FBTzlQLEVBQUUsS0FBSyxHQUFHbEssRUFBRWtLLEVBQUVkLFlBQVlhLEVBQUUsQ0FDaFgsT0FEaVgsT0FBT0EsSUFBSUEsRUFBRXdQLFVBQVUsS0FBS3ZQLEVBQUV1UCxVQUFVLEtBQUt2UCxFQUFFNUYsT0FBTyxHQUNuZjJGLEVBQUVDLEVBQUVzeUIsYUFBdUJ4OEIsR0FBVmlMLEVBQUVqTCxFQUFFa1AsT0FBVWxQLEVBQUVpUCxVQUFVL0UsRUFBRXpNLEtBQUt1QyxFQUFFaUwsRUFBRWYsRUFBRTBFLElBT3hELFNBQVkzRSxHQUFHLEdBQUcsbUJBQW9CQSxFQUFFLE9BQU9nNEIsR0FBR2g0QixHQUFHLEVBQUUsRUFBRSxHQUFHLE1BQVNBLEVBQVksQ0FBYyxJQUFiQSxFQUFFQSxFQUFFOEUsWUFBZ0JoQyxFQUFHLE9BQU8sR0FBRyxHQUFHOUMsSUFBSWlELEVBQUcsT0FBTyxHQUFHLE9BQU8sRUFQbEY0Z0MsQ0FBRzl0QyxHQUFHaUssRUFBRXlyQixHQUFHMTFCLEVBQUVpSyxHQUFVZ0IsR0FBRyxLQUFLLEVBQUVmLEVBQUVpNEIsR0FBRyxLQUFLajRCLEVBQUVsSyxFQUFFaUssRUFBRS9ELEdBQUcsTUFBTStELEVBQUUsS0FBSyxFQUFFQyxFQUFFczRCLEdBQUcsS0FBS3Q0QixFQUFFbEssRUFBRWlLLEVBQUUvRCxHQUFHLE1BQU0rRCxFQUFFLEtBQUssR0FBR0MsRUFBRTQzQixHQUFHLEtBQUs1M0IsRUFBRWxLLEVBQUVpSyxFQUFFL0QsR0FBRyxNQUFNK0QsRUFBRSxLQUFLLEdBQUdDLEVBQUU4M0IsR0FBRyxLQUFLOTNCLEVBQUVsSyxFQUFFMDFCLEdBQUcxMUIsRUFBRXZDLEtBQUt3TSxHQUFHZSxFQUFFOUUsR0FBRyxNQUFNK0QsRUFBRSxNQUFNMUosTUFBTXlKLEVBQUUsSUFBSWhLLEVBQUUsS0FBTSxPQUFPa0ssRUFBRSxLQUFLLEVBQUUsT0FBT2MsRUFBRWQsRUFBRXpNLEtBQUt1QyxFQUFFa0ssRUFBRXN5QixhQUEyQzJGLEdBQUdsNEIsRUFBRUMsRUFBRWMsRUFBckNoTCxFQUFFa0ssRUFBRWQsY0FBYzRCLEVBQUVoTCxFQUFFMDFCLEdBQUcxcUIsRUFBRWhMLEdBQWNrRyxHQUFHLEtBQUssRUFBRSxPQUFPOEUsRUFBRWQsRUFBRXpNLEtBQUt1QyxFQUFFa0ssRUFBRXN5QixhQUEyQ2dHLEdBQUd2NEIsRUFBRUMsRUFBRWMsRUFBckNoTCxFQUFFa0ssRUFBRWQsY0FBYzRCLEVBQUVoTCxFQUFFMDFCLEdBQUcxcUIsRUFBRWhMLEdBQWNrRyxHQUFHLEtBQUssRUFBd0IsR0FBdEIyOEIsR0FBRzM0QixHQUFHYyxFQUFFZCxFQUFFNnNCLFlBQWUsT0FBTzlzQixHQUFHLE9BQU9lLEVBQUUsTUFBTXpLLE1BQU15SixFQUFFLE1BQzNZLEdBQTlHZ0IsRUFBRWQsRUFBRXN5QixhQUErQng4QixFQUFFLFFBQXBCQSxFQUFFa0ssRUFBRTBQLGVBQXlCNVosRUFBRW1KLFFBQVEsS0FBS211QixHQUFHcnRCLEVBQUVDLEdBQUc0dEIsR0FBRzV0QixFQUFFYyxFQUFFLEtBQUs5RSxJQUFHOEUsRUFBRWQsRUFBRTBQLGNBQWN6USxXQUFlbkosRUFBRTQ4QixLQUFLMXlCLEVBQUU2M0IsR0FBRzkzQixFQUFFQyxFQUFFaEUsT0FBTyxDQUF1RixJQUFyRStFLEdBQWpCakwsRUFBRWtLLEVBQUU0TixXQUFpQm9FLFdBQVFpZ0IsR0FBR3pLLEdBQUd4bkIsRUFBRTROLFVBQVVxRSxjQUFjNUosWUFBWTJwQixHQUFHaHlCLEVBQUVlLEVBQUVteEIsSUFBRyxHQUFNbnhCLEVBQUUsQ0FBcUMsR0FBRyxPQUF2Q2hCLEVBQUVqSyxFQUFFK3NDLGlDQUEyQyxJQUFJL3NDLEVBQUUsRUFBRUEsRUFBRWlLLEVBQUVyTSxPQUFPb0MsR0FBRyxHQUFFaUwsRUFBRWhCLEVBQUVqSyxJQUFLKzhCLDhCQUE4Qjl5QixFQUFFakssRUFBRSxHQUFHNjhCLEdBQUdsNUIsS0FBS3NILEdBQW9CLElBQWpCL0UsRUFBRWcxQixHQUFHaHhCLEVBQUUsS0FBS2MsRUFBRTlFLEdBQU9nRSxFQUFFOFAsTUFBTTlULEVBQUVBLEdBQUdBLEVBQUU1QixPQUFlLEVBQVQ0QixFQUFFNUIsTUFBUyxLQUFLNEIsRUFBRUEsRUFBRStULGFBQWE0bkIsR0FBRzUzQixFQUFFQyxFQUFFYyxFQUFFOUUsR0FBRzAyQixLQUFLMXlCLEVBQUVBLEVBQUU4UCxNQUFNLE9BQU85UCxFQUFFLEtBQUssRUFBRSxPQUFPMHhCLEdBQUcxeEIsR0FBRyxPQUFPRCxHQUNuZnd5QixHQUFHdnlCLEdBQUdjLEVBQUVkLEVBQUV6TSxLQUFLdUMsRUFBRWtLLEVBQUVzeUIsYUFBYXZ4QixFQUFFLE9BQU9oQixFQUFFQSxFQUFFK3hCLGNBQWMsS0FBSzl3QixFQUFFbEwsRUFBRWtSLFNBQVNpZ0IsR0FBR25tQixFQUFFaEwsR0FBR2tMLEVBQUUsS0FBSyxPQUFPRCxHQUFHa21CLEdBQUdubUIsRUFBRUMsS0FBS2YsRUFBRTVGLE9BQU8sSUFBSWkrQixHQUFHdDRCLEVBQUVDLEdBQUcyM0IsR0FBRzUzQixFQUFFQyxFQUFFZ0IsRUFBRWhGLEdBQUdnRSxFQUFFOFAsTUFBTSxLQUFLLEVBQUUsT0FBTyxPQUFPL1AsR0FBR3d5QixHQUFHdnlCLEdBQUcsS0FBSyxLQUFLLEdBQUcsT0FBT2s1QixHQUFHbjVCLEVBQUVDLEVBQUVoRSxHQUFHLEtBQUssRUFBRSxPQUFPczFCLEdBQUd0eEIsRUFBRUEsRUFBRTROLFVBQVVxRSxlQUFlblIsRUFBRWQsRUFBRXN5QixhQUFhLE9BQU92eUIsRUFBRUMsRUFBRThQLE1BQU1paEIsR0FBRy93QixFQUFFLEtBQUtjLEVBQUU5RSxHQUFHMjdCLEdBQUc1M0IsRUFBRUMsRUFBRWMsRUFBRTlFLEdBQUdnRSxFQUFFOFAsTUFBTSxLQUFLLEdBQUcsT0FBT2hQLEVBQUVkLEVBQUV6TSxLQUFLdUMsRUFBRWtLLEVBQUVzeUIsYUFBMkNzRixHQUFHNzNCLEVBQUVDLEVBQUVjLEVBQXJDaEwsRUFBRWtLLEVBQUVkLGNBQWM0QixFQUFFaEwsRUFBRTAxQixHQUFHMXFCLEVBQUVoTCxHQUFja0csR0FBRyxLQUFLLEVBQUUsT0FBTzI3QixHQUFHNTNCLEVBQUVDLEVBQUVBLEVBQUVzeUIsYUFBYXQyQixHQUFHZ0UsRUFBRThQLE1BQU0sS0FBSyxFQUN0YyxLQUFLLEdBQUcsT0FBTzZuQixHQUFHNTNCLEVBQUVDLEVBQUVBLEVBQUVzeUIsYUFBYXRyQixTQUFTaEwsR0FBR2dFLEVBQUU4UCxNQUFNLEtBQUssR0FBRy9QLEVBQUUsQ0FBQ2UsRUFBRWQsRUFBRXpNLEtBQUt1UixTQUFTaFAsRUFBRWtLLEVBQUVzeUIsYUFBYXR4QixFQUFFaEIsRUFBRTh4QixjQUFjL3dCLEVBQUVqTCxFQUFFK0csTUFBTSxJQUFJMkgsRUFBRXhFLEVBQUV6TSxLQUFLdVIsU0FBaUQsR0FBeENzakIsR0FBRXFELEdBQUdqbkIsRUFBRXVuQixlQUFldm5CLEVBQUV1bkIsY0FBY2hyQixFQUFLLE9BQU9DLEVBQUUsR0FBR3dELEVBQUV4RCxFQUFFbkUsTUFBMEcsSUFBcEdrRSxFQUFFeWhCLEdBQUdoZSxFQUFFekQsR0FBRyxFQUF3RixHQUFyRixtQkFBb0JELEVBQUUraUMsc0JBQXNCL2lDLEVBQUUraUMsc0JBQXNCci9CLEVBQUV6RCxHQUFHLGNBQXFCLEdBQUdDLEVBQUVnRyxXQUFXbFIsRUFBRWtSLFdBQVd1aEIsR0FBRXZZLFFBQVEsQ0FBQ2hRLEVBQUU2M0IsR0FBRzkzQixFQUFFQyxFQUFFaEUsR0FBRyxNQUFNK0QsUUFBUSxJQUFjLFFBQVZ5RSxFQUFFeEUsRUFBRThQLFNBQWlCdEwsRUFBRWdMLE9BQU94UCxHQUFHLE9BQU93RSxHQUFHLENBQUMsSUFBSUQsRUFBRUMsRUFBRTJuQixhQUFhLEdBQUcsT0FBTzVuQixFQUFFLENBQUN2RCxFQUFFd0QsRUFBRXNMLE1BQU0sSUFBSSxJQUFJakIsRUFDdGZ0SyxFQUFFNm5CLGFBQWEsT0FBT3ZkLEdBQUcsQ0FBQyxHQUFHQSxFQUFFMmQsVUFBVTFyQixHQUFHLElBQUsrTixFQUFFNGQsYUFBYTFyQixHQUFHLENBQUMsSUFBSXlELEVBQUVFLE9BQU1tSyxFQUFFd2UsSUFBSSxFQUFFcnhCLEdBQUdBLElBQUswSSxJQUFJLEVBQUVncEIsR0FBR2xwQixFQUFFcUssSUFBSXJLLEVBQUU2bkIsT0FBT3J3QixFQUFnQixRQUFkNlMsRUFBRXJLLEVBQUUrSyxhQUFxQlYsRUFBRXdkLE9BQU9yd0IsR0FBR2d3QixHQUFHeG5CLEVBQUVnTCxPQUFPeFQsR0FBR3VJLEVBQUU4bkIsT0FBT3J3QixFQUFFLE1BQU02UyxFQUFFQSxFQUFFdlQsV0FBVzBGLEVBQUUsS0FBS3dELEVBQUVFLEtBQUlGLEVBQUVqUixPQUFPeU0sRUFBRXpNLEtBQUssS0FBYWlSLEVBQUVzTCxNQUFNLEdBQUcsT0FBTzlPLEVBQUVBLEVBQUV3TyxPQUFPaEwsT0FBTyxJQUFJeEQsRUFBRXdELEVBQUUsT0FBT3hELEdBQUcsQ0FBQyxHQUFHQSxJQUFJaEIsRUFBRSxDQUFDZ0IsRUFBRSxLQUFLLE1BQWtCLEdBQUcsUUFBZndELEVBQUV4RCxFQUFFK08sU0FBb0IsQ0FBQ3ZMLEVBQUVnTCxPQUFPeE8sRUFBRXdPLE9BQU94TyxFQUFFd0QsRUFBRSxNQUFNeEQsRUFBRUEsRUFBRXdPLE9BQU9oTCxFQUFFeEQsRUFBRTIyQixHQUFHNTNCLEVBQUVDLEVBQUVsSyxFQUFFa1IsU0FBU2hMLEdBQUdnRSxFQUFFQSxFQUFFOFAsTUFBTSxPQUFPOVAsRUFBRSxLQUFLLEVBQUUsT0FBT2xLLEVBQUVrSyxFQUFFek0sS0FBc0J1TixHQUFqQkMsRUFBRWYsRUFBRXN5QixjQUFpQnRyQixTQUFTa2xCLEdBQUdsc0IsRUFBRWhFLEdBQ25kOEUsRUFBRUEsRUFEb2RoTCxFQUFFeTJCLEdBQUd6MkIsRUFDcGZpTCxFQUFFK2lDLHdCQUE4QjlqQyxFQUFFNUYsT0FBTyxFQUFFdTlCLEdBQUc1M0IsRUFBRUMsRUFBRWMsRUFBRTlFLEdBQUdnRSxFQUFFOFAsTUFBTSxLQUFLLEdBQUcsT0FBZ0IvTyxFQUFFeXFCLEdBQVgxMUIsRUFBRWtLLEVBQUV6TSxLQUFZeU0sRUFBRXN5QixjQUE2QndGLEdBQUcvM0IsRUFBRUMsRUFBRWxLLEVBQXRCaUwsRUFBRXlxQixHQUFHMTFCLEVBQUV2QyxLQUFLd04sR0FBY0QsRUFBRTlFLEdBQUcsS0FBSyxHQUFHLE9BQU9nOEIsR0FBR2o0QixFQUFFQyxFQUFFQSxFQUFFek0sS0FBS3lNLEVBQUVzeUIsYUFBYXh4QixFQUFFOUUsR0FBRyxLQUFLLEdBQUcsT0FBTzhFLEVBQUVkLEVBQUV6TSxLQUFLdUMsRUFBRWtLLEVBQUVzeUIsYUFBYXg4QixFQUFFa0ssRUFBRWQsY0FBYzRCLEVBQUVoTCxFQUFFMDFCLEdBQUcxcUIsRUFBRWhMLEdBQUcsT0FBT2lLLElBQUlBLEVBQUV3UCxVQUFVLEtBQUt2UCxFQUFFdVAsVUFBVSxLQUFLdlAsRUFBRTVGLE9BQU8sR0FBRzRGLEVBQUUwRSxJQUFJLEVBQUVra0IsR0FBRzluQixJQUFJZixHQUFFLEVBQUdrcEIsR0FBR2pwQixJQUFJRCxHQUFFLEVBQUdtc0IsR0FBR2xzQixFQUFFaEUsR0FBR2t6QixHQUFHbHZCLEVBQUVjLEVBQUVoTCxHQUFHMDVCLEdBQUd4dkIsRUFBRWMsRUFBRWhMLEVBQUVrRyxHQUFHMDhCLEdBQUcsS0FBSzE0QixFQUFFYyxHQUFFLEVBQUdmLEVBQUUvRCxHQUFHLEtBQUssR0FBRyxPQUFPaytCLEdBQUduNkIsRUFBRUMsRUFBRWhFLEdBQUcsS0FBSyxHQUFvQixLQUFLLEdBQUcsT0FBT2s4QixHQUFHbjRCLEVBQUVDLEVBQUVoRSxHQUFHLE1BQU0zRixNQUFNeUosRUFBRSxJQUFJRSxFQUFFMEUsT0FhL2V5K0IsR0FBR3h2QyxVQUFVWSxPQUFPLFNBQVN3TCxHQUFHZ2pDLEdBQUdoakMsRUFBRTVKLEtBQUttdEMsY0FBYyxLQUFLLE9BQU9ILEdBQUd4dkMsVUFBVW93QyxRQUFRLFdBQVcsSUFBSWhrQyxFQUFFNUosS0FBS210QyxjQUFjdGpDLEVBQUVELEVBQUVrUyxjQUFjOHdCLEdBQUcsS0FBS2hqQyxFQUFFLE1BQUssV0FBV0MsRUFBRWdtQixJQUFJLFNBRXdKN1YsR0FBRyxTQUFTcFEsR0FBTSxLQUFLQSxFQUFFMkUsTUFBZ0JrcUIsR0FBRzd1QixFQUFFLEVBQVYydUIsTUFBZXdVLEdBQUduakMsRUFBRSxLQUFLcVEsR0FBRyxTQUFTclEsR0FBTSxLQUFLQSxFQUFFMkUsTUFBZ0JrcUIsR0FBRzd1QixFQUFFLFNBQVYydUIsTUFBc0J3VSxHQUFHbmpDLEVBQUUsWUFDbmNzUSxHQUFHLFNBQVN0USxHQUFHLEdBQUcsS0FBS0EsRUFBRTJFLElBQUksQ0FBQyxJQUFJMUUsRUFBRTB1QixLQUFLMXlCLEVBQUUyeUIsR0FBRzV1QixHQUFHNnVCLEdBQUc3dUIsRUFBRS9ELEVBQUVnRSxHQUFHa2pDLEdBQUduakMsRUFBRS9ELEtBQUtzVSxHQUFHLFNBQVN2USxFQUFFQyxHQUFHLE9BQU9BLEtBQzdGdU4sR0FBRyxTQUFTeE4sRUFBRUMsRUFBRWhFLEdBQUcsT0FBT2dFLEdBQUcsSUFBSyxRQUF5QixHQUFqQjRHLEdBQUc3RyxFQUFFL0QsR0FBR2dFLEVBQUVoRSxFQUFFdkksS0FBUSxVQUFVdUksRUFBRXpJLE1BQU0sTUFBTXlNLEVBQUUsQ0FBQyxJQUFJaEUsRUFBRStELEVBQUUvRCxFQUFFc1IsWUFBWXRSLEVBQUVBLEVBQUVzUixXQUFzRixJQUEzRXRSLEVBQUVBLEVBQUVnb0MsaUJBQWlCLGNBQWNsbkMsS0FBS0MsVUFBVSxHQUFHaUQsR0FBRyxtQkFBdUJBLEVBQUUsRUFBRUEsRUFBRWhFLEVBQUV0SSxPQUFPc00sSUFBSSxDQUFDLElBQUljLEVBQUU5RSxFQUFFZ0UsR0FBRyxHQUFHYyxJQUFJZixHQUFHZSxFQUFFbWpDLE9BQU9sa0MsRUFBRWtrQyxLQUFLLENBQUMsSUFBSW51QyxFQUFFK1gsR0FBRy9NLEdBQUcsSUFBSWhMLEVBQUUsTUFBTU8sTUFBTXlKLEVBQUUsS0FBS2dHLEVBQUdoRixHQUFHOEYsR0FBRzlGLEVBQUVoTCxLQUFLLE1BQU0sSUFBSyxXQUFXNFIsR0FBRzNILEVBQUUvRCxHQUFHLE1BQU0sSUFBSyxTQUFtQixPQUFWZ0UsRUFBRWhFLEVBQUVhLFFBQWVzSyxHQUFHcEgsSUFBSS9ELEVBQUVzK0IsU0FBU3Q2QixHQUFFLEtBQU1nTyxHQUFHOHlCLEdBQzlaN3lCLEdBQUcsU0FBU2xPLEVBQUVDLEVBQUVoRSxFQUFFOEUsRUFBRWhMLEdBQUcsSUFBSWlMLEVBQUVtOUIsR0FBRUEsSUFBRyxFQUFFLElBQUksT0FBT2hULEdBQUcsR0FBR25yQixFQUFFOFYsS0FBSyxLQUFLN1YsRUFBRWhFLEVBQUU4RSxFQUFFaEwsSUFBSSxRQUFZLEtBQUpvb0MsR0FBRW45QixLQUFVNDlCLEtBQUt2VCxRQUFRbGQsR0FBRyxXQUFXLElBQU8sR0FBRmd3QixNQWhEL0gsV0FBYyxHQUFHLE9BQU9pQixHQUFHLENBQUMsSUFBSXAvQixFQUFFby9CLEdBQUdBLEdBQUcsS0FBS3AvQixFQUFFeEgsU0FBUSxTQUFTd0gsR0FBR0EsRUFBRXFVLGNBQWMsR0FBR3JVLEVBQUVvVSxhQUFhMnJCLEdBQUcvL0IsRUFBRWdyQixTQUFPSyxLQWdEc0I4WSxHQUFLOUQsT0FBT2p5QixHQUFHLFNBQVNwTyxFQUFFQyxHQUFHLElBQUloRSxFQUFFa2lDLEdBQUVBLElBQUcsRUFBRSxJQUFJLE9BQU9uK0IsRUFBRUMsR0FBRyxRQUFZLEtBQUprK0IsR0FBRWxpQyxLQUFVMmlDLEtBQUt2VCxRQUErSSxJQUFJK1ksR0FBRyxDQUFDQyxPQUFPLENBQUN6MkIsR0FBRzhULEdBQUc1VCxHQUFHQyxHQUFHQyxHQUFHcXlCLEdBQUcsQ0FBQ3B3QixTQUFRLEtBQU1xMEIsR0FBRyxDQUFDQyx3QkFBd0IxeUIsR0FBRzJ5QixXQUFXLEVBQUVDLFFBQVEsU0FBU0Msb0JBQW9CLGFBQ3ZlQyxHQUFHLENBQUNILFdBQVdGLEdBQUdFLFdBQVdDLFFBQVFILEdBQUdHLFFBQVFDLG9CQUFvQkosR0FBR0ksb0JBQW9CRSxlQUFlTixHQUFHTSxlQUFlQyxrQkFBa0IsS0FBS0MsNEJBQTRCLEtBQUtDLDRCQUE0QixLQUFLQyxjQUFjLEtBQUtDLHdCQUF3QixLQUFLQyx3QkFBd0IsS0FBS0MsbUJBQW1CLEtBQUtDLGVBQWUsS0FBS0MscUJBQXFCaGpDLEVBQUcyd0IsdUJBQXVCc1Msd0JBQXdCLFNBQVN0bEMsR0FBVyxPQUFPLFFBQWZBLEVBQUU4UCxHQUFHOVAsSUFBbUIsS0FBS0EsRUFBRTZOLFdBQVcwMkIsd0JBQXdCRCxHQUFHQyx5QkFSL0ksV0FBYyxPQUFPLE1BUzdXZ0IsNEJBQTRCLEtBQUtDLGdCQUFnQixLQUFLQyxhQUFhLEtBQUtDLGtCQUFrQixLQUFLQyxnQkFBZ0IsTUFBTSxHQUFHLG9CQUFxQkMsK0JBQStCLENBQUMsSUFBSUMsR0FBR0QsK0JBQStCLElBQUlDLEdBQUdDLFlBQVlELEdBQUdFLGNBQWMsSUFBSTFjLEdBQUd3YyxHQUFHRyxPQUFPckIsSUFBSXJiLEdBQUd1YyxHQUFHLE1BQU03bEMsTUFBSzlLLEVBQVFvTixtREFBbUQ4aEMsR0FBR2x2QyxFQUFRK3dDLGFBQWFyQyxHQUNuWDF1QyxFQUFRZ3hDLFlBQVksU0FBU2xtQyxHQUFHLEdBQUcsTUFBTUEsRUFBRSxPQUFPLEtBQUssR0FBRyxJQUFJQSxFQUFFNEksU0FBUyxPQUFPNUksRUFBRSxJQUFJQyxFQUFFRCxFQUFFeXVCLGdCQUFnQixRQUFHLElBQVN4dUIsRUFBRSxDQUFDLEdBQUcsbUJBQW9CRCxFQUFFeEwsT0FBTyxNQUFNOEIsTUFBTXlKLEVBQUUsTUFBTSxNQUFNekosTUFBTXlKLEVBQUUsSUFBSXBMLE9BQU9hLEtBQUt3SyxLQUEwQyxPQUExQixRQUFWQSxFQUFFOFAsR0FBRzdQLElBQWMsS0FBS0QsRUFBRTZOLFdBQW9CM1ksRUFBUWl4QyxVQUFVLFNBQVNubUMsRUFBRUMsR0FBRyxJQUFJaEUsRUFBRWtpQyxHQUFFLEdBQUcsSUFBTyxHQUFGbGlDLEdBQU0sT0FBTytELEVBQUVDLEdBQUdrK0IsSUFBRyxFQUFFLElBQUksR0FBR24rQixFQUFFLE9BQU9tckIsR0FBRyxHQUFHbnJCLEVBQUU4VixLQUFLLEtBQUs3VixJQUFJLFFBQVFrK0IsR0FBRWxpQyxFQUFFb3ZCLE9BQU9uMkIsRUFBUStjLFFBQVEsU0FBU2pTLEVBQUVDLEVBQUVoRSxHQUFHLElBQUl1bkMsR0FBR3ZqQyxHQUFHLE1BQU0zSixNQUFNeUosRUFBRSxNQUFNLE9BQU8wakMsR0FBRyxLQUFLempDLEVBQUVDLEdBQUUsRUFBR2hFLElBQ25kL0csRUFBUVYsT0FBTyxTQUFTd0wsRUFBRUMsRUFBRWhFLEdBQUcsSUFBSXVuQyxHQUFHdmpDLEdBQUcsTUFBTTNKLE1BQU15SixFQUFFLE1BQU0sT0FBTzBqQyxHQUFHLEtBQUt6akMsRUFBRUMsR0FBRSxFQUFHaEUsSUFBSS9HLEVBQVFreEMsdUJBQXVCLFNBQVNwbUMsR0FBRyxJQUFJd2pDLEdBQUd4akMsR0FBRyxNQUFNMUosTUFBTXlKLEVBQUUsS0FBSyxRQUFPQyxFQUFFdzlCLHNCQUFxQndELElBQUcsV0FBV3lDLEdBQUcsS0FBSyxLQUFLempDLEdBQUUsR0FBRyxXQUFXQSxFQUFFdzlCLG9CQUFvQixLQUFLeDlCLEVBQUVpbUIsSUFBSSxZQUFTLElBQVEvd0IsRUFBUW14Qyx3QkFBd0J0RixHQUFHN3JDLEVBQVFveEMsc0JBQXNCLFNBQVN0bUMsRUFBRUMsR0FBRyxPQUFPMmpDLEdBQUc1akMsRUFBRUMsRUFBRSxFQUFFbE0sVUFBVUosYUFBUSxJQUFTSSxVQUFVLEdBQUdBLFVBQVUsR0FBRyxPQUM5YW1CLEVBQVFxeEMsb0NBQW9DLFNBQVN2bUMsRUFBRUMsRUFBRWhFLEVBQUU4RSxHQUFHLElBQUl5aUMsR0FBR3ZuQyxHQUFHLE1BQU0zRixNQUFNeUosRUFBRSxNQUFNLEdBQUcsTUFBTUMsUUFBRyxJQUFTQSxFQUFFeXVCLGdCQUFnQixNQUFNbjRCLE1BQU15SixFQUFFLEtBQUssT0FBTzBqQyxHQUFHempDLEVBQUVDLEVBQUVoRSxHQUFFLEVBQUc4RSxJQUFJN0wsRUFBUXV2QyxRQUFRLFUsNEJDdFM3TCxTQUFTK0IsSUFFUCxHQUM0QyxvQkFBbkNaLGdDQUM0QyxtQkFBNUNBLCtCQUErQlksU0FjeEMsSUFFRVosK0JBQStCWSxTQUFTQSxHQUN4QyxNQUFPOXRDLEdBR1A2aUMsUUFBUUMsTUFBTTlpQyxJQU9oQjh0QyxHQUNBdnhDLEVBQU9DLFFBQVUsRUFBakIsTSx5QkN6QlcsSUFBSStLLEVBQUUsbUJBQW9CdUQsUUFBUUEsT0FBT0MsSUFBSXhILEVBQUVnRSxFQUFFdUQsT0FBT0MsSUFBSSxpQkFBaUIsTUFBTTFDLEVBQUVkLEVBQUV1RCxPQUFPQyxJQUFJLGdCQUFnQixNQUFNMU4sRUFBRWtLLEVBQUV1RCxPQUFPQyxJQUFJLGtCQUFrQixNQUFNekMsRUFBRWYsRUFBRXVELE9BQU9DLElBQUkscUJBQXFCLE1BQU14QyxFQUFFaEIsRUFBRXVELE9BQU9DLElBQUksa0JBQWtCLE1BQU1nQixFQUFFeEUsRUFBRXVELE9BQU9DLElBQUksa0JBQWtCLE1BQU1lLEVBQUV2RSxFQUFFdUQsT0FBT0MsSUFBSSxpQkFBaUIsTUFBTXFMLEVBQUU3TyxFQUFFdUQsT0FBT0MsSUFBSSxvQkFBb0IsTUFBTXRJLEVBQUU4RSxFQUFFdUQsT0FBT0MsSUFBSSx5QkFBeUIsTUFBTXJMLEVBQUU2SCxFQUFFdUQsT0FBT0MsSUFBSSxxQkFBcUIsTUFBTXNxQixFQUFFOXRCLEVBQUV1RCxPQUFPQyxJQUFJLGtCQUFrQixNQUFNb2lCLEVBQUU1bEIsRUFDcGZ1RCxPQUFPQyxJQUFJLHVCQUF1QixNQUFNM0QsRUFBRUcsRUFBRXVELE9BQU9DLElBQUksY0FBYyxNQUFNcWlCLEVBQUU3bEIsRUFBRXVELE9BQU9DLElBQUksY0FBYyxNQUFNc2lCLEVBQUU5bEIsRUFBRXVELE9BQU9DLElBQUksZUFBZSxNQUFNaWlCLEVBQUV6bEIsRUFBRXVELE9BQU9DLElBQUkscUJBQXFCLE1BQU1naUIsRUFBRXhsQixFQUFFdUQsT0FBT0MsSUFBSSxtQkFBbUIsTUFBTTFELEVBQUVFLEVBQUV1RCxPQUFPQyxJQUFJLGVBQWUsTUFDbFEsU0FBU2tpQixFQUFFM2xCLEdBQUcsR0FBRyxpQkFBa0JBLEdBQUcsT0FBT0EsRUFBRSxDQUFDLElBQUk0bEIsRUFBRTVsQixFQUFFOEUsU0FBUyxPQUFPOGdCLEdBQUcsS0FBSzNwQixFQUFFLE9BQU8rRCxFQUFFQSxFQUFFeE0sTUFBUSxLQUFLc2IsRUFBRSxLQUFLM1QsRUFBRSxLQUFLcEYsRUFBRSxLQUFLa0wsRUFBRSxLQUFLRCxFQUFFLEtBQUsrc0IsRUFBRSxPQUFPL3RCLEVBQUUsUUFBUSxPQUFPQSxFQUFFQSxHQUFHQSxFQUFFOEUsVUFBWSxLQUFLTixFQUFFLEtBQUtwTSxFQUFFLEtBQUswdEIsRUFBRSxLQUFLaG1CLEVBQUUsS0FBSzJFLEVBQUUsT0FBT3pFLEVBQUUsUUFBUSxPQUFPNGxCLEdBQUcsS0FBSzdrQixFQUFFLE9BQU82a0IsSUFBSSxTQUFTa0ksRUFBRTl0QixHQUFHLE9BQU8ybEIsRUFBRTNsQixLQUFLN0UsRUFBRWpHLEVBQVF1eEMsVUFBVTMzQixFQUFFNVosRUFBUXd4QyxlQUFldnJDLEVBQUVqRyxFQUFReXhDLGdCQUFnQm5pQyxFQUFFdFAsRUFBUTB4QyxnQkFBZ0JuaUMsRUFBRXZQLEVBQVEyeEMsUUFBUTVxQyxFQUFFL0csRUFBUVgsV0FBVzZELEVBQUVsRCxFQUFRNHhDLFNBQVMvd0MsRUFBRWIsRUFBUTZ4QyxLQUFLamhCLEVBQUU1d0IsRUFBUVQsS0FBS3FMLEVBQUU1SyxFQUFROHhDLE9BQU9qbUMsRUFDaGY3TCxFQUFRK3hDLFNBQVNobUMsRUFBRS9MLEVBQVFneUMsV0FBV2xtQyxFQUFFOUwsRUFBUWl5QyxTQUFTcFosRUFBRTc0QixFQUFRa3lDLFlBQVksU0FBU3BuQyxHQUFHLE9BQU84dEIsRUFBRTl0QixJQUFJMmxCLEVBQUUzbEIsS0FBSzhPLEdBQUc1WixFQUFRbXlDLGlCQUFpQnZaLEVBQUU1NEIsRUFBUW95QyxrQkFBa0IsU0FBU3RuQyxHQUFHLE9BQU8ybEIsRUFBRTNsQixLQUFLd0UsR0FBR3RQLEVBQVFxeUMsa0JBQWtCLFNBQVN2bkMsR0FBRyxPQUFPMmxCLEVBQUUzbEIsS0FBS3lFLEdBQUd2UCxFQUFRc3lDLFVBQVUsU0FBU3huQyxHQUFHLE1BQU0saUJBQWtCQSxHQUFHLE9BQU9BLEdBQUdBLEVBQUU4RSxXQUFXN0ksR0FBRy9HLEVBQVF1eUMsYUFBYSxTQUFTem5DLEdBQUcsT0FBTzJsQixFQUFFM2xCLEtBQUs1SCxHQUFHbEQsRUFBUXd5QyxXQUFXLFNBQVMxbkMsR0FBRyxPQUFPMmxCLEVBQUUzbEIsS0FBS2pLLEdBQUdiLEVBQVF5eUMsT0FBTyxTQUFTM25DLEdBQUcsT0FBTzJsQixFQUFFM2xCLEtBQUs4bEIsR0FDemQ1d0IsRUFBUVosT0FBTyxTQUFTMEwsR0FBRyxPQUFPMmxCLEVBQUUzbEIsS0FBS0YsR0FBRzVLLEVBQVEweUMsU0FBUyxTQUFTNW5DLEdBQUcsT0FBTzJsQixFQUFFM2xCLEtBQUtlLEdBQUc3TCxFQUFRMnlDLFdBQVcsU0FBUzduQyxHQUFHLE9BQU8ybEIsRUFBRTNsQixLQUFLaUIsR0FBRy9MLEVBQVE0eUMsYUFBYSxTQUFTOW5DLEdBQUcsT0FBTzJsQixFQUFFM2xCLEtBQUtnQixHQUFHOUwsRUFBUTZ5QyxXQUFXLFNBQVMvbkMsR0FBRyxPQUFPMmxCLEVBQUUzbEIsS0FBSyt0QixHQUN6Tzc0QixFQUFROHlDLG1CQUFtQixTQUFTaG9DLEdBQUcsTUFBTSxpQkFBa0JBLEdBQUcsbUJBQW9CQSxHQUFHQSxJQUFJakssR0FBR2lLLElBQUk3RSxHQUFHNkUsSUFBSWlCLEdBQUdqQixJQUFJZ0IsR0FBR2hCLElBQUkrdEIsR0FBRy90QixJQUFJNmxCLEdBQUcsaUJBQWtCN2xCLEdBQUcsT0FBT0EsSUFBSUEsRUFBRThFLFdBQVdnaEIsR0FBRzlsQixFQUFFOEUsV0FBV2hGLEdBQUdFLEVBQUU4RSxXQUFXTCxHQUFHekUsRUFBRThFLFdBQVdOLEdBQUd4RSxFQUFFOEUsV0FBVzFNLEdBQUc0SCxFQUFFOEUsV0FBVzRnQixHQUFHMWxCLEVBQUU4RSxXQUFXMmdCLEdBQUd6bEIsRUFBRThFLFdBQVcvRSxHQUFHQyxFQUFFOEUsV0FBV2loQixJQUFJN3dCLEVBQVEreUMsT0FBT3RpQixHLDJCQ1hqVTF3QixFQUFPQyxRQUFVLEVBQWpCLE0sMkJDREZQLE9BQU9ELGVBQWVRLEVBQVMsYUFBYyxDQUMzQzRILE9BQU8sSUFHVCxJQUFJb3JDLEVBQWUsV0FBYyxTQUFTQyxFQUFpQnZ2QyxFQUFRb0YsR0FBUyxJQUFLLElBQUlwSSxFQUFJLEVBQUdBLEVBQUlvSSxFQUFNckssT0FBUWlDLElBQUssQ0FBRSxJQUFJRSxFQUFha0ksRUFBTXBJLEdBQUlFLEVBQVc0UCxXQUFhNVAsRUFBVzRQLGFBQWMsRUFBTzVQLEVBQVcyUCxjQUFlLEVBQVUsVUFBVzNQLElBQVlBLEVBQVdzeUMsVUFBVyxHQUFNenpDLE9BQU9ELGVBQWVrRSxFQUFROUMsRUFBV0QsSUFBS0MsSUFBaUIsT0FBTyxTQUFVdXlDLEVBQWFDLEVBQVlDLEdBQWlKLE9BQTlIRCxHQUFZSCxFQUFpQkUsRUFBWXowQyxVQUFXMDBDLEdBQWlCQyxHQUFhSixFQUFpQkUsRUFBYUUsR0FBcUJGLEdBQTdnQixHQUlmRyxFQUFVQyxFQUZELEVBQVEsTUFNakJDLEVBQWNELEVBRkQsRUFBUSxNQU1yQkUsRUFBZUYsRUFGRCxFQUFRLEtBSTFCLFNBQVNBLEVBQXVCbHNDLEdBQU8sT0FBT0EsR0FBT0EsRUFBSXFzQyxXQUFhcnNDLEVBQU0sQ0FBRXNzQyxRQUFTdHNDLEdBV3ZGLElBQUl1c0MsRUFBVSxTQUFVQyxHQUd0QixTQUFTRCxFQUFROXFDLElBWm5CLFNBQXlCNm1CLEVBQVV3akIsR0FBZSxLQUFNeGpCLGFBQW9Cd2pCLEdBQWdCLE1BQU0sSUFBSXh3QyxVQUFVLHFDQWE1R214QyxDQUFnQjV5QyxLQUFNMHlDLEdBRXRCLElBQUlHLEVBYlIsU0FBb0NDLEVBQU1od0MsR0FBUSxJQUFLZ3dDLEVBQVEsTUFBTSxJQUFJQyxlQUFlLDZEQUFnRSxPQUFPandDLEdBQXlCLGlCQUFUQSxHQUFxQyxtQkFBVEEsRUFBOEJnd0MsRUFBUGh3QyxFQWFsTmt3QyxDQUEyQmh6QyxNQUFPMHlDLEVBQVFPLFdBQWExMEMsT0FBT0ksZUFBZSt6QyxJQUFVNXZDLEtBQUs5QyxLQUFNNEgsSUFJOUcsT0FGQWlyQyxFQUFNN1osTUFBUSxDQUFFa2EsUUFBUSxHQUN4QkwsRUFBTU0sT0FBU04sRUFBTU0sT0FBT3p6QixLQUFLbXpCLEdBQzFCQSxFQWtFVCxPQWpGRixTQUFtQk8sRUFBVUMsR0FBYyxHQUEwQixtQkFBZkEsR0FBNEMsT0FBZkEsRUFBdUIsTUFBTSxJQUFJNXhDLFVBQVUsa0VBQW9FNHhDLEdBQWVELEVBQVM1MUMsVUFBWWUsT0FBT2doQyxPQUFPOFQsR0FBY0EsRUFBVzcxQyxVQUFXLENBQUUyUixZQUFhLENBQUV6SSxNQUFPMHNDLEVBQVU5akMsWUFBWSxFQUFPMGlDLFVBQVUsRUFBTTNpQyxjQUFjLEtBQWVna0MsSUFBWTkwQyxPQUFPKzBDLGVBQWlCLzBDLE9BQU8rMEMsZUFBZUYsRUFBVUMsR0FBY0QsRUFBU0gsVUFBWUksR0FNL2RFLENBQVViLEVBQVNDLEdBWW5CYixFQUFhWSxFQUFTLENBQUMsQ0FDckJqekMsSUFBSyxrQkFDTGlILE1BQU8sV0FDTCxNQUFPLENBQ0w4c0MsUUFBNEIsb0JBQVpBLGFBQTBCQyxFQUFZRCxRQUN0RGw5QixNQUFPdFcsS0FBSzRILE1BQU0wTyxTQUdyQixDQUNEN1csSUFBSyxvQkFDTGlILE1BQU8sV0FDTCxJQUFJN0csRUFBU0csS0FBSzRILE1BQU0vSCxPQUV4QixJQUFLQSxFQUNILE9BQU9HLEtBQUttekMsVUFHZCxFQUFJWixFQUFhRSxTQUFTNXlDLEVBQVFHLEtBQUttekMsVUFFeEMsQ0FDRDF6QyxJQUFLLFNBQ0xpSCxNQUFPLFdBQ0wsSUFBSWd0QyxFQUFTMXpDLEtBRVRrRCxFQUFVbEQsS0FBSzRILE1BQU0xRSxRQUV6QnN3QyxRQUFRRyxJQUFJQyxPQUFPMXdDLEdBRW5Cc3dDLFFBQVFHLElBQUlFLFNBQVNDLFlBQVksT0FBTyxXQUN0Q04sUUFBUUcsSUFBSUksb0JBQXNCTCxFQUFPOXJDLE1BQU1vc0MsTUFFM0NOLEVBQU85ckMsTUFBTXFzQyxrQkFDZlAsRUFBTzlyQyxNQUFNcXNDLG1CQUdYUCxFQUFPOXJDLE1BQU11ckMsUUFDZk8sRUFBTzlyQyxNQUFNdXJDLFNBR2ZPLEVBQU9RLFNBQVMsQ0FDZGhCLFFBQVEsT0FJWk0sUUFBUUcsSUFBSUUsU0FBU00sWUFBWSx5QkFBeUIsU0FBVWxQLEdBQzlEeU8sRUFBTzlyQyxNQUFNZ1IsU0FDZjg2QixFQUFPOXJDLE1BQU1nUixRQUFRNDZCLFFBQVN2TyxRQUluQyxDQUNEeGxDLElBQUssU0FDTGlILE1BQU8sV0FDTCxJQUFLMUcsS0FBS2c1QixNQUFNa2EsU0FBV2x6QyxLQUFLNEgsTUFBTXdzQyxPQUNwQyxPQUFPcDBDLEtBQUs0SCxNQUFNeXNDLFFBR3BCLElBQUl4akMsRUFBVzdRLEtBQUs0SCxNQUFNaUosU0FFMUIsT0FBT3VoQyxFQUFRSyxRQUFRM2hDLFNBQVN3akMsS0FBS3pqQyxPQUlsQzZoQyxFQTVFSyxDQTZFWk4sRUFBUUssUUFBUXphLFdBRWxCMGEsRUFBUXYxQyxVQUFZLENBQ2xCMFQsU0FBVXloQyxFQUFZRyxRQUFReHBDLEtBQUtkLFdBQ25DOHJDLGlCQUFrQjNCLEVBQVlHLFFBQVFscUMsS0FDdEMxSSxPQUFReXlDLEVBQVlHLFFBQVFycEMsVUFBVSxDQUFDa3BDLEVBQVlHLFFBQVEvcEMsT0FBUTRwQyxFQUFZRyxRQUFRdHBDLE1BQU0sRUFBQyxNQUM5Rm1OLE1BQU9nOEIsRUFBWUcsUUFBUXRwQyxNQUFNLENBQUMsUUFBUyxRQUMzQzZxQyxNQUFPMUIsRUFBWUcsUUFBUWpxQyxPQUMzQnRGLFFBQVNvdkMsRUFBWUcsUUFBUWhxQyxPQUM3QjRyQyxRQUFTL0IsRUFBWUcsUUFBUXhwQyxLQUM3Qm1yQyxPQUFROUIsRUFBWUcsUUFBUW5xQyxNQUc5Qm9xQyxFQUFRaDJDLGtCQUFvQixDQUMxQjgyQyxRQUFTbEIsRUFBWUcsUUFBUWhxQyxPQUM3QjZOLE1BQU9nOEIsRUFBWUcsUUFBUS9wQyxRQUc3QmdxQyxFQUFRNzFDLGFBQWUsQ0FDckJnRCxPQUFRLDBGQUNSeVcsTUFBTyxRQUNQMDlCLE1BQU8sRUFDUDl3QyxRQUFTLEdBQ1RteEMsUUFBUyxLQUNURCxRQUFRLEdBR1Z0MUMsRUFBUTJ6QyxRQUFVQyxHLDJCQ3JJbEJuMEMsT0FBT0QsZUFBZVEsRUFBUyxhQUFjLENBQzNDNEgsT0FBTyxJQUdULElBQUlvckMsRUFBZSxXQUFjLFNBQVNDLEVBQWlCdnZDLEVBQVFvRixHQUFTLElBQUssSUFBSXBJLEVBQUksRUFBR0EsRUFBSW9JLEVBQU1ySyxPQUFRaUMsSUFBSyxDQUFFLElBQUlFLEVBQWFrSSxFQUFNcEksR0FBSUUsRUFBVzRQLFdBQWE1UCxFQUFXNFAsYUFBYyxFQUFPNVAsRUFBVzJQLGNBQWUsRUFBVSxVQUFXM1AsSUFBWUEsRUFBV3N5QyxVQUFXLEdBQU16ekMsT0FBT0QsZUFBZWtFLEVBQVE5QyxFQUFXRCxJQUFLQyxJQUFpQixPQUFPLFNBQVV1eUMsRUFBYUMsRUFBWUMsR0FBaUosT0FBOUhELEdBQVlILEVBQWlCRSxFQUFZejBDLFVBQVcwMEMsR0FBaUJDLEdBQWFKLEVBQWlCRSxFQUFhRSxHQUFxQkYsR0FBN2dCLEdBSWZHLEVBQVVDLEVBRkQsRUFBUSxNQU1qQkMsRUFBY0QsRUFGRCxFQUFRLE1BSXpCLFNBQVNBLEVBQXVCbHNDLEdBQU8sT0FBT0EsR0FBT0EsRUFBSXFzQyxXQUFhcnNDLEVBQU0sQ0FBRXNzQyxRQUFTdHNDLEdBRXZGLFNBQVN5c0MsRUFBZ0Jua0IsRUFBVXdqQixHQUFlLEtBQU14akIsYUFBb0J3akIsR0FBZ0IsTUFBTSxJQUFJeHdDLFVBQVUscUNBRWhILFNBQVN1eEMsRUFBMkJGLEVBQU1od0MsR0FBUSxJQUFLZ3dDLEVBQVEsTUFBTSxJQUFJQyxlQUFlLDZEQUFnRSxPQUFPandDLEdBQXlCLGlCQUFUQSxHQUFxQyxtQkFBVEEsRUFBOEJnd0MsRUFBUGh3QyxFQUlsTyxJQUFJeXhDLEVBQU8sU0FBVTVCLEdBR25CLFNBQVM0QixJQUdQLE9BRkEzQixFQUFnQjV5QyxLQUFNdTBDLEdBRWZ2QixFQUEyQmh6QyxNQUFPdTBDLEVBQUt0QixXQUFhMTBDLE9BQU9JLGVBQWU0MUMsSUFBTzU3QixNQUFNM1ksS0FBTXJDLFlBd0N0RyxPQWhERixTQUFtQnkxQyxFQUFVQyxHQUFjLEdBQTBCLG1CQUFmQSxHQUE0QyxPQUFmQSxFQUF1QixNQUFNLElBQUk1eEMsVUFBVSxrRUFBb0U0eEMsR0FBZUQsRUFBUzUxQyxVQUFZZSxPQUFPZ2hDLE9BQU84VCxHQUFjQSxFQUFXNzFDLFVBQVcsQ0FBRTJSLFlBQWEsQ0FBRXpJLE1BQU8wc0MsRUFBVTlqQyxZQUFZLEVBQU8waUMsVUFBVSxFQUFNM2lDLGNBQWMsS0FBZWdrQyxJQUFZOTBDLE9BQU8rMEMsZUFBaUIvMEMsT0FBTyswQyxlQUFlRixFQUFVQyxHQUFjRCxFQUFTSCxVQUFZSSxHQUcvZEUsQ0FBVWdCLEVBQU01QixHQVFoQmIsRUFBYXlDLEVBQU0sQ0FBQyxDQUNsQjkwQyxJQUFLLG9CQUNMaUgsTUFBTyxXQUNMMUcsS0FBS3cwQyxtQkFFTixDQUNELzBDLElBQUsscUJBQ0xpSCxNQUFPLFdBQ0wxRyxLQUFLdzBDLG1CQUVOLENBQ0QvMEMsSUFBSyxpQkFDTGlILE1BQU8sV0FDTCxJQUFJOHNDLEVBQVV4ekMsS0FBS3EyQixRQUFRbWQsUUFFM0IsSUFBS0EsRUFDSCxNQUFNdHpDLE1BQU0sMElBR2RzekMsRUFBUUcsSUFBSWMsTUFBTWpCLEVBQVFHLElBQUllLFFBQVExMEMsS0FBSzIwQyxJQUFLMzBDLEtBQUs0SCxNQUFNZ3RDLGFBRTVELENBQ0RuMUMsSUFBSyxTQUNMaUgsTUFBTyxXQUNMLElBQUlndEMsRUFBUzF6QyxLQUVUNjBDLEVBQVM3MEMsS0FBSzRILE1BS2xCLE9BSmNpdEMsRUFBT0MsUUFDUEQsRUFBTzN4QyxRQUdka3ZDLEVBQVFLLFFBQVE5eEMsY0FBYyxNQUFPLENBQUVsQixJQUFLTyxLQUFLNEgsTUFBTTFHLEtBQU0wNEIsSUFBSyxTQUFhK2EsR0FDbEYsT0FBT2pCLEVBQU9pQixJQUFNQSxHQUNuQnRqQyx3QkFBeUIsQ0FBRTBmLE9BQVEvd0IsS0FBSzRILE1BQU1tdEMsWUFJaERSLEVBOUNFLENBK0NUbkMsRUFBUUssUUFBUXphLFdBRWxCdWMsRUFBSzMzQyxhQUFlLENBQ2xCNDJDLFFBQVNsQixFQUFZRyxRQUFRaHFDLFFBRy9CM0osRUFBUTJ6QyxRQUFVOEIsRywyQkMzRWxCaDJDLE9BQU9ELGVBQWVRLEVBQVMsYUFBYyxDQUMzQzRILE9BQU8sSUFHVCxJQUFJb3JDLEVBQWUsV0FBYyxTQUFTQyxFQUFpQnZ2QyxFQUFRb0YsR0FBUyxJQUFLLElBQUlwSSxFQUFJLEVBQUdBLEVBQUlvSSxFQUFNckssT0FBUWlDLElBQUssQ0FBRSxJQUFJRSxFQUFha0ksRUFBTXBJLEdBQUlFLEVBQVc0UCxXQUFhNVAsRUFBVzRQLGFBQWMsRUFBTzVQLEVBQVcyUCxjQUFlLEVBQVUsVUFBVzNQLElBQVlBLEVBQVdzeUMsVUFBVyxHQUFNenpDLE9BQU9ELGVBQWVrRSxFQUFROUMsRUFBV0QsSUFBS0MsSUFBaUIsT0FBTyxTQUFVdXlDLEVBQWFDLEVBQVlDLEdBQWlKLE9BQTlIRCxHQUFZSCxFQUFpQkUsRUFBWXowQyxVQUFXMDBDLEdBQWlCQyxHQUFhSixFQUFpQkUsRUFBYUUsR0FBcUJGLEdBQTdnQixHQUlmRyxFQUFVQyxFQUZELEVBQVEsTUFNakJDLEVBQWNELEVBRkQsRUFBUSxNQUl6QixTQUFTQSxFQUF1QmxzQyxHQUFPLE9BQU9BLEdBQU9BLEVBQUlxc0MsV0FBYXJzQyxFQUFNLENBQUVzc0MsUUFBU3RzQyxHQUV2RixTQUFTeXNDLEVBQWdCbmtCLEVBQVV3akIsR0FBZSxLQUFNeGpCLGFBQW9Cd2pCLEdBQWdCLE1BQU0sSUFBSXh3QyxVQUFVLHFDQUVoSCxTQUFTdXhDLEVBQTJCRixFQUFNaHdDLEdBQVEsSUFBS2d3QyxFQUFRLE1BQU0sSUFBSUMsZUFBZSw2REFBZ0UsT0FBT2p3QyxHQUF5QixpQkFBVEEsR0FBcUMsbUJBQVRBLEVBQThCZ3dDLEVBQVBod0MsRUFJbE8sSUFBSWt5QyxFQUFRLENBQ1ZDLE1BQU8sWUFDUEMsSUFBSyxPQUdIQyxFQUFPLFNBQVV4QyxHQUduQixTQUFTd0MsSUFHUCxPQUZBdkMsRUFBZ0I1eUMsS0FBTW0xQyxHQUVmbkMsRUFBMkJoekMsTUFBT20xQyxFQUFLbEMsV0FBYTEwQyxPQUFPSSxlQUFldzJDLElBQU94OEIsTUFBTTNZLEtBQU1yQyxZQTBIdEcsT0F2SUYsU0FBbUJ5MUMsRUFBVUMsR0FBYyxHQUEwQixtQkFBZkEsR0FBNEMsT0FBZkEsRUFBdUIsTUFBTSxJQUFJNXhDLFVBQVUsa0VBQW9FNHhDLEdBQWVELEVBQVM1MUMsVUFBWWUsT0FBT2doQyxPQUFPOFQsR0FBY0EsRUFBVzcxQyxVQUFXLENBQUUyUixZQUFhLENBQUV6SSxNQUFPMHNDLEVBQVU5akMsWUFBWSxFQUFPMGlDLFVBQVUsRUFBTTNpQyxjQUFjLEtBQWVna0MsSUFBWTkwQyxPQUFPKzBDLGVBQWlCLzBDLE9BQU8rMEMsZUFBZUYsRUFBVUMsR0FBY0QsRUFBU0gsVUFBWUksR0FRL2RFLENBQVU0QixFQUFNeEMsR0FRaEJiLEVBQWFxRCxFQUFNLENBQUMsQ0FDbEIxMUMsSUFBSyxvQkFLTGlILE1BQU8sV0FDTDFHLEtBQUtvMUMsWUFPTixDQUNEMzFDLElBQUsscUJBQ0xpSCxNQUFPLFNBQTRCMnVDLEdBQ2pDLElBQUlDLEVBQWNELEVBQVVFLFNBQVd2MUMsS0FBSzRILE1BQU0ydEMsUUFBVUYsRUFBVXhrQyxXQUFhN1EsS0FBSzRILE1BQU1pSixTQUM5RjdRLEtBQUtvMUMsUUFBUUUsS0FPZCxDQUNENzFDLElBQUssd0JBQ0xpSCxNQUFPLFNBQStCOHVDLEVBQVdDLEVBQVdDLEdBQzFELE9BQU9GLEVBQVUza0MsV0FBYTdRLEtBQUs0SCxNQUFNaUosVUFBWTJrQyxFQUFVRCxTQUFXdjFDLEtBQUs0SCxNQUFNMnRDLFNBT3RGLENBQ0Q5MUMsSUFBSyx1QkFDTGlILE1BQU8sV0FDTDFHLEtBQUsyMUMsVUFPTixDQUNEbDJDLElBQUssUUFDTGlILE1BQU8sV0FDTCxJQUFJOHNDLEVBQVV4ekMsS0FBS3EyQixRQUFRbWQsUUFFM0IsR0FBS3h6QyxLQUFLSCxPQUFWLENBSUEsSUFBSSsxQyxFQUFNcEMsRUFBUUcsSUFBSWtDLFVBQVU3MUMsS0FBS0gsUUFFakMrMUMsR0FDRkEsRUFBSUUsWUFTUCxDQUNEcjJDLElBQUssVUFDTGlILE1BQU8sU0FBaUI0dUMsR0FDdEIsSUFBSTlCLEVBQVV4ekMsS0FBS3EyQixRQUFRbWQsUUFHM0IsSUFBS0EsRUFDSCxNQUFNdHpDLE1BQU0sMElBR2QsSUFBSWdCLEVBQU9sQixLQUFLNEgsTUFBTWlKLFNBRWxCeWtDLEdBQ0Z0MUMsS0FBSzIxQyxTQUdITCxHQUFnQnQxQyxLQUFLSCxRQUN2QkcsS0FBSysxQyxjQUFjNzBDLEdBR3JCc3lDLEVBQVFHLElBQUljLE1BQU1qQixFQUFRRyxJQUFJcUMsVUFBVWgyQyxLQUFLSCxPQUFRRyxLQUFLNEgsTUFBTWd0QyxhQVFqRSxDQUNEbjFDLElBQUssZ0JBQ0xpSCxNQUFPLFNBQXVCeEYsR0FDNUIsSUFBSXEwQyxFQUFTdjFDLEtBQUs0SCxNQUFNMnRDLE9BQ3BCbjRDLEVBQU80M0MsRUFBTWgxQyxLQUFLcTJCLFFBQVEvZixPQUN6QnRXLEtBQUtILFNBQ1JHLEtBQUtILE9BQVNZLFNBQVNFLGNBQWMsVUFDckNYLEtBQUtILE9BQU96QyxLQUFPLFFBQVVBLEVBQU8sTUFBUW00QyxFQUFTLEdBQUssZ0JBQzFEdjFDLEtBQUtpNEIsS0FBS2h2QixLQUFLOUgsWUFBWW5CLEtBQUtILFNBRzlCLFNBQVVHLEtBQUtILE9BRWpCRyxLQUFLSCxPQUFPcUIsS0FBT0EsRUFFbkJsQixLQUFLSCxPQUFPNFIsWUFBY3ZRLElBRzdCLENBQ0R6QixJQUFLLFNBQ0xpSCxNQUFPLFdBQ0wsT0FBTzByQyxFQUFRSyxRQUFROXhDLGNBQWMsT0FBUSxDQUFFaTVCLElBQUssYUFJakR1YixFQWhJRSxDQWlJVC9DLEVBQVFLLFFBQVF6YSxXQUVsQm1kLEVBQUtoNEMsVUFBWSxDQUNmbzRDLE9BQVFqRCxFQUFZRyxRQUFRbnFDLEtBQzVCdUksU0FBVXloQyxFQUFZRyxRQUFReHBDLEtBQUtkLFdBQ25DeXNDLFNBQVV0QyxFQUFZRyxRQUFRbHFDLE1BR2hDNHNDLEVBQUt2NEMsYUFBZSxDQUNsQjQyQyxRQUFTbEIsRUFBWUcsUUFBUWhxQyxPQUM3QjZOLE1BQU9nOEIsRUFBWUcsUUFBUS9wQyxRQUc3QnlzQyxFQUFLdDRDLGFBQWUsQ0FDbEIwNEMsUUFBUSxFQUNSWCxTQUFVLGNBR1o5MUMsRUFBUTJ6QyxRQUFVMEMsRywyQkM5S2xCNTJDLE9BQU9ELGVBQWVRLEVBQVMsYUFBYyxDQUMzQzRILE9BQU8sSUFHVCxJQUFJb3JDLEVBQWUsV0FBYyxTQUFTQyxFQUFpQnZ2QyxFQUFRb0YsR0FBUyxJQUFLLElBQUlwSSxFQUFJLEVBQUdBLEVBQUlvSSxFQUFNckssT0FBUWlDLElBQUssQ0FBRSxJQUFJRSxFQUFha0ksRUFBTXBJLEdBQUlFLEVBQVc0UCxXQUFhNVAsRUFBVzRQLGFBQWMsRUFBTzVQLEVBQVcyUCxjQUFlLEVBQVUsVUFBVzNQLElBQVlBLEVBQVdzeUMsVUFBVyxHQUFNenpDLE9BQU9ELGVBQWVrRSxFQUFROUMsRUFBV0QsSUFBS0MsSUFBaUIsT0FBTyxTQUFVdXlDLEVBQWFDLEVBQVlDLEdBQWlKLE9BQTlIRCxHQUFZSCxFQUFpQkUsRUFBWXowQyxVQUFXMDBDLEdBQWlCQyxHQUFhSixFQUFpQkUsRUFBYUUsR0FBcUJGLEdBQTdnQixHQUlmRyxFQUFVQyxFQUZELEVBQVEsTUFNakJDLEVBQWNELEVBRkQsRUFBUSxNQUl6QixTQUFTQSxFQUF1QmxzQyxHQUFPLE9BQU9BLEdBQU9BLEVBQUlxc0MsV0FBYXJzQyxFQUFNLENBQUVzc0MsUUFBU3RzQyxHQUV2RixTQUFTeXNDLEVBQWdCbmtCLEVBQVV3akIsR0FBZSxLQUFNeGpCLGFBQW9Cd2pCLEdBQWdCLE1BQU0sSUFBSXh3QyxVQUFVLHFDQUVoSCxTQUFTdXhDLEVBQTJCRixFQUFNaHdDLEdBQVEsSUFBS2d3QyxFQUFRLE1BQU0sSUFBSUMsZUFBZSw2REFBZ0UsT0FBT2p3QyxHQUF5QixpQkFBVEEsR0FBcUMsbUJBQVRBLEVBQThCZ3dDLEVBQVBod0MsRUFJbE8sSUFBSW16QyxFQUFPLFNBQVV0RCxHQUduQixTQUFTc0QsSUFHUCxPQUZBckQsRUFBZ0I1eUMsS0FBTWkyQyxHQUVmakQsRUFBMkJoekMsTUFBT2kyQyxFQUFLaEQsV0FBYTEwQyxPQUFPSSxlQUFlczNDLElBQU90OUIsTUFBTTNZLEtBQU1yQyxZQTRDdEcsT0FwREYsU0FBbUJ5MUMsRUFBVUMsR0FBYyxHQUEwQixtQkFBZkEsR0FBNEMsT0FBZkEsRUFBdUIsTUFBTSxJQUFJNXhDLFVBQVUsa0VBQW9FNHhDLEdBQWVELEVBQVM1MUMsVUFBWWUsT0FBT2doQyxPQUFPOFQsR0FBY0EsRUFBVzcxQyxVQUFXLENBQUUyUixZQUFhLENBQUV6SSxNQUFPMHNDLEVBQVU5akMsWUFBWSxFQUFPMGlDLFVBQVUsRUFBTTNpQyxjQUFjLEtBQWVna0MsSUFBWTkwQyxPQUFPKzBDLGVBQWlCLzBDLE9BQU8rMEMsZUFBZUYsRUFBVUMsR0FBY0QsRUFBU0gsVUFBWUksR0FHL2RFLENBQVUwQyxFQUFNdEQsR0FRaEJiLEVBQWFtRSxFQUFNLENBQUMsQ0FDbEJ4MkMsSUFBSyxvQkFDTGlILE1BQU8sV0FDTDFHLEtBQUt3MEMsbUJBRU4sQ0FDRC8wQyxJQUFLLHFCQUNMaUgsTUFBTyxXQUNMMUcsS0FBS3cwQyxtQkFFTixDQUNELzBDLElBQUssaUJBQ0xpSCxNQUFPLFdBQ0wsSUFBSThzQyxFQUFVeHpDLEtBQUtxMkIsUUFBUW1kLFFBRTNCLElBQUtBLEVBQ0gsTUFBTXR6QyxNQUFNLDBJQUdkc3pDLEVBQVFHLElBQUljLE1BQU1qQixFQUFRRyxJQUFJZSxRQUFRMTBDLEtBQUsyMEMsSUFBSzMwQyxLQUFLNEgsTUFBTWd0QyxhQUU1RCxDQUNEbjFDLElBQUssU0FDTGlILE1BQU8sV0FDTCxJQUFJZ3RDLEVBQVMxekMsS0FFVDYwQyxFQUFTNzBDLEtBQUs0SCxNQUtsQixPQUpjaXRDLEVBQU9DLFFBQ1BELEVBQU8zeEMsUUFHZGt2QyxFQUFRSyxRQUFROXhDLGNBQ3JCLE1BQ0EsQ0FBRWxCLElBQUtPLEtBQUs0SCxNQUFNMUcsS0FBTTA0QixJQUFLLFNBQWErYSxHQUN0QyxPQUFPakIsRUFBT2lCLElBQU1BLElBRXhCMzBDLEtBQUs0SCxNQUFNMUcsVUFLViswQyxFQWxERSxDQW1EVDdELEVBQVFLLFFBQVF6YSxXQUVsQmllLEVBQUtyNUMsYUFBZSxDQUNsQjQyQyxRQUFTbEIsRUFBWUcsUUFBUWhxQyxRQUcvQjNKLEVBQVEyekMsUUFBVXdELEcsMkJDL0VsQjEzQyxPQUFPRCxlQUFlUSxFQUFTLGFBQWMsQ0FDM0M0SCxPQUFPLElBRVQ1SCxFQUFReTFDLEtBQU96MUMsRUFBUW0zQyxLQUFPbjNDLEVBQVE0ekMsUUFBVTV6QyxFQUFRcTJDLFVBQU8xQixFQUUvRCxJQUVJeUMsRUFBUzdELEVBRkQsRUFBUSxNQU1oQjhELEVBQVk5RCxFQUZELEVBQVEsTUFNbkIrRCxFQUFTL0QsRUFGRCxFQUFRLE1BTWhCZ0UsRUFBU2hFLEVBRkQsRUFBUSxNQUlwQixTQUFTQSxFQUF1QmxzQyxHQUFPLE9BQU9BLEdBQU9BLEVBQUlxc0MsV0FBYXJzQyxFQUFNLENBQUVzc0MsUUFBU3RzQyxHQUV2RnJILEVBQVFxMkMsS0FBT2UsRUFBT3pELFFBQ3RCM3pDLEVBQVE0ekMsUUFBVXlELEVBQVUxRCxRQUM1QjN6QyxFQUFRbTNDLEtBQU9HLEVBQU8zRCxRQUN0QjN6QyxFQUFReTFDLEtBQU84QixFQUFPNUQsUUFDdEIzekMsRUFBUTJ6QyxRQUFVLENBQUUwQyxLQUFNZSxFQUFPekQsUUFBU0MsUUFBU3lELEVBQVUxRCxRQUFTd0QsS0FBTUcsRUFBTzNELFFBQVM4QixLQUFNOEIsRUFBTzVELFUsMkJDcEI1RixJQUFJLzVCLEVBQUUsRUFBUSxLQUFpQjFXLEVBQUUsbUJBQW9Cb0wsUUFBUUEsT0FBT0MsSUFBSXNxQixFQUFFMzFCLEVBQUVvTCxPQUFPQyxJQUFJLGlCQUFpQixNQUFNb2lCLEVBQUV6dEIsRUFBRW9MLE9BQU9DLElBQUksZ0JBQWdCLE1BQU0zRCxFQUFFMUgsRUFBRW9MLE9BQU9DLElBQUksa0JBQWtCLE1BQU1xaUIsRUFBRTF0QixFQUFFb0wsT0FBT0MsSUFBSSxxQkFBcUIsTUFBTW1pQixFQUFFeHRCLEVBQUVvTCxPQUFPQyxJQUFJLGtCQUFrQixNQUFNc2lCLEVBQUUzdEIsRUFBRW9MLE9BQU9DLElBQUksa0JBQWtCLE1BQU1paUIsRUFBRXR0QixFQUFFb0wsT0FBT0MsSUFBSSxpQkFBaUIsTUFBTWdpQixFQUFFcnRCLEVBQUVvTCxPQUFPQyxJQUFJLHFCQUFxQixNQUFNMUQsRUFBRTNILEVBQUVvTCxPQUFPQyxJQUFJLGtCQUFrQixNQUFNa2lCLEVBQUV2dEIsRUFBRW9MLE9BQU9DLElBQUksY0FBYyxNQUFNcXFCLEVBQUUxMUIsRUFBRW9MLE9BQU9DLElBQUksY0FDeGUsTUFBTTNDLEVBQUUsbUJBQW9CMEMsUUFBUUEsT0FBT0ssU0FBUyxTQUFTbXFCLEVBQUVodUIsR0FBRyxJQUFJLElBQUlDLEVBQUUseURBQXlERCxFQUFFL0QsRUFBRSxFQUFFQSxFQUFFbEksVUFBVUosT0FBT3NJLElBQUlnRSxHQUFHLFdBQVd0RCxtQkFBbUI1SSxVQUFVa0ksSUFBSSxNQUFNLHlCQUF5QitELEVBQUUsV0FBV0MsRUFBRSxpSEFDL1AsSUFBSXdCLEVBQUUsQ0FBQytzQixVQUFVLFdBQVcsT0FBTSxHQUFJTyxtQkFBbUIsYUFBYUQsb0JBQW9CLGFBQWFKLGdCQUFnQixjQUFjaHJCLEVBQUUsR0FBRyxTQUFTdVEsRUFBRWpVLEVBQUVDLEVBQUVoRSxHQUFHN0YsS0FBSzRILE1BQU1nQyxFQUFFNUosS0FBS3EyQixRQUFReHNCLEVBQUU3SixLQUFLaTRCLEtBQUszcUIsRUFBRXROLEtBQUtpNUIsUUFBUXB6QixHQUFHd0YsRUFDcE4sU0FBU3NqQixLQUE2QixTQUFTcUQsRUFBRXBvQixFQUFFQyxFQUFFaEUsR0FBRzdGLEtBQUs0SCxNQUFNZ0MsRUFBRTVKLEtBQUtxMkIsUUFBUXhzQixFQUFFN0osS0FBS2k0QixLQUFLM3FCLEVBQUV0TixLQUFLaTVCLFFBQVFwekIsR0FBR3dGLEVBRHNHd1MsRUFBRXJnQixVQUFVK3VDLGlCQUFpQixHQUFHMXVCLEVBQUVyZ0IsVUFBVTAyQyxTQUFTLFNBQVN0cUMsRUFBRUMsR0FBRyxHQUFHLGlCQUFrQkQsR0FBRyxtQkFBb0JBLEdBQUcsTUFBTUEsRUFBRSxNQUFNMUosTUFBTTAzQixFQUFFLEtBQUs1M0IsS0FBS2k1QixRQUFRWCxnQkFBZ0J0NEIsS0FBSzRKLEVBQUVDLEVBQUUsYUFBYWdVLEVBQUVyZ0IsVUFBVTgzQyxZQUFZLFNBQVMxckMsR0FBRzVKLEtBQUtpNUIsUUFBUU4sbUJBQW1CMzRCLEtBQUs0SixFQUFFLGdCQUNuZCtrQixFQUFFbnhCLFVBQVVxZ0IsRUFBRXJnQixVQUFzRixJQUFJeTBCLEVBQUVELEVBQUV4MEIsVUFBVSxJQUFJbXhCLEVBQUVzRCxFQUFFOWlCLFlBQVk2aUIsRUFBRXRaLEVBQUV1WixFQUFFcFUsRUFBRXJnQixXQUFXeTBCLEVBQUU2RyxzQkFBcUIsRUFBRyxJQUFJN0ksRUFBRSxDQUFDcFcsUUFBUSxNQUFNcVcsRUFBRTN4QixPQUFPZixVQUFVNEQsZUFBZWd2QixFQUFFLENBQUMzd0IsS0FBSSxFQUFHbTZCLEtBQUksRUFBRzBjLFFBQU8sRUFBR0MsVUFBUyxHQUNoUyxTQUFTcGtCLEVBQUV2b0IsRUFBRUMsRUFBRWhFLEdBQUcsSUFBSWxHLEVBQUVnTCxFQUFFLEdBQUdFLEVBQUUsS0FBS3VELEVBQUUsS0FBSyxHQUFHLE1BQU12RSxFQUFFLElBQUlsSyxVQUFLLElBQVNrSyxFQUFFK3ZCLE1BQU14ckIsRUFBRXZFLEVBQUUrdkIsVUFBSyxJQUFTL3ZCLEVBQUVwSyxNQUFNb0wsRUFBRSxHQUFHaEIsRUFBRXBLLEtBQUtvSyxFQUFFcW1CLEVBQUVwdEIsS0FBSytHLEVBQUVsSyxLQUFLeXdCLEVBQUVodkIsZUFBZXpCLEtBQUtnTCxFQUFFaEwsR0FBR2tLLEVBQUVsSyxJQUFJLElBQUlpTCxFQUFFak4sVUFBVUosT0FBTyxFQUFFLEdBQUcsSUFBSXFOLEVBQUVELEVBQUVrRyxTQUFTaEwsT0FBTyxHQUFHLEVBQUUrRSxFQUFFLENBQUMsSUFBSSxJQUFJeUQsRUFBRW5JLE1BQU0wRSxHQUFHN0YsRUFBRSxFQUFFQSxFQUFFNkYsRUFBRTdGLElBQUlzSixFQUFFdEosR0FBR3BILFVBQVVvSCxFQUFFLEdBQUc0RixFQUFFa0csU0FBU3hDLEVBQUUsR0FBR3pFLEdBQUdBLEVBQUUvTSxhQUFhLElBQUk4QyxLQUFLaUwsRUFBRWhCLEVBQUUvTSxrQkFBZSxJQUFTOE4sRUFBRWhMLEtBQUtnTCxFQUFFaEwsR0FBR2lMLEVBQUVqTCxJQUFJLE1BQU0sQ0FBQytPLFNBQVNpcEIsRUFBRXY2QixLQUFLd00sRUFBRW5LLElBQUlvTCxFQUFFK3VCLElBQUl4ckIsRUFBRXhHLE1BQU0rQyxFQUFFa3ZCLE9BQU81SixFQUFFcFcsU0FDeFUsU0FBUythLEVBQUVockIsR0FBRyxNQUFNLGlCQUFrQkEsR0FBRyxPQUFPQSxHQUFHQSxFQUFFOEUsV0FBV2lwQixFQUEwRyxJQUFJOEQsRUFBRSxPQUFPdEwsRUFBRSxHQUFHLFNBQVM0TSxFQUFFbnpCLEVBQUVDLEVBQUVoRSxFQUFFbEcsR0FBRyxHQUFHd3dCLEVBQUU1eUIsT0FBTyxDQUFDLElBQUlvTixFQUFFd2xCLEVBQUVxbUIsTUFBOEQsT0FBeEQ3ckMsRUFBRThyQyxPQUFPN3NDLEVBQUVlLEVBQUUrckMsVUFBVTdzQyxFQUFFYyxFQUFFcEMsS0FBSzFDLEVBQUU4RSxFQUFFMHJCLFFBQVExMkIsRUFBRWdMLEVBQUVnc0MsTUFBTSxFQUFTaHNDLEVBQUUsTUFBTSxDQUFDOHJDLE9BQU83c0MsRUFBRThzQyxVQUFVN3NDLEVBQUV0QixLQUFLMUMsRUFBRXd3QixRQUFRMTJCLEVBQUVnM0MsTUFBTSxHQUM1YixTQUFTM1osRUFBRXB6QixHQUFHQSxFQUFFNnNDLE9BQU8sS0FBSzdzQyxFQUFFOHNDLFVBQVUsS0FBSzlzQyxFQUFFckIsS0FBSyxLQUFLcUIsRUFBRXlzQixRQUFRLEtBQUt6c0IsRUFBRStzQyxNQUFNLEVBQUUsR0FBR3htQixFQUFFNXlCLFFBQVE0eUIsRUFBRTdzQixLQUFLc0csR0FDdEcsU0FBU3F6QixFQUFFcnpCLEVBQUVDLEVBQUVoRSxFQUFFbEcsR0FBRyxJQUFJZ0wsU0FBU2YsRUFBSyxjQUFjZSxHQUFHLFlBQVlBLElBQUVmLEVBQUUsTUFBSyxJQUFJaUIsR0FBRSxFQUFHLEdBQUcsT0FBT2pCLEVBQUVpQixHQUFFLE9BQVEsT0FBT0YsR0FBRyxJQUFLLFNBQVMsSUFBSyxTQUFTRSxHQUFFLEVBQUcsTUFBTSxJQUFLLFNBQVMsT0FBT2pCLEVBQUU4RSxVQUFVLEtBQUtpcEIsRUFBRSxLQUFLbEksRUFBRTVrQixHQUFFLEdBQUksR0FBR0EsRUFBRSxPQUFPaEYsRUFBRWxHLEVBQUVpSyxFQUFFLEtBQUtDLEVBQUUsSUFBSWcxQixFQUFFajFCLEVBQUUsR0FBR0MsR0FBRyxFQUF5QixHQUF2QmdCLEVBQUUsRUFBRWhCLEVBQUUsS0FBS0EsRUFBRSxJQUFJQSxFQUFFLElBQU8zRCxNQUFNbUIsUUFBUXVDLEdBQUcsSUFBSSxJQUFJd0UsRUFBRSxFQUFFQSxFQUFFeEUsRUFBRXJNLE9BQU82USxJQUFJLENBQVEsSUFBSXhELEVBQUVmLEVBQUVnMUIsRUFBZmwwQixFQUFFZixFQUFFd0UsR0FBZUEsR0FBR3ZELEdBQUdveUIsRUFBRXR5QixFQUFFQyxFQUFFL0UsRUFBRWxHLFFBQVEsR0FBb0csbUJBQW5FaUwsRUFBOUIsT0FBT2hCLEdBQUcsaUJBQWtCQSxFQUFJLEtBQW1DLG1CQUE3QmdCLEVBQUVGLEdBQUdkLEVBQUVjLElBQUlkLEVBQUUsZUFBc0NnQixFQUFFLE1BQTRCLElBQUloQixFQUFFZ0IsRUFBRTlILEtBQUs4RyxHQUFHd0UsRUFDcGYsSUFBSXpELEVBQUVmLEVBQUV6RSxRQUFRdzFCLE1BQTZCOXZCLEdBQUdveUIsRUFBMUJ0eUIsRUFBRUEsRUFBRWpFLE1BQU1rRSxFQUFFZixFQUFFZzFCLEVBQUVsMEIsRUFBRXlELEtBQWN2SSxFQUFFbEcsUUFBUSxHQUFHLFdBQVdnTCxFQUFFLE1BQU05RSxFQUFFLEdBQUcrRCxFQUFFMUosTUFBTTAzQixFQUFFLEdBQUcsb0JBQW9CL3hCLEVBQUUscUJBQXFCdEgsT0FBT2EsS0FBS3dLLEdBQUczSCxLQUFLLE1BQU0sSUFBSTRELEVBQUUsS0FBSyxPQUFPZ0YsRUFBRSxTQUFTNDVCLEVBQUU3NkIsRUFBRUMsRUFBRWhFLEdBQUcsT0FBTyxNQUFNK0QsRUFBRSxFQUFFcXpCLEVBQUVyekIsRUFBRSxHQUFHQyxFQUFFaEUsR0FBRyxTQUFTZzVCLEVBQUVqMUIsRUFBRUMsR0FBRyxNQUFNLGlCQUFrQkQsR0FBRyxPQUFPQSxHQUFHLE1BQU1BLEVBQUVuSyxJQUg5SSxTQUFnQm1LLEdBQUcsSUFBSUMsRUFBRSxDQUFDLElBQUksS0FBSyxJQUFJLE1BQU0sTUFBTSxLQUFLLEdBQUdELEdBQUdoRSxRQUFRLFNBQVEsU0FBU2dFLEdBQUcsT0FBT0MsRUFBRUQsTUFHK0NndEMsQ0FBT2h0QyxFQUFFbkssS0FBS29LLEVBQUU5RCxTQUFTLElBQUksU0FBUzYrQixFQUFFaDdCLEVBQUVDLEdBQUdELEVBQUVyQixLQUFLekYsS0FBSzhHLEVBQUV5c0IsUUFBUXhzQixFQUFFRCxFQUFFK3NDLFNBQ3hYLFNBQVNsdEMsRUFBR0csRUFBRUMsRUFBRWhFLEdBQUcsSUFBSWxHLEVBQUVpSyxFQUFFNnNDLE9BQU85ckMsRUFBRWYsRUFBRThzQyxVQUFVOXNDLEVBQUVBLEVBQUVyQixLQUFLekYsS0FBSzhHLEVBQUV5c0IsUUFBUXhzQixFQUFFRCxFQUFFK3NDLFNBQVN6d0MsTUFBTW1CLFFBQVF1QyxHQUFHbStCLEVBQUVuK0IsRUFBRWpLLEVBQUVrRyxHQUFFLFNBQVMrRCxHQUFHLE9BQU9BLEtBQUksTUFBTUEsSUFBSWdyQixFQUFFaHJCLEtBQUtBLEVBSnRKLFNBQVdBLEVBQUVDLEdBQUcsTUFBTSxDQUFDNkUsU0FBU2lwQixFQUFFdjZCLEtBQUt3TSxFQUFFeE0sS0FBS3FDLElBQUlvSyxFQUFFK3ZCLElBQUlod0IsRUFBRWd3QixJQUFJaHlCLE1BQU1nQyxFQUFFaEMsTUFBTWl5QixPQUFPandCLEVBQUVpd0IsUUFJbUV6SCxDQUFFeG9CLEVBQUVlLElBQUlmLEVBQUVuSyxLQUFLb0ssR0FBR0EsRUFBRXBLLE1BQU1tSyxFQUFFbkssSUFBSSxJQUFJLEdBQUdtSyxFQUFFbkssS0FBS21HLFFBQVE2MUIsRUFBRSxPQUFPLEtBQUs1MUIsSUFBSWxHLEVBQUUyRCxLQUFLc0csSUFBSSxTQUFTbStCLEVBQUVuK0IsRUFBRUMsRUFBRWhFLEVBQUVsRyxFQUFFZ0wsR0FBRyxJQUFJRSxFQUFFLEdBQUcsTUFBTWhGLElBQUlnRixHQUFHLEdBQUdoRixHQUFHRCxRQUFRNjFCLEVBQUUsT0FBTyxLQUFrQmdKLEVBQUU3NkIsRUFBRUgsRUFBakJJLEVBQUVrekIsRUFBRWx6QixFQUFFZ0IsRUFBRWxMLEVBQUVnTCxJQUFhcXlCLEVBQUVuekIsR0FBRyxJQUFJbStCLEVBQUUsQ0FBQ251QixRQUFRLE1BQU0sU0FBUzZ1QixJQUFJLElBQUk5K0IsRUFBRW8rQixFQUFFbnVCLFFBQVEsR0FBRyxPQUFPalEsRUFBRSxNQUFNMUosTUFBTTAzQixFQUFFLE1BQU0sT0FBT2h1QixFQUN4YSxJQUFJRSxFQUFHLENBQUM4eUIsdUJBQXVCb0wsRUFBRTVTLHdCQUF3QixDQUFDeWhCLFNBQVMsTUFBTXRWLGtCQUFrQnRSLEVBQUU2bUIscUJBQXFCLENBQUNqOUIsU0FBUSxHQUFJblksT0FBT2dYLEdBQUc1WixFQUFRZ1MsU0FBUyxDQUFDL08sSUFBSSxTQUFTNkgsRUFBRUMsRUFBRWhFLEdBQUcsR0FBRyxNQUFNK0QsRUFBRSxPQUFPQSxFQUFFLElBQUlqSyxFQUFFLEdBQW1CLE9BQWhCb29DLEVBQUVuK0IsRUFBRWpLLEVBQUUsS0FBS2tLLEVBQUVoRSxHQUFVbEcsR0FBR3lDLFFBQVEsU0FBU3dILEVBQUVDLEVBQUVoRSxHQUFHLEdBQUcsTUFBTStELEVBQUUsT0FBT0EsRUFBcUI2NkIsRUFBRTc2QixFQUFFZzdCLEVBQXZCLzZCLEVBQUVrekIsRUFBRSxLQUFLLEtBQUtsekIsRUFBRWhFLElBQVltM0IsRUFBRW56QixJQUFJOHNDLE1BQU0sU0FBUy9zQyxHQUFHLE9BQU82NkIsRUFBRTc2QixHQUFFLFdBQVcsT0FBTyxPQUFNLE9BQU9tdEMsUUFBUSxTQUFTbnRDLEdBQUcsSUFBSUMsRUFBRSxHQUFxQyxPQUFsQ2srQixFQUFFbitCLEVBQUVDLEVBQUUsTUFBSyxTQUFTRCxHQUFHLE9BQU9BLEtBQVdDLEdBQUd5cUMsS0FBSyxTQUFTMXFDLEdBQUcsSUFBSWdyQixFQUFFaHJCLEdBQUcsTUFBTTFKLE1BQU0wM0IsRUFBRSxNQUFNLE9BQU9odUIsSUFDOWU5SyxFQUFRazVCLFVBQVVuYSxFQUFFL2UsRUFBUTR4QyxTQUFTaG5DLEVBQUU1SyxFQUFRK3hDLFNBQVNyaEIsRUFBRTF3QixFQUFRazRDLGNBQWNobEIsRUFBRWx6QixFQUFRZ3lDLFdBQVdwaEIsRUFBRTV3QixFQUFRaXlDLFNBQVNwbkMsRUFBRTdLLEVBQVFvTixtREFBbURwQyxFQUNyTGhMLEVBQVFtNEMsYUFBYSxTQUFTcnRDLEVBQUVDLEVBQUVoRSxHQUFHLEdBQUcsTUFBTytELEVBQWMsTUFBTTFKLE1BQU0wM0IsRUFBRSxJQUFJaHVCLElBQUksSUFBSWpLLEVBQUUrWSxFQUFFLEdBQUc5TyxFQUFFaEMsT0FBTytDLEVBQUVmLEVBQUVuSyxJQUFJb0wsRUFBRWpCLEVBQUVnd0IsSUFBSXhyQixFQUFFeEUsRUFBRWl3QixPQUFPLEdBQUcsTUFBTWh3QixFQUFFLENBQW9FLFFBQW5FLElBQVNBLEVBQUUrdkIsTUFBTS91QixFQUFFaEIsRUFBRSt2QixJQUFJeHJCLEVBQUU2aEIsRUFBRXBXLGNBQVMsSUFBU2hRLEVBQUVwSyxNQUFNa0wsRUFBRSxHQUFHZCxFQUFFcEssS0FBUW1LLEVBQUV4TSxNQUFNd00sRUFBRXhNLEtBQUtQLGFBQWEsSUFBSStOLEVBQUVoQixFQUFFeE0sS0FBS1AsYUFBYSxJQUFJd1IsS0FBS3hFLEVBQUVxbUIsRUFBRXB0QixLQUFLK0csRUFBRXdFLEtBQUsraEIsRUFBRWh2QixlQUFlaU4sS0FBSzFPLEVBQUUwTyxRQUFHLElBQVN4RSxFQUFFd0UsU0FBSSxJQUFTekQsRUFBRUEsRUFBRXlELEdBQUd4RSxFQUFFd0UsSUFBSSxJQUFJQSxFQUFFMVEsVUFBVUosT0FBTyxFQUFFLEdBQUcsSUFBSThRLEVBQUUxTyxFQUFFa1IsU0FBU2hMLE9BQU8sR0FBRyxFQUFFd0ksRUFBRSxDQUFDekQsRUFBRTFFLE1BQU1tSSxHQUFHLElBQUksSUFBSXRKLEVBQUUsRUFBRUEsRUFBRXNKLEVBQUV0SixJQUFJNkYsRUFBRTdGLEdBQUdwSCxVQUFVb0gsRUFBRSxHQUFHcEYsRUFBRWtSLFNBQVNqRyxFQUFFLE1BQU0sQ0FBQzhELFNBQVNpcEIsRUFBRXY2QixLQUFLd00sRUFBRXhNLEtBQ3hmcUMsSUFBSWtMLEVBQUVpdkIsSUFBSS91QixFQUFFakQsTUFBTWpJLEVBQUVrNkIsT0FBT3pyQixJQUFJdFAsRUFBUW80QyxjQUFjLFNBQVN0dEMsRUFBRUMsR0FBOEssWUFBM0ssSUFBU0EsSUFBSUEsRUFBRSxPQUFNRCxFQUFFLENBQUM4RSxTQUFTNGdCLEVBQUVvZSxzQkFBc0I3akMsRUFBRStyQixjQUFjaHNCLEVBQUV1dEMsZUFBZXZ0QyxFQUFFd3RDLGFBQWEsRUFBRUMsU0FBUyxLQUFLQyxTQUFTLE9BQVFELFNBQVMsQ0FBQzNvQyxTQUFTaWhCLEVBQUVoaEIsU0FBUy9FLEdBQVVBLEVBQUUwdEMsU0FBUzF0QyxHQUFHOUssRUFBUTZCLGNBQWN3eEIsRUFBRXJ6QixFQUFReTRDLGNBQWMsU0FBUzN0QyxHQUFHLElBQUlDLEVBQUVzb0IsRUFBRXpTLEtBQUssS0FBSzlWLEdBQVksT0FBVEMsRUFBRXpNLEtBQUt3TSxFQUFTQyxHQUFHL0ssRUFBUTA0QyxVQUFVLFdBQVcsTUFBTSxDQUFDMzlCLFFBQVEsT0FBTy9hLEVBQVEyNEMsV0FBVyxTQUFTN3RDLEdBQUcsTUFBTSxDQUFDOEUsU0FBUzJnQixFQUFFanhCLE9BQU93TCxJQUFJOUssRUFBUTQ0QyxlQUFlOWlCLEVBQzNlOTFCLEVBQVE2NEMsS0FBSyxTQUFTL3RDLEdBQUcsTUFBTSxDQUFDOEUsU0FBU2dwQixFQUFFa2dCLE1BQU1odUMsRUFBRWl1QyxTQUFTLEVBQUVDLFFBQVEsT0FBT2g1QyxFQUFRaTVDLEtBQUssU0FBU251QyxFQUFFQyxHQUFHLE1BQU0sQ0FBQzZFLFNBQVM2Z0IsRUFBRW55QixLQUFLd00sRUFBRTlMLGFBQVEsSUFBUytMLEVBQUUsS0FBS0EsSUFBSS9LLEVBQVEwaEMsWUFBWSxTQUFTNTJCLEVBQUVDLEdBQUcsT0FBTzYrQixJQUFJbEksWUFBWTUyQixFQUFFQyxJQUFJL0ssRUFBUTJoQyxXQUFXLFNBQVM3MkIsRUFBRUMsR0FBRyxPQUFPNitCLElBQUlqSSxXQUFXNzJCLEVBQUVDLElBQUkvSyxFQUFRaWlDLGNBQWMsYUFBYWppQyxFQUFRbWdDLFVBQVUsU0FBU3IxQixFQUFFQyxHQUFHLE9BQU82K0IsSUFBSXpKLFVBQVVyMUIsRUFBRUMsSUFBSS9LLEVBQVE0aEMsb0JBQW9CLFNBQVM5MkIsRUFBRUMsRUFBRWhFLEdBQUcsT0FBTzZpQyxJQUFJaEksb0JBQW9COTJCLEVBQUVDLEVBQUVoRSxJQUN0Yy9HLEVBQVE2aEMsZ0JBQWdCLFNBQVMvMkIsRUFBRUMsR0FBRyxPQUFPNitCLElBQUkvSCxnQkFBZ0IvMkIsRUFBRUMsSUFBSS9LLEVBQVE4aEMsUUFBUSxTQUFTaDNCLEVBQUVDLEdBQUcsT0FBTzYrQixJQUFJOUgsUUFBUWgzQixFQUFFQyxJQUFJL0ssRUFBUStoQyxXQUFXLFNBQVNqM0IsRUFBRUMsRUFBRWhFLEdBQUcsT0FBTzZpQyxJQUFJN0gsV0FBV2ozQixFQUFFQyxFQUFFaEUsSUFBSS9HLEVBQVFnaUMsT0FBTyxTQUFTbDNCLEdBQUcsT0FBTzgrQixJQUFJNUgsT0FBT2wzQixJQUFJOUssRUFBUWdnQyxTQUFTLFNBQVNsMUIsR0FBRyxPQUFPOCtCLElBQUk1SixTQUFTbDFCLElBQUk5SyxFQUFRdXZDLFFBQVEsVywyQkNyQm5UeHZDLEVBQU9DLFFBQVUsRUFBakIsTSwyQkNIYSxTQUFTazVDLEVBQWdCQyxFQUFHdGdCLEdBTXpDLE9BTEFxZ0IsRUFBa0J6NUMsT0FBTyswQyxnQkFBa0IsU0FBeUIyRSxFQUFHdGdCLEdBRXJFLE9BREFzZ0IsRUFBRWhGLFVBQVl0YixFQUNQc2dCLElBR2NBLEVBQUd0Z0IsR0NMYixTQUFTdWdCLEVBQWU5RSxFQUFVQyxHQUMvQ0QsRUFBUzUxQyxVQUFZZSxPQUFPZ2hDLE9BQU84VCxFQUFXNzFDLFdBQzlDNDFDLEVBQVM1MUMsVUFBVTJSLFlBQWNpa0MsRUFDakMsRUFBZUEsRUFBVUMsRyw2VkNKWixTQUFTOEUsSUFldEIsT0FkQUEsRUFBVzU1QyxPQUFPbUQsUUFBVSxTQUFVYyxHQUNwQyxJQUFLLElBQUloRCxFQUFJLEVBQUdBLEVBQUk3QixVQUFVSixPQUFRaUMsSUFBSyxDQUN6QyxJQUFJaUQsRUFBUzlFLFVBQVU2QixHQUV2QixJQUFLLElBQUlDLEtBQU9nRCxFQUNWbEUsT0FBT2YsVUFBVTRELGVBQWUwQixLQUFLTCxFQUFRaEQsS0FDL0MrQyxFQUFPL0MsR0FBT2dELEVBQU9oRCxJQUszQixPQUFPK0MsSUFHT21XLE1BQU0zWSxLQUFNckMsV0NmOUIsU0FBU3k2QyxFQUFXQyxHQUNsQixNQUE4QixNQUF2QkEsRUFBUzFpQyxPQUFPLEdBSXpCLFNBQVMyaUMsRUFBVUMsRUFBTTN6QyxHQUN2QixJQUFLLElBQUlwRixFQUFJb0YsRUFBT3dKLEVBQUk1TyxFQUFJLEVBQUd3QyxFQUFJdTJDLEVBQUtoN0MsT0FBUTZRLEVBQUlwTSxFQUFHeEMsR0FBSyxFQUFHNE8sR0FBSyxFQUNsRW1xQyxFQUFLLzRDLEdBQUsrNEMsRUFBS25xQyxHQUdqQm1xQyxFQUFLL0IsTUNWUCxTQUFTLEVBQVFyd0MsR0FDZixPQUFPQSxFQUFJOEwsUUFBVTlMLEVBQUk4TCxVQUFZMVQsT0FBT2YsVUFBVXlVLFFBQVFuUCxLQUFLcUQsR0FrQ3JFLFFBL0JBLFNBQVNxeUMsRUFBVzV1QyxFQUFHQyxHQUVyQixHQUFJRCxJQUFNQyxFQUFHLE9BQU8sRUFHcEIsR0FBUyxNQUFMRCxHQUFrQixNQUFMQyxFQUFXLE9BQU8sRUFFbkMsR0FBSTNELE1BQU1tQixRQUFRdUMsR0FDaEIsT0FDRTFELE1BQU1tQixRQUFRd0MsSUFDZEQsRUFBRXJNLFNBQVdzTSxFQUFFdE0sUUFDZnFNLEVBQUU2dUMsT0FBTSxTQUFTQyxFQUFNOXpDLEdBQ3JCLE9BQU80ekMsRUFBV0UsRUFBTTd1QyxFQUFFakYsT0FLaEMsR0FBaUIsaUJBQU5nRixHQUErQixpQkFBTkMsRUFBZ0IsQ0FDbEQsSUFBSTh1QyxFQUFTLEVBQVEvdUMsR0FDakJndkMsRUFBUyxFQUFRL3VDLEdBRXJCLE9BQUk4dUMsSUFBVy91QyxHQUFLZ3ZDLElBQVcvdUMsRUFBVTJ1QyxFQUFXRyxFQUFRQyxHQUVyRHI2QyxPQUFPYSxLQUFLYixPQUFPbUQsT0FBTyxHQUFJa0ksRUFBR0MsSUFBSTR1QyxPQUFNLFNBQVNoNUMsR0FDekQsT0FBTys0QyxFQUFXNXVDLEVBQUVuSyxHQUFNb0ssRUFBRXBLLE9BSWhDLE9BQU8sR0NwQlQsUUFWQSxTQUFtQm81QyxFQUFXNVQsR0FDMUIsSUFBSTRULEVBSUEsTUFBTSxJQUFJMzRDLE1BTkwscUJDS2IsU0FBUzQ0QyxFQUFnQjcxQyxHQUN2QixNQUEwQixNQUFuQkEsRUFBSzBTLE9BQU8sR0FBYTFTLEVBQU8sSUFBTUEsRUFFL0MsU0FBUzgxQyxFQUFrQjkxQyxHQUN6QixNQUEwQixNQUFuQkEsRUFBSzBTLE9BQU8sR0FBYTFTLEVBQUt3QyxPQUFPLEdBQUt4QyxFQUtuRCxTQUFTKzFDLEVBQWMvMUMsRUFBTU0sR0FDM0IsT0FKRixTQUFxQk4sRUFBTU0sR0FDekIsT0FBNEQsSUFBckROLEVBQUtxSSxjQUFjbUssUUFBUWxTLEVBQU8rSCxpQkFBdUUsSUFBL0MsTUFBTW1LLFFBQVF4UyxFQUFLMFMsT0FBT3BTLEVBQU9oRyxTQUczRjA3QyxDQUFZaDJDLEVBQU1NLEdBQVVOLEVBQUt3QyxPQUFPbEMsRUFBT2hHLFFBQVUwRixFQUVsRSxTQUFTaTJDLEVBQW1CajJDLEdBQzFCLE1BQXdDLE1BQWpDQSxFQUFLMFMsT0FBTzFTLEVBQUsxRixPQUFTLEdBQWEwRixFQUFLaUMsTUFBTSxHQUFJLEdBQUtqQyxFQTBCcEUsU0FBU2syQyxFQUFXcHhDLEdBQ2xCLElBQUlzd0MsRUFBV3R3QyxFQUFTc3dDLFNBQ3BCN3RCLEVBQVN6aUIsRUFBU3lpQixPQUNsQjR1QixFQUFPcnhDLEVBQVNxeEMsS0FDaEJuMkMsRUFBT28xQyxHQUFZLElBR3ZCLE9BRkk3dEIsR0FBcUIsTUFBWEEsSUFBZ0J2bkIsR0FBNkIsTUFBckJ1bkIsRUFBTzdVLE9BQU8sR0FBYTZVLEVBQVMsSUFBTUEsR0FDNUU0dUIsR0FBaUIsTUFBVEEsSUFBY24yQyxHQUEyQixNQUFuQm0yQyxFQUFLempDLE9BQU8sR0FBYXlqQyxFQUFPLElBQU1BLEdBQ2pFbjJDLEVBR1QsU0FBU28yQyxFQUFlcDJDLEVBQU0rMUIsRUFBT3Y1QixFQUFLNjVDLEdBQ3hDLElBQUl2eEMsRUFFZ0IsaUJBQVQ5RSxHQUVUOEUsRUF2Q0osU0FBbUI5RSxHQUNqQixJQUFJbzFDLEVBQVdwMUMsR0FBUSxJQUNuQnVuQixFQUFTLEdBQ1Q0dUIsRUFBTyxHQUNQRyxFQUFZbEIsRUFBUzVpQyxRQUFRLE1BRWQsSUFBZjhqQyxJQUNGSCxFQUFPZixFQUFTNXlDLE9BQU84ekMsR0FDdkJsQixFQUFXQSxFQUFTNXlDLE9BQU8sRUFBRzh6QyxJQUdoQyxJQUFJQyxFQUFjbkIsRUFBUzVpQyxRQUFRLEtBT25DLE9BTHFCLElBQWpCK2pDLElBQ0ZodkIsRUFBUzZ0QixFQUFTNXlDLE9BQU8rekMsR0FDekJuQixFQUFXQSxFQUFTNXlDLE9BQU8sRUFBRyt6QyxJQUd6QixDQUNMbkIsU0FBVUEsRUFDVjd0QixPQUFtQixNQUFYQSxFQUFpQixHQUFLQSxFQUM5QjR1QixLQUFlLE1BQVRBLEVBQWUsR0FBS0EsR0FrQmZLLENBQVV4MkMsSUFDWisxQixNQUFRQSxRQUlTeWEsS0FEMUIxckMsRUFBV293QyxFQUFTLEdBQUlsMUMsSUFDWG8xQyxXQUF3QnR3QyxFQUFTc3dDLFNBQVcsSUFFckR0d0MsRUFBU3lpQixPQUN1QixNQUE5QnppQixFQUFTeWlCLE9BQU83VSxPQUFPLEtBQVk1TixFQUFTeWlCLE9BQVMsSUFBTXppQixFQUFTeWlCLFFBRXhFemlCLEVBQVN5aUIsT0FBUyxHQUdoQnppQixFQUFTcXhDLEtBQ3FCLE1BQTVCcnhDLEVBQVNxeEMsS0FBS3pqQyxPQUFPLEtBQVk1TixFQUFTcXhDLEtBQU8sSUFBTXJ4QyxFQUFTcXhDLE1BRXBFcnhDLEVBQVNxeEMsS0FBTyxRQUdKM0YsSUFBVnphLFFBQTBDeWEsSUFBbkIxckMsRUFBU2l4QixRQUFxQmp4QixFQUFTaXhCLE1BQVFBLElBRzVFLElBQ0VqeEIsRUFBU3N3QyxTQUFXcUIsVUFBVTN4QyxFQUFTc3dDLFVBQ3ZDLE1BQU8xNEMsR0FDUCxNQUFJQSxhQUFhZzZDLFNBQ1QsSUFBSUEsU0FBUyxhQUFlNXhDLEVBQVNzd0MsU0FBeEIsaUZBRWIxNEMsRUFvQlYsT0FoQklGLElBQUtzSSxFQUFTdEksSUFBTUEsR0FFcEI2NUMsRUFFR3Z4QyxFQUFTc3dDLFNBRTZCLE1BQWhDdHdDLEVBQVNzd0MsU0FBUzFpQyxPQUFPLEtBQ2xDNU4sRUFBU3N3QyxTSHJGZixTQUF5QnoxQyxFQUFJRixRQUNkK3dDLElBQVQvd0MsSUFBb0JBLEVBQU8sSUFFL0IsSUFrQklrM0MsRUFsQkFDLEVBQVdqM0MsR0FBTUEsRUFBR1QsTUFBTSxNQUFTLEdBQ25DMjNDLEVBQWFwM0MsR0FBUUEsRUFBS1AsTUFBTSxNQUFTLEdBRXpDNDNDLEVBQVVuM0MsR0FBTXcxQyxFQUFXeDFDLEdBQzNCbzNDLEVBQVl0M0MsR0FBUTAxQyxFQUFXMTFDLEdBQy9CdTNDLEVBQWFGLEdBQVdDLEVBVzVCLEdBVElwM0MsR0FBTXcxQyxFQUFXeDFDLEdBRW5CazNDLEVBQVlELEVBQ0hBLEVBQVF0OEMsU0FFakJ1OEMsRUFBVXRELE1BQ1ZzRCxFQUFZQSxFQUFVejZDLE9BQU93NkMsS0FHMUJDLEVBQVV2OEMsT0FBUSxNQUFPLElBRzlCLEdBQUl1OEMsRUFBVXY4QyxPQUFRLENBQ3BCLElBQUlxbUMsRUFBT2tXLEVBQVVBLEVBQVV2OEMsT0FBUyxHQUN4Q3E4QyxFQUE0QixNQUFUaFcsR0FBeUIsT0FBVEEsR0FBMEIsS0FBVEEsT0FFcERnVyxHQUFtQixFQUlyQixJQURBLElBQUlNLEVBQUssRUFDQTE2QyxFQUFJczZDLEVBQVV2OEMsT0FBUWlDLEdBQUssRUFBR0EsSUFBSyxDQUMxQyxJQUFJMjZDLEVBQU9MLEVBQVV0NkMsR0FFUixNQUFUMjZDLEVBQ0Y3QixFQUFVd0IsRUFBV3Q2QyxHQUNILE9BQVQyNkMsR0FDVDdCLEVBQVV3QixFQUFXdDZDLEdBQ3JCMDZDLEtBQ1NBLElBQ1Q1QixFQUFVd0IsRUFBV3Q2QyxHQUNyQjA2QyxLQUlKLElBQUtELEVBQVksS0FBT0MsSUFBTUEsRUFBSUosRUFBVXRwQixRQUFRLE9BR2xEeXBCLEdBQ2lCLEtBQWpCSCxFQUFVLElBQ1JBLEVBQVUsSUFBTzFCLEVBQVcwQixFQUFVLEtBRXhDQSxFQUFVdHBCLFFBQVEsSUFFcEIsSUFBSWltQixFQUFTcUQsRUFBVTczQyxLQUFLLEtBSTVCLE9BRkkyM0MsR0FBMEMsTUFBdEJuRCxFQUFPaHhDLFFBQVEsS0FBWWd4QyxHQUFVLEtBRXREQSxFRzRCaUIsQ0FBZ0IxdUMsRUFBU3N3QyxTQUFVaUIsRUFBZ0JqQixXQUZ2RXR3QyxFQUFTc3dDLFNBQVdpQixFQUFnQmpCLFNBTWpDdHdDLEVBQVNzd0MsV0FDWnR3QyxFQUFTc3dDLFNBQVcsS0FJakJ0d0MsRUFNVCxTQUFTcXlDLElBQ1AsSUFBSUMsRUFBUyxLQWlDVHB2QixFQUFZLEdBNEJoQixNQUFPLENBQ0xxdkIsVUE1REYsU0FBbUJDLEdBR2pCLE9BREFGLEVBQVNFLEVBQ0YsV0FDREYsSUFBV0UsSUFBWUYsRUFBUyxRQXlEdENHLG9CQXJERixTQUE2Qnp5QyxFQUFVbTJCLEVBQVF1YyxFQUFxQm5qQixHQUlsRSxHQUFjLE1BQVYraUIsRUFBZ0IsQ0FDbEIsSUFBSTVELEVBQTJCLG1CQUFYNEQsRUFBd0JBLEVBQU90eUMsRUFBVW0yQixHQUFVbWMsRUFFakQsaUJBQVg1RCxFQUMwQixtQkFBeEJnRSxFQUNUQSxFQUFvQmhFLEVBQVFuZixHQUc1QkEsR0FBUyxHQUlYQSxHQUFvQixJQUFYbWYsUUFHWG5mLEdBQVMsSUFtQ1hvakIsZUE3QkYsU0FBd0JDLEdBQ3RCLElBQUlDLEdBQVcsRUFFZixTQUFTbHNCLElBQ0hrc0IsR0FBVUQsRUFBR2hpQyxXQUFNLEVBQVFoYixXQUlqQyxPQURBc3RCLEVBQVUzbkIsS0FBS29yQixHQUNSLFdBQ0xrc0IsR0FBVyxFQUNYM3ZCLEVBQVlBLEVBQVU0dkIsUUFBTyxTQUFVbkMsR0FDckMsT0FBT0EsSUFBU2hxQixPQW1CcEJvc0IsZ0JBZEYsV0FDRSxJQUFLLElBQUlDLEVBQU9wOUMsVUFBVUosT0FBUXk5QyxFQUFPLElBQUk5MEMsTUFBTTYwQyxHQUFPRSxFQUFPLEVBQUdBLEVBQU9GLEVBQU1FLElBQy9FRCxFQUFLQyxHQUFRdDlDLFVBQVVzOUMsR0FHekJod0IsRUFBVTdvQixTQUFRLFNBQVVzc0IsR0FDMUIsT0FBT0EsRUFBUy9WLFdBQU0sRUFBUXFpQyxRQVlwQyxJQUFJRSxJQUFpQyxvQkFBWDd3QyxTQUEwQkEsT0FBTzVKLFdBQVk0SixPQUFPNUosU0FBU0UsZUFDdkYsU0FBU3c2QyxFQUFnQmxXLEVBQVMzTixHQUNoQ0EsRUFBU2p0QixPQUFPK3dDLFFBQVFuVyxJQXdDMUIsSUFBSW9XLEVBQWdCLFdBQ2hCQyxFQUFrQixhQUV0QixTQUFTQyxJQUNQLElBQ0UsT0FBT2x4QyxPQUFPbXhDLFFBQVF4aUIsT0FBUyxHQUMvQixNQUFPcjVCLEdBR1AsTUFBTyxJQVNYLFNBQVM4N0MsRUFBcUI3ekMsUUFDZCxJQUFWQSxJQUNGQSxFQUFRLElBR1RzekMsR0FBc0csR0FBVSxHQUNqSCxJQXJESTd1QyxFQXFEQXF2QyxFQUFnQnJ4QyxPQUFPbXhDLFFBQ3ZCRyxJQXJEK0IsS0FEL0J0dkMsRUFBS2hDLE9BQU91eEMsVUFBVUMsV0FDbEJwbUMsUUFBUSxnQkFBdUQsSUFBL0JwSixFQUFHb0osUUFBUSxpQkFBMkQsSUFBakNwSixFQUFHb0osUUFBUSxtQkFBcUQsSUFBMUJwSixFQUFHb0osUUFBUSxZQUFxRCxJQUFqQ3BKLEVBQUdvSixRQUFRLG1CQUN0SnBMLE9BQU9teEMsU0FBVyxjQUFlbnhDLE9BQU9teEMsUUFxRDNDTSxLQTdDc0QsSUFBbkR6eEMsT0FBT3V4QyxVQUFVQyxVQUFVcG1DLFFBQVEsWUE4Q3RDby9CLEVBQVNqdEMsRUFDVG0wQyxFQUFzQmxILEVBQU9tSCxhQUM3QkEsT0FBdUMsSUFBeEJELEdBQXlDQSxFQUN4REUsRUFBd0JwSCxFQUFPNEYsb0JBQy9CQSxPQUFnRCxJQUExQndCLEVBQW1DZCxFQUFrQmMsRUFDM0VDLEVBQW1CckgsRUFBT3NILFVBQzFCQSxPQUFpQyxJQUFyQkQsRUFBOEIsRUFBSUEsRUFDOUNFLEVBQVd4MEMsRUFBTXcwQyxTQUFXbEQsRUFBbUJKLEVBQWdCbHhDLEVBQU13MEMsV0FBYSxHQUV0RixTQUFTQyxFQUFlQyxHQUN0QixJQUFJQyxFQUFPRCxHQUFnQixHQUN2Qjc4QyxFQUFNODhDLEVBQUs5OEMsSUFDWHU1QixFQUFRdWpCLEVBQUt2akIsTUFFYndqQixFQUFtQm55QyxPQUFPdEMsU0FJMUI5RSxFQUhXdTVDLEVBQWlCbkUsU0FDbkJtRSxFQUFpQmh5QixPQUNuQmd5QixFQUFpQnBELEtBSTVCLE9BRElnRCxJQUFVbjVDLEVBQU8rMUMsRUFBYy8xQyxFQUFNbTVDLElBQ2xDL0MsRUFBZXAyQyxFQUFNKzFCLEVBQU92NUIsR0FHckMsU0FBU2c5QyxJQUNQLE9BQU81OUIsS0FBS21RLFNBQVNqcEIsU0FBUyxJQUFJTixPQUFPLEVBQUcwMkMsR0FHOUMsSUFBSU8sRUFBb0J0QyxJQUV4QixTQUFTbEcsRUFBU3VCLEdBQ2hCMEMsRUFBU3FELEVBQVMvRixHQUVsQitGLEVBQVFqK0MsT0FBU20rQyxFQUFjbitDLE9BQy9CbS9DLEVBQWtCNUIsZ0JBQWdCVSxFQUFRenpDLFNBQVV5ekMsRUFBUXRkLFFBRzlELFNBQVN5ZSxFQUFlM3hCLElBcEUxQixTQUFtQ0EsR0FDakMsWUFBdUJ5b0IsSUFBaEJ6b0IsRUFBTWdPLFFBQWlFLElBQTFDNGlCLFVBQVVDLFVBQVVwbUMsUUFBUSxVQXFFMURtbkMsQ0FBMEI1eEIsSUFDOUI2eEIsRUFBVVIsRUFBZXJ4QixFQUFNZ08sUUFHakMsU0FBUzhqQixJQUNQRCxFQUFVUixFQUFlZCxNQUczQixJQUFJd0IsR0FBZSxFQUVuQixTQUFTRixFQUFVOTBDLEdBQ2JnMUMsR0FDRkEsR0FBZSxFQUNmN0ksS0FHQXdJLEVBQWtCbEMsb0JBQW9CenlDLEVBRHpCLE1BQzJDMHlDLEdBQXFCLFNBQVUxTixHQUNqRkEsRUFDRm1ILEVBQVMsQ0FDUGhXLE9BSk8sTUFLUG4yQixTQUFVQSxJQVNwQixTQUFtQmkxQyxHQUNqQixJQUFJQyxFQUFhekIsRUFBUXp6QyxTQUlyQm0xQyxFQUFVQyxFQUFRMW5DLFFBQVF3bkMsRUFBV3g5QyxNQUN4QixJQUFieTlDLElBQWdCQSxFQUFVLEdBQzlCLElBQUlFLEVBQVlELEVBQVExbkMsUUFBUXVuQyxFQUFhdjlDLE1BQzFCLElBQWYyOUMsSUFBa0JBLEVBQVksR0FDbEMsSUFBSUMsRUFBUUgsRUFBVUUsRUFFbEJDLElBQ0ZOLEdBQWUsRUFDZk8sRUFBR0QsSUFuQkNFLENBQVV4MUMsTUF1QmxCLElBQUl5MUMsRUFBa0JuQixFQUFlZCxLQUNqQzRCLEVBQVUsQ0FBQ0ssRUFBZ0IvOUMsS0FFL0IsU0FBU2crQyxFQUFXMTFDLEdBQ2xCLE9BQU9xMEMsRUFBV2pELEVBQVdweEMsR0F1RS9CLFNBQVN1MUMsRUFBR3Q3QyxHQUNWMDVDLEVBQWM0QixHQUFHdDdDLEdBV25CLElBQUkwN0MsRUFBZ0IsRUFFcEIsU0FBU0MsRUFBa0JOLEdBR0gsS0FGdEJLLEdBQWlCTCxJQUVvQixJQUFWQSxHQUN6Qmh6QyxPQUFPa08saUJBQWlCOGlDLEVBQWVzQixHQUNuQ2IsR0FBeUJ6eEMsT0FBT2tPLGlCQUFpQitpQyxFQUFpQndCLElBQzNDLElBQWxCWSxJQUNUcnpDLE9BQU9tTyxvQkFBb0I2aUMsRUFBZXNCLEdBQ3RDYixHQUF5Qnp4QyxPQUFPbU8sb0JBQW9COGlDLEVBQWlCd0IsSUFJN0UsSUFBSWMsR0FBWSxFQWlDWnBDLEVBQVUsQ0FDWmorQyxPQUFRbStDLEVBQWNuK0MsT0FDdEIyZ0MsT0FBUSxNQUNSbjJCLFNBQVV5MUMsRUFDVkMsV0FBWUEsRUFDWm42QyxLQXBJRixTQUFjTCxFQUFNKzFCLEdBRWxCLElBQUlrRixFQUFTLE9BQ1RuMkIsRUFBV3N4QyxFQUFlcDJDLEVBQU0rMUIsRUFBT3lqQixJQUFhakIsRUFBUXp6QyxVQUNoRTIwQyxFQUFrQmxDLG9CQUFvQnp5QyxFQUFVbTJCLEVBQVF1YyxHQUFxQixTQUFVMU4sR0FDckYsR0FBS0EsRUFBTCxDQUNBLElBQUk5ZixFQUFPd3dCLEVBQVcxMUMsR0FDbEJ0SSxFQUFNc0ksRUFBU3RJLElBQ2Z1NUIsRUFBUWp4QixFQUFTaXhCLE1BRXJCLEdBQUkyaUIsRUFNRixHQUxBRCxFQUFjbUMsVUFBVSxDQUN0QnArQyxJQUFLQSxFQUNMdTVCLE1BQU9BLEdBQ04sS0FBTS9MLEdBRUwrdUIsRUFDRjN4QyxPQUFPdEMsU0FBU2tsQixLQUFPQSxNQUNsQixDQUNMLElBQUk2d0IsRUFBWVgsRUFBUTFuQyxRQUFRK2xDLEVBQVF6ekMsU0FBU3RJLEtBQzdDcytDLEVBQVdaLEVBQVFqNEMsTUFBTSxFQUFHNDRDLEVBQVksR0FDNUNDLEVBQVN6NkMsS0FBS3lFLEVBQVN0SSxLQUN2QjA5QyxFQUFVWSxFQUNWN0osRUFBUyxDQUNQaFcsT0FBUUEsRUFDUm4yQixTQUFVQSxTQUtkc0MsT0FBT3RDLFNBQVNrbEIsS0FBT0EsT0F1RzNCcm5CLFFBbEdGLFNBQWlCM0MsRUFBTSsxQixHQUVyQixJQUFJa0YsRUFBUyxVQUNUbjJCLEVBQVdzeEMsRUFBZXAyQyxFQUFNKzFCLEVBQU95akIsSUFBYWpCLEVBQVF6ekMsVUFDaEUyMEMsRUFBa0JsQyxvQkFBb0J6eUMsRUFBVW0yQixFQUFRdWMsR0FBcUIsU0FBVTFOLEdBQ3JGLEdBQUtBLEVBQUwsQ0FDQSxJQUFJOWYsRUFBT3d3QixFQUFXMTFDLEdBQ2xCdEksRUFBTXNJLEVBQVN0SSxJQUNmdTVCLEVBQVFqeEIsRUFBU2l4QixNQUVyQixHQUFJMmlCLEVBTUYsR0FMQUQsRUFBY3NDLGFBQWEsQ0FDekJ2K0MsSUFBS0EsRUFDTHU1QixNQUFPQSxHQUNOLEtBQU0vTCxHQUVMK3VCLEVBQ0YzeEMsT0FBT3RDLFNBQVNuQyxRQUFRcW5CLE9BQ25CLENBQ0wsSUFBSTZ3QixFQUFZWCxFQUFRMW5DLFFBQVErbEMsRUFBUXp6QyxTQUFTdEksTUFDOUIsSUFBZnErQyxJQUFrQlgsRUFBUVcsR0FBYS8xQyxFQUFTdEksS0FDcER5MEMsRUFBUyxDQUNQaFcsT0FBUUEsRUFDUm4yQixTQUFVQSxTQUtkc0MsT0FBT3RDLFNBQVNuQyxRQUFRcW5CLFFBdUU1QnF3QixHQUFJQSxFQUNKVyxPQS9ERixXQUNFWCxHQUFJLElBK0RKWSxVQTVERixXQUNFWixFQUFHLElBNERIYSxNQXpDRixTQUFlOUQsUUFDRSxJQUFYQSxJQUNGQSxHQUFTLEdBR1gsSUFBSStELEVBQVUxQixFQUFrQnBDLFVBQVVELEdBTzFDLE9BTEt1RCxJQUNIRCxFQUFrQixHQUNsQkMsR0FBWSxHQUdQLFdBTUwsT0FMSUEsSUFDRkEsR0FBWSxFQUNaRCxHQUFtQixJQUdkUyxNQXdCVEMsT0FwQkYsU0FBZ0IzdkIsR0FDZCxJQUFJNHZCLEVBQVc1QixFQUFrQmhDLGVBQWVoc0IsR0FFaEQsT0FEQWl2QixFQUFrQixHQUNYLFdBQ0xBLEdBQW1CLEdBQ25CVyxPQWlCSixPQUFPOUMsRUFHVCxJQUFJK0MsRUFBb0IsYUFDcEJDLEVBQWlCLENBQ25CQyxTQUFVLENBQ1JDLFdBQVksU0FBb0J6N0MsR0FDOUIsTUFBMEIsTUFBbkJBLEVBQUswUyxPQUFPLEdBQWExUyxFQUFPLEtBQU84MUMsRUFBa0I5MUMsSUFFbEUwN0MsV0FBWSxTQUFvQjE3QyxHQUM5QixNQUEwQixNQUFuQkEsRUFBSzBTLE9BQU8sR0FBYTFTLEVBQUt3QyxPQUFPLEdBQUt4QyxJQUdyRDI3QyxRQUFTLENBQ1BGLFdBQVkzRixFQUNaNEYsV0FBWTdGLEdBRWQrRixNQUFPLENBQ0xILFdBQVk1RixFQUNaNkYsV0FBWTdGLElBSWhCLFNBQVNnRyxFQUFVbjBCLEdBQ2pCLElBQUk0dUIsRUFBWTV1QixFQUFJbFYsUUFBUSxLQUM1QixPQUFzQixJQUFmOGpDLEVBQW1CNXVCLEVBQU1BLEVBQUl6bEIsTUFBTSxFQUFHcTBDLEdBRy9DLFNBQVN3RixJQUdQLElBQUk5eEIsRUFBTzVpQixPQUFPdEMsU0FBU2tsQixLQUN2QnNzQixFQUFZdHNCLEVBQUt4WCxRQUFRLEtBQzdCLE9BQXNCLElBQWY4akMsRUFBbUIsR0FBS3RzQixFQUFLclgsVUFBVTJqQyxFQUFZLEdBTzVELFNBQVN5RixFQUFnQi83QyxHQUN2Qm9ILE9BQU90QyxTQUFTbkMsUUFBUWs1QyxFQUFVejBDLE9BQU90QyxTQUFTa2xCLE1BQVEsSUFBTWhxQixHQUdsRSxTQUFTZzhDLEVBQWtCcjNDLFFBQ1gsSUFBVkEsSUFDRkEsRUFBUSxJQUdUc3pDLEdBQW1HLEdBQVUsR0FDOUcsSUFBSVEsRUFBZ0JyeEMsT0FBT214QyxRQUV2QjNHLEdBblVHeHFDLE9BQU91eEMsVUFBVUMsVUFBVXBtQyxRQUFRLFdBbVU3QjdOLEdBQ1RxMEMsRUFBd0JwSCxFQUFPNEYsb0JBQy9CQSxPQUFnRCxJQUExQndCLEVBQW1DZCxFQUFrQmMsRUFDM0VpRCxFQUFrQnJLLEVBQU9zSyxTQUN6QkEsT0FBK0IsSUFBcEJELEVBQTZCLFFBQVVBLEVBQ2xEOUMsRUFBV3gwQyxFQUFNdzBDLFNBQVdsRCxFQUFtQkosRUFBZ0JseEMsRUFBTXcwQyxXQUFhLEdBQ2xGZ0QsRUFBd0JaLEVBQWVXLEdBQ3ZDVCxFQUFhVSxFQUFzQlYsV0FDbkNDLEVBQWFTLEVBQXNCVCxXQUV2QyxTQUFTdEMsSUFDUCxJQUFJcDVDLEVBQU8wN0MsRUFBV0ksS0FHdEIsT0FESTNDLElBQVVuNUMsRUFBTysxQyxFQUFjLzFDLEVBQU1tNUMsSUFDbEMvQyxFQUFlcDJDLEdBR3hCLElBQUl5NUMsRUFBb0J0QyxJQUV4QixTQUFTbEcsRUFBU3VCLEdBQ2hCMEMsRUFBU3FELEVBQVMvRixHQUVsQitGLEVBQVFqK0MsT0FBU20rQyxFQUFjbitDLE9BQy9CbS9DLEVBQWtCNUIsZ0JBQWdCVSxFQUFRenpDLFNBQVV5ekMsRUFBUXRkLFFBRzlELElBQUk2ZSxHQUFlLEVBQ2ZzQyxFQUFhLEtBTWpCLFNBQVN2QyxJQUNQLElBTDRCbHpDLEVBQUdDLEVBSzNCNUcsRUFBTzg3QyxJQUNQTyxFQUFjWixFQUFXejdDLEdBRTdCLEdBQUlBLElBQVNxOEMsRUFFWE4sRUFBZ0JNLE9BQ1gsQ0FDTCxJQUFJdjNDLEVBQVdzMEMsSUFDWGtELEVBQWUvRCxFQUFRenpDLFNBQzNCLElBQUtnMUMsSUFkd0JsekMsRUFjMkI5QixHQWQ5QjZCLEVBY2dCMjFDLEdBYm5DbEgsV0FBYXh1QyxFQUFFd3VDLFVBQVl6dUMsRUFBRTRnQixTQUFXM2dCLEVBQUUyZ0IsUUFBVTVnQixFQUFFd3ZDLE9BQVN2dkMsRUFBRXV2QyxNQWFMLE9BRW5FLEdBQUlpRyxJQUFlbEcsRUFBV3B4QyxHQUFXLE9BRXpDczNDLEVBQWEsS0FLakIsU0FBbUJ0M0MsR0FDakIsR0FBSWcxQyxFQUNGQSxHQUFlLEVBQ2Y3SSxRQUNLLENBRUx3SSxFQUFrQmxDLG9CQUFvQnp5QyxFQUR6QixNQUMyQzB5QyxHQUFxQixTQUFVMU4sR0FDakZBLEVBQ0ZtSCxFQUFTLENBQ1BoVyxPQUpPLE1BS1BuMkIsU0FBVUEsSUFTcEIsU0FBbUJpMUMsR0FDakIsSUFBSUMsRUFBYXpCLEVBQVF6ekMsU0FJckJtMUMsRUFBVXNDLEVBQVNDLFlBQVl0RyxFQUFXOEQsS0FDN0IsSUFBYkMsSUFBZ0JBLEVBQVUsR0FDOUIsSUFBSUUsRUFBWW9DLEVBQVNDLFlBQVl0RyxFQUFXNkQsS0FDN0IsSUFBZkksSUFBa0JBLEVBQVksR0FDbEMsSUFBSUMsRUFBUUgsRUFBVUUsRUFFbEJDLElBQ0ZOLEdBQWUsRUFDZk8sRUFBR0QsSUFuQkNFLENBQVV4MUMsT0FqQmQ4MEMsQ0FBVTkwQyxJQXlDZCxJQUFJOUUsRUFBTzg3QyxJQUNQTyxFQUFjWixFQUFXejdDLEdBQ3pCQSxJQUFTcThDLEdBQWFOLEVBQWdCTSxHQUMxQyxJQUFJOUIsRUFBa0JuQixJQUNsQm1ELEVBQVcsQ0FBQ3JHLEVBQVdxRSxJQXVFM0IsU0FBU0YsRUFBR3Q3QyxHQUVWMDVDLEVBQWM0QixHQUFHdDdDLEdBV25CLElBQUkwN0MsRUFBZ0IsRUFFcEIsU0FBU0MsRUFBa0JOLEdBR0gsS0FGdEJLLEdBQWlCTCxJQUVvQixJQUFWQSxFQUN6Qmh6QyxPQUFPa08saUJBQWlCZ21DLEVBQW1CekIsR0FDaEIsSUFBbEJZLEdBQ1RyekMsT0FBT21PLG9CQUFvQitsQyxFQUFtQnpCLEdBSWxELElBQUljLEdBQVksRUFpQ1pwQyxFQUFVLENBQ1pqK0MsT0FBUW0rQyxFQUFjbitDLE9BQ3RCMmdDLE9BQVEsTUFDUm4yQixTQUFVeTFDLEVBQ1ZDLFdBbklGLFNBQW9CMTFDLEdBQ2xCLElBQUkyM0MsRUFBVWovQyxTQUFTay9DLGNBQWMsUUFDakMxeUIsRUFBTyxHQU1YLE9BSkl5eUIsR0FBV0EsRUFBUUUsYUFBYSxVQUNsQzN5QixFQUFPNnhCLEVBQVV6MEMsT0FBT3RDLFNBQVNrbEIsT0FHNUJBLEVBQU8sSUFBTXl4QixFQUFXdEMsRUFBV2pELEVBQVdweEMsS0E0SHJEekUsS0F6SEYsU0FBY0wsRUFBTSsxQixHQUVsQixJQUFJa0YsRUFBUyxPQUNUbjJCLEVBQVdzeEMsRUFBZXAyQyxPQUFNd3dDLE9BQVdBLEVBQVcrSCxFQUFRenpDLFVBQ2xFMjBDLEVBQWtCbEMsb0JBQW9CenlDLEVBQVVtMkIsRUFBUXVjLEdBQXFCLFNBQVUxTixHQUNyRixHQUFLQSxFQUFMLENBQ0EsSUFBSTlwQyxFQUFPazJDLEVBQVdweEMsR0FDbEJ1M0MsRUFBY1osRUFBV3RDLEVBQVduNUMsR0FHeEMsR0FGa0I4N0MsTUFBa0JPLEVBRW5CLENBSWZELEVBQWFwOEMsRUF4SXJCLFNBQXNCQSxHQUNwQm9ILE9BQU90QyxTQUFTcXhDLEtBQU9uMkMsRUF3SWpCNDhDLENBQWFQLEdBQ2IsSUFBSXhCLEVBQVkwQixFQUFTQyxZQUFZdEcsRUFBV3FDLEVBQVF6ekMsV0FDcEQrM0MsRUFBWU4sRUFBU3Q2QyxNQUFNLEVBQUc0NEMsRUFBWSxHQUM5Q2dDLEVBQVV4OEMsS0FBS0wsR0FDZnU4QyxFQUFXTSxFQUNYNUwsRUFBUyxDQUNQaFcsT0FBUUEsRUFDUm4yQixTQUFVQSxTQUlabXNDLFNBZ0dKdHVDLFFBM0ZGLFNBQWlCM0MsRUFBTSsxQixHQUVyQixJQUFJa0YsRUFBUyxVQUNUbjJCLEVBQVdzeEMsRUFBZXAyQyxPQUFNd3dDLE9BQVdBLEVBQVcrSCxFQUFRenpDLFVBQ2xFMjBDLEVBQWtCbEMsb0JBQW9CenlDLEVBQVVtMkIsRUFBUXVjLEdBQXFCLFNBQVUxTixHQUNyRixHQUFLQSxFQUFMLENBQ0EsSUFBSTlwQyxFQUFPazJDLEVBQVdweEMsR0FDbEJ1M0MsRUFBY1osRUFBV3RDLEVBQVduNUMsR0FDdEI4N0MsTUFBa0JPLElBTWxDRCxFQUFhcDhDLEVBQ2IrN0MsRUFBZ0JNLElBR2xCLElBQUl4QixFQUFZMEIsRUFBUy9wQyxRQUFRMGpDLEVBQVdxQyxFQUFRenpDLFlBQ2pDLElBQWYrMUMsSUFBa0IwQixFQUFTMUIsR0FBYTc2QyxHQUM1Q2l4QyxFQUFTLENBQ1BoVyxPQUFRQSxFQUNSbjJCLFNBQVVBLFNBc0VkdTFDLEdBQUlBLEVBQ0pXLE9BN0RGLFdBQ0VYLEdBQUksSUE2REpZLFVBMURGLFdBQ0VaLEVBQUcsSUEwREhhLE1BekNGLFNBQWU5RCxRQUNFLElBQVhBLElBQ0ZBLEdBQVMsR0FHWCxJQUFJK0QsRUFBVTFCLEVBQWtCcEMsVUFBVUQsR0FPMUMsT0FMS3VELElBQ0hELEVBQWtCLEdBQ2xCQyxHQUFZLEdBR1AsV0FNTCxPQUxJQSxJQUNGQSxHQUFZLEVBQ1pELEdBQW1CLElBR2RTLE1Bd0JUQyxPQXBCRixTQUFnQjN2QixHQUNkLElBQUk0dkIsRUFBVzVCLEVBQWtCaEMsZUFBZWhzQixHQUVoRCxPQURBaXZCLEVBQWtCLEdBQ1gsV0FDTEEsR0FBbUIsR0FDbkJXLE9BaUJKLE9BQU85QyxFQUdULFNBQVN1RSxFQUFNLzlDLEVBQUdnK0MsRUFBWUMsR0FDNUIsT0FBT3BoQyxLQUFLMnNCLElBQUkzc0IsS0FBS3FoQyxJQUFJbCtDLEVBQUdnK0MsR0FBYUMsR0FPM0MsU0FBU0UsRUFBb0J2NEMsUUFDYixJQUFWQSxJQUNGQSxFQUFRLElBR1YsSUFBSWl0QyxFQUFTanRDLEVBQ1Q2eUMsRUFBc0I1RixFQUFPNEYsb0JBQzdCMkYsRUFBd0J2TCxFQUFPd0wsZUFDL0JBLE9BQTJDLElBQTFCRCxFQUFtQyxDQUFDLEtBQU9BLEVBQzVERSxFQUFzQnpMLEVBQU8wTCxhQUM3QkEsT0FBdUMsSUFBeEJELEVBQWlDLEVBQUlBLEVBQ3BEcEUsRUFBbUJySCxFQUFPc0gsVUFDMUJBLE9BQWlDLElBQXJCRCxFQUE4QixFQUFJQSxFQUM5Q1EsRUFBb0J0QyxJQUV4QixTQUFTbEcsRUFBU3VCLEdBQ2hCMEMsRUFBU3FELEVBQVMvRixHQUVsQitGLEVBQVFqK0MsT0FBU2krQyxFQUFRZ0YsUUFBUWpqRCxPQUNqQ20vQyxFQUFrQjVCLGdCQUFnQlUsRUFBUXp6QyxTQUFVeXpDLEVBQVF0ZCxRQUc5RCxTQUFTdWUsSUFDUCxPQUFPNTlCLEtBQUttUSxTQUFTanBCLFNBQVMsSUFBSU4sT0FBTyxFQUFHMDJDLEdBRzlDLElBQUl2M0MsRUFBUW03QyxFQUFNUSxFQUFjLEVBQUdGLEVBQWU5aUQsT0FBUyxHQUN2RGlqRCxFQUFVSCxFQUFldCtDLEtBQUksU0FBVTArQyxHQUN6QyxPQUFtQ3BILEVBQWVvSCxPQUFPaE4sRUFBakMsaUJBQVZnTixFQUFzRGhFLElBQWdEZ0UsRUFBTWhoRCxLQUFPZzlDLFFBRy9IZ0IsRUFBYXRFLEVBeUNqQixTQUFTbUUsRUFBR3Q3QyxHQUNWLElBQUkwK0MsRUFBWVgsRUFBTXZFLEVBQVE1MkMsTUFBUTVDLEVBQUcsRUFBR3c1QyxFQUFRZ0YsUUFBUWpqRCxPQUFTLEdBRWpFd0ssRUFBV3l6QyxFQUFRZ0YsUUFBUUUsR0FDL0JoRSxFQUFrQmxDLG9CQUFvQnp5QyxFQUZ6QixNQUUyQzB5QyxHQUFxQixTQUFVMU4sR0FDakZBLEVBQ0ZtSCxFQUFTLENBQ1BoVyxPQUxPLE1BTVBuMkIsU0FBVUEsRUFDVm5ELE1BQU84N0MsSUFLVHhNLE9BOEJOLElBQUlzSCxFQUFVLENBQ1pqK0MsT0FBUWlqRCxFQUFRampELE9BQ2hCMmdDLE9BQVEsTUFDUm4yQixTQUFVeTRDLEVBQVE1N0MsR0FDbEJBLE1BQU9BLEVBQ1A0N0MsUUFBU0EsRUFDVC9DLFdBQVlBLEVBQ1puNkMsS0ExRkYsU0FBY0wsRUFBTSsxQixHQUVsQixJQUFJa0YsRUFBUyxPQUNUbjJCLEVBQVdzeEMsRUFBZXAyQyxFQUFNKzFCLEVBQU95akIsSUFBYWpCLEVBQVF6ekMsVUFDaEUyMEMsRUFBa0JsQyxvQkFBb0J6eUMsRUFBVW0yQixFQUFRdWMsR0FBcUIsU0FBVTFOLEdBQ3JGLEdBQUtBLEVBQUwsQ0FDQSxJQUNJMlQsRUFEWWxGLEVBQVE1MkMsTUFDSSxFQUN4Qis3QyxFQUFjbkYsRUFBUWdGLFFBQVF0N0MsTUFBTSxHQUVwQ3k3QyxFQUFZcGpELE9BQVNtakQsRUFDdkJDLEVBQVlDLE9BQU9GLEVBQVdDLEVBQVlwakQsT0FBU21qRCxFQUFXMzRDLEdBRTlENDRDLEVBQVlyOUMsS0FBS3lFLEdBR25CbXNDLEVBQVMsQ0FDUGhXLE9BQVFBLEVBQ1JuMkIsU0FBVUEsRUFDVm5ELE1BQU84N0MsRUFDUEYsUUFBU0csU0F1RWIvNkMsUUFsRUYsU0FBaUIzQyxFQUFNKzFCLEdBRXJCLElBQUlrRixFQUFTLFVBQ1RuMkIsRUFBV3N4QyxFQUFlcDJDLEVBQU0rMUIsRUFBT3lqQixJQUFhakIsRUFBUXp6QyxVQUNoRTIwQyxFQUFrQmxDLG9CQUFvQnp5QyxFQUFVbTJCLEVBQVF1YyxHQUFxQixTQUFVMU4sR0FDaEZBLElBQ0x5TyxFQUFRZ0YsUUFBUWhGLEVBQVE1MkMsT0FBU21ELEVBQ2pDbXNDLEVBQVMsQ0FDUGhXLE9BQVFBLEVBQ1JuMkIsU0FBVUEsU0EwRGR1MUMsR0FBSUEsRUFDSlcsT0FuQ0YsV0FDRVgsR0FBSSxJQW1DSlksVUFoQ0YsV0FDRVosRUFBRyxJQWdDSHVELE1BN0JGLFNBQWU3K0MsR0FDYixJQUFJMCtDLEVBQVlsRixFQUFRNTJDLE1BQVE1QyxFQUNoQyxPQUFPMCtDLEdBQWEsR0FBS0EsRUFBWWxGLEVBQVFnRixRQUFRampELFFBNEJyRDRnRCxNQXpCRixTQUFlOUQsR0FLYixZQUplLElBQVhBLElBQ0ZBLEdBQVMsR0FHSnFDLEVBQWtCcEMsVUFBVUQsSUFxQm5DZ0UsT0FsQkYsU0FBZ0IzdkIsR0FDZCxPQUFPZ3VCLEVBQWtCaEMsZUFBZWhzQixLQW1CMUMsT0FBTzhzQixFQzk0QlQsSUFBSXNGLEVBQXdCLFdBQ3hCQyxFQUF1QyxvQkFBZkMsV0FBNkJBLFdBQStCLG9CQUFYMzJDLE9BQXlCQSxZQUEyQixJQUFYLEVBQUFRLEVBQXlCLEVBQUFBLEVBQVMsR0FleEosU0FBU28yQyxFQUFtQnY2QyxHQUMxQixJQUFJdzZDLEVBQVcsR0FDZixNQUFPLENBQ0xDLEdBQUksU0FBWUMsR0FDZEYsRUFBUzU5QyxLQUFLODlDLElBRWhCQyxJQUFLLFNBQWFELEdBQ2hCRixFQUFXQSxFQUFTckcsUUFBTyxTQUFVeHNDLEdBQ25DLE9BQU9BLElBQU0reUMsTUFHakJoeUMsSUFBSyxXQUNILE9BQU8xSSxHQUVUdUgsSUFBSyxTQUFhcXpDLEVBQVVDLEdBQzFCNzZDLEVBQVE0NkMsRUFDUkosRUFBUzkrQyxTQUFRLFNBQVVnL0MsR0FDekIsT0FBT0EsRUFBUTE2QyxFQUFPNjZDLFFBeUk5QixRQUZZLGlCQTdIWixTQUE0QnJ4QyxFQUFjc3hDLEdBQ3hDLElBQUlDLEVBQXVCQyxFQXhDdkJqaUQsRUEwQ0FraUQsRUFBYyw0QkF6Q1haLEVBREh0aEQsRUFBTSx5QkFDb0JzaEQsRUFBZXRoRCxJQUFRLEdBQUssR0F5Q0ksTUFFMUQ0M0MsRUFBd0IsU0FBVXVLLEdBR3BDLFNBQVN2SyxJQUNQLElBQUl4RSxFQUlKLE9BRkFBLEVBQVErTyxFQUFXanBDLE1BQU0zWSxLQUFNckMsWUFBY3FDLE1BQ3ZDNmhELFFBQVVaLEVBQW1CcE8sRUFBTWpyQyxNQUFNbEIsT0FDeENtc0MsRUFQVHFGLEVBQWViLEVBQVV1SyxHQVV6QixJQUFJRSxFQUFTekssRUFBUzc1QyxVQW9DdEIsT0FsQ0Fza0QsRUFBT2p2QixnQkFBa0IsV0FDdkIsSUFBSTBwQixFQUVKLE9BQU9BLEVBQU8sSUFBU29GLEdBQWUzaEQsS0FBSzZoRCxRQUFTdEYsR0FHdER1RixFQUFPM29CLDBCQUE0QixTQUFtQ3FjLEdBQ3BFLEdBQUl4MUMsS0FBSzRILE1BQU1sQixRQUFVOHVDLEVBQVU5dUMsTUFBTyxDQUN4QyxJQUVJNjZDLEVBRkFRLEVBQVcvaEQsS0FBSzRILE1BQU1sQixNQUN0QjQ2QyxFQUFXOUwsRUFBVTl1QyxRQTlEZjJvQixFQWlFRzB5QixNQWpFQXA0QyxFQWlFVTIzQyxHQS9EZCxJQUFOanlCLEdBQVcsRUFBSUEsR0FBTSxFQUFJMWxCLEVBRXpCMGxCLEdBQU1BLEdBQUsxbEIsR0FBTUEsR0E4RGxCNDNDLEVBQWMsR0FFZEEsRUFBOEMsbUJBQXpCQyxFQUFzQ0EsRUFBcUJPLEVBQVVULEdBQVlSLEVBUWxGLElBRnBCUyxHQUFlLElBR2J2aEQsS0FBSzZoRCxRQUFRNXpDLElBQUl1bkMsRUFBVTl1QyxNQUFPNjZDLElBN0U5QyxJQUFrQmx5QixFQUFHMWxCLEdBbUZqQm00QyxFQUFPMWpELE9BQVMsV0FDZCxPQUFPNEIsS0FBSzRILE1BQU1pSixVQUdid21DLEVBL0NtQixDQWdEMUIsRUFBQXJmLFdBRUZxZixFQUFTMzZDLG9CQUFxQitrRCxFQUF3QixJQUEwQkUsR0FBZSxzQkFBNkJGLEdBRTVILElBQUluSyxFQUF3QixTQUFVMEssR0FHcEMsU0FBUzFLLElBQ1AsSUFBSTVELEVBaUJKLE9BZkFBLEVBQVNzTyxFQUFZcnBDLE1BQU0zWSxLQUFNckMsWUFBY3FDLE1BQ3hDZzVCLE1BQVEsQ0FDYnR5QixNQUFPZ3RDLEVBQU9ua0MsWUFHaEJta0MsRUFBT3VPLFNBQVcsU0FBVVgsRUFBVUMsR0FHQyxLQUZJLEVBQXRCN04sRUFBT3BkLGNBRU5pckIsSUFDbEI3TixFQUFPUSxTQUFTLENBQ2R4dEMsTUFBT2d0QyxFQUFPbmtDLGNBS2Jta0MsRUFwQlR3RSxFQUFlWixFQUFVMEssR0F1QnpCLElBQUlFLEVBQVU1SyxFQUFTOTVDLFVBa0N2QixPQWhDQTBrRCxFQUFRL29CLDBCQUE0QixTQUFtQ3FjLEdBQ3JFLElBQUlsZixFQUFla2YsRUFBVWxmLGFBQzdCdDJCLEtBQUtzMkIsYUFBZUEsUUFBc0R3cUIsRUFBd0J4cUIsR0FHcEc0ckIsRUFBUXpvQixrQkFBb0IsV0FDdEJ6NUIsS0FBS3EyQixRQUFRc3JCLElBQ2YzaEQsS0FBS3EyQixRQUFRc3JCLEdBQWFSLEdBQUduaEQsS0FBS2lpRCxVQUdwQyxJQUFJM3JCLEVBQWV0MkIsS0FBSzRILE1BQU0wdUIsYUFDOUJ0MkIsS0FBS3MyQixhQUFlQSxRQUFzRHdxQixFQUF3QnhxQixHQUdwRzRyQixFQUFRdGIscUJBQXVCLFdBQ3pCNW1DLEtBQUtxMkIsUUFBUXNyQixJQUNmM2hELEtBQUtxMkIsUUFBUXNyQixHQUFhTixJQUFJcmhELEtBQUtpaUQsV0FJdkNDLEVBQVEzeUMsU0FBVyxXQUNqQixPQUFJdlAsS0FBS3EyQixRQUFRc3JCLEdBQ1IzaEQsS0FBS3EyQixRQUFRc3JCLEdBQWF2eUMsTUFFMUJjLEdBSVhneUMsRUFBUTlqRCxPQUFTLFdBQ2YsT0FwSGF5UyxFQW9ISTdRLEtBQUs0SCxNQUFNaUosU0FuSHpCM0ssTUFBTW1CLFFBQVF3SixHQUFZQSxFQUFTLEdBQUtBLEdBbUhMN1EsS0FBS2c1QixNQUFNdHlCLE9BcEh2RCxJQUFtQm1LLEdBdUhSeW1DLEVBMURtQixDQTJEMUIsRUFBQXRmLFdBR0YsT0FEQXNmLEVBQVMxNkMsZUFBZ0I4a0QsRUFBd0IsSUFBMEJDLEdBQWUsV0FBa0JELEdBQ3JHLENBQ0xySyxTQUFVQSxFQUNWQyxTQUFVQSxJLHNCQ3pLQyxTQUFTNkssRUFBOEIxL0MsRUFBUTIvQyxHQUM1RCxHQUFjLE1BQVYzL0MsRUFBZ0IsTUFBTyxHQUMzQixJQUVJaEQsRUFBS0QsRUFGTGdELEVBQVMsR0FDVDYvQyxFQUFhOWpELE9BQU9hLEtBQUtxRCxHQUc3QixJQUFLakQsRUFBSSxFQUFHQSxFQUFJNmlELEVBQVc5a0QsT0FBUWlDLElBQ2pDQyxFQUFNNGlELEVBQVc3aUQsR0FDYjRpRCxFQUFTM3NDLFFBQVFoVyxJQUFRLElBQzdCK0MsRUFBTy9DLEdBQU9nRCxFQUFPaEQsSUFHdkIsT0FBTytDLEUsNkJDU0w4L0MsRUFOcUIsU0FBNEJobEQsR0FDbkQsSUFBSSs0QixFQUFVLElBRWQsT0FEQUEsRUFBUXY1QixZQU1TLGlCQUxWdTVCLEVBS1Rrc0IsR0FVSWxzQixFQU51QixTQUE0Qi80QixHQUNyRCxJQUFJKzRCLEVBQVUsSUFFZCxPQURBQSxFQUFRdjVCLFlBTVcsU0FMWnU1QixFQUtUbXNCLEdBTUlDLEVBRUosU0FBVTlQLEdBWVIsU0FBUzhQLEVBQU83NkMsR0FDZCxJQUFJaXJDLEVBMEJKLE9BeEJBQSxFQUFRRixFQUFpQjd2QyxLQUFLOUMsS0FBTTRILElBQVU1SCxNQUN4Q2c1QixNQUFRLENBQ1pqeEIsU0FBVUgsRUFBTTR6QyxRQUFRenpDLFVBTzFCOHFDLEVBQU02UCxZQUFhLEVBQ25CN1AsRUFBTThQLGlCQUFtQixLQUVwQi82QyxFQUFNZzdDLGdCQUNUL1AsRUFBTXlMLFNBQVcxMkMsRUFBTTR6QyxRQUFRNkMsUUFBTyxTQUFVdDJDLEdBQzFDOHFDLEVBQU02UCxXQUNSN1AsRUFBTXFCLFNBQVMsQ0FDYm5zQyxTQUFVQSxJQUdaOHFDLEVBQU04UCxpQkFBbUI1NkMsTUFLeEI4cUMsRUF0Q1RxRixFQUFldUssRUFBUTlQLEdBRXZCOFAsRUFBT0ksaUJBQW1CLFNBQTBCeEssR0FDbEQsTUFBTyxDQUNMcDFDLEtBQU0sSUFDTjBuQixJQUFLLElBQ0xtNEIsT0FBUSxHQUNSQyxRQUFzQixNQUFiMUssSUFrQ2IsSUFBSXlKLEVBQVNXLEVBQU9qbEQsVUE4QnBCLE9BNUJBc2tELEVBQU9yb0Isa0JBQW9CLFdBQ3pCejVCLEtBQUswaUQsWUFBYSxFQUVkMWlELEtBQUsyaUQsa0JBQ1AzaUQsS0FBS2swQyxTQUFTLENBQ1puc0MsU0FBVS9ILEtBQUsyaUQsb0JBS3JCYixFQUFPbGIscUJBQXVCLFdBQ3hCNW1DLEtBQUtzK0MsVUFBVXQrQyxLQUFLcytDLFlBRzFCd0QsRUFBTzFqRCxPQUFTLFdBQ2QsT0FBTyxnQkFBb0JpNEIsRUFBUWdoQixTQUFVLENBQzNDM3dDLE1BQU8sQ0FDTDgwQyxRQUFTeDdDLEtBQUs0SCxNQUFNNHpDLFFBQ3BCenpDLFNBQVUvSCxLQUFLZzVCLE1BQU1qeEIsU0FDckIxRSxNQUFPby9DLEVBQU9JLGlCQUFpQjdpRCxLQUFLZzVCLE1BQU1qeEIsU0FBU3N3QyxVQUNuRHVLLGNBQWU1aUQsS0FBSzRILE1BQU1nN0MsZ0JBRTNCLGdCQUFvQk4sRUFBZWpMLFNBQVUsQ0FDOUN4bUMsU0FBVTdRLEtBQUs0SCxNQUFNaUosVUFBWSxLQUNqQ25LLE1BQU8xRyxLQUFLNEgsTUFBTTR6QyxZQUlmaUgsRUF4RVQsQ0F5RUUsYUFrQkVPLEVBRUosU0FBVXJRLEdBR1IsU0FBU3FRLElBR1AsSUFGQSxJQUFJblEsRUFFS2tJLEVBQU9wOUMsVUFBVUosT0FBUXk5QyxFQUFPLElBQUk5MEMsTUFBTTYwQyxHQUFPRSxFQUFPLEVBQUdBLEVBQU9GLEVBQU1FLElBQy9FRCxFQUFLQyxHQUFRdDlDLFVBQVVzOUMsR0FLekIsT0FGQXBJLEVBQVFGLEVBQWlCN3ZDLEtBQUs2VixNQUFNZzZCLEVBQWtCLENBQUMzeUMsTUFBTVgsT0FBTzI3QyxLQUFVaDdDLE1BQ3hFdzdDLFFBQVUyRSxFQUFvQnROLEVBQU1qckMsT0FDbkNpckMsRUFZVCxPQXZCQXFGLEVBQWU4SyxFQUFjclEsR0FjaEJxUSxFQUFheGxELFVBRW5CWSxPQUFTLFdBQ2QsT0FBTyxnQkFBb0Jxa0QsRUFBUSxDQUNqQ2pILFFBQVN4N0MsS0FBS3c3QyxRQUNkM3FDLFNBQVU3USxLQUFLNEgsTUFBTWlKLFlBSWxCbXlDLEVBeEJULENBeUJFLGFBZ0JFQyxFQUVKLFNBQVV0USxHQUdSLFNBQVNzUSxJQUNQLE9BQU90USxFQUFpQmg2QixNQUFNM1ksS0FBTXJDLFlBQWNxQyxLQUhwRGs0QyxFQUFlK0ssRUFBV3RRLEdBTTFCLElBQUltUCxFQUFTbUIsRUFBVXpsRCxVQWtCdkIsT0FoQkFza0QsRUFBT3JvQixrQkFBb0IsV0FDckJ6NUIsS0FBSzRILE1BQU1zN0MsU0FBU2xqRCxLQUFLNEgsTUFBTXM3QyxRQUFRcGdELEtBQUs5QyxLQUFNQSxPQUd4RDhoRCxFQUFPeGYsbUJBQXFCLFNBQTRCK1MsR0FDbERyMUMsS0FBSzRILE1BQU1xNkMsVUFBVWppRCxLQUFLNEgsTUFBTXE2QyxTQUFTbi9DLEtBQUs5QyxLQUFNQSxLQUFNcTFDLElBR2hFeU0sRUFBT2xiLHFCQUF1QixXQUN4QjVtQyxLQUFLNEgsTUFBTXU3QyxXQUFXbmpELEtBQUs0SCxNQUFNdTdDLFVBQVVyZ0QsS0FBSzlDLEtBQU1BLE9BRzVEOGhELEVBQU8xakQsT0FBUyxXQUNkLE9BQU8sTUFHRjZrRCxFQXpCVCxDQTBCRSxhQU1GLFNBQVNHLEVBQU83RyxHQUNkLElBQUl0WCxFQUFVc1gsRUFBS3RYLFFBQ2ZvZSxFQUFZOUcsRUFBSytHLEtBQ2pCQSxPQUFxQixJQUFkRCxHQUE4QkEsRUFDekMsT0FBTyxnQkFBb0JodEIsRUFBUWloQixTQUFVLE1BQU0sU0FBVWpoQixHQUUzRCxHQURDQSxHQUF1SCxHQUFVLElBQzdIaXRCLEdBQVFqdEIsRUFBUXVzQixjQUFlLE9BQU8sS0FDM0MsSUFBSVcsRUFBU2x0QixFQUFRbWxCLFFBQVEyQyxNQUM3QixPQUFPLGdCQUFvQjhFLEVBQVcsQ0FDcENDLFFBQVMsU0FBaUJwUSxHQUN4QkEsRUFBSzBRLFFBQVVELEVBQU90ZSxJQUV4QmdkLFNBQVUsU0FBa0JuUCxFQUFNdUMsR0FDNUJBLEVBQVVwUSxVQUFZQSxJQUN4QjZOLEVBQUswUSxVQUNMMVEsRUFBSzBRLFFBQVVELEVBQU90ZSxLQUcxQmtlLFVBQVcsU0FBbUJyUSxHQUM1QkEsRUFBSzBRLFdBRVB2ZSxRQUFTQSxPQWFmLElBQUl3ZSxFQUFRLEdBRVJDLEVBQWEsRUFrQmpCLFNBQVNDLEVBQWExZ0QsRUFBTTYvQyxHQVMxQixZQVJhLElBQVQ3L0MsSUFDRkEsRUFBTyxVQUdNLElBQVg2L0MsSUFDRkEsRUFBUyxJQUdLLE1BQVQ3L0MsRUFBZUEsRUF6QnhCLFNBQXFCQSxHQUNuQixHQUFJd2dELEVBQU14Z0QsR0FBTyxPQUFPd2dELEVBQU14Z0QsR0FDOUIsSUFBSTJnRCxFQUFZLFlBQXFCM2dELEdBT3JDLE9BTEl5Z0QsRUFQVyxNQVFiRCxFQUFNeGdELEdBQVEyZ0QsRUFDZEYsS0FHS0UsRUFnQnNCQyxDQUFZNWdELEVBQVo0Z0QsQ0FBa0JmLEVBQVEsQ0FDckR4OEMsUUFBUSxJQVFaLFNBQVN3OUMsRUFBU3ZILEdBQ2hCLElBQUl3SCxFQUFnQnhILEVBQUt3SCxjQUNyQm5oRCxFQUFLMjVDLEVBQUszNUMsR0FDVm9oRCxFQUFZekgsRUFBS2o1QyxLQUNqQkEsT0FBcUIsSUFBZDBnRCxHQUErQkEsRUFDMUMsT0FBTyxnQkFBb0IzdEIsRUFBUWloQixTQUFVLE1BQU0sU0FBVWpoQixHQUMxREEsR0FBeUgsR0FBVSxHQUNwSSxJQUFJbWxCLEVBQVVubEIsRUFBUW1sQixRQUNsQm9ILEVBQWdCdnNCLEVBQVF1c0IsY0FDeEJXLEVBQVNqZ0QsRUFBT2s0QyxFQUFRbDRDLEtBQU9rNEMsRUFBUTUxQyxRQUN2Q21DLEVBQVdzeEMsRUFBZTBLLEVBQThCLGlCQUFQbmhELEVBQWtCK2dELEVBQWEvZ0QsRUFBSW1oRCxFQUFjakIsUUFBVTNLLEVBQVMsR0FBSXYxQyxFQUFJLENBQy9IeTFDLFNBQVVzTCxFQUFhL2dELEVBQUd5MUMsU0FBVTBMLEVBQWNqQixVQUMvQ2xnRCxHQUdMLE9BQUlnZ0QsR0FDRlcsRUFBT3g3QyxHQUNBLE1BR0YsZ0JBQW9CazdDLEVBQVcsQ0FDcENDLFFBQVMsV0FDUEssRUFBT3g3QyxJQUVUazZDLFNBQVUsU0FBa0JuUCxFQUFNdUMsR0FDaEMsSUh0TW1CenJDLEVBQUdDLEVHc01sQjAxQyxFQUFlbEcsRUFBZWhFLEVBQVV6eUMsSUh0TXpCZ0gsRUd3TUkyMUMsRUh4TUQxMUMsRUd3TWVzdUMsRUFBUyxHQUFJcHdDLEVBQVUsQ0FDMUR0SSxJQUFLOC9DLEVBQWE5L0MsTUh4TW5CbUssRUFBRXl1QyxXQUFheHVDLEVBQUV3dUMsVUFBWXp1QyxFQUFFNGdCLFNBQVczZ0IsRUFBRTJnQixRQUFVNWdCLEVBQUV3dkMsT0FBU3Z2QyxFQUFFdXZDLE1BQVF4dkMsRUFBRW5LLE1BQVFvSyxFQUFFcEssS0FBTyxFQUFXbUssRUFBRW92QixNQUFPbnZCLEVBQUVtdkIsUUcwTW5IdXFCLEVBQU94N0MsSUFHWG5GLEdBQUlBLE9BYVYsSUFBSXFoRCxHQUFVLEdBRVZDLEdBQWUsRUF5Qm5CLFNBQVNDLEdBQVU5TCxFQUFVbjFDLFFBQ1gsSUFBWkEsSUFDRkEsRUFBVSxLQUdXLGlCQUFaQSxHQUF3QmdELE1BQU1tQixRQUFRbkUsTUFDL0NBLEVBQVUsQ0FDUkQsS0FBTUMsSUFJVixJQUFJa2hELEVBQVdsaEQsRUFDWEQsRUFBT21oRCxFQUFTbmhELEtBQ2hCb2hELEVBQWlCRCxFQUFTOTZDLE1BQzFCQSxPQUEyQixJQUFuQis2QyxHQUFvQ0EsRUFDNUNDLEVBQWtCRixFQUFTbjlDLE9BQzNCQSxPQUE2QixJQUFwQnE5QyxHQUFxQ0EsRUFDOUNDLEVBQXFCSCxFQUFTcDlDLFVBQzlCQSxPQUFtQyxJQUF2QnU5QyxHQUF3Q0EsRUFFeEQsTUFEWSxHQUFHbGxELE9BQU80RCxHQUNUdWhELFFBQU8sU0FBVUMsRUFBU3hoRCxHQUNyQyxJQUFLQSxHQUFpQixLQUFUQSxFQUFhLE9BQU8sS0FDakMsR0FBSXdoRCxFQUFTLE9BQU9BLEVBRXBCLElBQUlDLEVBL0NSLFNBQXVCemhELEVBQU1DLEdBQzNCLElBQUl5aEQsRUFBVyxHQUFLemhELEVBQVFnRSxJQUFNaEUsRUFBUStELE9BQVMvRCxFQUFROEQsVUFDdkQ0OUMsRUFBWVgsR0FBUVUsS0FBY1YsR0FBUVUsR0FBWSxJQUMxRCxHQUFJQyxFQUFVM2hELEdBQU8sT0FBTzJoRCxFQUFVM2hELEdBQ3RDLElBQUk3RCxFQUFPLEdBRVBxM0MsRUFBUyxDQUNYb08sT0FGVyxJQUFhNWhELEVBQU03RCxFQUFNOEQsR0FHcEM5RCxLQUFNQSxHQVFSLE9BTEk4a0QsR0FkYSxNQWVmVSxFQUFVM2hELEdBQVF3ekMsRUFDbEJ5TixNQUdLek4sRUErQmNxTyxDQUFjN2hELEVBQU0sQ0FDckNpRSxJQUFLb0MsRUFDTHJDLE9BQVFBLEVBQ1JELFVBQVdBLElBRVQ2OUMsRUFBU0gsRUFBYUcsT0FDdEJ6bEQsRUFBT3NsRCxFQUFhdGxELEtBRXBCaUUsRUFBUXdoRCxFQUFPLy9DLEtBQUt1ekMsR0FDeEIsSUFBS2gxQyxFQUFPLE9BQU8sS0FDbkIsSUFBSXNuQixFQUFNdG5CLEVBQU0sR0FDWjBoRCxFQUFTMWhELEVBQU02QixNQUFNLEdBQ3JCNjlDLEVBQVUxSyxJQUFhMXRCLEVBQzNCLE9BQUlyaEIsSUFBVXk1QyxFQUFnQixLQUN2QixDQUNMOS9DLEtBQU1BLEVBRU4wbkIsSUFBYyxNQUFUMW5CLEdBQXdCLEtBQVIwbkIsRUFBYSxJQUFNQSxFQUV4Q280QixRQUFTQSxFQUVURCxPQUFRMWpELEVBQUtvbEQsUUFBTyxTQUFVek0sRUFBTXQ0QyxFQUFLbUYsR0FFdkMsT0FEQW16QyxFQUFLdDRDLEVBQUluQyxNQUFReW5ELEVBQU9uZ0QsR0FDakJtekMsSUFDTixPQUVKLE1BaUJMLElBQUlpTixHQUVKLFNBQVVyUyxHQUdSLFNBQVNxUyxJQUNQLE9BQU9yUyxFQUFpQmg2QixNQUFNM1ksS0FBTXJDLFlBQWNxQyxLQW1DcEQsT0F0Q0FrNEMsRUFBZThNLEVBQU9yUyxHQU1UcVMsRUFBTXhuRCxVQUVaWSxPQUFTLFdBQ2QsSUFBSXkwQyxFQUFRN3lDLEtBRVosT0FBTyxnQkFBb0JxMkIsRUFBUWloQixTQUFVLE1BQU0sU0FBVTJOLEdBQzFEQSxHQUF3SCxHQUFVLEdBQ25JLElBQUlsOUMsRUFBVzhxQyxFQUFNanJDLE1BQU1HLFVBQVlrOUMsRUFBVWw5QyxTQUk3Q0gsRUFBUXV3QyxFQUFTLEdBQUk4TSxFQUFXLENBQ2xDbDlDLFNBQVVBLEVBQ1YxRSxNQUxVd3ZDLEVBQU1qckMsTUFBTW04QyxjQUFnQmxSLEVBQU1qckMsTUFBTW04QyxjQUNsRGxSLEVBQU1qckMsTUFBTTNFLEtBQU9raEQsR0FBVXA4QyxFQUFTc3dDLFNBQVV4RixFQUFNanJDLE9BQVNxOUMsRUFBVTVoRCxRQU92RTZoRCxFQUFjclMsRUFBTWpyQyxNQUNwQmlKLEVBQVdxMEMsRUFBWXIwQyxTQUN2QjVTLEVBQVlpbkQsRUFBWWpuRCxVQUN4QkcsRUFBUzhtRCxFQUFZOW1ELE9BT3pCLE9BSkk4SCxNQUFNbUIsUUFBUXdKLElBQWlDLElBQXBCQSxFQUFTdFQsU0FDdENzVCxFQUFXLE1BR04sZ0JBQW9Cd2xCLEVBQVFnaEIsU0FBVSxDQUMzQzN3QyxNQUFPa0IsR0FDTkEsRUFBTXZFLE1BQVF3TixFQUErQixtQkFBYkEsRUFBdUhBLEVBQVNqSixHQUFTaUosRUFBVzVTLEVBQVksZ0JBQW9CQSxFQUFXMkosR0FBU3hKLEVBQVNBLEVBQU93SixHQUFTLEtBQTJCLG1CQUFiaUosRUFBdUhBLEVBQVNqSixHQUFTLFVBSXhabzlDLEVBdkNULENBd0NFLGFBOEJGLFNBQVMsR0FBZ0IvaEQsR0FDdkIsTUFBMEIsTUFBbkJBLEVBQUswUyxPQUFPLEdBQWExUyxFQUFPLElBQU1BLEVBVS9DLFNBQVMsR0FBY201QyxFQUFVcjBDLEdBQy9CLElBQUtxMEMsRUFBVSxPQUFPcjBDLEVBQ3RCLElBQUlpTyxFQUFPLEdBQWdCb21DLEdBQzNCLE9BQXdDLElBQXBDcjBDLEVBQVNzd0MsU0FBUzVpQyxRQUFRTyxHQUFvQmpPLEVBQzNDb3dDLEVBQVMsR0FBSXB3QyxFQUFVLENBQzVCc3dDLFNBQVV0d0MsRUFBU3N3QyxTQUFTNXlDLE9BQU91USxFQUFLelksVUFJNUMsU0FBUzRuRCxHQUFVcDlDLEdBQ2pCLE1BQTJCLGlCQUFiQSxFQUF3QkEsRUFBV294QyxFQUFXcHhDLEdBRzlELFNBQVNxOUMsR0FBY0MsR0FDckIsT0FBTyxXQUN3RyxHQUFVLElBSTNILFNBQVNDLE1BU1QsSUFBSUMsR0FFSixTQUFVNVMsR0FHUixTQUFTNFMsSUFHUCxJQUZBLElBQUkxUyxFQUVLa0ksRUFBT3A5QyxVQUFVSixPQUFReTlDLEVBQU8sSUFBSTkwQyxNQUFNNjBDLEdBQU9FLEVBQU8sRUFBR0EsRUFBT0YsRUFBTUUsSUFDL0VELEVBQUtDLEdBQVF0OUMsVUFBVXM5QyxHQXFCekIsT0FsQkFwSSxFQUFRRixFQUFpQjd2QyxLQUFLNlYsTUFBTWc2QixFQUFrQixDQUFDM3lDLE1BQU1YLE9BQU8yN0MsS0FBVWg3QyxNQUV4RXdsRCxXQUFhLFNBQVV6OUMsR0FDM0IsT0FBTzhxQyxFQUFNNFMsV0FBVzE5QyxFQUFVLFNBR3BDOHFDLEVBQU02UyxjQUFnQixTQUFVMzlDLEdBQzlCLE9BQU84cUMsRUFBTTRTLFdBQVcxOUMsRUFBVSxZQUdwQzhxQyxFQUFNOFMsYUFBZSxXQUNuQixPQUFPTCxJQUdUelMsRUFBTStTLFlBQWMsV0FDbEIsT0FBT04sSUFHRnpTLEVBM0JUcUYsRUFBZXFOLEVBQWM1UyxHQThCN0IsSUFBSW1QLEVBQVN5RCxFQUFhL25ELFVBMkMxQixPQXpDQXNrRCxFQUFPMkQsV0FBYSxTQUFvQjE5QyxFQUFVbTJCLEdBQ2hELElBQUlnbkIsRUFBY2xsRCxLQUFLNEgsTUFDbkJpK0MsRUFBdUJYLEVBQVk5SSxTQUNuQ0EsT0FBb0MsSUFBekJ5SixFQUFrQyxHQUFLQSxFQUNsREMsRUFBc0JaLEVBQVk3dUIsUUFDbENBLE9BQWtDLElBQXhCeXZCLEVBQWlDLEdBQUtBLEVBQ3BEenZCLEVBQVE2SCxPQUFTQSxFQUNqQjdILEVBQVF0dUIsU0E3RVosU0FBcUJxMEMsRUFBVXIwQyxHQUM3QixPQUFLcTBDLEVBQ0VqRSxFQUFTLEdBQUlwd0MsRUFBVSxDQUM1QnN3QyxTQUFVLEdBQWdCK0QsR0FBWXIwQyxFQUFTc3dDLFdBRjNCdHdDLEVBNEVEZytDLENBQVkzSixFQUFVL0MsRUFBZXR4QyxJQUN4RHN1QixFQUFRMUwsSUFBTXc2QixHQUFVOXVCLEVBQVF0dUIsV0FHbEMrNUMsRUFBTzFqRCxPQUFTLFdBQ2QsSUFBSTRuRCxFQUFlaG1ELEtBQUs0SCxNQUNwQnErQyxFQUF3QkQsRUFBYTVKLFNBQ3JDQSxPQUFxQyxJQUExQjZKLEVBQW1DLEdBQUtBLEVBQ25EQyxFQUF1QkYsRUFBYTN2QixRQUNwQ0EsT0FBbUMsSUFBekI2dkIsRUFBa0MsR0FBS0EsRUFDakRDLEVBQXdCSCxFQUFhaitDLFNBQ3JDQSxPQUFxQyxJQUExQm8rQyxFQUFtQyxJQUFNQSxFQUNwREMsRUFBT2pFLEVBQThCNkQsRUFBYyxDQUFDLFdBQVksVUFBVyxhQUUzRXhLLEVBQVUsQ0FDWmlDLFdBQVksU0FBb0J4NkMsR0FDOUIsT0FBTyxHQUFnQm01QyxFQUFXK0ksR0FBVWxpRCxLQUU5Q2k3QixPQUFRLE1BQ1JuMkIsU0FBVSxHQUFjcTBDLEVBQVUvQyxFQUFldHhDLElBQ2pEekUsS0FBTXRELEtBQUt3bEQsV0FDWDUvQyxRQUFTNUYsS0FBSzBsRCxjQUNkcEksR0FBSThILEtBQ0puSCxPQUFRbUgsS0FDUmxILFVBQVdrSCxLQUNYL0csT0FBUXIrQyxLQUFLMmxELGFBQ2J4SCxNQUFPbitDLEtBQUs0bEQsYUFFZCxPQUFPLGdCQUFvQm5ELEVBQVF0SyxFQUFTLEdBQUlpTyxFQUFNLENBQ3BENUssUUFBU0EsRUFDVG9ILGNBQWV2c0IsTUFJWmt2QixFQTFFVCxDQTJFRSxhQWtCRWMsR0FFSixTQUFVMVQsR0FHUixTQUFTMFQsSUFDUCxPQUFPMVQsRUFBaUJoNkIsTUFBTTNZLEtBQU1yQyxZQUFjcUMsS0FnQ3BELE9BbkNBazRDLEVBQWVtTyxFQUFRMVQsR0FNVjBULEVBQU83b0QsVUFFYlksT0FBUyxXQUNkLElBQUl5MEMsRUFBUTd5QyxLQUVaLE9BQU8sZ0JBQW9CcTJCLEVBQVFpaEIsU0FBVSxNQUFNLFNBQVVqaEIsR0FDMURBLEdBQXVILEdBQVUsR0FDbEksSUFDSXZ0QixFQUFTekYsRUFEVDBFLEVBQVc4cUMsRUFBTWpyQyxNQUFNRyxVQUFZc3VCLEVBQVF0dUIsU0FlL0MsT0FUQSxtQkFBdUI4cUMsRUFBTWpyQyxNQUFNaUosVUFBVSxTQUFVOEksR0FDckQsR0FBYSxNQUFUdFcsR0FBaUIsaUJBQXFCc1csR0FBUSxDQUNoRDdRLEVBQVU2USxFQUNWLElBQUkxVyxFQUFPMFcsRUFBTS9SLE1BQU0zRSxNQUFRMFcsRUFBTS9SLE1BQU1sRixLQUMzQ1csRUFBUUosRUFBT2toRCxHQUFVcDhDLEVBQVNzd0MsU0FBVUYsRUFBUyxHQUFJeCtCLEVBQU0vUixNQUFPLENBQ3BFM0UsS0FBTUEsS0FDRm96QixFQUFRaHpCLFVBR1hBLEVBQVEsZUFBbUJ5RixFQUFTLENBQ3pDZixTQUFVQSxFQUNWZzhDLGNBQWUxZ0QsSUFDWixTQUlGZ2pELEVBcENULENBcUNFLGFBa0JGLFNBQVNDLEdBQVd0dUIsR0FDbEIsSUFBSWw3QixFQUFjLGVBQWlCazdCLEVBQVVsN0IsYUFBZWs3QixFQUFVMTZCLE1BQVEsSUFFMUVzNkIsRUFBSSxTQUFXaHdCLEdBQ2pCLElBQUkyK0MsRUFBc0IzK0MsRUFBTTIrQyxvQkFDNUJDLEVBQWlCckUsRUFBOEJ2NkMsRUFBTyxDQUFDLHdCQUUzRCxPQUFPLGdCQUFvQnl1QixFQUFRaWhCLFNBQVUsTUFBTSxTQUFVamhCLEdBRTNELE9BRENBLEdBQXNJLEdBQVUsR0FDMUksZ0JBQW9CMkIsRUFBV21nQixFQUFTLEdBQUlxTyxFQUFnQm53QixFQUFTLENBQzFFdUQsSUFBSzJzQixTQWNYLE9BVEEzdUIsRUFBRTk2QixZQUFjQSxFQUNoQjg2QixFQUFFNnVCLGlCQUFtQnp1QixFQVFkLElBQWFKLEVBQUdJLEdBR3pCLElBQUl5SSxHQUFhLGFBQ2pCLFNBQVNpbUIsS0FLUCxPQUFPam1CLEdBQVc2aEIsR0FFcEIsU0FBU3FFLEtBS1AsT0FBT2xtQixHQUFXcEssR0FBU3R1QixTQUU3QixTQUFTNitDLEtBS1AsSUFBSXZqRCxFQUFRbzlCLEdBQVdwSyxHQUFTaHpCLE1BQ2hDLE9BQU9BLEVBQVFBLEVBQU15L0MsT0FBUyxHQUVoQyxTQUFTK0QsR0FBYzVqRCxHQUtyQixJQUFJOEUsRUFBVzQrQyxLQUNYdGpELEVBQVFvOUIsR0FBV3BLLEdBQVNoekIsTUFDaEMsT0FBT0osRUFBT2toRCxHQUFVcDhDLEVBQVNzd0MsU0FBVXAxQyxHQUFRSSxFQ3h0QnJELElBQUl5akQsR0FFSixTQUFVblUsR0FHUixTQUFTbVUsSUFHUCxJQUZBLElBQUlqVSxFQUVLa0ksRUFBT3A5QyxVQUFVSixPQUFReTlDLEVBQU8sSUFBSTkwQyxNQUFNNjBDLEdBQU9FLEVBQU8sRUFBR0EsRUFBT0YsRUFBTUUsSUFDL0VELEVBQUtDLEdBQVF0OUMsVUFBVXM5QyxHQUt6QixPQUZBcEksRUFBUUYsRUFBaUI3dkMsS0FBSzZWLE1BQU1nNkIsRUFBa0IsQ0FBQzN5QyxNQUFNWCxPQUFPMjdDLEtBQVVoN0MsTUFDeEV3N0MsUUFBVUMsRUFBcUI1SSxFQUFNanJDLE9BQ3BDaXJDLEVBWVQsT0F2QkFxRixFQUFlNE8sRUFBZW5VLEdBY2pCbVUsRUFBY3RwRCxVQUVwQlksT0FBUyxXQUNkLE9BQU8sZ0JBQW9CcWtELEVBQVEsQ0FDakNqSCxRQUFTeDdDLEtBQUt3N0MsUUFDZDNxQyxTQUFVN1EsS0FBSzRILE1BQU1pSixZQUlsQmkyQyxFQXhCVCxDQXlCRSxhQW9CRUMsR0FFSixTQUFVcFUsR0FHUixTQUFTb1UsSUFHUCxJQUZBLElBQUlsVSxFQUVLa0ksRUFBT3A5QyxVQUFVSixPQUFReTlDLEVBQU8sSUFBSTkwQyxNQUFNNjBDLEdBQU9FLEVBQU8sRUFBR0EsRUFBT0YsRUFBTUUsSUFDL0VELEVBQUtDLEdBQVF0OUMsVUFBVXM5QyxHQUt6QixPQUZBcEksRUFBUUYsRUFBaUI3dkMsS0FBSzZWLE1BQU1nNkIsRUFBa0IsQ0FBQzN5QyxNQUFNWCxPQUFPMjdDLEtBQVVoN0MsTUFDeEV3N0MsUUFBVXlELEVBQWtCcE0sRUFBTWpyQyxPQUNqQ2lyQyxFQVlULE9BdkJBcUYsRUFBZTZPLEVBQVlwVSxHQWNkb1UsRUFBV3ZwRCxVQUVqQlksT0FBUyxXQUNkLE9BQU8sZ0JBQW9CcWtELEVBQVEsQ0FDakNqSCxRQUFTeDdDLEtBQUt3N0MsUUFDZDNxQyxTQUFVN1EsS0FBSzRILE1BQU1pSixZQUlsQmsyQyxFQXhCVCxDQXlCRSxhQWVFQyxHQUFvQixTQUEyQnBrRCxFQUFJMDJDLEdBQ3JELE1BQXFCLG1CQUFQMTJDLEVBQW9CQSxFQUFHMDJDLEdBQW1CMTJDLEdBRXREcWtELEdBQXNCLFNBQTZCcmtELEVBQUkwMkMsR0FDekQsTUFBcUIsaUJBQVAxMkMsRUFBa0J5MkMsRUFBZXoyQyxFQUFJLEtBQU0sS0FBTTAyQyxHQUFtQjEyQyxHQUdoRnNrRCxHQUFpQixTQUF3QnR2QixHQUMzQyxPQUFPQSxHQUdMNmYsR0FBYSxrQkFFUyxJQUFmQSxLQUNUQSxHQUFheVAsSUFPZixJQUFJQyxHQUFhMVAsSUFBVyxTQUFVOEUsRUFBTTZLLEdBQzFDLElBQUlDLEVBQVc5SyxFQUFLOEssU0FDaEJDLEVBQVcvSyxFQUFLK0ssU0FDaEJDLEVBQVdoTCxFQUFLblksUUFDaEJnaUIsRUFBT2pFLEVBQThCNUYsRUFBTSxDQUFDLFdBQVksV0FBWSxZQUVwRS81QyxFQUFTNGpELEVBQUs1akQsT0FFZG9GLEVBQVF1d0MsRUFBUyxHQUFJaU8sRUFBTSxDQUM3QmhpQixRQUFTLFNBQWlCcFosR0FDeEIsSUFDTXU4QixHQUFVQSxFQUFTdjhCLEdBQ3ZCLE1BQU93OEIsR0FFUCxNQURBeDhCLEVBQU1sSyxpQkFDQTBtQyxFQUdIeDhCLEVBQU1ySyxrQkFDTSxJQUFqQnFLLEVBQU1oSSxRQUNMeGdCLEdBQXFCLFVBQVhBLEdBdkJqQixTQUF5QndvQixHQUN2QixTQUFVQSxFQUFNbkksU0FBV21JLEVBQU1wSSxRQUFVb0ksRUFBTXRJLFNBQVdzSSxFQUFNckksVUF1QjdEOGtDLENBQWdCejhCLEtBRWJBLEVBQU1sSyxpQkFDTndtQyxRQWNSLE9BUEUxL0MsRUFBTWd5QixJQURKc3RCLEtBQW1CelAsSUFDVDJQLEdBRUFDLEVBS1AsZ0JBQW9CLElBQUt6L0MsTUFXOUI4L0MsR0FBT2pRLElBQVcsU0FBVWtRLEVBQU9QLEdBQ3JDLElBQUlRLEVBQWtCRCxFQUFNMXBELFVBQ3hCQSxPQUFnQyxJQUFwQjJwRCxFQUE2QlQsR0FBYVMsRUFDdERoaUQsRUFBVStoRCxFQUFNL2hELFFBQ2hCaEQsRUFBSytrRCxFQUFNL2tELEdBQ1h5a0QsRUFBV00sRUFBTU4sU0FDakJqQixFQUFPakUsRUFBOEJ3RixFQUFPLENBQUMsWUFBYSxVQUFXLEtBQU0sYUFFL0UsT0FBTyxnQkFBb0IsV0FBMEIsTUFBTSxTQUFVdHhCLEdBQ2xFQSxHQUFxSCxHQUFVLEdBQ2hJLElBQUltbEIsRUFBVW5sQixFQUFRbWxCLFFBQ2xCenpDLEVBQVdrL0MsR0FBb0JELEdBQWtCcGtELEVBQUl5ekIsRUFBUXR1QixVQUFXc3VCLEVBQVF0dUIsVUFDaEZrbEIsRUFBT2xsQixFQUFXeXpDLEVBQVFpQyxXQUFXMTFDLEdBQVksR0FFakRILEVBQVF1d0MsRUFBUyxHQUFJaU8sRUFBTSxDQUM3Qm41QixLQUFNQSxFQUNOcTZCLFNBQVUsV0FDUixJQUFJdi9DLEVBQVdpL0MsR0FBa0Jwa0QsRUFBSXl6QixFQUFRdHVCLFdBQ2hDbkMsRUFBVTQxQyxFQUFRNTFDLFFBQVU0MUMsRUFBUWw0QyxNQUMxQ3lFLE1BV1gsT0FOSW0vQyxLQUFtQnpQLEdBQ3JCN3ZDLEVBQU1neUIsSUFBTXd0QixHQUFnQkMsRUFFNUJ6L0MsRUFBTXkvQyxTQUFXQSxFQUdaLGdCQUFvQnBwRCxFQUFXMkosU0FtQnRDaWdELEdBQW1CLFNBQXdCandCLEdBQzdDLE9BQU9BLEdBR0xrd0IsR0FBZSxrQkFFUyxJQUFqQkEsS0FDVEEsR0FBZUQsSUFpQmpCLElBQUlFLEdBQVVELElBQWEsU0FBVXZMLEVBQU02SyxHQUN6QyxJQUFJWSxFQUFtQnpMLEVBQUssZ0JBQ3hCMEwsT0FBbUMsSUFBckJELEVBQThCLE9BQVNBLEVBQ3JERSxFQUF1QjNMLEVBQUs0TCxnQkFDNUJBLE9BQTJDLElBQXpCRCxFQUFrQyxTQUFXQSxFQUMvREUsRUFBYzdMLEVBQUs2TCxZQUNuQkMsRUFBZ0I5TCxFQUFLK0wsVUFDckJoL0MsRUFBUWl6QyxFQUFLanpDLE1BQ2JpL0MsRUFBZWhNLEVBQUszQixTQUNwQjROLEVBQWVqTSxFQUFLeDBDLFNBQ3BCZixFQUFZdTFDLEVBQUt2MUMsVUFDakJDLEVBQVNzMUMsRUFBS3QxQyxPQUNkd2hELEVBQVlsTSxFQUFLL21DLE1BQ2pCNVMsRUFBSzI1QyxFQUFLMzVDLEdBQ1Z5a0QsRUFBVzlLLEVBQUs4SyxTQUNoQmpCLEVBQU9qRSxFQUE4QjVGLEVBQU0sQ0FBQyxlQUFnQixrQkFBbUIsY0FBZSxZQUFhLFFBQVMsV0FBWSxXQUFZLFlBQWEsU0FBVSxRQUFTLEtBQU0sYUFFdEwsT0FBTyxnQkFBb0IsV0FBMEIsTUFBTSxTQUFVbG1CLEdBQ2xFQSxHQUF3SCxHQUFVLEdBQ25JLElBQUlpakIsRUFBa0JrUCxHQUFnQm55QixFQUFRdHVCLFNBQzFDazFDLEVBQWFnSyxHQUFvQkQsR0FBa0Jwa0QsRUFBSTAyQyxHQUFrQkEsR0FDekVyMkMsRUFBT2c2QyxFQUFXNUUsU0FFbEJxUSxFQUFjemxELEdBQVFBLEVBQUsyQyxRQUFRLDRCQUE2QixRQUNoRXZDLEVBQVFxbEQsRUFBY3ZFLEdBQVU3SyxFQUFnQmpCLFNBQVUsQ0FDNURwMUMsS0FBTXlsRCxFQUNOcC9DLE1BQU9BLEVBQ1B0QyxVQUFXQSxFQUNYQyxPQUFRQSxJQUNMLEtBQ0QyekMsS0FBYzJOLEVBQWVBLEVBQWFsbEQsRUFBT2kyQyxHQUFtQmoyQyxHQUNwRWlsRCxFQUFZMU4sRUE3Q3BCLFdBQ0UsSUFBSyxJQUFJRyxFQUFPcDlDLFVBQVVKLE9BQVFvckQsRUFBYSxJQUFJemlELE1BQU02MEMsR0FBT0UsRUFBTyxFQUFHQSxFQUFPRixFQUFNRSxJQUNyRjBOLEVBQVcxTixHQUFRdDlDLFVBQVVzOUMsR0FHL0IsT0FBTzBOLEVBQVc5TixRQUFPLFNBQVVyN0MsR0FDakMsT0FBT0EsS0FDTnlDLEtBQUssS0FzQ3FCMm1ELENBQWVQLEVBQWVGLEdBQW1CRSxFQUN4RTd5QyxFQUFRb2xDLEVBQVd6QyxFQUFTLEdBQUlzUSxFQUFXLEdBQUlMLEdBQWVLLEVBRTlEN2dELEVBQVF1d0MsRUFBUyxDQUNuQixlQUFnQnlDLEdBQVlxTixHQUFlLEtBQzNDSyxVQUFXQSxFQUNYOXlDLE1BQU9BLEVBQ1A1UyxHQUFJcTZDLEdBQ0htSixHQVNILE9BTkl5QixLQUFxQkMsR0FDdkJsZ0QsRUFBTWd5QixJQUFNd3RCLEdBQWdCQyxFQUU1QnovQyxFQUFNeS9DLFNBQVdBLEVBR1osZ0JBQW9CSyxHQUFNOS9DLFUsMkJDOVJ4QixJQUFJOFEsRUFBRSxFQUFRLEtBQWlCMVcsRUFBRSxNQUFNMjFCLEVBQUUsTUFBTTc0QixFQUFRNHhDLFNBQVMsTUFBTTV4QyxFQUFRZ3lDLFdBQVcsTUFBTWh5QyxFQUFRK3hDLFNBQVMsTUFBTSxJQUFJcGhCLEVBQUUsTUFBTS9sQixFQUFFLE1BQU1nbUIsRUFBRSxNQUFNNXdCLEVBQVFpeUMsU0FBUyxNQUFNLElBQUl2aEIsRUFBRSxNQUFNRyxFQUFFLE1BQ3BNLEdBQUcsbUJBQW9CdmlCLFFBQVFBLE9BQU9DLElBQUksQ0FBQyxJQUFJaWlCLEVBQUVsaUIsT0FBT0MsSUFBSXJMLEVBQUVzdEIsRUFBRSxpQkFBaUJxSSxFQUFFckksRUFBRSxnQkFBZ0J4d0IsRUFBUTR4QyxTQUFTcGhCLEVBQUUsa0JBQWtCeHdCLEVBQVFneUMsV0FBV3hoQixFQUFFLHFCQUFxQnh3QixFQUFRK3hDLFNBQVN2aEIsRUFBRSxrQkFBa0JHLEVBQUVILEVBQUUsa0JBQWtCNWxCLEVBQUU0bEIsRUFBRSxpQkFBaUJJLEVBQUVKLEVBQUUscUJBQXFCeHdCLEVBQVFpeUMsU0FBU3poQixFQUFFLGtCQUFrQkUsRUFBRUYsRUFBRSxjQUFjSyxFQUFFTCxFQUFFLGNBQWMsSUFBSUQsRUFBRSxtQkFBb0JqaUIsUUFBUUEsT0FBT0ssU0FDdFIsU0FBUzhoQixFQUFFM2xCLEdBQUcsSUFBSSxJQUFJQyxFQUFFLHlEQUF5REQsRUFBRS9ELEVBQUUsRUFBRUEsRUFBRWxJLFVBQVVKLE9BQU9zSSxJQUFJZ0UsR0FBRyxXQUFXdEQsbUJBQW1CNUksVUFBVWtJLElBQUksTUFBTSx5QkFBeUIrRCxFQUFFLFdBQVdDLEVBQUUsaUhBQ3BVLElBQUk2dEIsRUFBRSxDQUFDVSxVQUFVLFdBQVcsT0FBTSxHQUFJTyxtQkFBbUIsYUFBYUQsb0JBQW9CLGFBQWFKLGdCQUFnQixjQUFjNXRCLEVBQUUsR0FBRyxTQUFTa3RCLEVBQUVodUIsRUFBRUMsRUFBRWhFLEdBQUc3RixLQUFLNEgsTUFBTWdDLEVBQUU1SixLQUFLcTJCLFFBQVF4c0IsRUFBRTdKLEtBQUtpNEIsS0FBS3Z0QixFQUFFMUssS0FBS2k1QixRQUFRcHpCLEdBQUc2eEIsRUFDcE4sU0FBU3JzQixLQUE2QixTQUFTaUMsRUFBRTFELEVBQUVDLEVBQUVoRSxHQUFHN0YsS0FBSzRILE1BQU1nQyxFQUFFNUosS0FBS3EyQixRQUFReHNCLEVBQUU3SixLQUFLaTRCLEtBQUt2dEIsRUFBRTFLLEtBQUtpNUIsUUFBUXB6QixHQUFHNnhCLEVBRHNHRSxFQUFFcDZCLFVBQVUrdUMsaUJBQWlCLEdBQUczVSxFQUFFcDZCLFVBQVUwMkMsU0FBUyxTQUFTdHFDLEVBQUVDLEdBQUcsR0FBRyxpQkFBa0JELEdBQUcsbUJBQW9CQSxHQUFHLE1BQU1BLEVBQUUsTUFBTTFKLE1BQU1xdkIsRUFBRSxLQUFLdnZCLEtBQUtpNUIsUUFBUVgsZ0JBQWdCdDRCLEtBQUs0SixFQUFFQyxFQUFFLGFBQWErdEIsRUFBRXA2QixVQUFVODNDLFlBQVksU0FBUzFyQyxHQUFHNUosS0FBS2k1QixRQUFRTixtQkFBbUIzNEIsS0FBSzRKLEVBQUUsZ0JBQ25keUIsRUFBRTdOLFVBQVVvNkIsRUFBRXA2QixVQUFzRixJQUFJcWdCLEVBQUV2USxFQUFFOVAsVUFBVSxJQUFJNk4sRUFBRXdTLEVBQUUxTyxZQUFZN0IsRUFBRW9MLEVBQUVtRixFQUFFK1osRUFBRXA2QixXQUFXcWdCLEVBQUVpYixzQkFBcUIsRUFBRyxJQUFJbkssRUFBRSxDQUFDOVUsUUFBUSxNQUFNbVksRUFBRXp6QixPQUFPZixVQUFVNEQsZUFBZTZ3QixFQUFFLENBQUN4eUIsS0FBSSxFQUFHbTZCLEtBQUksRUFBRzBjLFFBQU8sRUFBR0MsVUFBUyxHQUNoUyxTQUFTdG1CLEVBQUVybUIsRUFBRUMsRUFBRWhFLEdBQUcsSUFBSWxHLEVBQUVnTCxFQUFFLEdBQUd5RCxFQUFFLEtBQUtDLEVBQUUsS0FBSyxHQUFHLE1BQU14RSxFQUFFLElBQUlsSyxVQUFLLElBQVNrSyxFQUFFK3ZCLE1BQU12ckIsRUFBRXhFLEVBQUUrdkIsVUFBSyxJQUFTL3ZCLEVBQUVwSyxNQUFNMk8sRUFBRSxHQUFHdkUsRUFBRXBLLEtBQUtvSyxFQUFFbW9CLEVBQUVsdkIsS0FBSytHLEVBQUVsSyxLQUFLc3lCLEVBQUU3d0IsZUFBZXpCLEtBQUtnTCxFQUFFaEwsR0FBR2tLLEVBQUVsSyxJQUFJLElBQUlrTCxFQUFFbE4sVUFBVUosT0FBTyxFQUFFLEdBQUcsSUFBSXNOLEVBQUVGLEVBQUVrRyxTQUFTaEwsT0FBTyxHQUFHLEVBQUVnRixFQUFFLENBQUMsSUFBSSxJQUFJRCxFQUFFMUUsTUFBTTJFLEdBQUc5RixFQUFFLEVBQUVBLEVBQUU4RixFQUFFOUYsSUFBSTZGLEVBQUU3RixHQUFHcEgsVUFBVW9ILEVBQUUsR0FBRzRGLEVBQUVrRyxTQUFTakcsRUFBRSxHQUFHaEIsR0FBR0EsRUFBRS9NLGFBQWEsSUFBSThDLEtBQUtrTCxFQUFFakIsRUFBRS9NLGtCQUFlLElBQVM4TixFQUFFaEwsS0FBS2dMLEVBQUVoTCxHQUFHa0wsRUFBRWxMLElBQUksTUFBTSxDQUFDK08sU0FBUzFNLEVBQUU1RSxLQUFLd00sRUFBRW5LLElBQUkyTyxFQUFFd3JCLElBQUl2ckIsRUFBRXpHLE1BQU0rQyxFQUFFa3ZCLE9BQU9sTCxFQUFFOVUsU0FDeFUsU0FBU3VXLEVBQUV4bUIsR0FBRyxNQUFNLGlCQUFrQkEsR0FBRyxPQUFPQSxHQUFHQSxFQUFFOEUsV0FBVzFNLEVBQXFHLElBQUltd0IsRUFBRSxPQUFPLFNBQVNDLEVBQUV4b0IsRUFBRUMsR0FBRyxNQUFNLGlCQUFrQkQsR0FBRyxPQUFPQSxHQUFHLE1BQU1BLEVBQUVuSyxJQUE3SyxTQUFnQm1LLEdBQUcsSUFBSUMsRUFBRSxDQUFDLElBQUksS0FBSyxJQUFJLE1BQU0sTUFBTSxJQUFJRCxFQUFFaEUsUUFBUSxTQUFRLFNBQVNnRSxHQUFHLE9BQU9DLEVBQUVELE1BQW1GZ3RDLENBQU8sR0FBR2h0QyxFQUFFbkssS0FBS29LLEVBQUU5RCxTQUFTLElBQzVXLFNBQVM2dUIsRUFBRWhyQixFQUFFQyxFQUFFaEUsRUFBRWxHLEVBQUVnTCxHQUFHLElBQUl5RCxTQUFTeEUsRUFBSyxjQUFjd0UsR0FBRyxZQUFZQSxJQUFFeEUsRUFBRSxNQUFLLElBQUl5RSxHQUFFLEVBQUcsR0FBRyxPQUFPekUsRUFBRXlFLEdBQUUsT0FBUSxPQUFPRCxHQUFHLElBQUssU0FBUyxJQUFLLFNBQVNDLEdBQUUsRUFBRyxNQUFNLElBQUssU0FBUyxPQUFPekUsRUFBRThFLFVBQVUsS0FBSzFNLEVBQUUsS0FBSzIxQixFQUFFdHBCLEdBQUUsR0FBSSxHQUFHQSxFQUFFLE9BQVcxRCxFQUFFQSxFQUFOMEQsRUFBRXpFLEdBQVNBLEVBQUUsS0FBS2pLLEVBQUUsSUFBSXl5QixFQUFFL2pCLEVBQUUsR0FBRzFPLEVBQUV1RyxNQUFNbUIsUUFBUXNELElBQUk5RSxFQUFFLEdBQUcsTUFBTStELElBQUkvRCxFQUFFK0QsRUFBRWhFLFFBQVF1c0IsRUFBRSxPQUFPLEtBQUt5QyxFQUFFanFCLEVBQUVkLEVBQUVoRSxFQUFFLElBQUcsU0FBUytELEdBQUcsT0FBT0EsTUFBSyxNQUFNZSxJQUFJeWxCLEVBQUV6bEIsS0FBS0EsRUFEL1csU0FBV2YsRUFBRUMsR0FBRyxNQUFNLENBQUM2RSxTQUFTMU0sRUFBRTVFLEtBQUt3TSxFQUFFeE0sS0FBS3FDLElBQUlvSyxFQUFFK3ZCLElBQUlod0IsRUFBRWd3QixJQUFJaHlCLE1BQU1nQyxFQUFFaEMsTUFBTWl5QixPQUFPandCLEVBQUVpd0IsUUFDNFIzSixDQUFFdmxCLEVBQUU5RSxJQUFJOEUsRUFBRWxMLEtBQUs0TyxHQUFHQSxFQUFFNU8sTUFBTWtMLEVBQUVsTCxJQUFJLElBQUksR0FBR2tMLEVBQUVsTCxLQUFLbUcsUUFBUXVzQixFQUFFLE9BQU8sS0FBS3ZvQixJQUFJQyxFQUFFdkcsS0FBS3FILElBQUksRUFBeUIsR0FBdkIwRCxFQUFFLEVBQUUxTyxFQUFFLEtBQUtBLEVBQUUsSUFBSUEsRUFBRSxJQUFPdUcsTUFBTW1CLFFBQVF1QyxHQUFHLElBQUksSUFBSWlCLEVBQ3pmLEVBQUVBLEVBQUVqQixFQUFFck0sT0FBT3NOLElBQUksQ0FBUSxJQUFJRCxFQUFFakwsRUFBRXl5QixFQUFmaGtCLEVBQUV4RSxFQUFFaUIsR0FBZUEsR0FBR3dELEdBQUd1bUIsRUFBRXhtQixFQUFFdkUsRUFBRWhFLEVBQUUrRSxFQUFFRCxRQUFRLEdBQVUsbUJBQVBDLEVBTmhFLFNBQVdoQixHQUFHLE9BQUcsT0FBT0EsR0FBRyxpQkFBa0JBLEVBQVMsS0FBc0MsbUJBQWpDQSxFQUFFeWxCLEdBQUd6bEIsRUFBRXlsQixJQUFJemxCLEVBQUUsZUFBMENBLEVBQUUsS0FNbERELENBQUVDLElBQXlCLElBQUlBLEVBQUVnQixFQUFFOUgsS0FBSzhHLEdBQUdpQixFQUFFLElBQUl1RCxFQUFFeEUsRUFBRXpFLFFBQVF3MUIsTUFBNkJ0c0IsR0FBR3VtQixFQUExQnhtQixFQUFFQSxFQUFFMUgsTUFBMEJtRCxFQUFFaEUsRUFBdEIrRSxFQUFFakwsRUFBRXl5QixFQUFFaGtCLEVBQUV2RCxLQUFrQkYsUUFBUSxHQUFHLFdBQVd5RCxFQUFFLE1BQU12RSxFQUFFLEdBQUdELEVBQUUxSixNQUFNcXZCLEVBQUUsR0FBRyxvQkFBb0IxbEIsRUFBRSxxQkFBcUJ0TCxPQUFPYSxLQUFLd0ssR0FBRzNILEtBQUssTUFBTSxJQUFJNEgsSUFBSSxPQUFPd0UsRUFBRSxTQUFTb3RCLEVBQUU3eEIsRUFBRUMsRUFBRWhFLEdBQUcsR0FBRyxNQUFNK0QsRUFBRSxPQUFPQSxFQUFFLElBQUlqSyxFQUFFLEdBQUdnTCxFQUFFLEVBQW1ELE9BQWpEaXFCLEVBQUVockIsRUFBRWpLLEVBQUUsR0FBRyxJQUFHLFNBQVNpSyxHQUFHLE9BQU9DLEVBQUUvRyxLQUFLK0MsRUFBRStELEVBQUVlLFFBQWNoTCxFQUMxWixTQUFTd3dCLEVBQUV2bUIsR0FBRyxJQUFJLElBQUlBLEVBQUVpdUMsUUFBUSxDQUFDLElBQUlodUMsRUFBRUQsRUFBRWt1QyxRQUFRanVDLEVBQUVBLElBQUlELEVBQUVpdUMsUUFBUSxFQUFFanVDLEVBQUVrdUMsUUFBUWp1QyxFQUFFQSxFQUFFNDlCLE1BQUssU0FBUzU5QixHQUFHLElBQUlELEVBQUVpdUMsVUFBVWh1QyxFQUFFQSxFQUFFNG9DLFFBQVE3b0MsRUFBRWl1QyxRQUFRLEVBQUVqdUMsRUFBRWt1QyxRQUFRanVDLE1BQUksU0FBU0EsR0FBRyxJQUFJRCxFQUFFaXVDLFVBQVVqdUMsRUFBRWl1QyxRQUFRLEVBQUVqdUMsRUFBRWt1QyxRQUFRanVDLE1BQUssR0FBRyxJQUFJRCxFQUFFaXVDLFFBQVEsT0FBT2p1QyxFQUFFa3VDLFFBQVEsTUFBTWx1QyxFQUFFa3VDLFFBQVMsSUFBSS9hLEVBQUUsQ0FBQ2xqQixRQUFRLE1BQU0sU0FBU21qQixJQUFJLElBQUlwekIsRUFBRW16QixFQUFFbGpCLFFBQVEsR0FBRyxPQUFPalEsRUFBRSxNQUFNMUosTUFBTXF2QixFQUFFLE1BQU0sT0FBTzNsQixFQUFFLElBQUlxekIsRUFBRSxDQUFDTCx1QkFBdUJHLEVBQUUzSCx3QkFBd0IsQ0FBQ2xZLFdBQVcsR0FBR3FrQixrQkFBa0I1UyxFQUFFbW9CLHFCQUFxQixDQUFDajlCLFNBQVEsR0FBSW5ZLE9BQU9nWCxHQUNqZTVaLEVBQVFnUyxTQUFTLENBQUMvTyxJQUFJMDVCLEVBQUVyNUIsUUFBUSxTQUFTd0gsRUFBRUMsRUFBRWhFLEdBQUc0MUIsRUFBRTd4QixHQUFFLFdBQVdDLEVBQUU4TyxNQUFNM1ksS0FBS3JDLGFBQVlrSSxJQUFJOHdDLE1BQU0sU0FBUy9zQyxHQUFHLElBQUlDLEVBQUUsRUFBdUIsT0FBckI0eEIsRUFBRTd4QixHQUFFLFdBQVdDLE9BQWFBLEdBQUdrdEMsUUFBUSxTQUFTbnRDLEdBQUcsT0FBTzZ4QixFQUFFN3hCLEdBQUUsU0FBU0EsR0FBRyxPQUFPQSxNQUFLLElBQUkwcUMsS0FBSyxTQUFTMXFDLEdBQUcsSUFBSXdtQixFQUFFeG1CLEdBQUcsTUFBTTFKLE1BQU1xdkIsRUFBRSxNQUFNLE9BQU8zbEIsSUFBSTlLLEVBQVFrNUIsVUFBVUosRUFBRTk0QixFQUFRazRDLGNBQWMxcEMsRUFBRXhPLEVBQVFvTixtREFBbUQrd0IsRUFDaFhuK0IsRUFBUW00QyxhQUFhLFNBQVNydEMsRUFBRUMsRUFBRWhFLEdBQUcsR0FBRyxNQUFPK0QsRUFBYyxNQUFNMUosTUFBTXF2QixFQUFFLElBQUkzbEIsSUFBSSxJQUFJakssRUFBRStZLEVBQUUsR0FBRzlPLEVBQUVoQyxPQUFPK0MsRUFBRWYsRUFBRW5LLElBQUkyTyxFQUFFeEUsRUFBRWd3QixJQUFJdnJCLEVBQUV6RSxFQUFFaXdCLE9BQU8sR0FBRyxNQUFNaHdCLEVBQUUsQ0FBb0UsUUFBbkUsSUFBU0EsRUFBRSt2QixNQUFNeHJCLEVBQUV2RSxFQUFFK3ZCLElBQUl2ckIsRUFBRXNnQixFQUFFOVUsY0FBUyxJQUFTaFEsRUFBRXBLLE1BQU1rTCxFQUFFLEdBQUdkLEVBQUVwSyxLQUFRbUssRUFBRXhNLE1BQU13TSxFQUFFeE0sS0FBS1AsYUFBYSxJQUFJZ08sRUFBRWpCLEVBQUV4TSxLQUFLUCxhQUFhLElBQUkrTixLQUFLZixFQUFFbW9CLEVBQUVsdkIsS0FBSytHLEVBQUVlLEtBQUtxbkIsRUFBRTd3QixlQUFld0osS0FBS2pMLEVBQUVpTCxRQUFHLElBQVNmLEVBQUVlLFNBQUksSUFBU0MsRUFBRUEsRUFBRUQsR0FBR2YsRUFBRWUsSUFBSSxJQUFJQSxFQUFFak4sVUFBVUosT0FBTyxFQUFFLEdBQUcsSUFBSXFOLEVBQUVqTCxFQUFFa1IsU0FBU2hMLE9BQU8sR0FBRyxFQUFFK0UsRUFBRSxDQUFDQyxFQUFFM0UsTUFBTTBFLEdBQUcsSUFBSSxJQUFJN0YsRUFBRSxFQUFFQSxFQUFFNkYsRUFBRTdGLElBQUk4RixFQUFFOUYsR0FBR3BILFVBQVVvSCxFQUFFLEdBQUdwRixFQUFFa1IsU0FBU2hHLEVBQUUsTUFBTSxDQUFDNkQsU0FBUzFNLEVBQUU1RSxLQUFLd00sRUFBRXhNLEtBQ3hmcUMsSUFBSWtMLEVBQUVpdkIsSUFBSXhyQixFQUFFeEcsTUFBTWpJLEVBQUVrNkIsT0FBT3hyQixJQUFJdlAsRUFBUW80QyxjQUFjLFNBQVN0dEMsRUFBRUMsR0FBOEssWUFBM0ssSUFBU0EsSUFBSUEsRUFBRSxPQUFNRCxFQUFFLENBQUM4RSxTQUFTaEYsRUFBRWdrQyxzQkFBc0I3akMsRUFBRStyQixjQUFjaHNCLEVBQUV1dEMsZUFBZXZ0QyxFQUFFd3RDLGFBQWEsRUFBRUMsU0FBUyxLQUFLQyxTQUFTLE9BQVFELFNBQVMsQ0FBQzNvQyxTQUFTK2dCLEVBQUU5Z0IsU0FBUy9FLEdBQVVBLEVBQUUwdEMsU0FBUzF0QyxHQUFHOUssRUFBUTZCLGNBQWNzdkIsRUFBRW54QixFQUFReTRDLGNBQWMsU0FBUzN0QyxHQUFHLElBQUlDLEVBQUVvbUIsRUFBRXZRLEtBQUssS0FBSzlWLEdBQVksT0FBVEMsRUFBRXpNLEtBQUt3TSxFQUFTQyxHQUFHL0ssRUFBUTA0QyxVQUFVLFdBQVcsTUFBTSxDQUFDMzlCLFFBQVEsT0FBTy9hLEVBQVEyNEMsV0FBVyxTQUFTN3RDLEdBQUcsTUFBTSxDQUFDOEUsU0FBU2doQixFQUFFdHhCLE9BQU93TCxJQUFJOUssRUFBUTQ0QyxlQUFldG5CLEVBQzNldHhCLEVBQVE2NEMsS0FBSyxTQUFTL3RDLEdBQUcsTUFBTSxDQUFDOEUsU0FBU2loQixFQUFFL2dCLFNBQVMsQ0FBQ2lwQyxTQUFTLEVBQUVDLFFBQVFsdUMsR0FBR2lGLE1BQU1zaEIsSUFBSXJ4QixFQUFRaTVDLEtBQUssU0FBU251QyxFQUFFQyxHQUFHLE1BQU0sQ0FBQzZFLFNBQVM4Z0IsRUFBRXB5QixLQUFLd00sRUFBRTlMLGFBQVEsSUFBUytMLEVBQUUsS0FBS0EsSUFBSS9LLEVBQVEwaEMsWUFBWSxTQUFTNTJCLEVBQUVDLEdBQUcsT0FBT216QixJQUFJd0QsWUFBWTUyQixFQUFFQyxJQUFJL0ssRUFBUTJoQyxXQUFXLFNBQVM3MkIsRUFBRUMsR0FBRyxPQUFPbXpCLElBQUl5RCxXQUFXNzJCLEVBQUVDLElBQUkvSyxFQUFRaWlDLGNBQWMsYUFBYWppQyxFQUFRbWdDLFVBQVUsU0FBU3IxQixFQUFFQyxHQUFHLE9BQU9tekIsSUFBSWlDLFVBQVVyMUIsRUFBRUMsSUFBSS9LLEVBQVE0aEMsb0JBQW9CLFNBQVM5MkIsRUFBRUMsRUFBRWhFLEdBQUcsT0FBT20zQixJQUFJMEQsb0JBQW9COTJCLEVBQUVDLEVBQUVoRSxJQUM5Yy9HLEVBQVE2aEMsZ0JBQWdCLFNBQVMvMkIsRUFBRUMsR0FBRyxPQUFPbXpCLElBQUkyRCxnQkFBZ0IvMkIsRUFBRUMsSUFBSS9LLEVBQVE4aEMsUUFBUSxTQUFTaDNCLEVBQUVDLEdBQUcsT0FBT216QixJQUFJNEQsUUFBUWgzQixFQUFFQyxJQUFJL0ssRUFBUStoQyxXQUFXLFNBQVNqM0IsRUFBRUMsRUFBRWhFLEdBQUcsT0FBT20zQixJQUFJNkQsV0FBV2ozQixFQUFFQyxFQUFFaEUsSUFBSS9HLEVBQVFnaUMsT0FBTyxTQUFTbDNCLEdBQUcsT0FBT296QixJQUFJOEQsT0FBT2wzQixJQUFJOUssRUFBUWdnQyxTQUFTLFNBQVNsMUIsR0FBRyxPQUFPb3pCLElBQUk4QixTQUFTbDFCLElBQUk5SyxFQUFRdXZDLFFBQVEsVSwyQkNuQm5UeHZDLEVBQU9DLFFBQVUsRUFBakIsTSx3QkNLVyxJQUFJOEwsRUFBRUMsRUFBRXdELEVBQUVELEVBQUUsR0FBRyxpQkFBa0J5NkMsYUFBYSxtQkFBb0JBLFlBQVlqbkMsSUFBSSxDQUFDLElBQUlsSixFQUFFbXdDLFlBQVkvcEQsRUFBUThlLGFBQWEsV0FBVyxPQUFPbEYsRUFBRWtKLFdBQVcsQ0FBQyxJQUFJK1YsRUFBRWhXLEtBQUs4TixFQUFFa0ksRUFBRS9WLE1BQU05aUIsRUFBUThlLGFBQWEsV0FBVyxPQUFPK1osRUFBRS9WLE1BQU02TixHQUMzTyxHQUFHLG9CQUFxQnBsQixRQUFRLG1CQUFvQnkrQyxlQUFlLENBQUMsSUFBSXA1QixFQUFFLEtBQUtGLEVBQUUsS0FBS0YsRUFBRSxXQUFXLEdBQUcsT0FBT0ksRUFBRSxJQUFJLElBQUk5bEIsRUFBRTlLLEVBQVE4ZSxlQUFlOFIsR0FBRSxFQUFHOWxCLEdBQUc4bEIsRUFBRSxLQUFLLE1BQU03bEIsR0FBRyxNQUFNb25CLFdBQVczQixFQUFFLEdBQUd6bEIsSUFBS2UsRUFBRSxTQUFTaEIsR0FBRyxPQUFPOGxCLEVBQUV1QixXQUFXcm1CLEVBQUUsRUFBRWhCLElBQUk4bEIsRUFBRTlsQixFQUFFcW5CLFdBQVczQixFQUFFLEtBQUt6a0IsRUFBRSxTQUFTakIsRUFBRUMsR0FBRzJsQixFQUFFeUIsV0FBV3JuQixFQUFFQyxJQUFJd0UsRUFBRSxXQUFXOGlCLGFBQWEzQixJQUFJMXdCLEVBQVEwMEIscUJBQXFCLFdBQVcsT0FBTSxHQUFJcGxCLEVBQUV0UCxFQUFRaXFELHdCQUF3QixpQkFBaUIsQ0FBQyxJQUFJMTVCLEVBQUVobEIsT0FBTzRtQixXQUFXdG5CLEVBQUVVLE9BQU84bUIsYUFBYSxHQUFHLG9CQUFxQmdVLFFBQVEsQ0FBQyxJQUFJNVYsRUFDN2ZsbEIsT0FBTzIrQyxxQkFBcUIsbUJBQW9CMytDLE9BQU80K0MsdUJBQXVCOWpCLFFBQVFDLE1BQU0sc0pBQXNKLG1CQUFvQjdWLEdBQUc0VixRQUFRQyxNQUFNLHFKQUFxSixJQUFJMU4sR0FBRSxFQUFHaHRCLEVBQUUsS0FBS2t0QixHQUFHLEVBQUV2c0IsRUFBRSxFQUFFaUMsRUFBRSxFQUFFeE8sRUFBUTAwQixxQkFBcUIsV0FBVyxPQUFPMTBCLEVBQVE4ZSxnQkFDaGdCdFEsR0FBR2MsRUFBRSxhQUFhdFAsRUFBUWlxRCx3QkFBd0IsU0FBU24vQyxHQUFHLEVBQUVBLEdBQUcsSUFBSUEsRUFBRXU3QixRQUFRQyxNQUFNLG1IQUFtSC81QixFQUFFLEVBQUV6QixFQUFFaVYsS0FBS3FxQyxNQUFNLElBQUl0L0MsR0FBRyxHQUFHLElBQUlpVSxFQUFFLElBQUlpckMsZUFBZW42QixFQUFFOVEsRUFBRXNyQyxNQUFNdHJDLEVBQUV1ckMsTUFBTUMsVUFBVSxXQUFXLEdBQUcsT0FBTzMrQyxFQUFFLENBQUMsSUFBSWQsRUFBRTlLLEVBQVE4ZSxlQUFldFEsRUFBRTFELEVBQUV5QixFQUFFLElBQUlYLEdBQUUsRUFBR2QsR0FBRytrQixFQUFFMjZCLFlBQVksT0FBTzV4QixHQUFFLEVBQUdodEIsRUFBRSxNQUFNLE1BQU1iLEdBQUcsTUFBTThrQixFQUFFMjZCLFlBQVksTUFBTXovQyxRQUFTNnRCLEdBQUUsR0FBSTlzQixFQUFFLFNBQVNoQixHQUFHYyxFQUFFZCxFQUFFOHRCLElBQUlBLEdBQUUsRUFBRy9JLEVBQUUyNkIsWUFBWSxRQUFReitDLEVBQUUsU0FBU2pCLEVBQUVDLEdBQUcrdEIsRUFDdGZ2SSxHQUFFLFdBQVd6bEIsRUFBRTlLLEVBQVE4ZSxrQkFBaUIvVCxJQUFJd0UsRUFBRSxXQUFXMUUsRUFBRWl1QixHQUFHQSxHQUFHLEdBQUcsU0FBUzVGLEVBQUVwb0IsRUFBRUMsR0FBRyxJQUFJaEUsRUFBRStELEVBQUVyTSxPQUFPcU0sRUFBRXRHLEtBQUt1RyxHQUFHRCxFQUFFLE9BQU8sQ0FBQyxJQUFJZSxFQUFFOUUsRUFBRSxJQUFJLEVBQUVsRyxFQUFFaUssRUFBRWUsR0FBRyxVQUFHLElBQVNoTCxHQUFHLEVBQUVzeUIsRUFBRXR5QixFQUFFa0ssSUFBMEIsTUFBTUQsRUFBN0JBLEVBQUVlLEdBQUdkLEVBQUVELEVBQUUvRCxHQUFHbEcsRUFBRWtHLEVBQUU4RSxHQUFnQixTQUFTc2xCLEVBQUVybUIsR0FBVSxZQUFPLEtBQWRBLEVBQUVBLEVBQUUsSUFBcUIsS0FBS0EsRUFDaFAsU0FBU3NtQixFQUFFdG1CLEdBQUcsSUFBSUMsRUFBRUQsRUFBRSxHQUFHLFFBQUcsSUFBU0MsRUFBRSxDQUFDLElBQUloRSxFQUFFK0QsRUFBRTRzQyxNQUFNLEdBQUczd0MsSUFBSWdFLEVBQUUsQ0FBQ0QsRUFBRSxHQUFHL0QsRUFBRStELEVBQUUsSUFBSSxJQUFJZSxFQUFFLEVBQUVoTCxFQUFFaUssRUFBRXJNLE9BQU9vTixFQUFFaEwsR0FBRyxDQUFDLElBQUlvRixFQUFFLEdBQUc0RixFQUFFLEdBQUcsRUFBRTNJLEVBQUU0SCxFQUFFN0UsR0FBRzRxQixFQUFFNXFCLEVBQUUsRUFBRTJFLEVBQUVFLEVBQUUrbEIsR0FBRyxRQUFHLElBQVMzdEIsR0FBRyxFQUFFaXdCLEVBQUVqd0IsRUFBRTZELFFBQUcsSUFBUzZELEdBQUcsRUFBRXVvQixFQUFFdm9CLEVBQUUxSCxJQUFJNEgsRUFBRWUsR0FBR2pCLEVBQUVFLEVBQUUrbEIsR0FBRzlwQixFQUFFOEUsRUFBRWdsQixJQUFJL2xCLEVBQUVlLEdBQUczSSxFQUFFNEgsRUFBRTdFLEdBQUdjLEVBQUU4RSxFQUFFNUYsT0FBUSxXQUFHLElBQVMyRSxHQUFHLEVBQUV1b0IsRUFBRXZvQixFQUFFN0QsSUFBMEIsTUFBTStELEVBQTdCQSxFQUFFZSxHQUFHakIsRUFBRUUsRUFBRStsQixHQUFHOXBCLEVBQUU4RSxFQUFFZ2xCLElBQWdCLE9BQU85bEIsRUFBRSxPQUFPLEtBQUssU0FBU29vQixFQUFFcm9CLEVBQUVDLEdBQUcsSUFBSWhFLEVBQUUrRCxFQUFFMi9DLFVBQVUxL0MsRUFBRTAvQyxVQUFVLE9BQU8sSUFBSTFqRCxFQUFFQSxFQUFFK0QsRUFBRTZWLEdBQUc1VixFQUFFNFYsR0FBRyxJQUFJMlEsRUFBRSxHQUFHK0IsRUFBRSxHQUFHQyxFQUFFLEVBQUV3QyxFQUFFLEtBQUs2RyxFQUFFLEVBQUV0TCxHQUFFLEVBQUc0TSxHQUFFLEVBQUdDLEdBQUUsRUFDamEsU0FBU0MsRUFBRXJ6QixHQUFHLElBQUksSUFBSUMsRUFBRW9tQixFQUFFa0MsR0FBRyxPQUFPdG9CLEdBQUcsQ0FBQyxHQUFHLE9BQU9BLEVBQUV5dEIsU0FBU3BILEVBQUVpQyxPQUFRLE1BQUd0b0IsRUFBRTIvQyxXQUFXNS9DLEdBQWdELE1BQTlDc21CLEVBQUVpQyxHQUFHdG9CLEVBQUUwL0MsVUFBVTEvQyxFQUFFNC9DLGVBQWV6M0IsRUFBRTVCLEVBQUV2bUIsR0FBY0EsRUFBRW9tQixFQUFFa0MsSUFBSSxTQUFTME0sRUFBRWoxQixHQUFhLEdBQVZvekIsR0FBRSxFQUFHQyxFQUFFcnpCLElBQU9tekIsRUFBRSxHQUFHLE9BQU85TSxFQUFFRyxHQUFHMk0sR0FBRSxFQUFHbnlCLEVBQUU2NUIsT0FBTyxDQUFDLElBQUk1NkIsRUFBRW9tQixFQUFFa0MsR0FBRyxPQUFPdG9CLEdBQUdnQixFQUFFZzBCLEVBQUVoMUIsRUFBRTIvQyxVQUFVNS9DLElBQ3RQLFNBQVM2NkIsRUFBRTc2QixFQUFFQyxHQUFHa3pCLEdBQUUsRUFBR0MsSUFBSUEsR0FBRSxFQUFHM3VCLEtBQUs4aEIsR0FBRSxFQUFHLElBQUl0cUIsRUFBRTQxQixFQUFFLElBQVMsSUFBTHdCLEVBQUVwekIsR0FBTytxQixFQUFFM0UsRUFBRUcsR0FBRyxPQUFPd0UsTUFBTUEsRUFBRTYwQixlQUFlNS9DLElBQUlELElBQUk5SyxFQUFRMDBCLHlCQUF5QixDQUFDLElBQUk3b0IsRUFBRWlxQixFQUFFMEMsU0FBUyxHQUFHLG1CQUFvQjNzQixFQUFFLENBQUNpcUIsRUFBRTBDLFNBQVMsS0FBS21FLEVBQUU3RyxFQUFFODBCLGNBQWMsSUFBSS9wRCxFQUFFZ0wsRUFBRWlxQixFQUFFNjBCLGdCQUFnQjUvQyxHQUFHQSxFQUFFL0ssRUFBUThlLGVBQWUsbUJBQW9CamUsRUFBRWkxQixFQUFFMEMsU0FBUzMzQixFQUFFaTFCLElBQUkzRSxFQUFFRyxJQUFJRixFQUFFRSxHQUFHNk0sRUFBRXB6QixRQUFRcW1CLEVBQUVFLEdBQUd3RSxFQUFFM0UsRUFBRUcsR0FBRyxHQUFHLE9BQU93RSxFQUFFLElBQUk3dkIsR0FBRSxNQUFPLENBQUMsSUFBSS9DLEVBQUVpdUIsRUFBRWtDLEdBQUcsT0FBT253QixHQUFHNkksRUFBRWcwQixFQUFFNzhCLEVBQUV3bkQsVUFBVTMvQyxHQUFHOUUsR0FBRSxFQUFHLE9BQU9BLEVBQUUsUUFBUTZ2QixFQUFFLEtBQUs2RyxFQUFFNTFCLEVBQUVzcUIsR0FBRSxHQUFJLElBQUl5VSxFQUFFeDJCLEVBQUV0UCxFQUFRdTFCLHNCQUFzQixFQUN0ZXYxQixFQUFRaTFCLDJCQUEyQixFQUFFajFCLEVBQVFxMUIscUJBQXFCLEVBQUVyMUIsRUFBUXdkLHdCQUF3QixFQUFFeGQsRUFBUTZxRCxtQkFBbUIsS0FBSzdxRCxFQUFRc2dCLDhCQUE4QixFQUFFdGdCLEVBQVF3MEIsd0JBQXdCLFNBQVMxcEIsR0FBR0EsRUFBRTB0QixTQUFTLE1BQU14NEIsRUFBUThxRCwyQkFBMkIsV0FBVzdzQixHQUFHNU0sSUFBSTRNLEdBQUUsRUFBR255QixFQUFFNjVCLEtBQUszbEMsRUFBUSswQixpQ0FBaUMsV0FBVyxPQUFPNEgsR0FBRzM4QixFQUFRK3FELDhCQUE4QixXQUFXLE9BQU81NUIsRUFBRUcsSUFDcGF0eEIsRUFBUWdyRCxjQUFjLFNBQVNsZ0QsR0FBRyxPQUFPNnhCLEdBQUcsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsSUFBSTV4QixFQUFFLEVBQUUsTUFBTSxRQUFRQSxFQUFFNHhCLEVBQUUsSUFBSTUxQixFQUFFNDFCLEVBQUVBLEVBQUU1eEIsRUFBRSxJQUFJLE9BQU9ELElBQUksUUFBUTZ4QixFQUFFNTFCLElBQUkvRyxFQUFRaXJELHdCQUF3QixhQUFhanJELEVBQVE0MEIsc0JBQXNCa1IsRUFBRTlsQyxFQUFRNmMseUJBQXlCLFNBQVMvUixFQUFFQyxHQUFHLE9BQU9ELEdBQUcsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxNQUFNLFFBQVFBLEVBQUUsRUFBRSxJQUFJL0QsRUFBRTQxQixFQUFFQSxFQUFFN3hCLEVBQUUsSUFBSSxPQUFPQyxJQUFJLFFBQVE0eEIsRUFBRTUxQixJQUNwVy9HLEVBQVF1ZCwwQkFBMEIsU0FBU3pTLEVBQUVDLEVBQUVoRSxHQUFHLElBQUk4RSxFQUFFN0wsRUFBUThlLGVBQThGLE9BQXRDL1gsRUFBekMsaUJBQWtCQSxHQUFHLE9BQU9BLEdBQWUsaUJBQVpBLEVBQUVBLEVBQUVtdUMsUUFBNkIsRUFBRW51QyxFQUFFOEUsRUFBRTlFLEVBQU84RSxFQUFTZixHQUFHLEtBQUssRUFBRSxJQUFJakssR0FBRyxFQUFFLE1BQU0sS0FBSyxFQUFFQSxFQUFFLElBQUksTUFBTSxLQUFLLEVBQUVBLEVBQUUsV0FBVyxNQUFNLEtBQUssRUFBRUEsRUFBRSxJQUFJLE1BQU0sUUFBUUEsRUFBRSxJQUEyTSxPQUFqTWlLLEVBQUUsQ0FBQzZWLEdBQUcyUyxJQUFJa0YsU0FBU3p0QixFQUFFNi9DLGNBQWM5L0MsRUFBRTQvQyxVQUFVM2pELEVBQUU0akQsZUFBdkQ5cEQsRUFBRWtHLEVBQUVsRyxFQUFvRTRwRCxXQUFXLEdBQUcxakQsRUFBRThFLEdBQUdmLEVBQUUyL0MsVUFBVTFqRCxFQUFFbXNCLEVBQUVHLEVBQUV2b0IsR0FBRyxPQUFPcW1CLEVBQUVHLElBQUl4bUIsSUFBSXFtQixFQUFFa0MsS0FBSzZLLEVBQUUzdUIsSUFBSTJ1QixHQUFFLEVBQUdueUIsRUFBRWcwQixFQUFFaDVCLEVBQUU4RSxNQUFNZixFQUFFMi9DLFVBQVU1cEQsRUFBRXF5QixFQUFFNUIsRUFBRXhtQixHQUFHbXpCLEdBQUc1TSxJQUFJNE0sR0FBRSxFQUFHbnlCLEVBQUU2NUIsS0FBWTc2QixHQUMxZDlLLEVBQVFrckQsc0JBQXNCLFNBQVNwZ0QsR0FBRyxJQUFJQyxFQUFFNHhCLEVBQUUsT0FBTyxXQUFXLElBQUk1MUIsRUFBRTQxQixFQUFFQSxFQUFFNXhCLEVBQUUsSUFBSSxPQUFPRCxFQUFFK08sTUFBTTNZLEtBQUtyQyxXQUFXLFFBQVE4OUIsRUFBRTUxQixNLDJCQ2hCM0hoSCxFQUFPQyxRQUFVLEVBQWpCLEssMkJDRkZQLE9BQU9ELGVBQWVRLEVBQVMsYUFBYyxDQUFFNEgsT0FBTyxJQUN0RCxJQUFJdWpELEVBQVEsRUFBUSxLQUNoQkMsRUFBcUIsRUFBUSxLQUM3QkMsRUFBVSxFQUFRLEtBQ2xCQyxFQUFhLEVBQVEsS0FDckJDLEVBQVEsRUFBUSxLQUNoQkMsRUFBUSxFQUFRLEtBQ2hCQyxFQUFXLEVBQVEsS0FVdkJ6ckQsRUFBUTJ6QyxRQVRFLFdBQ04sT0FBUXdYLEVBQU10cEQsY0FBY3VwRCxFQUFtQm5ELFdBQVksS0FDdkRrRCxFQUFNdHBELGNBQWMwcEQsRUFBTTVYLFFBQVMsTUFDbkN3WCxFQUFNdHBELGNBQWN1cEQsRUFBbUI3RCxPQUFRLEtBQzNDNEQsRUFBTXRwRCxjQUFjdXBELEVBQW1CbEYsTUFBTyxDQUFFMTdDLE9BQU8sRUFBTXJHLEtBQU0sSUFBS2hGLFVBQVdtc0QsRUFBVzNYLFVBQzlGd1gsRUFBTXRwRCxjQUFjdXBELEVBQW1CbEYsTUFBTyxDQUFFL2hELEtBQU0sT0FBUWhGLFVBQVdxc0QsRUFBTTdYLFVBQy9Fd1gsRUFBTXRwRCxjQUFjdXBELEVBQW1CbEYsTUFBTyxDQUFFL2hELEtBQU0sU0FBVWhGLFVBQVdrc0QsRUFBUTFYLFdBQ3ZGd1gsRUFBTXRwRCxjQUFjNHBELEVBQVM5WCxRQUFTLFMsMkJDZjlDbDBDLE9BQU9ELGVBQWVRLEVBQVMsYUFBYyxDQUFFNEgsT0FBTyxJQUN0RCxJQUFJdWpELEVBQVEsRUFBUSxLQVVwQm5yRCxFQUFRMnpDLFFBVEksV0FDUixPQUFRd1gsRUFBTXRwRCxjQUFjLE1BQU8sQ0FBRThlLEdBQUksbUJBQ3JDd3FDLEVBQU10cEQsY0FBYyxNQUFPLENBQUUybkQsVUFBVyxZQUNwQzJCLEVBQU10cEQsY0FBYyxLQUFNLEtBQU0sZ0NBQ3BDc3BELEVBQU10cEQsY0FBYyxNQUFPLENBQUUybkQsVUFBVyxlQUNwQzJCLEVBQU10cEQsY0FBYyxJQUFLLEtBQU0saWVBQy9Cc3BELEVBQU10cEQsY0FBYyxJQUFLLEtBQU0saW1CQUMvQnNwRCxFQUFNdHBELGNBQWMsSUFBSyxLQUFNLGtlLDJCQ1QzQ3BDLE9BQU9ELGVBQWVRLEVBQVMsYUFBYyxDQUFFNEgsT0FBTyxJQUN0RCxJQUFJdWpELEVBQVEsRUFBUSxLQUNoQk8sRUFBbUIsRUFBUSxLQW1LL0IxckQsRUFBUTJ6QyxRQTFKRSxXQUNOLE9BQVF3WCxFQUFNdHBELGNBQWMsTUFBTyxDQUFFOGUsR0FBSSxpQkFDckN3cUMsRUFBTXRwRCxjQUFjLE1BQU8sQ0FBRTJuRCxVQUFXLFVBQ3BDMkIsRUFBTXRwRCxjQUFjLEtBQU0sS0FBTSwrQkFDcENzcEQsRUFBTXRwRCxjQUFjLE1BQU8sQ0FBRTJuRCxVQUFXLGFBQ3BDMkIsRUFBTXRwRCxjQUFjLEtBQU0sS0FBTSw0QkFDaENzcEQsRUFBTXRwRCxjQUFjLElBQUssS0FBTSw4aEJBQy9Cc3BELEVBQU10cEQsY0FBYyxLQUFNLE1BQzFCc3BELEVBQU10cEQsY0FBYzZwRCxFQUFpQi9YLFFBQVFDLFFBQVMsQ0FBRXA4QixNQUFPLE1BQU96VyxPQUFRLGtFQUFtRXFELFFBQVMsQ0FDbEp1bkQsYUFBYyxPQUNkQyxXQUFZLENBQUMsY0FDYjlVLElBQUssQ0FBQyxZQUFhLG1CQUNuQitVLFFBQVMsQ0FDTEMsV0FBWSxDQUFDLENBQUMsSUFBSyxLQUFNLENBQUMsTUFBTyxRQUNqQ0MsWUFBYSxDQUFDLENBQUMsS0FBTSxNQUFPLENBQUMsTUFBTyxRQUNwQ0MsZ0JBQWdCLEdBRXBCQyxJQUFLLENBQ0RMLFdBQVksQ0FBQyxhQUFjLGdCQUFpQixjQUFlLHFCQUduRVQsRUFBTXRwRCxjQUFjNnBELEVBQWlCL1gsUUFBUThCLEtBQU0sQ0FBRVEsS0ExQjFELHVGQTJCQ2tWLEVBQU10cEQsY0FBYyxLQUFNLE1BQzFCc3BELEVBQU10cEQsY0FBYyxLQUFNLEtBQ3RCc3BELEVBQU10cEQsY0FBYyxLQUFNLEtBQU0saURBQ2hDc3BELEVBQU10cEQsY0FBYyxLQUFNLEtBQU0seUdBQ3hDc3BELEVBQU10cEQsY0FBYyxNQUFPLENBQUUybkQsVUFBVyxZQUNwQzJCLEVBQU10cEQsY0FBYyxLQUFNLEtBQU0scUJBQ2hDc3BELEVBQU10cEQsY0FBYyxJQUFLLEtBQU0sK05BQy9Cc3BELEVBQU10cEQsY0FBYyxLQUFNLE1BQzFCc3BELEVBQU10cEQsY0FBYyxNQUFPLEtBQ3ZCc3BELEVBQU10cEQsY0FBYzZwRCxFQUFpQi9YLFFBQVFDLFFBQVMsQ0FBRXA4QixNQUFPLE1BQU96VyxPQUFRLGtFQUFtRXFELFFBQVMsQ0FDbEp1bkQsYUFBYyxPQUNkQyxXQUFZLENBQUMsY0FDYjlVLElBQUssQ0FBQyxZQUFhLG1CQUNuQitVLFFBQVMsQ0FDTEMsV0FBWSxDQUFDLENBQUMsSUFBSyxLQUFNLENBQUMsTUFBTyxRQUNqQ0MsWUFBYSxDQUFDLENBQUMsS0FBTSxNQUFPLENBQUMsTUFBTyxRQUNwQ0MsZ0JBQWdCLEdBRXBCQyxJQUFLLENBQ0RMLFdBQVksQ0FBQyxhQUFjLGdCQUFpQixjQUFlLHFCQUduRVQsRUFBTXRwRCxjQUFjNnBELEVBQWlCL1gsUUFBUThCLEtBQU0sQ0FBRVEsS0FoRDFELHFDQWlESGtWLEVBQU10cEQsY0FBYyxLQUFNLE1BQzFCc3BELEVBQU10cEQsY0FBYyxJQUFLLEtBQU0sK1ZBQy9Cc3BELEVBQU10cEQsY0FBYyxLQUFNLE1BQzFCc3BELEVBQU10cEQsY0FBYyxNQUFPLEtBQ3ZCc3BELEVBQU10cEQsY0FBYzZwRCxFQUFpQi9YLFFBQVFDLFFBQVMsQ0FBRXA4QixNQUFPLE1BQU96VyxPQUFRLGtFQUFtRXFELFFBQVMsQ0FDbEp1bkQsYUFBYyxPQUNkQyxXQUFZLENBQUMsY0FDYjlVLElBQUssQ0FBQyxZQUFhLG1CQUNuQitVLFFBQVMsQ0FDTEMsV0FBWSxDQUFDLENBQUMsSUFBSyxLQUFNLENBQUMsTUFBTyxRQUNqQ0MsWUFBYSxDQUFDLENBQUMsS0FBTSxNQUFPLENBQUMsTUFBTyxRQUNwQ0MsZ0JBQWdCLEdBRXBCQyxJQUFLLENBQ0RMLFdBQVksQ0FBQyxhQUFjLGdCQUFpQixjQUFlLHFCQUduRVQsRUFBTXRwRCxjQUFjNnBELEVBQWlCL1gsUUFBUThCLEtBQU0sQ0FBRVEsS0FoRXJELGdGQWlFUmtWLEVBQU10cEQsY0FBYyxLQUFNLE1BQzFCc3BELEVBQU10cEQsY0FBYyxNQUFPLEtBQ3ZCc3BELEVBQU10cEQsY0FBYzZwRCxFQUFpQi9YLFFBQVFDLFFBQVMsQ0FBRXA4QixNQUFPLE1BQU96VyxPQUFRLGtFQUFtRXFELFFBQVMsQ0FDbEp1bkQsYUFBYyxPQUNkQyxXQUFZLENBQUMsY0FDYjlVLElBQUssQ0FBQyxZQUFhLG1CQUNuQitVLFFBQVMsQ0FDTEMsV0FBWSxDQUFDLENBQUMsSUFBSyxLQUFNLENBQUMsTUFBTyxRQUNqQ0MsWUFBYSxDQUFDLENBQUMsS0FBTSxNQUFPLENBQUMsTUFBTyxRQUNwQ0MsZ0JBQWdCLEdBRXBCQyxJQUFLLENBQ0RMLFdBQVksQ0FBQyxhQUFjLGdCQUFpQixjQUFlLHFCQUduRVQsRUFBTXRwRCxjQUFjNnBELEVBQWlCL1gsUUFBUThCLEtBQU0sQ0FBRVEsS0EvRXBELCtFQWdGVGtWLEVBQU10cEQsY0FBYyxLQUFNLE1BQzFCc3BELEVBQU10cEQsY0FBYyxLQUFNLEtBQ3RCc3BELEVBQU10cEQsY0FBYyxLQUFNLEtBQU0sMERBQ2hDc3BELEVBQU10cEQsY0FBYyxLQUFNLEtBQU0sb0RBQ3hDc3BELEVBQU10cEQsY0FBYyxNQUFPLENBQUUybkQsVUFBVyxZQUNwQzJCLEVBQU10cEQsY0FBYyxLQUFNLEtBQU0sdUJBQ2hDc3BELEVBQU10cEQsY0FBYyxJQUFLLEtBQU0sd1JBQy9Cc3BELEVBQU10cEQsY0FBYyxLQUFNLE1BQzFCc3BELEVBQU10cEQsY0FBYyxNQUFPLEtBQ3ZCc3BELEVBQU10cEQsY0FBYzZwRCxFQUFpQi9YLFFBQVFDLFFBQVMsQ0FBRXA4QixNQUFPLE1BQU96VyxPQUFRLGtFQUFtRXFELFFBQVMsQ0FDbEp1bkQsYUFBYyxPQUNkQyxXQUFZLENBQUMsY0FDYjlVLElBQUssQ0FBQyxZQUFhLG1CQUNuQitVLFFBQVMsQ0FDTEMsV0FBWSxDQUFDLENBQUMsSUFBSyxLQUFNLENBQUMsTUFBTyxRQUNqQ0MsWUFBYSxDQUFDLENBQUMsS0FBTSxNQUFPLENBQUMsTUFBTyxRQUNwQ0MsZ0JBQWdCLEdBRXBCQyxJQUFLLENBQ0RMLFdBQVksQ0FBQyxhQUFjLGdCQUFpQixjQUFlLHFCQUduRVQsRUFBTXRwRCxjQUFjNnBELEVBQWlCL1gsUUFBUThCLEtBQU0sQ0FBRVEsS0F4R3hELHVDQXlHTGtWLEVBQU10cEQsY0FBYyxLQUFNLE1BQzFCc3BELEVBQU10cEQsY0FBYyxLQUFNLEtBQ3RCc3BELEVBQU10cEQsY0FBYyxLQUFNLEtBQU0sdUVBQ2hDc3BELEVBQU10cEQsY0FBYyxLQUFNLEtBQU0sc0dBQ3hDc3BELEVBQU10cEQsY0FBYyxNQUFPLENBQUUybkQsVUFBVyxZQUNwQzJCLEVBQU10cEQsY0FBYyxLQUFNLEtBQU0sdUJBQ2hDc3BELEVBQU10cEQsY0FBYyxJQUFLLEtBQU0seUtBQy9Cc3BELEVBQU10cEQsY0FBYyxLQUFNLE1BQzFCc3BELEVBQU10cEQsY0FBYyxNQUFPLEtBQ3ZCc3BELEVBQU10cEQsY0FBYzZwRCxFQUFpQi9YLFFBQVFDLFFBQVMsQ0FBRXA4QixNQUFPLE1BQU96VyxPQUFRLGtFQUFtRXFELFFBQVMsQ0FDbEp1bkQsYUFBYyxPQUNkQyxXQUFZLENBQUMsY0FDYjlVLElBQUssQ0FBQyxZQUFhLG1CQUNuQitVLFFBQVMsQ0FDTEMsV0FBWSxDQUFDLENBQUMsSUFBSyxLQUFNLENBQUMsTUFBTyxRQUNqQ0MsWUFBYSxDQUFDLENBQUMsS0FBTSxNQUFPLENBQUMsTUFBTyxRQUNwQ0MsZ0JBQWdCLEdBRXBCQyxJQUFLLENBQ0RMLFdBQVksQ0FBQyxhQUFjLGdCQUFpQixjQUFlLHFCQUduRVQsRUFBTXRwRCxjQUFjNnBELEVBQWlCL1gsUUFBUThCLEtBQU0sQ0FBRVEsS0FuSXhELHNHQW9JTGtWLEVBQU10cEQsY0FBYyxLQUFNLE1BQzFCc3BELEVBQU10cEQsY0FBYyxLQUFNLEtBQ3RCc3BELEVBQU10cEQsY0FBYyxLQUFNLEtBQU0scUpBQ2hDc3BELEVBQU10cEQsY0FBYyxLQUFNLEtBQU0sZ0tBQ2hDc3BELEVBQU10cEQsY0FBYyxLQUFNLEtBQU0sNkZBQ3hDc3BELEVBQU10cEQsY0FBYyxNQUFPLENBQUUybkQsVUFBVyxZQUNwQzJCLEVBQU10cEQsY0FBYyxLQUFNLEtBQU0sd0JBQ2hDc3BELEVBQU10cEQsY0FBYyxJQUFLLEtBQU0sNFdBQy9Cc3BELEVBQU10cEQsY0FBYyxLQUFNLE1BQzFCc3BELEVBQU10cEQsY0FBYzZwRCxFQUFpQi9YLFFBQVFDLFFBQVMsQ0FBRXA4QixNQUFPLE1BQU96VyxPQUFRLGtFQUFtRXFELFFBQVMsQ0FDbEp1bkQsYUFBYyxPQUNkQyxXQUFZLENBQUMsY0FDYjlVLElBQUssQ0FBQyxZQUFhLG1CQUNuQitVLFFBQVMsQ0FDTEMsV0FBWSxDQUFDLENBQUMsSUFBSyxLQUFNLENBQUMsTUFBTyxRQUNqQ0MsWUFBYSxDQUFDLENBQUMsS0FBTSxNQUFPLENBQUMsTUFBTyxRQUNwQ0MsZ0JBQWdCLEdBRXBCQyxJQUFLLENBQ0RMLFdBQVksQ0FBQyxhQUFjLGdCQUFpQixjQUFlLHFCQUduRVQsRUFBTXRwRCxjQUFjNnBELEVBQWlCL1gsUUFBUThCLEtBQU0sQ0FBRVEsS0F6Sm5ELG1FQTBKTmtWLEVBQU10cEQsY0FBYyxLQUFNLE1BQzFCc3BELEVBQU10cEQsY0FBYyxLQUFNLEtBQ3RCc3BELEVBQU10cEQsY0FBYyxLQUFNLEtBQU0sMkxBQ2hDc3BELEVBQU10cEQsY0FBYyxLQUFNLEtBQU0sc0xBQ2hDc3BELEVBQU10cEQsY0FBYyxLQUFNLEtBQU0saUwsMkJDbktoRHBDLE9BQU9ELGVBQWVRLEVBQVMsYUFBYyxDQUFFNEgsT0FBTyxJQUN0RCxJQUFJdWpELEVBQVEsRUFBUSxLQUtwQm5yRCxFQUFRMnpDLFFBSkssV0FDVCxPQUFRd1gsRUFBTXRwRCxjQUFjLFNBQVUsS0FDbENzcEQsRUFBTXRwRCxjQUFjLE9BQVEsS0FBTSxzQyxpQ0NKMUMsSUFBSXFxRCxFQUFhaHJELE1BQVFBLEtBQUtnckQsV0FBYyxTQUFVQyxFQUFTQyxFQUFZenZCLEVBQUdtb0IsR0FFMUUsT0FBTyxJQUFLbm9CLElBQU1BLEVBQUkwdkIsV0FBVSxTQUFVQyxFQUFTQyxHQUMvQyxTQUFTQyxFQUFVNWtELEdBQVMsSUFBTTZrRCxFQUFLM0gsRUFBVXorQyxLQUFLdUIsSUFBVyxNQUFPL0csR0FBSzByRCxFQUFPMXJELElBQ3BGLFNBQVM2ckQsRUFBUzlrRCxHQUFTLElBQU02a0QsRUFBSzNILEVBQWlCLE1BQUVsOUMsSUFBVyxNQUFPL0csR0FBSzByRCxFQUFPMXJELElBQ3ZGLFNBQVM0ckQsRUFBSzlVLEdBSmxCLElBQWUvdkMsRUFJYSt2QyxFQUFPOWIsS0FBT3l3QixFQUFRM1UsRUFBTy92QyxRQUoxQ0EsRUFJeUQrdkMsRUFBTy92QyxNQUpoREEsYUFBaUIrMEIsRUFBSS8wQixFQUFRLElBQUkrMEIsR0FBRSxTQUFVMnZCLEdBQVdBLEVBQVExa0QsT0FJVCtnQyxLQUFLNmpCLEVBQVdFLEdBQ2xHRCxHQUFNM0gsRUFBWUEsRUFBVWpyQyxNQUFNc3lDLEVBQVNDLEdBQWMsS0FBSy9sRCxZQUdsRXNtRCxFQUFlenJELE1BQVFBLEtBQUt5ckQsYUFBZ0IsU0FBVVIsRUFBU2w3QyxHQUMvRCxJQUFzR25GLEVBQUdqQixFQUFHK2xCLEVBQUc3a0IsRUFBM0c2Z0QsRUFBSSxDQUFFQyxNQUFPLEVBQUdDLEtBQU0sV0FBYSxHQUFXLEVBQVBsOEIsRUFBRSxHQUFRLE1BQU1BLEVBQUUsR0FBSSxPQUFPQSxFQUFFLElBQU9tOEIsS0FBTSxHQUFJQyxJQUFLLElBQ2hHLE9BQU9qaEQsRUFBSSxDQUFFMUYsS0FBTTRtRCxFQUFLLEdBQUksTUFBU0EsRUFBSyxHQUFJLE9BQVVBLEVBQUssSUFBd0IsbUJBQVgzK0MsU0FBMEJ2QyxFQUFFdUMsT0FBT0ssVUFBWSxXQUFhLE9BQU96TixPQUFVNkssRUFDdkosU0FBU2toRCxFQUFLL3BELEdBQUssT0FBTyxTQUFVMnRCLEdBQUssT0FDekMsU0FBY3E4QixHQUNWLEdBQUlwaEQsRUFBRyxNQUFNLElBQUluSixVQUFVLG1DQUMzQixLQUFPaXFELE9BQ0gsR0FBSTlnRCxFQUFJLEVBQUdqQixJQUFNK2xCLEVBQVksRUFBUnM4QixFQUFHLEdBQVNyaUQsRUFBVSxPQUFJcWlELEVBQUcsR0FBS3JpRCxFQUFTLFNBQU8rbEIsRUFBSS9sQixFQUFVLFNBQU0rbEIsRUFBRTVzQixLQUFLNkcsR0FBSSxHQUFLQSxFQUFFeEUsU0FBV3VxQixFQUFJQSxFQUFFNXNCLEtBQUs2RyxFQUFHcWlELEVBQUcsS0FBS3J4QixLQUFNLE9BQU9qTCxFQUUzSixPQURJL2xCLEVBQUksRUFBRytsQixJQUFHczhCLEVBQUssQ0FBUyxFQUFSQSxFQUFHLEdBQVF0OEIsRUFBRWhwQixRQUN6QnNsRCxFQUFHLElBQ1AsS0FBSyxFQUFHLEtBQUssRUFBR3Q4QixFQUFJczhCLEVBQUksTUFDeEIsS0FBSyxFQUFjLE9BQVhOLEVBQUVDLFFBQWdCLENBQUVqbEQsTUFBT3NsRCxFQUFHLEdBQUlyeEIsTUFBTSxHQUNoRCxLQUFLLEVBQUcrd0IsRUFBRUMsUUFBU2hpRCxFQUFJcWlELEVBQUcsR0FBSUEsRUFBSyxDQUFDLEdBQUksU0FDeEMsS0FBSyxFQUFHQSxFQUFLTixFQUFFSSxJQUFJdFYsTUFBT2tWLEVBQUVHLEtBQUtyVixNQUFPLFNBQ3hDLFFBQ0ksTUFBa0I5bUIsR0FBWkEsRUFBSWc4QixFQUFFRyxNQUFZdHVELE9BQVMsR0FBS215QixFQUFFQSxFQUFFbnlCLE9BQVMsS0FBa0IsSUFBVnl1RCxFQUFHLElBQXNCLElBQVZBLEVBQUcsSUFBVyxDQUFFTixFQUFJLEVBQUcsU0FDakcsR0FBYyxJQUFWTSxFQUFHLE1BQWN0OEIsR0FBTXM4QixFQUFHLEdBQUt0OEIsRUFBRSxJQUFNczhCLEVBQUcsR0FBS3Q4QixFQUFFLElBQU0sQ0FBRWc4QixFQUFFQyxNQUFRSyxFQUFHLEdBQUksTUFDOUUsR0FBYyxJQUFWQSxFQUFHLElBQVlOLEVBQUVDLE1BQVFqOEIsRUFBRSxHQUFJLENBQUVnOEIsRUFBRUMsTUFBUWo4QixFQUFFLEdBQUlBLEVBQUlzOEIsRUFBSSxNQUM3RCxHQUFJdDhCLEdBQUtnOEIsRUFBRUMsTUFBUWo4QixFQUFFLEdBQUksQ0FBRWc4QixFQUFFQyxNQUFRajhCLEVBQUUsR0FBSWc4QixFQUFFSSxJQUFJeG9ELEtBQUswb0QsR0FBSyxNQUN2RHQ4QixFQUFFLElBQUlnOEIsRUFBRUksSUFBSXRWLE1BQ2hCa1YsRUFBRUcsS0FBS3JWLE1BQU8sU0FFdEJ3VixFQUFLajhDLEVBQUtqTixLQUFLbW9ELEVBQVNTLEdBQzFCLE1BQU8vckQsR0FBS3FzRCxFQUFLLENBQUMsRUFBR3JzRCxHQUFJZ0ssRUFBSSxFQUFLLFFBQVVpQixFQUFJOGtCLEVBQUksRUFDdEQsR0FBWSxFQUFSczhCLEVBQUcsR0FBUSxNQUFNQSxFQUFHLEdBQUksTUFBTyxDQUFFdGxELE1BQU9zbEQsRUFBRyxHQUFLQSxFQUFHLFFBQUssRUFBUXJ4QixNQUFNLEdBckI5QjR3QixDQUFLLENBQUN2cEQsRUFBRzJ0QixPQXdCN0RweEIsT0FBT0QsZUFBZVEsRUFBUyxhQUFjLENBQUU0SCxPQUFPLElBQ3RELElBQUl1akQsRUFBUSxFQUFRLEtBQ2hCZ0MsRUFBVSxFQUFRLEtBMEp0Qm50RCxFQUFRMnpDLFFBekpPLFdBRVgsSUFBSXJzQyxFQUFPLEdBQ1A4bEQsRUFBZ0IsRUFDaEJDLEVBQVUsRUFDVkMsRUFBZ0IsR0FDaEJDLEVBQWtCLEdBQ2xCQyxFQUFnQixHQUNoQkMsRUFBa0IsR0FDbEJDLEVBQU8sRUFDUEMsRUFBa0IsRUFDbEJDLEVBQVcsRUFDWEMsRUFBYSxFQUNiQyxFQUFhLEVBQ2JDLEVBQWMsRUFxSGxCLE9BSEFaLEVBQVFodEIsV0FBVSxZQWpIbEIsV0FDVytyQixFQUFVaHJELFVBQU0sT0FBUSxHQUFRLFdBRW5DLE9BQU95ckQsRUFBWXpyRCxNQUFNLFNBQVU4c0QsR0FDL0IsT0FBUUEsRUFBR25CLE9BQ1AsS0FBSyxFQUFHLE1BQU8sQ0FBQyxFQUFhb0IsTUFBTSwySEFDMUJ0bEIsTUFBSyxTQUFVL2lDLEdBQU8sT0FBT0EsRUFBSXNvRCxVQUNqQ3ZsQixNQUFLLFNBQVVnUCxHQTZGaEIsSUE1RkEsSUFBSXdXLEVBQVUsU0FBVXp0RCxHQUNwQjRHLEVBQUs5QyxLQUFLbXpDLEVBQU9qM0MsR0FBR2lnQixJQUNwQixJQUFJeXRDLEVBQU96c0QsU0FBU0UsY0FBYyxNQUM5QndzRCxFQUFVMXNELFNBQVNFLGNBQWMsTUFDckN3c0QsRUFBUUMsVUFBWTNXLEVBQU9qM0MsR0FBRzZ0RCxnQkFDOUJILEVBQUsvckQsWUFBWWdzRCxHQUNqQixJQUFJRyxFQUFVN3NELFNBQVNFLGNBQWMsTUFDckMyc0QsRUFBUUYsVUFBWTNXLEVBQU9qM0MsR0FBR21KLE9BQzlCdWtELEVBQUtLLFVBQVVwakQsSUFBSXNzQyxFQUFPajNDLEdBQUdpZ0IsSUFDN0J5dEMsRUFBSy9yRCxZQUFZbXNELEdBQ2pCLElBQUlFLEVBQVUvc0QsU0FBU0UsY0FBYyxNQUNyQzZzRCxFQUFRSixVQUFZM1csRUFBT2ozQyxHQUFHaXVELGNBQWNDLFFBQVEsR0FDcERSLEVBQUsvckQsWUFBWXFzRCxHQUNqQixJQUFJRyxFQUFVbHRELFNBQVNFLGNBQWMsTUFDckNndEQsRUFBUVAsVUFBWTNXLEVBQU9qM0MsR0FBR291RCxXQUFXQyxpQkFDekNYLEVBQUsvckQsWUFBWXdzRCxHQUNqQmx0RCxTQUFTay9DLGNBQWMsU0FBU3grQyxZQUFZK3JELEdBQzVDSCxNQUFNLDBDQUE0Q3RXLEVBQU9qM0MsR0FBR2lnQixHQUFLLHdEQUM1RGdvQixNQUFLLFNBQVUvaUMsR0FBTyxPQUFPQSxFQUFJc29ELFVBQ2pDdmxCLE1BQUssU0FBVXFtQixHQUNoQixHQUFxQixzQkFBakJyWCxFQUFPajNDLEdBQUdpZ0IsSUFDTyxhQUFqQmczQixFQUFPajNDLEdBQUdpZ0IsSUFDTyxnQkFBakJnM0IsRUFBT2ozQyxHQUFHaWdCLElBQ08sUUFBakJnM0IsRUFBT2ozQyxHQUFHaWdCLElBQ08sV0FBakJnM0IsRUFBT2ozQyxHQUFHaWdCLEdBQWlCLENBRTNCLElBQUssSUFBSThQLEVBQUksRUFBR0EsRUFBSSxFQUFHQSxJQUFLLENBQ3hCLElBQUl3K0IsRUFBV3R0RCxTQUFTRSxjQUFjLE1BQ3RDb3RELEVBQVNYLFVBQVksR0FDckIzc0QsU0FBU2svQyxjQUFjLElBQU12NUMsRUFBSzVHLElBQUkyQixZQUFZNHNELEdBRXRELE9BQU8sRUFFWHpCLEVBQWdCLEdBQ2hCLElBQUssSUFBSTFpRCxFQUFJLEVBQUdBLEVBQUksR0FBSUEsSUFDcEIwaUQsRUFBY2hwRCxLQUFLd3FELEVBQVFFLE9BQU9wa0QsR0FBRyxJQUV6QzJpRCxFQUFrQixHQUNsQixJQUFLLElBQUkxaUQsRUFBSSxFQUFHQSxFQUFJLEdBQUlBLElBQUssQ0FDekIsSUFBSW9rRCxHQUFrQjNCLEVBQWN6aUQsRUFBSSxHQUFLeWlELEVBQWN6aUQsSUFFbER5aUQsRUFBY3ppRCxHQUZULElBR2QwaUQsRUFBZ0JqcEQsS0FBSzJxRCxHQUl6QnpCLEVBQU8sRUFDUCxJQUFLLElBQUk3aEQsRUFBSSxFQUFHQSxFQUFJLEdBQUlBLElBQ3BCNmhELEdBQVNELEVBQWdCNWhELEdBQUssR0FFbEM4aEQsRUFBa0IsRUFDbEIsSUFBSyxJQUFJNW1ELEVBQUksRUFBR0EsRUFBSSxHQUFJQSxJQUNwQjRtRCxHQUFtQjV0QyxLQUFLcXZDLElBQUszQixFQUFnQjFtRCxHQUFLLEdBQUssR0FHM0Q2bUQsRUFBVyxFQUNYQyxFQUFhLEVBQ2JELEVBQVdELEVBQWtCNXRDLEtBQUtxdkMsSUFBSTFCLEVBQU0sR0FDNUNHLEVBQWE5dEMsS0FBS3N2QyxLQUFLekIsR0FDdkIsSUFBSTBCLEVBQVEzdEQsU0FBU0UsY0FBYyxNQUNuQ3l0RCxFQUFNaEIsVUFBWSxFQUFPTSxRQUFRLEdBQUczbkQsV0FBYSxJQUNqRHRGLFNBQVNrL0MsY0FBYyxJQUFNdjVDLEVBQUs1RyxJQUFJMkIsWUFBWWl0RCxHQUNsRCxJQUFJQyxFQUFVNXRELFNBQVNFLGNBQWMsTUFDckMwdEQsRUFBUWpCLFVBQVlWLEVBQVNnQixRQUFRLEdBQUczbkQsV0FDeEN0RixTQUFTay9DLGNBQWMsSUFBTXY1QyxFQUFLNUcsSUFBSTJCLFlBQVlrdEQsR0FDbEQsSUFBSUMsRUFBVzd0RCxTQUFTRSxjQUFjLE1BR3RDLEdBRkEydEQsRUFBU2xCLFVBQVlULEVBQVdlLFFBQVEsR0FBRzNuRCxXQUFhLElBQ3hEdEYsU0FBU2svQyxjQUFjLElBQU12NUMsRUFBSzVHLElBQUkyQixZQUFZbXRELEdBQzdCLFlBQWpCN1gsRUFBT2ozQyxHQUFHaWdCLEdBQWtCLENBQzVCMHNDLEVBQVVLLEVBQ1ZOLEVBQWdCUyxFQUNoQk4sRUFBa0JFLEVBQ2xCLElBQUssSUFBSTFsRCxFQUFJLEVBQUdBLEVBQUksR0FBSUEsSUFDcEJ1bEQsRUFBYzlvRCxLQUFLd3FELEVBQVFFLE9BQU9ubkQsR0FBRyxJQUc3QytsRCxFQUFhLEVBQ2JDLEVBQWMsRUFDZCxJQUFLLElBQUl6K0MsRUFBSSxFQUFHQSxFQUFJLEdBQUlBLElBQ3BCdytDLElBQWlCTCxFQUFnQm4rQyxHQUFLbytDLElBQy9CSCxFQUFnQmorQyxHQUFLKzlDLEdBQ3RCLEdBRVZVLEVBQWNELEdBQWNWLEVBQWdCUyxHQUM1QyxJQUFJNEIsRUFBWTl0RCxTQUFTRSxjQUFjLE1BQ3ZDNHRELEVBQVVuQixVQUFZUixFQUFXYyxRQUFRLEdBQUczbkQsV0FDNUN0RixTQUFTay9DLGNBQWMsSUFBTXY1QyxFQUFLNUcsSUFBSTJCLFlBQVlvdEQsR0FDbEQsSUFBSUMsRUFBVS90RCxTQUFTRSxjQUFjLE1BQ3JDNnRELEVBQVFwQixVQUFZUCxFQUFZYSxRQUFRLEdBQUczbkQsV0FDM0N0RixTQUFTay9DLGNBQWMsSUFBTXY1QyxFQUFLNUcsSUFBSTJCLFlBQVlxdEQsT0FHakRodkQsRUFBSSxFQUFHQSxFQUFJLEdBQUlBLElBQ3BCeXRELEVBQVF6dEQsT0FJcEIsS0FBSyxFQUVELE9BRFVzdEQsRUFBR2xCLE9BQ04sQ0FBQyxVQU94QjZDLEtBQ0QsSUFDS3hFLEVBQU10cEQsY0FBYyxNQUFPLENBQUU4ZSxHQUFJLGtCQUNyQ3dxQyxFQUFNdHBELGNBQWMsS0FBTSxLQUFNLHdDQUNoQ3NwRCxFQUFNdHBELGNBQWMsS0FBTSxLQUFNLDJEQUNoQ3NwRCxFQUFNdHBELGNBQWMsUUFBUyxDQUFFMm5ELFVBQVcsY0FDdEMyQixFQUFNdHBELGNBQWMsS0FBTSxDQUFFMm5ELFVBQVcsT0FDbkMyQixFQUFNdHBELGNBQWMsS0FBTSxDQUFFMm5ELFVBQVcsUUFBVSxLQUNqRDJCLEVBQU10cEQsY0FBYyxLQUFNLENBQUUybkQsVUFBVyxRQUFVLFFBQ2pEMkIsRUFBTXRwRCxjQUFjLEtBQU0sQ0FBRTJuRCxVQUFXLFNBQVcsU0FDbEQyQixFQUFNdHBELGNBQWMsS0FBTSxDQUFFMm5ELFVBQVcsY0FBZ0IsY0FDdkQyQixFQUFNdHBELGNBQWMsS0FBTSxDQUFFMm5ELFVBQVcsVUFBWSxRQUNuRDJCLEVBQU10cEQsY0FBYyxLQUFNLENBQUUybkQsVUFBVyxPQUFTLE9BQ2hEMkIsRUFBTXRwRCxjQUFjLEtBQU0sQ0FBRTJuRCxVQUFXLE9BQVMsT0FDaEQyQixFQUFNdHBELGNBQWMsS0FBTSxDQUFFMm5ELFVBQVcsU0FBVyxTQUNsRDJCLEVBQU10cEQsY0FBYyxLQUFNLENBQUUybkQsVUFBVyxPQUFTLFNBQ3BEMkIsRUFBTXRwRCxjQUFjLFFBQVMsT0FDakNzcEQsRUFBTXRwRCxjQUFjLE1BQU8sQ0FBRTJuRCxVQUFXLGtCQUNwQzJCLEVBQU10cEQsY0FBYyxPQUFRLEtBQU0sOEdBQ2xDc3BELEVBQU10cEQsY0FBYyxLQUFNLE1BQzFCc3BELEVBQU10cEQsY0FBYyxPQUFRLEtBQU0sNENBQ2xDc3BELEVBQU10cEQsY0FBYyxLQUFNLE1BQzFCc3BELEVBQU10cEQsY0FBYyxPQUFRLEtBQU0sNkMsMkJDOUw5Q3BDLE9BQU9ELGVBQWVRLEVBQVMsYUFBYyxDQUFFNEgsT0FBTyxJQUN0RCxJQUFJdWpELEVBQVEsRUFBUSxLQUNoQkMsRUFBcUIsRUFBUSxLQWFqQ3ByRCxFQUFRMnpDLFFBWkUsV0FDTixPQUFRd1gsRUFBTXRwRCxjQUFjLE1BQU8sS0FDL0JzcEQsRUFBTXRwRCxjQUFjLEtBQU0sS0FDdEJzcEQsRUFBTXRwRCxjQUFjLEtBQU0sTUFDMUJzcEQsRUFBTXRwRCxjQUFjdXBELEVBQW1CbkMsUUFBUyxDQUFFeitDLE9BQU8sRUFBTW9sRCxnQkFBaUIsU0FBVTlyRCxHQUFJLEtBQzFGcW5ELEVBQU10cEQsY0FBYyxLQUFNLEtBQU0sU0FDcENzcEQsRUFBTXRwRCxjQUFjdXBELEVBQW1CbkMsUUFBUyxDQUFFNEcsZ0JBQWlCLFNBQVUvckQsR0FBSSxRQUM3RXFuRCxFQUFNdHBELGNBQWMsS0FBTSxLQUFNLFFBQ3BDc3BELEVBQU10cEQsY0FBY3VwRCxFQUFtQm5DLFFBQVMsQ0FBRUksZ0JBQWlCLFNBQVV2bEQsR0FBSSxVQUM3RXFuRCxFQUFNdHBELGNBQWMsS0FBTSxLQUFNLFVBQ3BDc3BELEVBQU10cEQsY0FBYyxLQUFNLFdDYmxDaXVELEVBQTJCLEdBRy9CLFNBQVNDLEVBQW9CQyxHQUU1QixJQUFJQyxFQUFlSCxFQUF5QkUsR0FDNUMsUUFBcUJyYixJQUFqQnNiLEVBQ0gsT0FBT0EsRUFBYWp3RCxRQUdyQixJQUFJRCxFQUFTK3ZELEVBQXlCRSxHQUFZLENBR2pEaHdELFFBQVMsSUFPVixPQUhBa3dELEVBQW9CRixHQUFVaHNELEtBQUtqRSxFQUFPQyxRQUFTRCxFQUFRQSxFQUFPQyxRQUFTK3ZELEdBR3BFaHdELEVBQU9DLFFDcEJmK3ZELEVBQW9CN3NELEVBQUtuRCxJQUN4QixJQUFJb3dELEVBQVNwd0QsR0FBVUEsRUFBTzJ6QyxXQUM3QixJQUFPM3pDLEVBQWlCLFFBQ3hCLElBQU0sRUFFUCxPQURBZ3dELEVBQW9CbGtELEVBQUVza0QsRUFBUSxDQUFFcmxELEVBQUdxbEQsSUFDNUJBLEdDTFJKLEVBQW9CbGtELEVBQUksQ0FBQzdMLEVBQVNvd0QsS0FDakMsSUFBSSxJQUFJenZELEtBQU95dkQsRUFDWEwsRUFBb0I1VyxFQUFFaVgsRUFBWXp2RCxLQUFTb3ZELEVBQW9CNVcsRUFBRW41QyxFQUFTVyxJQUM1RWxCLE9BQU9ELGVBQWVRLEVBQVNXLEVBQUssQ0FBRTZQLFlBQVksRUFBTUYsSUFBSzgvQyxFQUFXenZELE1DSjNFb3ZELEVBQW9CaGtELEVBQUksV0FDdkIsR0FBMEIsaUJBQWZtMkMsV0FBeUIsT0FBT0EsV0FDM0MsSUFDQyxPQUFPaGhELE1BQVEsSUFBSW12RCxTQUFTLGNBQWIsR0FDZCxNQUFPeHZELEdBQ1IsR0FBc0IsaUJBQVgwSyxPQUFxQixPQUFPQSxRQUxqQixHQ0F4QndrRCxFQUFvQjVXLEVBQUksQ0FBQzl4QyxFQUFLaXBELElBQVU3d0QsT0FBT2YsVUFBVTRELGVBQWUwQixLQUFLcUQsRUFBS2lwRCxHQ0NsRlAsRUFBb0JubEQsRUFBSzVLLElBQ0gsb0JBQVhzTyxRQUEwQkEsT0FBT2lpRCxhQUMxQzl3RCxPQUFPRCxlQUFlUSxFQUFTc08sT0FBT2lpRCxZQUFhLENBQUUzb0QsTUFBTyxXQUU3RG5JLE9BQU9ELGVBQWVRLEVBQVMsYUFBYyxDQUFFNEgsT0FBTyxLLG1CQ0h2RCxJQUFJdWpELEVBQVEsRUFBUSxLQUNoQnFGLEVBQVcsRUFBUSxLQUNuQkMsRUFBUSxFQUFRLEtBQ3BCRCxFQUFTbHhELE9BQU82ckQsRUFBTXRwRCxjQUFjNHVELEVBQU05YyxRQUFTLE1BQU9oeUMsU0FBU2svQyxjQUFjLFciLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxudmFyIHJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xyXG5cclxuLyoqXHJcbiAqIENvcHlyaWdodCAyMDE1LCBZYWhvbyEgSW5jLlxyXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXHJcbiAqL1xyXG52YXIgUkVBQ1RfU1RBVElDUyA9IHtcclxuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcclxuICBjb250ZXh0VHlwZTogdHJ1ZSxcclxuICBjb250ZXh0VHlwZXM6IHRydWUsXHJcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxyXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxyXG4gIGdldERlZmF1bHRQcm9wczogdHJ1ZSxcclxuICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXHJcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOiB0cnVlLFxyXG4gIG1peGluczogdHJ1ZSxcclxuICBwcm9wVHlwZXM6IHRydWUsXHJcbiAgdHlwZTogdHJ1ZVxyXG59O1xyXG52YXIgS05PV05fU1RBVElDUyA9IHtcclxuICBuYW1lOiB0cnVlLFxyXG4gIGxlbmd0aDogdHJ1ZSxcclxuICBwcm90b3R5cGU6IHRydWUsXHJcbiAgY2FsbGVyOiB0cnVlLFxyXG4gIGNhbGxlZTogdHJ1ZSxcclxuICBhcmd1bWVudHM6IHRydWUsXHJcbiAgYXJpdHk6IHRydWVcclxufTtcclxudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XHJcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcclxuICByZW5kZXI6IHRydWUsXHJcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxyXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxyXG4gIHByb3BUeXBlczogdHJ1ZVxyXG59O1xyXG52YXIgTUVNT19TVEFUSUNTID0ge1xyXG4gICckJHR5cGVvZic6IHRydWUsXHJcbiAgY29tcGFyZTogdHJ1ZSxcclxuICBkZWZhdWx0UHJvcHM6IHRydWUsXHJcbiAgZGlzcGxheU5hbWU6IHRydWUsXHJcbiAgcHJvcFR5cGVzOiB0cnVlLFxyXG4gIHR5cGU6IHRydWVcclxufTtcclxudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xyXG5UWVBFX1NUQVRJQ1NbcmVhY3RJcy5Gb3J3YXJkUmVmXSA9IEZPUldBUkRfUkVGX1NUQVRJQ1M7XHJcblRZUEVfU1RBVElDU1tyZWFjdElzLk1lbW9dID0gTUVNT19TVEFUSUNTO1xyXG5cclxuZnVuY3Rpb24gZ2V0U3RhdGljcyhjb21wb25lbnQpIHtcclxuICAvLyBSZWFjdCB2MTYuMTEgYW5kIGJlbG93XHJcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcclxuICAgIHJldHVybiBNRU1PX1NUQVRJQ1M7XHJcbiAgfSAvLyBSZWFjdCB2MTYuMTIgYW5kIGFib3ZlXHJcblxyXG5cclxuICByZXR1cm4gVFlQRV9TVEFUSUNTW2NvbXBvbmVudFsnJCR0eXBlb2YnXV0gfHwgUkVBQ1RfU1RBVElDUztcclxufVxyXG5cclxudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xyXG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xyXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcclxudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XHJcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcclxudmFyIG9iamVjdFByb3RvdHlwZSA9IE9iamVjdC5wcm90b3R5cGU7XHJcbmZ1bmN0aW9uIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgc291cmNlQ29tcG9uZW50LCBibGFja2xpc3QpIHtcclxuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcclxuICAgIC8vIGRvbid0IGhvaXN0IG92ZXIgc3RyaW5nIChodG1sKSBjb21wb25lbnRzXHJcbiAgICBpZiAob2JqZWN0UHJvdG90eXBlKSB7XHJcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xyXG5cclxuICAgICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xyXG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIGtleXMgPSBnZXRPd25Qcm9wZXJ0eU5hbWVzKHNvdXJjZUNvbXBvbmVudCk7XHJcblxyXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xyXG4gICAgICBrZXlzID0ga2V5cy5jb25jYXQoZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZUNvbXBvbmVudCkpO1xyXG4gICAgfVxyXG5cclxuICAgIHZhciB0YXJnZXRTdGF0aWNzID0gZ2V0U3RhdGljcyh0YXJnZXRDb21wb25lbnQpO1xyXG4gICAgdmFyIHNvdXJjZVN0YXRpY3MgPSBnZXRTdGF0aWNzKHNvdXJjZUNvbXBvbmVudCk7XHJcblxyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XHJcbiAgICAgIHZhciBrZXkgPSBrZXlzW2ldO1xyXG5cclxuICAgICAgaWYgKCFLTk9XTl9TVEFUSUNTW2tleV0gJiYgIShibGFja2xpc3QgJiYgYmxhY2tsaXN0W2tleV0pICYmICEoc291cmNlU3RhdGljcyAmJiBzb3VyY2VTdGF0aWNzW2tleV0pICYmICEodGFyZ2V0U3RhdGljcyAmJiB0YXJnZXRTdGF0aWNzW2tleV0pKSB7XHJcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlQ29tcG9uZW50LCBrZXkpO1xyXG5cclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xyXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xyXG4gICAgICAgIH0gY2F0Y2ggKGUpIHt9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XHJcbiIsIlxyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGxvYWQgKHNyYywgb3B0cywgY2IpIHtcclxuICB2YXIgaGVhZCA9IGRvY3VtZW50LmhlYWQgfHwgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXVxyXG4gIHZhciBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKVxyXG5cclxuICBpZiAodHlwZW9mIG9wdHMgPT09ICdmdW5jdGlvbicpIHtcclxuICAgIGNiID0gb3B0c1xyXG4gICAgb3B0cyA9IHt9XHJcbiAgfVxyXG5cclxuICBvcHRzID0gb3B0cyB8fCB7fVxyXG4gIGNiID0gY2IgfHwgZnVuY3Rpb24oKSB7fVxyXG5cclxuICBzY3JpcHQudHlwZSA9IG9wdHMudHlwZSB8fCAndGV4dC9qYXZhc2NyaXB0J1xyXG4gIHNjcmlwdC5jaGFyc2V0ID0gb3B0cy5jaGFyc2V0IHx8ICd1dGY4JztcclxuICBzY3JpcHQuYXN5bmMgPSAnYXN5bmMnIGluIG9wdHMgPyAhIW9wdHMuYXN5bmMgOiB0cnVlXHJcbiAgc2NyaXB0LnNyYyA9IHNyY1xyXG5cclxuICBpZiAob3B0cy5hdHRycykge1xyXG4gICAgc2V0QXR0cmlidXRlcyhzY3JpcHQsIG9wdHMuYXR0cnMpXHJcbiAgfVxyXG5cclxuICBpZiAob3B0cy50ZXh0KSB7XHJcbiAgICBzY3JpcHQudGV4dCA9ICcnICsgb3B0cy50ZXh0XHJcbiAgfVxyXG5cclxuICB2YXIgb25lbmQgPSAnb25sb2FkJyBpbiBzY3JpcHQgPyBzdGRPbkVuZCA6IGllT25FbmRcclxuICBvbmVuZChzY3JpcHQsIGNiKVxyXG5cclxuICAvLyBzb21lIGdvb2QgbGVnYWN5IGJyb3dzZXJzIChmaXJlZm94KSBmYWlsIHRoZSAnaW4nIGRldGVjdGlvbiBhYm92ZVxyXG4gIC8vIHNvIGFzIGEgZmFsbGJhY2sgd2UgYWx3YXlzIHNldCBvbmxvYWRcclxuICAvLyBvbGQgSUUgd2lsbCBpZ25vcmUgdGhpcyBhbmQgbmV3IElFIHdpbGwgc2V0IG9ubG9hZFxyXG4gIGlmICghc2NyaXB0Lm9ubG9hZCkge1xyXG4gICAgc3RkT25FbmQoc2NyaXB0LCBjYik7XHJcbiAgfVxyXG5cclxuICBoZWFkLmFwcGVuZENoaWxkKHNjcmlwdClcclxufVxyXG5cclxuZnVuY3Rpb24gc2V0QXR0cmlidXRlcyhzY3JpcHQsIGF0dHJzKSB7XHJcbiAgZm9yICh2YXIgYXR0ciBpbiBhdHRycykge1xyXG4gICAgc2NyaXB0LnNldEF0dHJpYnV0ZShhdHRyLCBhdHRyc1thdHRyXSk7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBzdGRPbkVuZCAoc2NyaXB0LCBjYikge1xyXG4gIHNjcmlwdC5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB0aGlzLm9uZXJyb3IgPSB0aGlzLm9ubG9hZCA9IG51bGxcclxuICAgIGNiKG51bGwsIHNjcmlwdClcclxuICB9XHJcbiAgc2NyaXB0Lm9uZXJyb3IgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyB0aGlzLm9ubG9hZCA9IG51bGwgaGVyZSBpcyBuZWNlc3NhcnlcclxuICAgIC8vIGJlY2F1c2UgZXZlbiBJRTkgd29ya3Mgbm90IGxpa2Ugb3RoZXJzXHJcbiAgICB0aGlzLm9uZXJyb3IgPSB0aGlzLm9ubG9hZCA9IG51bGxcclxuICAgIGNiKG5ldyBFcnJvcignRmFpbGVkIHRvIGxvYWQgJyArIHRoaXMuc3JjKSwgc2NyaXB0KVxyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gaWVPbkVuZCAoc2NyaXB0LCBjYikge1xyXG4gIHNjcmlwdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBpZiAodGhpcy5yZWFkeVN0YXRlICE9ICdjb21wbGV0ZScgJiYgdGhpcy5yZWFkeVN0YXRlICE9ICdsb2FkZWQnKSByZXR1cm5cclxuICAgIHRoaXMub25yZWFkeXN0YXRlY2hhbmdlID0gbnVsbFxyXG4gICAgY2IobnVsbCwgc2NyaXB0KSAvLyB0aGVyZSBpcyBubyB3YXkgdG8gY2F0Y2ggbG9hZGluZyBlcnJvcnMgaW4gSUU4XHJcbiAgfVxyXG59XHJcbiIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCJ2YXIgaXNhcnJheSA9IHJlcXVpcmUoJ2lzYXJyYXknKVxyXG5cclxuLyoqXHJcbiAqIEV4cG9zZSBgcGF0aFRvUmVnZXhwYC5cclxuICovXHJcbm1vZHVsZS5leHBvcnRzID0gcGF0aFRvUmVnZXhwXHJcbm1vZHVsZS5leHBvcnRzLnBhcnNlID0gcGFyc2VcclxubW9kdWxlLmV4cG9ydHMuY29tcGlsZSA9IGNvbXBpbGVcclxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9GdW5jdGlvbiA9IHRva2Vuc1RvRnVuY3Rpb25cclxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9SZWdFeHAgPSB0b2tlbnNUb1JlZ0V4cFxyXG5cclxuLyoqXHJcbiAqIFRoZSBtYWluIHBhdGggbWF0Y2hpbmcgcmVnZXhwIHV0aWxpdHkuXHJcbiAqXHJcbiAqIEB0eXBlIHtSZWdFeHB9XHJcbiAqL1xyXG52YXIgUEFUSF9SRUdFWFAgPSBuZXcgUmVnRXhwKFtcclxuICAvLyBNYXRjaCBlc2NhcGVkIGNoYXJhY3RlcnMgdGhhdCB3b3VsZCBvdGhlcndpc2UgYXBwZWFyIGluIGZ1dHVyZSBtYXRjaGVzLlxyXG4gIC8vIFRoaXMgYWxsb3dzIHRoZSB1c2VyIHRvIGVzY2FwZSBzcGVjaWFsIGNoYXJhY3RlcnMgdGhhdCB3b24ndCB0cmFuc2Zvcm0uXHJcbiAgJyhcXFxcXFxcXC4pJyxcclxuICAvLyBNYXRjaCBFeHByZXNzLXN0eWxlIHBhcmFtZXRlcnMgYW5kIHVuLW5hbWVkIHBhcmFtZXRlcnMgd2l0aCBhIHByZWZpeFxyXG4gIC8vIGFuZCBvcHRpb25hbCBzdWZmaXhlcy4gTWF0Y2hlcyBhcHBlYXIgYXM6XHJcbiAgLy9cclxuICAvLyBcIi86dGVzdChcXFxcZCspP1wiID0+IFtcIi9cIiwgXCJ0ZXN0XCIsIFwiXFxkK1wiLCB1bmRlZmluZWQsIFwiP1wiLCB1bmRlZmluZWRdXHJcbiAgLy8gXCIvcm91dGUoXFxcXGQrKVwiICA9PiBbdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkXVxyXG4gIC8vIFwiLypcIiAgICAgICAgICAgID0+IFtcIi9cIiwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIipcIl1cclxuICAnKFtcXFxcLy5dKT8oPzooPzpcXFxcOihcXFxcdyspKD86XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSk/fFxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpKFsrKj9dKT98KFxcXFwqKSknXHJcbl0uam9pbignfCcpLCAnZycpXHJcblxyXG4vKipcclxuICogUGFyc2UgYSBzdHJpbmcgZm9yIHRoZSByYXcgdG9rZW5zLlxyXG4gKlxyXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBzdHJcclxuICogQHBhcmFtICB7T2JqZWN0PX0gb3B0aW9uc1xyXG4gKiBAcmV0dXJuIHshQXJyYXl9XHJcbiAqL1xyXG5mdW5jdGlvbiBwYXJzZSAoc3RyLCBvcHRpb25zKSB7XHJcbiAgdmFyIHRva2VucyA9IFtdXHJcbiAgdmFyIGtleSA9IDBcclxuICB2YXIgaW5kZXggPSAwXHJcbiAgdmFyIHBhdGggPSAnJ1xyXG4gIHZhciBkZWZhdWx0RGVsaW1pdGVyID0gb3B0aW9ucyAmJiBvcHRpb25zLmRlbGltaXRlciB8fCAnLydcclxuICB2YXIgcmVzXHJcblxyXG4gIHdoaWxlICgocmVzID0gUEFUSF9SRUdFWFAuZXhlYyhzdHIpKSAhPSBudWxsKSB7XHJcbiAgICB2YXIgbSA9IHJlc1swXVxyXG4gICAgdmFyIGVzY2FwZWQgPSByZXNbMV1cclxuICAgIHZhciBvZmZzZXQgPSByZXMuaW5kZXhcclxuICAgIHBhdGggKz0gc3RyLnNsaWNlKGluZGV4LCBvZmZzZXQpXHJcbiAgICBpbmRleCA9IG9mZnNldCArIG0ubGVuZ3RoXHJcblxyXG4gICAgLy8gSWdub3JlIGFscmVhZHkgZXNjYXBlZCBzZXF1ZW5jZXMuXHJcbiAgICBpZiAoZXNjYXBlZCkge1xyXG4gICAgICBwYXRoICs9IGVzY2FwZWRbMV1cclxuICAgICAgY29udGludWVcclxuICAgIH1cclxuXHJcbiAgICB2YXIgbmV4dCA9IHN0cltpbmRleF1cclxuICAgIHZhciBwcmVmaXggPSByZXNbMl1cclxuICAgIHZhciBuYW1lID0gcmVzWzNdXHJcbiAgICB2YXIgY2FwdHVyZSA9IHJlc1s0XVxyXG4gICAgdmFyIGdyb3VwID0gcmVzWzVdXHJcbiAgICB2YXIgbW9kaWZpZXIgPSByZXNbNl1cclxuICAgIHZhciBhc3RlcmlzayA9IHJlc1s3XVxyXG5cclxuICAgIC8vIFB1c2ggdGhlIGN1cnJlbnQgcGF0aCBvbnRvIHRoZSB0b2tlbnMuXHJcbiAgICBpZiAocGF0aCkge1xyXG4gICAgICB0b2tlbnMucHVzaChwYXRoKVxyXG4gICAgICBwYXRoID0gJydcclxuICAgIH1cclxuXHJcbiAgICB2YXIgcGFydGlhbCA9IHByZWZpeCAhPSBudWxsICYmIG5leHQgIT0gbnVsbCAmJiBuZXh0ICE9PSBwcmVmaXhcclxuICAgIHZhciByZXBlYXQgPSBtb2RpZmllciA9PT0gJysnIHx8IG1vZGlmaWVyID09PSAnKidcclxuICAgIHZhciBvcHRpb25hbCA9IG1vZGlmaWVyID09PSAnPycgfHwgbW9kaWZpZXIgPT09ICcqJ1xyXG4gICAgdmFyIGRlbGltaXRlciA9IHJlc1syXSB8fCBkZWZhdWx0RGVsaW1pdGVyXHJcbiAgICB2YXIgcGF0dGVybiA9IGNhcHR1cmUgfHwgZ3JvdXBcclxuXHJcbiAgICB0b2tlbnMucHVzaCh7XHJcbiAgICAgIG5hbWU6IG5hbWUgfHwga2V5KyssXHJcbiAgICAgIHByZWZpeDogcHJlZml4IHx8ICcnLFxyXG4gICAgICBkZWxpbWl0ZXI6IGRlbGltaXRlcixcclxuICAgICAgb3B0aW9uYWw6IG9wdGlvbmFsLFxyXG4gICAgICByZXBlYXQ6IHJlcGVhdCxcclxuICAgICAgcGFydGlhbDogcGFydGlhbCxcclxuICAgICAgYXN0ZXJpc2s6ICEhYXN0ZXJpc2ssXHJcbiAgICAgIHBhdHRlcm46IHBhdHRlcm4gPyBlc2NhcGVHcm91cChwYXR0ZXJuKSA6IChhc3RlcmlzayA/ICcuKicgOiAnW14nICsgZXNjYXBlU3RyaW5nKGRlbGltaXRlcikgKyAnXSs/JylcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICAvLyBNYXRjaCBhbnkgY2hhcmFjdGVycyBzdGlsbCByZW1haW5pbmcuXHJcbiAgaWYgKGluZGV4IDwgc3RyLmxlbmd0aCkge1xyXG4gICAgcGF0aCArPSBzdHIuc3Vic3RyKGluZGV4KVxyXG4gIH1cclxuXHJcbiAgLy8gSWYgdGhlIHBhdGggZXhpc3RzLCBwdXNoIGl0IG9udG8gdGhlIGVuZC5cclxuICBpZiAocGF0aCkge1xyXG4gICAgdG9rZW5zLnB1c2gocGF0aClcclxuICB9XHJcblxyXG4gIHJldHVybiB0b2tlbnNcclxufVxyXG5cclxuLyoqXHJcbiAqIENvbXBpbGUgYSBzdHJpbmcgdG8gYSB0ZW1wbGF0ZSBmdW5jdGlvbiBmb3IgdGhlIHBhdGguXHJcbiAqXHJcbiAqIEBwYXJhbSAge3N0cmluZ30gICAgICAgICAgICAgc3RyXHJcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgb3B0aW9uc1xyXG4gKiBAcmV0dXJuIHshZnVuY3Rpb24oT2JqZWN0PSwgT2JqZWN0PSl9XHJcbiAqL1xyXG5mdW5jdGlvbiBjb21waWxlIChzdHIsIG9wdGlvbnMpIHtcclxuICByZXR1cm4gdG9rZW5zVG9GdW5jdGlvbihwYXJzZShzdHIsIG9wdGlvbnMpLCBvcHRpb25zKVxyXG59XHJcblxyXG4vKipcclxuICogUHJldHRpZXIgZW5jb2Rpbmcgb2YgVVJJIHBhdGggc2VnbWVudHMuXHJcbiAqXHJcbiAqIEBwYXJhbSAge3N0cmluZ31cclxuICogQHJldHVybiB7c3RyaW5nfVxyXG4gKi9cclxuZnVuY3Rpb24gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IChzdHIpIHtcclxuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvW1xcLz8jXS9nLCBmdW5jdGlvbiAoYykge1xyXG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxyXG4gIH0pXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBFbmNvZGUgdGhlIGFzdGVyaXNrIHBhcmFtZXRlci4gU2ltaWxhciB0byBgcHJldHR5YCwgYnV0IGFsbG93cyBzbGFzaGVzLlxyXG4gKlxyXG4gKiBAcGFyYW0gIHtzdHJpbmd9XHJcbiAqIEByZXR1cm4ge3N0cmluZ31cclxuICovXHJcbmZ1bmN0aW9uIGVuY29kZUFzdGVyaXNrIChzdHIpIHtcclxuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvWz8jXS9nLCBmdW5jdGlvbiAoYykge1xyXG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxyXG4gIH0pXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBFeHBvc2UgYSBtZXRob2QgZm9yIHRyYW5zZm9ybWluZyB0b2tlbnMgaW50byB0aGUgcGF0aCBmdW5jdGlvbi5cclxuICovXHJcbmZ1bmN0aW9uIHRva2Vuc1RvRnVuY3Rpb24gKHRva2Vucywgb3B0aW9ucykge1xyXG4gIC8vIENvbXBpbGUgYWxsIHRoZSB0b2tlbnMgaW50byByZWdleHBzLlxyXG4gIHZhciBtYXRjaGVzID0gbmV3IEFycmF5KHRva2Vucy5sZW5ndGgpXHJcblxyXG4gIC8vIENvbXBpbGUgYWxsIHRoZSBwYXR0ZXJucyBiZWZvcmUgY29tcGlsYXRpb24uXHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcclxuICAgIGlmICh0eXBlb2YgdG9rZW5zW2ldID09PSAnb2JqZWN0Jykge1xyXG4gICAgICBtYXRjaGVzW2ldID0gbmV3IFJlZ0V4cCgnXig/OicgKyB0b2tlbnNbaV0ucGF0dGVybiArICcpJCcsIGZsYWdzKG9wdGlvbnMpKVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGZ1bmN0aW9uIChvYmosIG9wdHMpIHtcclxuICAgIHZhciBwYXRoID0gJydcclxuICAgIHZhciBkYXRhID0gb2JqIHx8IHt9XHJcbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgfHwge31cclxuICAgIHZhciBlbmNvZGUgPSBvcHRpb25zLnByZXR0eSA/IGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSA6IGVuY29kZVVSSUNvbXBvbmVudFxyXG5cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXVxyXG5cclxuICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICBwYXRoICs9IHRva2VuXHJcblxyXG4gICAgICAgIGNvbnRpbnVlXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHZhciB2YWx1ZSA9IGRhdGFbdG9rZW4ubmFtZV1cclxuICAgICAgdmFyIHNlZ21lbnRcclxuXHJcbiAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XHJcbiAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XHJcbiAgICAgICAgICAvLyBQcmVwZW5kIHBhcnRpYWwgc2VnbWVudCBwcmVmaXhlcy5cclxuICAgICAgICAgIGlmICh0b2tlbi5wYXJ0aWFsKSB7XHJcbiAgICAgICAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgY29udGludWVcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBiZSBkZWZpbmVkJylcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChpc2FycmF5KHZhbHVlKSkge1xyXG4gICAgICAgIGlmICghdG9rZW4ucmVwZWF0KSB7XHJcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCByZXBlYXQsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHZhbHVlKSArICdgJylcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xyXG4gICAgICAgICAgICBjb250aW51ZVxyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgYmUgZW1wdHknKVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xyXG4gICAgICAgICAgc2VnbWVudCA9IGVuY29kZSh2YWx1ZVtqXSlcclxuXHJcbiAgICAgICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBhbGwgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeShzZWdtZW50KSArICdgJylcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBwYXRoICs9IChqID09PSAwID8gdG9rZW4ucHJlZml4IDogdG9rZW4uZGVsaW1pdGVyKSArIHNlZ21lbnRcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnRpbnVlXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHNlZ21lbnQgPSB0b2tlbi5hc3RlcmlzayA/IGVuY29kZUFzdGVyaXNrKHZhbHVlKSA6IGVuY29kZSh2YWx1ZSlcclxuXHJcbiAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgXCInICsgc2VnbWVudCArICdcIicpXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4ICsgc2VnbWVudFxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBwYXRoXHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogRXNjYXBlIGEgcmVndWxhciBleHByZXNzaW9uIHN0cmluZy5cclxuICpcclxuICogQHBhcmFtICB7c3RyaW5nfSBzdHJcclxuICogQHJldHVybiB7c3RyaW5nfVxyXG4gKi9cclxuZnVuY3Rpb24gZXNjYXBlU3RyaW5nIChzdHIpIHtcclxuICByZXR1cm4gc3RyLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18XFwvXFxcXF0pL2csICdcXFxcJDEnKVxyXG59XHJcblxyXG4vKipcclxuICogRXNjYXBlIHRoZSBjYXB0dXJpbmcgZ3JvdXAgYnkgZXNjYXBpbmcgc3BlY2lhbCBjaGFyYWN0ZXJzIGFuZCBtZWFuaW5nLlxyXG4gKlxyXG4gKiBAcGFyYW0gIHtzdHJpbmd9IGdyb3VwXHJcbiAqIEByZXR1cm4ge3N0cmluZ31cclxuICovXHJcbmZ1bmN0aW9uIGVzY2FwZUdyb3VwIChncm91cCkge1xyXG4gIHJldHVybiBncm91cC5yZXBsYWNlKC8oWz0hOiRcXC8oKV0pL2csICdcXFxcJDEnKVxyXG59XHJcblxyXG4vKipcclxuICogQXR0YWNoIHRoZSBrZXlzIGFzIGEgcHJvcGVydHkgb2YgdGhlIHJlZ2V4cC5cclxuICpcclxuICogQHBhcmFtICB7IVJlZ0V4cH0gcmVcclxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xyXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxyXG4gKi9cclxuZnVuY3Rpb24gYXR0YWNoS2V5cyAocmUsIGtleXMpIHtcclxuICByZS5rZXlzID0ga2V5c1xyXG4gIHJldHVybiByZVxyXG59XHJcblxyXG4vKipcclxuICogR2V0IHRoZSBmbGFncyBmb3IgYSByZWdleHAgZnJvbSB0aGUgb3B0aW9ucy5cclxuICpcclxuICogQHBhcmFtICB7T2JqZWN0fSBvcHRpb25zXHJcbiAqIEByZXR1cm4ge3N0cmluZ31cclxuICovXHJcbmZ1bmN0aW9uIGZsYWdzIChvcHRpb25zKSB7XHJcbiAgcmV0dXJuIG9wdGlvbnMgJiYgb3B0aW9ucy5zZW5zaXRpdmUgPyAnJyA6ICdpJ1xyXG59XHJcblxyXG4vKipcclxuICogUHVsbCBvdXQga2V5cyBmcm9tIGEgcmVnZXhwLlxyXG4gKlxyXG4gKiBAcGFyYW0gIHshUmVnRXhwfSBwYXRoXHJcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcclxuICogQHJldHVybiB7IVJlZ0V4cH1cclxuICovXHJcbmZ1bmN0aW9uIHJlZ2V4cFRvUmVnZXhwIChwYXRoLCBrZXlzKSB7XHJcbiAgLy8gVXNlIGEgbmVnYXRpdmUgbG9va2FoZWFkIHRvIG1hdGNoIG9ubHkgY2FwdHVyaW5nIGdyb3Vwcy5cclxuICB2YXIgZ3JvdXBzID0gcGF0aC5zb3VyY2UubWF0Y2goL1xcKCg/IVxcPykvZylcclxuXHJcbiAgaWYgKGdyb3Vwcykge1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBncm91cHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAga2V5cy5wdXNoKHtcclxuICAgICAgICBuYW1lOiBpLFxyXG4gICAgICAgIHByZWZpeDogbnVsbCxcclxuICAgICAgICBkZWxpbWl0ZXI6IG51bGwsXHJcbiAgICAgICAgb3B0aW9uYWw6IGZhbHNlLFxyXG4gICAgICAgIHJlcGVhdDogZmFsc2UsXHJcbiAgICAgICAgcGFydGlhbDogZmFsc2UsXHJcbiAgICAgICAgYXN0ZXJpc2s6IGZhbHNlLFxyXG4gICAgICAgIHBhdHRlcm46IG51bGxcclxuICAgICAgfSlcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiBhdHRhY2hLZXlzKHBhdGgsIGtleXMpXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUcmFuc2Zvcm0gYW4gYXJyYXkgaW50byBhIHJlZ2V4cC5cclxuICpcclxuICogQHBhcmFtICB7IUFycmF5fSAgcGF0aFxyXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXHJcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcclxuICogQHJldHVybiB7IVJlZ0V4cH1cclxuICovXHJcbmZ1bmN0aW9uIGFycmF5VG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcclxuICB2YXIgcGFydHMgPSBbXVxyXG5cclxuICBmb3IgKHZhciBpID0gMDsgaSA8IHBhdGgubGVuZ3RoOyBpKyspIHtcclxuICAgIHBhcnRzLnB1c2gocGF0aFRvUmVnZXhwKHBhdGhbaV0sIGtleXMsIG9wdGlvbnMpLnNvdXJjZSlcclxuICB9XHJcblxyXG4gIHZhciByZWdleHAgPSBuZXcgUmVnRXhwKCcoPzonICsgcGFydHMuam9pbignfCcpICsgJyknLCBmbGFncyhvcHRpb25zKSlcclxuXHJcbiAgcmV0dXJuIGF0dGFjaEtleXMocmVnZXhwLCBrZXlzKVxyXG59XHJcblxyXG4vKipcclxuICogQ3JlYXRlIGEgcGF0aCByZWdleHAgZnJvbSBzdHJpbmcgaW5wdXQuXHJcbiAqXHJcbiAqIEBwYXJhbSAge3N0cmluZ30gIHBhdGhcclxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xyXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXHJcbiAqIEByZXR1cm4geyFSZWdFeHB9XHJcbiAqL1xyXG5mdW5jdGlvbiBzdHJpbmdUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xyXG4gIHJldHVybiB0b2tlbnNUb1JlZ0V4cChwYXJzZShwYXRoLCBvcHRpb25zKSwga2V5cywgb3B0aW9ucylcclxufVxyXG5cclxuLyoqXHJcbiAqIEV4cG9zZSBhIGZ1bmN0aW9uIGZvciB0YWtpbmcgdG9rZW5zIGFuZCByZXR1cm5pbmcgYSBSZWdFeHAuXHJcbiAqXHJcbiAqIEBwYXJhbSAgeyFBcnJheX0gICAgICAgICAgdG9rZW5zXHJcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0ga2V5c1xyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgIG9wdGlvbnNcclxuICogQHJldHVybiB7IVJlZ0V4cH1cclxuICovXHJcbmZ1bmN0aW9uIHRva2Vuc1RvUmVnRXhwICh0b2tlbnMsIGtleXMsIG9wdGlvbnMpIHtcclxuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcclxuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXHJcbiAgICBrZXlzID0gW11cclxuICB9XHJcblxyXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XHJcblxyXG4gIHZhciBzdHJpY3QgPSBvcHRpb25zLnN0cmljdFxyXG4gIHZhciBlbmQgPSBvcHRpb25zLmVuZCAhPT0gZmFsc2VcclxuICB2YXIgcm91dGUgPSAnJ1xyXG5cclxuICAvLyBJdGVyYXRlIG92ZXIgdGhlIHRva2VucyBhbmQgY3JlYXRlIG91ciByZWdleHAgc3RyaW5nLlxyXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XHJcbiAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cclxuXHJcbiAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xyXG4gICAgICByb3V0ZSArPSBlc2NhcGVTdHJpbmcodG9rZW4pXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB2YXIgcHJlZml4ID0gZXNjYXBlU3RyaW5nKHRva2VuLnByZWZpeClcclxuICAgICAgdmFyIGNhcHR1cmUgPSAnKD86JyArIHRva2VuLnBhdHRlcm4gKyAnKSdcclxuXHJcbiAgICAgIGtleXMucHVzaCh0b2tlbilcclxuXHJcbiAgICAgIGlmICh0b2tlbi5yZXBlYXQpIHtcclxuICAgICAgICBjYXB0dXJlICs9ICcoPzonICsgcHJlZml4ICsgY2FwdHVyZSArICcpKidcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XHJcbiAgICAgICAgaWYgKCF0b2tlbi5wYXJ0aWFsKSB7XHJcbiAgICAgICAgICBjYXB0dXJlID0gJyg/OicgKyBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJykpPydcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKT8nXHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyknXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJvdXRlICs9IGNhcHR1cmVcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHZhciBkZWxpbWl0ZXIgPSBlc2NhcGVTdHJpbmcob3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nKVxyXG4gIHZhciBlbmRzV2l0aERlbGltaXRlciA9IHJvdXRlLnNsaWNlKC1kZWxpbWl0ZXIubGVuZ3RoKSA9PT0gZGVsaW1pdGVyXHJcblxyXG4gIC8vIEluIG5vbi1zdHJpY3QgbW9kZSB3ZSBhbGxvdyBhIHNsYXNoIGF0IHRoZSBlbmQgb2YgbWF0Y2guIElmIHRoZSBwYXRoIHRvXHJcbiAgLy8gbWF0Y2ggYWxyZWFkeSBlbmRzIHdpdGggYSBzbGFzaCwgd2UgcmVtb3ZlIGl0IGZvciBjb25zaXN0ZW5jeS4gVGhlIHNsYXNoXHJcbiAgLy8gaXMgdmFsaWQgYXQgdGhlIGVuZCBvZiBhIHBhdGggbWF0Y2gsIG5vdCBpbiB0aGUgbWlkZGxlLiBUaGlzIGlzIGltcG9ydGFudFxyXG4gIC8vIGluIG5vbi1lbmRpbmcgbW9kZSwgd2hlcmUgXCIvdGVzdC9cIiBzaG91bGRuJ3QgbWF0Y2ggXCIvdGVzdC8vcm91dGVcIi5cclxuICBpZiAoIXN0cmljdCkge1xyXG4gICAgcm91dGUgPSAoZW5kc1dpdGhEZWxpbWl0ZXIgPyByb3V0ZS5zbGljZSgwLCAtZGVsaW1pdGVyLmxlbmd0aCkgOiByb3V0ZSkgKyAnKD86JyArIGRlbGltaXRlciArICcoPz0kKSk/J1xyXG4gIH1cclxuXHJcbiAgaWYgKGVuZCkge1xyXG4gICAgcm91dGUgKz0gJyQnXHJcbiAgfSBlbHNlIHtcclxuICAgIC8vIEluIG5vbi1lbmRpbmcgbW9kZSwgd2UgbmVlZCB0aGUgY2FwdHVyaW5nIGdyb3VwcyB0byBtYXRjaCBhcyBtdWNoIGFzXHJcbiAgICAvLyBwb3NzaWJsZSBieSB1c2luZyBhIHBvc2l0aXZlIGxvb2thaGVhZCB0byB0aGUgZW5kIG9yIG5leHQgcGF0aCBzZWdtZW50LlxyXG4gICAgcm91dGUgKz0gc3RyaWN0ICYmIGVuZHNXaXRoRGVsaW1pdGVyID8gJycgOiAnKD89JyArIGRlbGltaXRlciArICd8JCknXHJcbiAgfVxyXG5cclxuICByZXR1cm4gYXR0YWNoS2V5cyhuZXcgUmVnRXhwKCdeJyArIHJvdXRlLCBmbGFncyhvcHRpb25zKSksIGtleXMpXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBOb3JtYWxpemUgdGhlIGdpdmVuIHBhdGggc3RyaW5nLCByZXR1cm5pbmcgYSByZWd1bGFyIGV4cHJlc3Npb24uXHJcbiAqXHJcbiAqIEFuIGVtcHR5IGFycmF5IGNhbiBiZSBwYXNzZWQgaW4gZm9yIHRoZSBrZXlzLCB3aGljaCB3aWxsIGhvbGQgdGhlXHJcbiAqIHBsYWNlaG9sZGVyIGtleSBkZXNjcmlwdGlvbnMuIEZvciBleGFtcGxlLCB1c2luZyBgL3VzZXIvOmlkYCwgYGtleXNgIHdpbGxcclxuICogY29udGFpbiBgW3sgbmFtZTogJ2lkJywgZGVsaW1pdGVyOiAnLycsIG9wdGlvbmFsOiBmYWxzZSwgcmVwZWF0OiBmYWxzZSB9XWAuXHJcbiAqXHJcbiAqIEBwYXJhbSAgeyhzdHJpbmd8UmVnRXhwfEFycmF5KX0gcGF0aFxyXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19ICAgICAgIGtleXNcclxuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICAgICBvcHRpb25zXHJcbiAqIEByZXR1cm4geyFSZWdFeHB9XHJcbiAqL1xyXG5mdW5jdGlvbiBwYXRoVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcclxuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcclxuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXHJcbiAgICBrZXlzID0gW11cclxuICB9XHJcblxyXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XHJcblxyXG4gIGlmIChwYXRoIGluc3RhbmNlb2YgUmVnRXhwKSB7XHJcbiAgICByZXR1cm4gcmVnZXhwVG9SZWdleHAocGF0aCwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSlcclxuICB9XHJcblxyXG4gIGlmIChpc2FycmF5KHBhdGgpKSB7XHJcbiAgICByZXR1cm4gYXJyYXlUb1JlZ2V4cCgvKiogQHR5cGUgeyFBcnJheX0gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHN0cmluZ1RvUmVnZXhwKC8qKiBAdHlwZSB7c3RyaW5nfSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXHJcbn1cclxuIiwibW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIChhcnIpIHtcclxuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcclxufTtcclxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fVxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbldpdGhSZXNldCgpIHt9XG5lbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LnJlc2V0V2FybmluZ0NhY2hlID0gZW1wdHlGdW5jdGlvbjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGVsZW1lbnRUeXBlOiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW0sXG5cbiAgICBjaGVja1Byb3BUeXBlczogZW1wdHlGdW5jdGlvbldpdGhSZXNldCxcbiAgICByZXNldFdhcm5pbmdDYWNoZTogZW1wdHlGdW5jdGlvblxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKFJlYWN0SXMuaXNFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTcuMC4yXG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuLypcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG4ndXNlIHN0cmljdCc7dmFyIGFhPXJlcXVpcmUoXCJyZWFjdFwiKSxtPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLHI9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiB5KGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifWlmKCFhYSl0aHJvdyBFcnJvcih5KDIyNykpO3ZhciBiYT1uZXcgU2V0LGNhPXt9O2Z1bmN0aW9uIGRhKGEsYil7ZWEoYSxiKTtlYShhK1wiQ2FwdHVyZVwiLGIpfVxuZnVuY3Rpb24gZWEoYSxiKXtjYVthXT1iO2ZvcihhPTA7YTxiLmxlbmd0aDthKyspYmEuYWRkKGJbYV0pfVxudmFyIGZhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KSxoYT0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8saWE9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxcbmphPXt9LGthPXt9O2Z1bmN0aW9uIGxhKGEpe2lmKGlhLmNhbGwoa2EsYSkpcmV0dXJuITA7aWYoaWEuY2FsbChqYSxhKSlyZXR1cm4hMTtpZihoYS50ZXN0KGEpKXJldHVybiBrYVthXT0hMDtqYVthXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiBtYShhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIG5hKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fG1hKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gQihhLGIsYyxkLGUsZixnKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1iO3RoaXMuc2FuaXRpemVVUkw9Zjt0aGlzLnJlbW92ZUVtcHR5U3RyaW5nPWd9dmFyIEQ9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwwLCExLGEsbnVsbCwhMSwhMSl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07RFtiXT1uZXcgQihiLDEsITEsYVsxXSxudWxsLCExLCExKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwyLCExLGEsbnVsbCwhMSwhMSl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBkaXNhYmxlUGljdHVyZUluUGljdHVyZSBkaXNhYmxlUmVtb3RlUGxheWJhY2sgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbltcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMywhMCxhLG51bGwsITEsITEpfSk7W1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNCwhMSxhLG51bGwsITEsITEpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSw2LCExLGEsbnVsbCwhMSwhMSl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO3ZhciBvYT0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHBhKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKG9hLFxucGEpO0RbYl09bmV3IEIoYiwxLCExLGEsbnVsbCwhMSwhMSl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShvYSxwYSk7RFtiXT1uZXcgQihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMSwhMSl9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShvYSxwYSk7RFtiXT1uZXcgQihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLCExLCExKX0pO1tcInRhYkluZGV4XCIsXCJjcm9zc09yaWdpblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuRC54bGlua0hyZWY9bmV3IEIoXCJ4bGlua0hyZWZcIiwxLCExLFwieGxpbms6aHJlZlwiLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCEwLCExKTtbXCJzcmNcIixcImhyZWZcIixcImFjdGlvblwiLFwiZm9ybUFjdGlvblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCEwLCEwKX0pO1xuZnVuY3Rpb24gcWEoYSxiLGMsZCl7dmFyIGU9RC5oYXNPd25Qcm9wZXJ0eShiKT9EW2JdOm51bGw7dmFyIGY9bnVsbCE9PWU/MD09PWUudHlwZTpkPyExOiEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXT8hMTohMDtmfHwobmEoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP2xhKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKSl9XG52YXIgcmE9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQsc2E9NjAxMDMsdGE9NjAxMDYsdWE9NjAxMDcsd2E9NjAxMDgseGE9NjAxMTQseWE9NjAxMDksemE9NjAxMTAsQWE9NjAxMTIsQmE9NjAxMTMsQ2E9NjAxMjAsRGE9NjAxMTUsRWE9NjAxMTYsRmE9NjAxMjEsR2E9NjAxMjgsSGE9NjAxMjksSWE9NjAxMzAsSmE9NjAxMzE7XG5pZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yKXt2YXIgRT1TeW1ib2wuZm9yO3NhPUUoXCJyZWFjdC5lbGVtZW50XCIpO3RhPUUoXCJyZWFjdC5wb3J0YWxcIik7dWE9RShcInJlYWN0LmZyYWdtZW50XCIpO3dhPUUoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTt4YT1FKFwicmVhY3QucHJvZmlsZXJcIik7eWE9RShcInJlYWN0LnByb3ZpZGVyXCIpO3phPUUoXCJyZWFjdC5jb250ZXh0XCIpO0FhPUUoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTtCYT1FKFwicmVhY3Quc3VzcGVuc2VcIik7Q2E9RShcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik7RGE9RShcInJlYWN0Lm1lbW9cIik7RWE9RShcInJlYWN0LmxhenlcIik7RmE9RShcInJlYWN0LmJsb2NrXCIpO0UoXCJyZWFjdC5zY29wZVwiKTtHYT1FKFwicmVhY3Qub3BhcXVlLmlkXCIpO0hhPUUoXCJyZWFjdC5kZWJ1Z190cmFjZV9tb2RlXCIpO0lhPUUoXCJyZWFjdC5vZmZzY3JlZW5cIik7SmE9RShcInJlYWN0LmxlZ2FjeV9oaWRkZW5cIil9XG52YXIgS2E9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIExhKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1LYSYmYVtLYV18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH12YXIgTWE7ZnVuY3Rpb24gTmEoYSl7aWYodm9pZCAwPT09TWEpdHJ5e3Rocm93IEVycm9yKCk7fWNhdGNoKGMpe3ZhciBiPWMuc3RhY2sudHJpbSgpLm1hdGNoKC9cXG4oICooYXQgKT8pLyk7TWE9YiYmYlsxXXx8XCJcIn1yZXR1cm5cIlxcblwiK01hK2F9dmFyIE9hPSExO1xuZnVuY3Rpb24gUGEoYSxiKXtpZighYXx8T2EpcmV0dXJuXCJcIjtPYT0hMDt2YXIgYz1FcnJvci5wcmVwYXJlU3RhY2tUcmFjZTtFcnJvci5wcmVwYXJlU3RhY2tUcmFjZT12b2lkIDA7dHJ5e2lmKGIpaWYoYj1mdW5jdGlvbigpe3Rocm93IEVycm9yKCk7fSxPYmplY3QuZGVmaW5lUHJvcGVydHkoYi5wcm90b3R5cGUsXCJwcm9wc1wiLHtzZXQ6ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcigpO319KSxcIm9iamVjdFwiPT09dHlwZW9mIFJlZmxlY3QmJlJlZmxlY3QuY29uc3RydWN0KXt0cnl7UmVmbGVjdC5jb25zdHJ1Y3QoYixbXSl9Y2F0Y2goayl7dmFyIGQ9a31SZWZsZWN0LmNvbnN0cnVjdChhLFtdLGIpfWVsc2V7dHJ5e2IuY2FsbCgpfWNhdGNoKGspe2Q9a31hLmNhbGwoYi5wcm90b3R5cGUpfWVsc2V7dHJ5e3Rocm93IEVycm9yKCk7fWNhdGNoKGspe2Q9a31hKCl9fWNhdGNoKGspe2lmKGsmJmQmJlwic3RyaW5nXCI9PT10eXBlb2Ygay5zdGFjayl7Zm9yKHZhciBlPWsuc3RhY2suc3BsaXQoXCJcXG5cIiksXG5mPWQuc3RhY2suc3BsaXQoXCJcXG5cIiksZz1lLmxlbmd0aC0xLGg9Zi5sZW5ndGgtMTsxPD1nJiYwPD1oJiZlW2ddIT09ZltoXTspaC0tO2Zvcig7MTw9ZyYmMDw9aDtnLS0saC0tKWlmKGVbZ10hPT1mW2hdKXtpZigxIT09Z3x8MSE9PWgpe2RvIGlmKGctLSxoLS0sMD5ofHxlW2ddIT09ZltoXSlyZXR1cm5cIlxcblwiK2VbZ10ucmVwbGFjZShcIiBhdCBuZXcgXCIsXCIgYXQgXCIpO3doaWxlKDE8PWcmJjA8PWgpfWJyZWFrfX19ZmluYWxseXtPYT0hMSxFcnJvci5wcmVwYXJlU3RhY2tUcmFjZT1jfXJldHVybihhPWE/YS5kaXNwbGF5TmFtZXx8YS5uYW1lOlwiXCIpP05hKGEpOlwiXCJ9XG5mdW5jdGlvbiBRYShhKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTpyZXR1cm4gTmEoYS50eXBlKTtjYXNlIDE2OnJldHVybiBOYShcIkxhenlcIik7Y2FzZSAxMzpyZXR1cm4gTmEoXCJTdXNwZW5zZVwiKTtjYXNlIDE5OnJldHVybiBOYShcIlN1c3BlbnNlTGlzdFwiKTtjYXNlIDA6Y2FzZSAyOmNhc2UgMTU6cmV0dXJuIGE9UGEoYS50eXBlLCExKSxhO2Nhc2UgMTE6cmV0dXJuIGE9UGEoYS50eXBlLnJlbmRlciwhMSksYTtjYXNlIDIyOnJldHVybiBhPVBhKGEudHlwZS5fcmVuZGVyLCExKSxhO2Nhc2UgMTpyZXR1cm4gYT1QYShhLnR5cGUsITApLGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1cbmZ1bmN0aW9uIFJhKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgdWE6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgdGE6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIHhhOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIHdhOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgQmE6cmV0dXJuXCJTdXNwZW5zZVwiO2Nhc2UgQ2E6cmV0dXJuXCJTdXNwZW5zZUxpc3RcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgemE6cmV0dXJuKGEuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Db25zdW1lclwiO2Nhc2UgeWE6cmV0dXJuKGEuX2NvbnRleHQuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Qcm92aWRlclwiO2Nhc2UgQWE6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7XG5yZXR1cm4gYS5kaXNwbGF5TmFtZXx8KFwiXCIhPT1iP1wiRm9yd2FyZFJlZihcIitiK1wiKVwiOlwiRm9yd2FyZFJlZlwiKTtjYXNlIERhOnJldHVybiBSYShhLnR5cGUpO2Nhc2UgRmE6cmV0dXJuIFJhKGEuX3JlbmRlcik7Y2FzZSBFYTpiPWEuX3BheWxvYWQ7YT1hLl9pbml0O3RyeXtyZXR1cm4gUmEoYShiKSl9Y2F0Y2goYyl7fX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBTYShhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19ZnVuY3Rpb24gVGEoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIFVhKGEpe3ZhciBiPVRhKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiBWYShhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9VWEoYSkpfWZ1bmN0aW9uIFdhKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1UYShhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfWZ1bmN0aW9uIFhhKGEpe2E9YXx8KFwidW5kZWZpbmVkXCIhPT10eXBlb2YgZG9jdW1lbnQ/ZG9jdW1lbnQ6dm9pZCAwKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7dHJ5e3JldHVybiBhLmFjdGl2ZUVsZW1lbnR8fGEuYm9keX1jYXRjaChiKXtyZXR1cm4gYS5ib2R5fX1cbmZ1bmN0aW9uIFlhKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBtKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1mdW5jdGlvbiBaYShhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz1TYShudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uICRhKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmcWEoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIGFiKGEsYil7JGEoYSxiKTt2YXIgYz1TYShiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT9iYihhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZiYihhLGIudHlwZSxTYShiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIGNiKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9ISFhLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWQ7XCJcIiE9PWMmJihhLm5hbWU9Yyl9XG5mdW5jdGlvbiBiYihhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fFhhKGEub3duZXJEb2N1bWVudCkhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX1mdW5jdGlvbiBkYihhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsIT1hJiYoYis9YSl9KTtyZXR1cm4gYn1mdW5jdGlvbiBlYihhLGIpe2E9bSh7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPWRiKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1cbmZ1bmN0aW9uIGZiKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIitTYShjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gZ2IoYSxiKXtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXRocm93IEVycm9yKHkoOTEpKTtyZXR1cm4gbSh7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBoYihhLGIpe3ZhciBjPWIudmFsdWU7aWYobnVsbD09Yyl7Yz1iLmNoaWxkcmVuO2I9Yi5kZWZhdWx0VmFsdWU7aWYobnVsbCE9Yyl7aWYobnVsbCE9Yil0aHJvdyBFcnJvcih5KDkyKSk7aWYoQXJyYXkuaXNBcnJheShjKSl7aWYoISgxPj1jLmxlbmd0aCkpdGhyb3cgRXJyb3IoeSg5MykpO2M9Y1swXX1iPWN9bnVsbD09YiYmKGI9XCJcIik7Yz1ifWEuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOlNhKGMpfX1cbmZ1bmN0aW9uIGliKGEsYil7dmFyIGM9U2EoYi52YWx1ZSksZD1TYShiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIGpiKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJlwiXCIhPT1iJiZudWxsIT09YiYmKGEudmFsdWU9Yil9dmFyIGtiPXtodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifTtcbmZ1bmN0aW9uIGxiKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gbWIoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP2xiKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIG5iLG9iPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihhLm5hbWVzcGFjZVVSSSE9PWtiLnN2Z3x8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle25iPW5ifHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO25iLmlubmVySFRNTD1cIjxzdmc+XCIrYi52YWx1ZU9mKCkudG9TdHJpbmcoKStcIjwvc3ZnPlwiO2ZvcihiPW5iLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIHBiKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9XG52YXIgcWI9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLFxuZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0scmI9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKHFiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JiLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7cWJbYl09cWJbYV19KX0pO2Z1bmN0aW9uIHNiKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxxYi5oYXNPd25Qcm9wZXJ0eShhKSYmcWJbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gdGIoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9c2IoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgdWI9bSh7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIHZiKGEsYil7aWYoYil7aWYodWJbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih5KDEzNyxhKSk7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl7aWYobnVsbCE9Yi5jaGlsZHJlbil0aHJvdyBFcnJvcih5KDYwKSk7aWYoIShcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih5KDYxKSk7fWlmKG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZSl0aHJvdyBFcnJvcih5KDYyKSk7fX1cbmZ1bmN0aW9uIHdiKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX1mdW5jdGlvbiB4YihhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9dmFyIHliPW51bGwsemI9bnVsbCxBYj1udWxsO1xuZnVuY3Rpb24gQmIoYSl7aWYoYT1DYihhKSl7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIHliKXRocm93IEVycm9yKHkoMjgwKSk7dmFyIGI9YS5zdGF0ZU5vZGU7YiYmKGI9RGIoYikseWIoYS5zdGF0ZU5vZGUsYS50eXBlLGIpKX19ZnVuY3Rpb24gRWIoYSl7emI/QWI/QWIucHVzaChhKTpBYj1bYV06emI9YX1mdW5jdGlvbiBGYigpe2lmKHpiKXt2YXIgYT16YixiPUFiO0FiPXpiPW51bGw7QmIoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKUJiKGJbYV0pfX1mdW5jdGlvbiBHYihhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIEhiKGEsYixjLGQsZSl7cmV0dXJuIGEoYixjLGQsZSl9ZnVuY3Rpb24gSWIoKXt9dmFyIEpiPUdiLEtiPSExLExiPSExO2Z1bmN0aW9uIE1iKCl7aWYobnVsbCE9PXpifHxudWxsIT09QWIpSWIoKSxGYigpfVxuZnVuY3Rpb24gTmIoYSxiLGMpe2lmKExiKXJldHVybiBhKGIsYyk7TGI9ITA7dHJ5e3JldHVybiBKYihhLGIsYyl9ZmluYWxseXtMYj0hMSxNYigpfX1cbmZ1bmN0aW9uIE9iKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7dmFyIGQ9RGIoYyk7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRW50ZXJcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2lmKGMmJlwiZnVuY3Rpb25cIiE9PVxudHlwZW9mIGMpdGhyb3cgRXJyb3IoeSgyMzEsYix0eXBlb2YgYykpO3JldHVybiBjfXZhciBQYj0hMTtpZihmYSl0cnl7dmFyIFFiPXt9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShRYixcInBhc3NpdmVcIix7Z2V0OmZ1bmN0aW9uKCl7UGI9ITB9fSk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJ0ZXN0XCIsUWIsUWIpO3dpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwidGVzdFwiLFFiLFFiKX1jYXRjaChhKXtQYj0hMX1mdW5jdGlvbiBSYihhLGIsYyxkLGUsZixnLGgsayl7dmFyIGw9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsbCl9Y2F0Y2gobil7dGhpcy5vbkVycm9yKG4pfX12YXIgU2I9ITEsVGI9bnVsbCxVYj0hMSxWYj1udWxsLFdiPXtvbkVycm9yOmZ1bmN0aW9uKGEpe1NiPSEwO1RiPWF9fTtmdW5jdGlvbiBYYihhLGIsYyxkLGUsZixnLGgsayl7U2I9ITE7VGI9bnVsbDtSYi5hcHBseShXYixhcmd1bWVudHMpfVxuZnVuY3Rpb24gWWIoYSxiLGMsZCxlLGYsZyxoLGspe1hiLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihTYil7aWYoU2Ipe3ZhciBsPVRiO1NiPSExO1RiPW51bGx9ZWxzZSB0aHJvdyBFcnJvcih5KDE5OCkpO1VifHwoVWI9ITAsVmI9bCl9fWZ1bmN0aW9uIFpiKGEpe3ZhciBiPWEsYz1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7Yi5yZXR1cm47KWI9Yi5yZXR1cm47ZWxzZXthPWI7ZG8gYj1hLDAhPT0oYi5mbGFncyYxMDI2KSYmKGM9Yi5yZXR1cm4pLGE9Yi5yZXR1cm47d2hpbGUoYSl9cmV0dXJuIDM9PT1iLnRhZz9jOm51bGx9ZnVuY3Rpb24gJGIoYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9YS5tZW1vaXplZFN0YXRlO251bGw9PT1iJiYoYT1hLmFsdGVybmF0ZSxudWxsIT09YSYmKGI9YS5tZW1vaXplZFN0YXRlKSk7aWYobnVsbCE9PWIpcmV0dXJuIGIuZGVoeWRyYXRlZH1yZXR1cm4gbnVsbH1mdW5jdGlvbiBhYyhhKXtpZihaYihhKSE9PWEpdGhyb3cgRXJyb3IoeSgxODgpKTt9XG5mdW5jdGlvbiBiYyhhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYil7Yj1aYihhKTtpZihudWxsPT09Yil0aHJvdyBFcnJvcih5KDE4OCkpO3JldHVybiBiIT09YT9udWxsOmF9Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWMucmV0dXJuO2lmKG51bGw9PT1lKWJyZWFrO3ZhciBmPWUuYWx0ZXJuYXRlO2lmKG51bGw9PT1mKXtkPWUucmV0dXJuO2lmKG51bGwhPT1kKXtjPWQ7Y29udGludWV9YnJlYWt9aWYoZS5jaGlsZD09PWYuY2hpbGQpe2ZvcihmPWUuY2hpbGQ7Zjspe2lmKGY9PT1jKXJldHVybiBhYyhlKSxhO2lmKGY9PT1kKXJldHVybiBhYyhlKSxiO2Y9Zi5zaWJsaW5nfXRocm93IEVycm9yKHkoMTg4KSk7fWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2Zvcih2YXIgZz0hMSxoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PVxuYyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpdGhyb3cgRXJyb3IoeSgxODkpKTt9fWlmKGMuYWx0ZXJuYXRlIT09ZCl0aHJvdyBFcnJvcih5KDE5MCkpO31pZigzIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgxODgpKTtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIGNjKGEpe2E9YmMoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBkYyhhLGIpe2Zvcih2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09Yjspe2lmKGI9PT1hfHxiPT09YylyZXR1cm4hMDtiPWIucmV0dXJufXJldHVybiExfXZhciBlYyxmYyxnYyxoYyxpYz0hMSxqYz1bXSxrYz1udWxsLGxjPW51bGwsbWM9bnVsbCxuYz1uZXcgTWFwLG9jPW5ldyBNYXAscGM9W10scWM9XCJtb3VzZWRvd24gbW91c2V1cCB0b3VjaGNhbmNlbCB0b3VjaGVuZCB0b3VjaHN0YXJ0IGF1eGNsaWNrIGRibGNsaWNrIHBvaW50ZXJjYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlcnVwIGRyYWdlbmQgZHJhZ3N0YXJ0IGRyb3AgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIGlucHV0IHRleHRJbnB1dCBjb3B5IGN1dCBwYXN0ZSBjbGljayBjaGFuZ2UgY29udGV4dG1lbnUgcmVzZXQgc3VibWl0XCIuc3BsaXQoXCIgXCIpO1xuZnVuY3Rpb24gcmMoYSxiLGMsZCxlKXtyZXR1cm57YmxvY2tlZE9uOmEsZG9tRXZlbnROYW1lOmIsZXZlbnRTeXN0ZW1GbGFnczpjfDE2LG5hdGl2ZUV2ZW50OmUsdGFyZ2V0Q29udGFpbmVyczpbZF19fWZ1bmN0aW9uIHNjKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c2luXCI6Y2FzZSBcImZvY3Vzb3V0XCI6a2M9bnVsbDticmVhaztjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmxjPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJtb3VzZW91dFwiOm1jPW51bGw7YnJlYWs7Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpuYy5kZWxldGUoYi5wb2ludGVySWQpO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpvYy5kZWxldGUoYi5wb2ludGVySWQpfX1cbmZ1bmN0aW9uIHRjKGEsYixjLGQsZSxmKXtpZihudWxsPT09YXx8YS5uYXRpdmVFdmVudCE9PWYpcmV0dXJuIGE9cmMoYixjLGQsZSxmKSxudWxsIT09YiYmKGI9Q2IoYiksbnVsbCE9PWImJmZjKGIpKSxhO2EuZXZlbnRTeXN0ZW1GbGFnc3w9ZDtiPWEudGFyZ2V0Q29udGFpbmVycztudWxsIT09ZSYmLTE9PT1iLmluZGV4T2YoZSkmJmIucHVzaChlKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIHVjKGEsYixjLGQsZSl7c3dpdGNoKGIpe2Nhc2UgXCJmb2N1c2luXCI6cmV0dXJuIGtjPXRjKGtjLGEsYixjLGQsZSksITA7Y2FzZSBcImRyYWdlbnRlclwiOnJldHVybiBsYz10YyhsYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJtb3VzZW92ZXJcIjpyZXR1cm4gbWM9dGMobWMsYSxiLGMsZCxlKSwhMDtjYXNlIFwicG9pbnRlcm92ZXJcIjp2YXIgZj1lLnBvaW50ZXJJZDtuYy5zZXQoZix0YyhuYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSk7cmV0dXJuITA7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6cmV0dXJuIGY9ZS5wb2ludGVySWQsb2Muc2V0KGYsdGMob2MuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpLCEwfXJldHVybiExfVxuZnVuY3Rpb24gdmMoYSl7dmFyIGI9d2MoYS50YXJnZXQpO2lmKG51bGwhPT1iKXt2YXIgYz1aYihiKTtpZihudWxsIT09YylpZihiPWMudGFnLDEzPT09Yil7aWYoYj0kYihjKSxudWxsIT09Yil7YS5ibG9ja2VkT249YjtoYyhhLmxhbmVQcmlvcml0eSxmdW5jdGlvbigpe3IudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KGEucHJpb3JpdHksZnVuY3Rpb24oKXtnYyhjKX0pfSk7cmV0dXJufX1lbHNlIGlmKDM9PT1iJiZjLnN0YXRlTm9kZS5oeWRyYXRlKXthLmJsb2NrZWRPbj0zPT09Yy50YWc/Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO3JldHVybn19YS5ibG9ja2VkT249bnVsbH1cbmZ1bmN0aW9uIHhjKGEpe2lmKG51bGwhPT1hLmJsb2NrZWRPbilyZXR1cm4hMTtmb3IodmFyIGI9YS50YXJnZXRDb250YWluZXJzOzA8Yi5sZW5ndGg7KXt2YXIgYz15YyhhLmRvbUV2ZW50TmFtZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYlswXSxhLm5hdGl2ZUV2ZW50KTtpZihudWxsIT09YylyZXR1cm4gYj1DYihjKSxudWxsIT09YiYmZmMoYiksYS5ibG9ja2VkT249YywhMTtiLnNoaWZ0KCl9cmV0dXJuITB9ZnVuY3Rpb24gemMoYSxiLGMpe3hjKGEpJiZjLmRlbGV0ZShiKX1cbmZ1bmN0aW9uIEFjKCl7Zm9yKGljPSExOzA8amMubGVuZ3RoOyl7dmFyIGE9amNbMF07aWYobnVsbCE9PWEuYmxvY2tlZE9uKXthPUNiKGEuYmxvY2tlZE9uKTtudWxsIT09YSYmZWMoYSk7YnJlYWt9Zm9yKHZhciBiPWEudGFyZ2V0Q29udGFpbmVyczswPGIubGVuZ3RoOyl7dmFyIGM9eWMoYS5kb21FdmVudE5hbWUsYS5ldmVudFN5c3RlbUZsYWdzLGJbMF0sYS5uYXRpdmVFdmVudCk7aWYobnVsbCE9PWMpe2EuYmxvY2tlZE9uPWM7YnJlYWt9Yi5zaGlmdCgpfW51bGw9PT1hLmJsb2NrZWRPbiYmamMuc2hpZnQoKX1udWxsIT09a2MmJnhjKGtjKSYmKGtjPW51bGwpO251bGwhPT1sYyYmeGMobGMpJiYobGM9bnVsbCk7bnVsbCE9PW1jJiZ4YyhtYykmJihtYz1udWxsKTtuYy5mb3JFYWNoKHpjKTtvYy5mb3JFYWNoKHpjKX1cbmZ1bmN0aW9uIEJjKGEsYil7YS5ibG9ja2VkT249PT1iJiYoYS5ibG9ja2VkT249bnVsbCxpY3x8KGljPSEwLHIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhyLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LEFjKSkpfVxuZnVuY3Rpb24gQ2MoYSl7ZnVuY3Rpb24gYihiKXtyZXR1cm4gQmMoYixhKX1pZigwPGpjLmxlbmd0aCl7QmMoamNbMF0sYSk7Zm9yKHZhciBjPTE7YzxqYy5sZW5ndGg7YysrKXt2YXIgZD1qY1tjXTtkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKX19bnVsbCE9PWtjJiZCYyhrYyxhKTtudWxsIT09bGMmJkJjKGxjLGEpO251bGwhPT1tYyYmQmMobWMsYSk7bmMuZm9yRWFjaChiKTtvYy5mb3JFYWNoKGIpO2ZvcihjPTA7YzxwYy5sZW5ndGg7YysrKWQ9cGNbY10sZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCk7Zm9yKDswPHBjLmxlbmd0aCYmKGM9cGNbMF0sbnVsbD09PWMuYmxvY2tlZE9uKTspdmMoYyksbnVsbD09PWMuYmxvY2tlZE9uJiZwYy5zaGlmdCgpfVxuZnVuY3Rpb24gRGMoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgRWM9e2FuaW1hdGlvbmVuZDpEYyhcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpEYyhcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OkRjKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOkRjKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sRmM9e30sR2M9e307XG5mYSYmKEdjPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIEVjLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIEVjLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIEVjLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIEVjLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7ZnVuY3Rpb24gSGMoYSl7aWYoRmNbYV0pcmV0dXJuIEZjW2FdO2lmKCFFY1thXSlyZXR1cm4gYTt2YXIgYj1FY1thXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBHYylyZXR1cm4gRmNbYV09YltjXTtyZXR1cm4gYX1cbnZhciBJYz1IYyhcImFuaW1hdGlvbmVuZFwiKSxKYz1IYyhcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxLYz1IYyhcImFuaW1hdGlvbnN0YXJ0XCIpLExjPUhjKFwidHJhbnNpdGlvbmVuZFwiKSxNYz1uZXcgTWFwLE5jPW5ldyBNYXAsT2M9W1wiYWJvcnRcIixcImFib3J0XCIsSWMsXCJhbmltYXRpb25FbmRcIixKYyxcImFuaW1hdGlvbkl0ZXJhdGlvblwiLEtjLFwiYW5pbWF0aW9uU3RhcnRcIixcImNhbnBsYXlcIixcImNhblBsYXlcIixcImNhbnBsYXl0aHJvdWdoXCIsXCJjYW5QbGF5VGhyb3VnaFwiLFwiZHVyYXRpb25jaGFuZ2VcIixcImR1cmF0aW9uQ2hhbmdlXCIsXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCIsXCJlbmNyeXB0ZWRcIixcImVuY3J5cHRlZFwiLFwiZW5kZWRcIixcImVuZGVkXCIsXCJlcnJvclwiLFwiZXJyb3JcIixcImdvdHBvaW50ZXJjYXB0dXJlXCIsXCJnb3RQb2ludGVyQ2FwdHVyZVwiLFwibG9hZFwiLFwibG9hZFwiLFwibG9hZGVkZGF0YVwiLFwibG9hZGVkRGF0YVwiLFwibG9hZGVkbWV0YWRhdGFcIixcImxvYWRlZE1ldGFkYXRhXCIsXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiLFxuXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiLFwicGxheWluZ1wiLFwicGxheWluZ1wiLFwicHJvZ3Jlc3NcIixcInByb2dyZXNzXCIsXCJzZWVraW5nXCIsXCJzZWVraW5nXCIsXCJzdGFsbGVkXCIsXCJzdGFsbGVkXCIsXCJzdXNwZW5kXCIsXCJzdXNwZW5kXCIsXCJ0aW1ldXBkYXRlXCIsXCJ0aW1lVXBkYXRlXCIsTGMsXCJ0cmFuc2l0aW9uRW5kXCIsXCJ3YWl0aW5nXCIsXCJ3YWl0aW5nXCJdO2Z1bmN0aW9uIFBjKGEsYil7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKz0yKXt2YXIgZD1hW2NdLGU9YVtjKzFdO2U9XCJvblwiKyhlWzBdLnRvVXBwZXJDYXNlKCkrZS5zbGljZSgxKSk7TmMuc2V0KGQsYik7TWMuc2V0KGQsZSk7ZGEoZSxbZF0pfX12YXIgUWM9ci51bnN0YWJsZV9ub3c7UWMoKTt2YXIgRj04O1xuZnVuY3Rpb24gUmMoYSl7aWYoMCE9PSgxJmEpKXJldHVybiBGPTE1LDE7aWYoMCE9PSgyJmEpKXJldHVybiBGPTE0LDI7aWYoMCE9PSg0JmEpKXJldHVybiBGPTEzLDQ7dmFyIGI9MjQmYTtpZigwIT09YilyZXR1cm4gRj0xMixiO2lmKDAhPT0oYSYzMikpcmV0dXJuIEY9MTEsMzI7Yj0xOTImYTtpZigwIT09YilyZXR1cm4gRj0xMCxiO2lmKDAhPT0oYSYyNTYpKXJldHVybiBGPTksMjU2O2I9MzU4NCZhO2lmKDAhPT1iKXJldHVybiBGPTgsYjtpZigwIT09KGEmNDA5NikpcmV0dXJuIEY9Nyw0MDk2O2I9NDE4NjExMiZhO2lmKDAhPT1iKXJldHVybiBGPTYsYjtiPTYyOTE0NTYwJmE7aWYoMCE9PWIpcmV0dXJuIEY9NSxiO2lmKGEmNjcxMDg4NjQpcmV0dXJuIEY9NCw2NzEwODg2NDtpZigwIT09KGEmMTM0MjE3NzI4KSlyZXR1cm4gRj0zLDEzNDIxNzcyODtiPTgwNTMwNjM2OCZhO2lmKDAhPT1iKXJldHVybiBGPTIsYjtpZigwIT09KDEwNzM3NDE4MjQmYSkpcmV0dXJuIEY9MSwxMDczNzQxODI0O1xuRj04O3JldHVybiBhfWZ1bmN0aW9uIFNjKGEpe3N3aXRjaChhKXtjYXNlIDk5OnJldHVybiAxNTtjYXNlIDk4OnJldHVybiAxMDtjYXNlIDk3OmNhc2UgOTY6cmV0dXJuIDg7Y2FzZSA5NTpyZXR1cm4gMjtkZWZhdWx0OnJldHVybiAwfX1mdW5jdGlvbiBUYyhhKXtzd2l0Y2goYSl7Y2FzZSAxNTpjYXNlIDE0OnJldHVybiA5OTtjYXNlIDEzOmNhc2UgMTI6Y2FzZSAxMTpjYXNlIDEwOnJldHVybiA5ODtjYXNlIDk6Y2FzZSA4OmNhc2UgNzpjYXNlIDY6Y2FzZSA0OmNhc2UgNTpyZXR1cm4gOTc7Y2FzZSAzOmNhc2UgMjpjYXNlIDE6cmV0dXJuIDk1O2Nhc2UgMDpyZXR1cm4gOTA7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDM1OCxhKSk7fX1cbmZ1bmN0aW9uIFVjKGEsYil7dmFyIGM9YS5wZW5kaW5nTGFuZXM7aWYoMD09PWMpcmV0dXJuIEY9MDt2YXIgZD0wLGU9MCxmPWEuZXhwaXJlZExhbmVzLGc9YS5zdXNwZW5kZWRMYW5lcyxoPWEucGluZ2VkTGFuZXM7aWYoMCE9PWYpZD1mLGU9Rj0xNTtlbHNlIGlmKGY9YyYxMzQyMTc3MjcsMCE9PWYpe3ZhciBrPWYmfmc7MCE9PWs/KGQ9UmMoayksZT1GKTooaCY9ZiwwIT09aCYmKGQ9UmMoaCksZT1GKSl9ZWxzZSBmPWMmfmcsMCE9PWY/KGQ9UmMoZiksZT1GKTowIT09aCYmKGQ9UmMoaCksZT1GKTtpZigwPT09ZClyZXR1cm4gMDtkPTMxLVZjKGQpO2Q9YyYoKDA+ZD8wOjE8PGQpPDwxKS0xO2lmKDAhPT1iJiZiIT09ZCYmMD09PShiJmcpKXtSYyhiKTtpZihlPD1GKXJldHVybiBiO0Y9ZX1iPWEuZW50YW5nbGVkTGFuZXM7aWYoMCE9PWIpZm9yKGE9YS5lbnRhbmdsZW1lbnRzLGImPWQ7MDxiOyljPTMxLVZjKGIpLGU9MTw8YyxkfD1hW2NdLGImPX5lO3JldHVybiBkfVxuZnVuY3Rpb24gV2MoYSl7YT1hLnBlbmRpbmdMYW5lcyYtMTA3Mzc0MTgyNTtyZXR1cm4gMCE9PWE/YTphJjEwNzM3NDE4MjQ/MTA3Mzc0MTgyNDowfWZ1bmN0aW9uIFhjKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTU6cmV0dXJuIDE7Y2FzZSAxNDpyZXR1cm4gMjtjYXNlIDEyOnJldHVybiBhPVljKDI0Jn5iKSwwPT09YT9YYygxMCxiKTphO2Nhc2UgMTA6cmV0dXJuIGE9WWMoMTkyJn5iKSwwPT09YT9YYyg4LGIpOmE7Y2FzZSA4OnJldHVybiBhPVljKDM1ODQmfmIpLDA9PT1hJiYoYT1ZYyg0MTg2MTEyJn5iKSwwPT09YSYmKGE9NTEyKSksYTtjYXNlIDI6cmV0dXJuIGI9WWMoODA1MzA2MzY4Jn5iKSwwPT09YiYmKGI9MjY4NDM1NDU2KSxifXRocm93IEVycm9yKHkoMzU4LGEpKTt9ZnVuY3Rpb24gWWMoYSl7cmV0dXJuIGEmLWF9ZnVuY3Rpb24gWmMoYSl7Zm9yKHZhciBiPVtdLGM9MDszMT5jO2MrKyliLnB1c2goYSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiAkYyhhLGIsYyl7YS5wZW5kaW5nTGFuZXN8PWI7dmFyIGQ9Yi0xO2Euc3VzcGVuZGVkTGFuZXMmPWQ7YS5waW5nZWRMYW5lcyY9ZDthPWEuZXZlbnRUaW1lcztiPTMxLVZjKGIpO2FbYl09Y312YXIgVmM9TWF0aC5jbHozMj9NYXRoLmNsejMyOmFkLGJkPU1hdGgubG9nLGNkPU1hdGguTE4yO2Z1bmN0aW9uIGFkKGEpe3JldHVybiAwPT09YT8zMjozMS0oYmQoYSkvY2R8MCl8MH12YXIgZGQ9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxlZD1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxmZD0hMDtmdW5jdGlvbiBnZChhLGIsYyxkKXtLYnx8SWIoKTt2YXIgZT1oZCxmPUtiO0tiPSEwO3RyeXtIYihlLGEsYixjLGQpfWZpbmFsbHl7KEtiPWYpfHxNYigpfX1mdW5jdGlvbiBpZChhLGIsYyxkKXtlZChkZCxoZC5iaW5kKG51bGwsYSxiLGMsZCkpfVxuZnVuY3Rpb24gaGQoYSxiLGMsZCl7aWYoZmQpe3ZhciBlO2lmKChlPTA9PT0oYiY0KSkmJjA8amMubGVuZ3RoJiYtMTxxYy5pbmRleE9mKGEpKWE9cmMobnVsbCxhLGIsYyxkKSxqYy5wdXNoKGEpO2Vsc2V7dmFyIGY9eWMoYSxiLGMsZCk7aWYobnVsbD09PWYpZSYmc2MoYSxkKTtlbHNle2lmKGUpe2lmKC0xPHFjLmluZGV4T2YoYSkpe2E9cmMoZixhLGIsYyxkKTtqYy5wdXNoKGEpO3JldHVybn1pZih1YyhmLGEsYixjLGQpKXJldHVybjtzYyhhLGQpfWpkKGEsYixkLG51bGwsYyl9fX19XG5mdW5jdGlvbiB5YyhhLGIsYyxkKXt2YXIgZT14YihkKTtlPXdjKGUpO2lmKG51bGwhPT1lKXt2YXIgZj1aYihlKTtpZihudWxsPT09ZillPW51bGw7ZWxzZXt2YXIgZz1mLnRhZztpZigxMz09PWcpe2U9JGIoZik7aWYobnVsbCE9PWUpcmV0dXJuIGU7ZT1udWxsfWVsc2UgaWYoMz09PWcpe2lmKGYuc3RhdGVOb2RlLmh5ZHJhdGUpcmV0dXJuIDM9PT1mLnRhZz9mLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7ZT1udWxsfWVsc2UgZiE9PWUmJihlPW51bGwpfX1qZChhLGIsZCxlLGMpO3JldHVybiBudWxsfXZhciBrZD1udWxsLGxkPW51bGwsbWQ9bnVsbDtcbmZ1bmN0aW9uIG5kKCl7aWYobWQpcmV0dXJuIG1kO3ZhciBhLGI9bGQsYz1iLmxlbmd0aCxkLGU9XCJ2YWx1ZVwiaW4ga2Q/a2QudmFsdWU6a2QudGV4dENvbnRlbnQsZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtyZXR1cm4gbWQ9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKX1mdW5jdGlvbiBvZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1mdW5jdGlvbiBwZCgpe3JldHVybiEwfWZ1bmN0aW9uIHFkKCl7cmV0dXJuITF9XG5mdW5jdGlvbiByZChhKXtmdW5jdGlvbiBiKGIsZCxlLGYsZyl7dGhpcy5fcmVhY3ROYW1lPWI7dGhpcy5fdGFyZ2V0SW5zdD1lO3RoaXMudHlwZT1kO3RoaXMubmF0aXZlRXZlbnQ9Zjt0aGlzLnRhcmdldD1nO3RoaXMuY3VycmVudFRhcmdldD1udWxsO2Zvcih2YXIgYyBpbiBhKWEuaGFzT3duUHJvcGVydHkoYykmJihiPWFbY10sdGhpc1tjXT1iP2IoZik6ZltjXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWYuZGVmYXVsdFByZXZlbnRlZD9mLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1mLnJldHVyblZhbHVlKT9wZDpxZDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXFkO3JldHVybiB0aGlzfW0oYi5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJlxuKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPXBkKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXBkKX0scGVyc2lzdDpmdW5jdGlvbigpe30saXNQZXJzaXN0ZW50OnBkfSk7cmV0dXJuIGJ9XG52YXIgc2Q9e2V2ZW50UGhhc2U6MCxidWJibGVzOjAsY2FuY2VsYWJsZTowLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6MCxpc1RydXN0ZWQ6MH0sdGQ9cmQoc2QpLHVkPW0oe30sc2Qse3ZpZXc6MCxkZXRhaWw6MH0pLHZkPXJkKHVkKSx3ZCx4ZCx5ZCxBZD1tKHt9LHVkLHtzY3JlZW5YOjAsc2NyZWVuWTowLGNsaWVudFg6MCxjbGllbnRZOjAscGFnZVg6MCxwYWdlWTowLGN0cmxLZXk6MCxzaGlmdEtleTowLGFsdEtleTowLG1ldGFLZXk6MCxnZXRNb2RpZmllclN0YXRlOnpkLGJ1dHRvbjowLGJ1dHRvbnM6MCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiB2b2lkIDA9PT1hLnJlbGF0ZWRUYXJnZXQ/YS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50OmEucmVsYXRlZFRhcmdldH0sbW92ZW1lbnRYOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRYXCJpblxuYSlyZXR1cm4gYS5tb3ZlbWVudFg7YSE9PXlkJiYoeWQmJlwibW91c2Vtb3ZlXCI9PT1hLnR5cGU/KHdkPWEuc2NyZWVuWC15ZC5zY3JlZW5YLHhkPWEuc2NyZWVuWS15ZC5zY3JlZW5ZKTp4ZD13ZD0wLHlkPWEpO3JldHVybiB3ZH0sbW92ZW1lbnRZOmZ1bmN0aW9uKGEpe3JldHVyblwibW92ZW1lbnRZXCJpbiBhP2EubW92ZW1lbnRZOnhkfX0pLEJkPXJkKEFkKSxDZD1tKHt9LEFkLHtkYXRhVHJhbnNmZXI6MH0pLERkPXJkKENkKSxFZD1tKHt9LHVkLHtyZWxhdGVkVGFyZ2V0OjB9KSxGZD1yZChFZCksR2Q9bSh7fSxzZCx7YW5pbWF0aW9uTmFtZTowLGVsYXBzZWRUaW1lOjAscHNldWRvRWxlbWVudDowfSksSGQ9cmQoR2QpLElkPW0oe30sc2Qse2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxKZD1yZChJZCksS2Q9bSh7fSxzZCx7ZGF0YTowfSksTGQ9cmQoS2QpLE1kPXtFc2M6XCJFc2NhcGVcIixcblNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LE5kPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLDExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLFxuMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSxPZD17QWx0OlwiYWx0S2V5XCIsQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gUGQoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1PZFthXSk/ISFiW2FdOiExfWZ1bmN0aW9uIHpkKCl7cmV0dXJuIFBkfVxudmFyIFFkPW0oe30sdWQse2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9TWRbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9b2QoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP05kW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sY29kZTowLGxvY2F0aW9uOjAsY3RybEtleTowLHNoaWZ0S2V5OjAsYWx0S2V5OjAsbWV0YUtleTowLHJlcGVhdDowLGxvY2FsZTowLGdldE1vZGlmaWVyU3RhdGU6emQsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP29kKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/b2QoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSxSZD1yZChRZCksU2Q9bSh7fSxBZCx7cG9pbnRlcklkOjAsd2lkdGg6MCxoZWlnaHQ6MCxwcmVzc3VyZTowLHRhbmdlbnRpYWxQcmVzc3VyZTowLHRpbHRYOjAsdGlsdFk6MCx0d2lzdDowLHBvaW50ZXJUeXBlOjAsaXNQcmltYXJ5OjB9KSxUZD1yZChTZCksVWQ9bSh7fSx1ZCx7dG91Y2hlczowLHRhcmdldFRvdWNoZXM6MCxjaGFuZ2VkVG91Y2hlczowLGFsdEtleTowLG1ldGFLZXk6MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxnZXRNb2RpZmllclN0YXRlOnpkfSksVmQ9cmQoVWQpLFdkPW0oe30sc2Qse3Byb3BlcnR5TmFtZTowLGVsYXBzZWRUaW1lOjAscHNldWRvRWxlbWVudDowfSksWGQ9cmQoV2QpLFlkPW0oe30sQWQse2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpbiBhPy1hLndoZWVsRGVsdGFYOjB9LFxuZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOjAsZGVsdGFNb2RlOjB9KSxaZD1yZChZZCksJGQ9WzksMTMsMjcsMzJdLGFlPWZhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxiZT1udWxsO2ZhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihiZT1kb2N1bWVudC5kb2N1bWVudE1vZGUpO3ZhciBjZT1mYSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIWJlLGRlPWZhJiYoIWFlfHxiZSYmODxiZSYmMTE+PWJlKSxlZT1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxmZT0hMTtcbmZ1bmN0aW9uIGdlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09JGQuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImZvY3Vzb3V0XCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gaGUoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgaWU9ITE7ZnVuY3Rpb24gamUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIGhlKGIpO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDtmZT0hMDtyZXR1cm4gZWU7Y2FzZSBcInRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09ZWUmJmZlP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIGtlKGEsYil7aWYoaWUpcmV0dXJuXCJjb21wb3NpdGlvbmVuZFwiPT09YXx8IWFlJiZnZShhLGIpPyhhPW5kKCksbWQ9bGQ9a2Q9bnVsbCxpZT0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwicGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwia2V5cHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gZGUmJlwia29cIiE9PWIubG9jYWxlP251bGw6Yi5kYXRhO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIGxlPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIG1lKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhbGVbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfWZ1bmN0aW9uIG5lKGEsYixjLGQpe0ViKGQpO2I9b2UoYixcIm9uQ2hhbmdlXCIpOzA8Yi5sZW5ndGgmJihjPW5ldyB0ZChcIm9uQ2hhbmdlXCIsXCJjaGFuZ2VcIixudWxsLGMsZCksYS5wdXNoKHtldmVudDpjLGxpc3RlbmVyczpifSkpfXZhciBwZT1udWxsLHFlPW51bGw7ZnVuY3Rpb24gcmUoYSl7c2UoYSwwKX1mdW5jdGlvbiB0ZShhKXt2YXIgYj11ZShhKTtpZihXYShiKSlyZXR1cm4gYX1cbmZ1bmN0aW9uIHZlKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIHdlPSExO2lmKGZhKXt2YXIgeGU7aWYoZmEpe3ZhciB5ZT1cIm9uaW5wdXRcImluIGRvY3VtZW50O2lmKCF5ZSl7dmFyIHplPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7emUuc2V0QXR0cmlidXRlKFwib25pbnB1dFwiLFwicmV0dXJuO1wiKTt5ZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgemUub25pbnB1dH14ZT15ZX1lbHNlIHhlPSExO3dlPXhlJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpfWZ1bmN0aW9uIEFlKCl7cGUmJihwZS5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixCZSkscWU9cGU9bnVsbCl9ZnVuY3Rpb24gQmUoYSl7aWYoXCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJnRlKHFlKSl7dmFyIGI9W107bmUoYixxZSxhLHhiKGEpKTthPXJlO2lmKEtiKWEoYik7ZWxzZXtLYj0hMDt0cnl7R2IoYSxiKX1maW5hbGx5e0tiPSExLE1iKCl9fX19XG5mdW5jdGlvbiBDZShhLGIsYyl7XCJmb2N1c2luXCI9PT1hPyhBZSgpLHBlPWIscWU9YyxwZS5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixCZSkpOlwiZm9jdXNvdXRcIj09PWEmJkFlKCl9ZnVuY3Rpb24gRGUoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gdGUocWUpfWZ1bmN0aW9uIEVlKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gdGUoYil9ZnVuY3Rpb24gRmUoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gdGUoYil9ZnVuY3Rpb24gR2UoYSxiKXtyZXR1cm4gYT09PWImJigwIT09YXx8MS9hPT09MS9iKXx8YSE9PWEmJmIhPT1ifXZhciBIZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgT2JqZWN0LmlzP09iamVjdC5pczpHZSxJZT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuZnVuY3Rpb24gSmUoYSxiKXtpZihIZShhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIUllLmNhbGwoYixjW2RdKXx8IUhlKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gS2UoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfVxuZnVuY3Rpb24gTGUoYSxiKXt2YXIgYz1LZShhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1LZShjKX19ZnVuY3Rpb24gTWUoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9NZShhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9XG5mdW5jdGlvbiBOZSgpe2Zvcih2YXIgYT13aW5kb3csYj1YYSgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e3ZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYi5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWZ9Y2F0Y2goZCl7Yz0hMX1pZihjKWE9Yi5jb250ZW50V2luZG93O2Vsc2UgYnJlYWs7Yj1YYShhLmRvY3VtZW50KX1yZXR1cm4gYn1mdW5jdGlvbiBPZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxudmFyIFBlPWZhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsUWU9bnVsbCxSZT1udWxsLFNlPW51bGwsVGU9ITE7XG5mdW5jdGlvbiBVZShhLGIsYyl7dmFyIGQ9Yy53aW5kb3c9PT1jP2MuZG9jdW1lbnQ6OT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQ7VGV8fG51bGw9PVFlfHxRZSE9PVhhKGQpfHwoZD1RZSxcInNlbGVjdGlvblN0YXJ0XCJpbiBkJiZPZShkKT9kPXtzdGFydDpkLnNlbGVjdGlvblN0YXJ0LGVuZDpkLnNlbGVjdGlvbkVuZH06KGQ9KGQub3duZXJEb2N1bWVudCYmZC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGQ9e2FuY2hvck5vZGU6ZC5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpkLmFuY2hvck9mZnNldCxmb2N1c05vZGU6ZC5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6ZC5mb2N1c09mZnNldH0pLFNlJiZKZShTZSxkKXx8KFNlPWQsZD1vZShSZSxcIm9uU2VsZWN0XCIpLDA8ZC5sZW5ndGgmJihiPW5ldyB0ZChcIm9uU2VsZWN0XCIsXCJzZWxlY3RcIixudWxsLGIsYyksYS5wdXNoKHtldmVudDpiLGxpc3RlbmVyczpkfSksYi50YXJnZXQ9UWUpKSl9XG5QYyhcImNhbmNlbCBjYW5jZWwgY2xpY2sgY2xpY2sgY2xvc2UgY2xvc2UgY29udGV4dG1lbnUgY29udGV4dE1lbnUgY29weSBjb3B5IGN1dCBjdXQgYXV4Y2xpY2sgYXV4Q2xpY2sgZGJsY2xpY2sgZG91YmxlQ2xpY2sgZHJhZ2VuZCBkcmFnRW5kIGRyYWdzdGFydCBkcmFnU3RhcnQgZHJvcCBkcm9wIGZvY3VzaW4gZm9jdXMgZm9jdXNvdXQgYmx1ciBpbnB1dCBpbnB1dCBpbnZhbGlkIGludmFsaWQga2V5ZG93biBrZXlEb3duIGtleXByZXNzIGtleVByZXNzIGtleXVwIGtleVVwIG1vdXNlZG93biBtb3VzZURvd24gbW91c2V1cCBtb3VzZVVwIHBhc3RlIHBhc3RlIHBhdXNlIHBhdXNlIHBsYXkgcGxheSBwb2ludGVyY2FuY2VsIHBvaW50ZXJDYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlckRvd24gcG9pbnRlcnVwIHBvaW50ZXJVcCByYXRlY2hhbmdlIHJhdGVDaGFuZ2UgcmVzZXQgcmVzZXQgc2Vla2VkIHNlZWtlZCBzdWJtaXQgc3VibWl0IHRvdWNoY2FuY2VsIHRvdWNoQ2FuY2VsIHRvdWNoZW5kIHRvdWNoRW5kIHRvdWNoc3RhcnQgdG91Y2hTdGFydCB2b2x1bWVjaGFuZ2Ugdm9sdW1lQ2hhbmdlXCIuc3BsaXQoXCIgXCIpLFxuMCk7UGMoXCJkcmFnIGRyYWcgZHJhZ2VudGVyIGRyYWdFbnRlciBkcmFnZXhpdCBkcmFnRXhpdCBkcmFnbGVhdmUgZHJhZ0xlYXZlIGRyYWdvdmVyIGRyYWdPdmVyIG1vdXNlbW92ZSBtb3VzZU1vdmUgbW91c2VvdXQgbW91c2VPdXQgbW91c2VvdmVyIG1vdXNlT3ZlciBwb2ludGVybW92ZSBwb2ludGVyTW92ZSBwb2ludGVyb3V0IHBvaW50ZXJPdXQgcG9pbnRlcm92ZXIgcG9pbnRlck92ZXIgc2Nyb2xsIHNjcm9sbCB0b2dnbGUgdG9nZ2xlIHRvdWNobW92ZSB0b3VjaE1vdmUgd2hlZWwgd2hlZWxcIi5zcGxpdChcIiBcIiksMSk7UGMoT2MsMik7Zm9yKHZhciBWZT1cImNoYW5nZSBzZWxlY3Rpb25jaGFuZ2UgdGV4dElucHV0IGNvbXBvc2l0aW9uc3RhcnQgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb251cGRhdGVcIi5zcGxpdChcIiBcIiksV2U9MDtXZTxWZS5sZW5ndGg7V2UrKylOYy5zZXQoVmVbV2VdLDApO2VhKFwib25Nb3VzZUVudGVyXCIsW1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXSk7XG5lYShcIm9uTW91c2VMZWF2ZVwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO2VhKFwib25Qb2ludGVyRW50ZXJcIixbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXSk7ZWEoXCJvblBvaW50ZXJMZWF2ZVwiLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdKTtkYShcIm9uQ2hhbmdlXCIsXCJjaGFuZ2UgY2xpY2sgZm9jdXNpbiBmb2N1c291dCBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKSk7ZGEoXCJvblNlbGVjdFwiLFwiZm9jdXNvdXQgY29udGV4dG1lbnUgZHJhZ2VuZCBmb2N1c2luIGtleWRvd24ga2V5dXAgbW91c2Vkb3duIG1vdXNldXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpKTtkYShcIm9uQmVmb3JlSW5wdXRcIixbXCJjb21wb3NpdGlvbmVuZFwiLFwia2V5cHJlc3NcIixcInRleHRJbnB1dFwiLFwicGFzdGVcIl0pO2RhKFwib25Db21wb3NpdGlvbkVuZFwiLFwiY29tcG9zaXRpb25lbmQgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIikpO1xuZGEoXCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcImNvbXBvc2l0aW9uc3RhcnQgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIikpO2RhKFwib25Db21wb3NpdGlvblVwZGF0ZVwiLFwiY29tcG9zaXRpb251cGRhdGUgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIikpO3ZhciBYZT1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksWWU9bmV3IFNldChcImNhbmNlbCBjbG9zZSBpbnZhbGlkIGxvYWQgc2Nyb2xsIHRvZ2dsZVwiLnNwbGl0KFwiIFwiKS5jb25jYXQoWGUpKTtcbmZ1bmN0aW9uIFplKGEsYixjKXt2YXIgZD1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD1jO1liKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9XG5mdW5jdGlvbiBzZShhLGIpe2I9MCE9PShiJjQpO2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7YysrKXt2YXIgZD1hW2NdLGU9ZC5ldmVudDtkPWQubGlzdGVuZXJzO2E6e3ZhciBmPXZvaWQgMDtpZihiKWZvcih2YXIgZz1kLmxlbmd0aC0xOzA8PWc7Zy0tKXt2YXIgaD1kW2ddLGs9aC5pbnN0YW5jZSxsPWguY3VycmVudFRhcmdldDtoPWgubGlzdGVuZXI7aWYoayE9PWYmJmUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSlicmVhayBhO1plKGUsaCxsKTtmPWt9ZWxzZSBmb3IoZz0wO2c8ZC5sZW5ndGg7ZysrKXtoPWRbZ107az1oLmluc3RhbmNlO2w9aC5jdXJyZW50VGFyZ2V0O2g9aC5saXN0ZW5lcjtpZihrIT09ZiYmZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWJyZWFrIGE7WmUoZSxoLGwpO2Y9a319fWlmKFViKXRocm93IGE9VmIsVWI9ITEsVmI9bnVsbCxhO31cbmZ1bmN0aW9uIEcoYSxiKXt2YXIgYz0kZShiKSxkPWErXCJfX2J1YmJsZVwiO2MuaGFzKGQpfHwoYWYoYixhLDIsITEpLGMuYWRkKGQpKX12YXIgYmY9XCJfcmVhY3RMaXN0ZW5pbmdcIitNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKTtmdW5jdGlvbiBjZihhKXthW2JmXXx8KGFbYmZdPSEwLGJhLmZvckVhY2goZnVuY3Rpb24oYil7WWUuaGFzKGIpfHxkZihiLCExLGEsbnVsbCk7ZGYoYiwhMCxhLG51bGwpfSkpfVxuZnVuY3Rpb24gZGYoYSxiLGMsZCl7dmFyIGU9NDxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbNF0/YXJndW1lbnRzWzRdOjAsZj1jO1wic2VsZWN0aW9uY2hhbmdlXCI9PT1hJiY5IT09Yy5ub2RlVHlwZSYmKGY9Yy5vd25lckRvY3VtZW50KTtpZihudWxsIT09ZCYmIWImJlllLmhhcyhhKSl7aWYoXCJzY3JvbGxcIiE9PWEpcmV0dXJuO2V8PTI7Zj1kfXZhciBnPSRlKGYpLGg9YStcIl9fXCIrKGI/XCJjYXB0dXJlXCI6XCJidWJibGVcIik7Zy5oYXMoaCl8fChiJiYoZXw9NCksYWYoZixhLGUsYiksZy5hZGQoaCkpfVxuZnVuY3Rpb24gYWYoYSxiLGMsZCl7dmFyIGU9TmMuZ2V0KGIpO3N3aXRjaCh2b2lkIDA9PT1lPzI6ZSl7Y2FzZSAwOmU9Z2Q7YnJlYWs7Y2FzZSAxOmU9aWQ7YnJlYWs7ZGVmYXVsdDplPWhkfWM9ZS5iaW5kKG51bGwsYixjLGEpO2U9dm9pZCAwOyFQYnx8XCJ0b3VjaHN0YXJ0XCIhPT1iJiZcInRvdWNobW92ZVwiIT09YiYmXCJ3aGVlbFwiIT09Ynx8KGU9ITApO2Q/dm9pZCAwIT09ZT9hLmFkZEV2ZW50TGlzdGVuZXIoYixjLHtjYXB0dXJlOiEwLHBhc3NpdmU6ZX0pOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITApOnZvaWQgMCE9PWU/YS5hZGRFdmVudExpc3RlbmVyKGIsYyx7cGFzc2l2ZTplfSk6YS5hZGRFdmVudExpc3RlbmVyKGIsYywhMSl9XG5mdW5jdGlvbiBqZChhLGIsYyxkLGUpe3ZhciBmPWQ7aWYoMD09PShiJjEpJiYwPT09KGImMikmJm51bGwhPT1kKWE6Zm9yKDs7KXtpZihudWxsPT09ZClyZXR1cm47dmFyIGc9ZC50YWc7aWYoMz09PWd8fDQ9PT1nKXt2YXIgaD1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2lmKGg9PT1lfHw4PT09aC5ub2RlVHlwZSYmaC5wYXJlbnROb2RlPT09ZSlicmVhaztpZig0PT09Zylmb3IoZz1kLnJldHVybjtudWxsIT09Zzspe3ZhciBrPWcudGFnO2lmKDM9PT1rfHw0PT09aylpZihrPWcuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8saz09PWV8fDg9PT1rLm5vZGVUeXBlJiZrLnBhcmVudE5vZGU9PT1lKXJldHVybjtnPWcucmV0dXJufWZvcig7bnVsbCE9PWg7KXtnPXdjKGgpO2lmKG51bGw9PT1nKXJldHVybjtrPWcudGFnO2lmKDU9PT1rfHw2PT09ayl7ZD1mPWc7Y29udGludWUgYX1oPWgucGFyZW50Tm9kZX19ZD1kLnJldHVybn1OYihmdW5jdGlvbigpe3ZhciBkPWYsZT14YihjKSxnPVtdO1xuYTp7dmFyIGg9TWMuZ2V0KGEpO2lmKHZvaWQgMCE9PWgpe3ZhciBrPXRkLHg9YTtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PW9kKGMpKWJyZWFrIGE7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjprPVJkO2JyZWFrO2Nhc2UgXCJmb2N1c2luXCI6eD1cImZvY3VzXCI7az1GZDticmVhaztjYXNlIFwiZm9jdXNvdXRcIjp4PVwiYmx1clwiO2s9RmQ7YnJlYWs7Y2FzZSBcImJlZm9yZWJsdXJcIjpjYXNlIFwiYWZ0ZXJibHVyXCI6az1GZDticmVhaztjYXNlIFwiY2xpY2tcIjppZigyPT09Yy5idXR0b24pYnJlYWsgYTtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOms9QmQ7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6az1cbkRkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOms9VmQ7YnJlYWs7Y2FzZSBJYzpjYXNlIEpjOmNhc2UgS2M6az1IZDticmVhaztjYXNlIExjOms9WGQ7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOms9dmQ7YnJlYWs7Y2FzZSBcIndoZWVsXCI6az1aZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjprPUpkO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOms9VGR9dmFyIHc9MCE9PShiJjQpLHo9IXcmJlwic2Nyb2xsXCI9PT1hLHU9dz9udWxsIT09aD9oK1wiQ2FwdHVyZVwiOm51bGw6aDt3PVtdO2Zvcih2YXIgdD1kLHE7bnVsbCE9PVxudDspe3E9dDt2YXIgdj1xLnN0YXRlTm9kZTs1PT09cS50YWcmJm51bGwhPT12JiYocT12LG51bGwhPT11JiYodj1PYih0LHUpLG51bGwhPXYmJncucHVzaChlZih0LHYscSkpKSk7aWYoeilicmVhazt0PXQucmV0dXJufTA8dy5sZW5ndGgmJihoPW5ldyBrKGgseCxudWxsLGMsZSksZy5wdXNoKHtldmVudDpoLGxpc3RlbmVyczp3fSkpfX1pZigwPT09KGImNykpe2E6e2g9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWE7az1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoaCYmMD09PShiJjE2KSYmKHg9Yy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KSYmKHdjKHgpfHx4W2ZmXSkpYnJlYWsgYTtpZihrfHxoKXtoPWUud2luZG93PT09ZT9lOihoPWUub3duZXJEb2N1bWVudCk/aC5kZWZhdWx0Vmlld3x8aC5wYXJlbnRXaW5kb3c6d2luZG93O2lmKGspe2lmKHg9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCxrPWQseD14P3djKHgpOm51bGwsbnVsbCE9PVxueCYmKHo9WmIoeCkseCE9PXp8fDUhPT14LnRhZyYmNiE9PXgudGFnKSl4PW51bGx9ZWxzZSBrPW51bGwseD1kO2lmKGshPT14KXt3PUJkO3Y9XCJvbk1vdXNlTGVhdmVcIjt1PVwib25Nb3VzZUVudGVyXCI7dD1cIm1vdXNlXCI7aWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKXc9VGQsdj1cIm9uUG9pbnRlckxlYXZlXCIsdT1cIm9uUG9pbnRlckVudGVyXCIsdD1cInBvaW50ZXJcIjt6PW51bGw9PWs/aDp1ZShrKTtxPW51bGw9PXg/aDp1ZSh4KTtoPW5ldyB3KHYsdCtcImxlYXZlXCIsayxjLGUpO2gudGFyZ2V0PXo7aC5yZWxhdGVkVGFyZ2V0PXE7dj1udWxsO3djKGUpPT09ZCYmKHc9bmV3IHcodSx0K1wiZW50ZXJcIix4LGMsZSksdy50YXJnZXQ9cSx3LnJlbGF0ZWRUYXJnZXQ9eix2PXcpO3o9djtpZihrJiZ4KWI6e3c9azt1PXg7dD0wO2ZvcihxPXc7cTtxPWdmKHEpKXQrKztxPTA7Zm9yKHY9dTt2O3Y9Z2YodikpcSsrO2Zvcig7MDx0LXE7KXc9Z2YodyksdC0tO2Zvcig7MDxxLXQ7KXU9XG5nZih1KSxxLS07Zm9yKDt0LS07KXtpZih3PT09dXx8bnVsbCE9PXUmJnc9PT11LmFsdGVybmF0ZSlicmVhayBiO3c9Z2Yodyk7dT1nZih1KX13PW51bGx9ZWxzZSB3PW51bGw7bnVsbCE9PWsmJmhmKGcsaCxrLHcsITEpO251bGwhPT14JiZudWxsIT09eiYmaGYoZyx6LHgsdywhMCl9fX1hOntoPWQ/dWUoZCk6d2luZG93O2s9aC5ub2RlTmFtZSYmaC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKFwic2VsZWN0XCI9PT1rfHxcImlucHV0XCI9PT1rJiZcImZpbGVcIj09PWgudHlwZSl2YXIgSj12ZTtlbHNlIGlmKG1lKGgpKWlmKHdlKUo9RmU7ZWxzZXtKPURlO3ZhciBLPUNlfWVsc2Uoaz1oLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09ay50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09aC50eXBlfHxcInJhZGlvXCI9PT1oLnR5cGUpJiYoSj1FZSk7aWYoSiYmKEo9SihhLGQpKSl7bmUoZyxKLGMsZSk7YnJlYWsgYX1LJiZLKGEsaCxkKTtcImZvY3Vzb3V0XCI9PT1hJiYoSz1oLl93cmFwcGVyU3RhdGUpJiZcbksuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWgudHlwZSYmYmIoaCxcIm51bWJlclwiLGgudmFsdWUpfUs9ZD91ZShkKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c2luXCI6aWYobWUoSyl8fFwidHJ1ZVwiPT09Sy5jb250ZW50RWRpdGFibGUpUWU9SyxSZT1kLFNlPW51bGw7YnJlYWs7Y2FzZSBcImZvY3Vzb3V0XCI6U2U9UmU9UWU9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6VGU9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwiZHJhZ2VuZFwiOlRlPSExO1VlKGcsYyxlKTticmVhaztjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYoUGUpYnJlYWs7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjpVZShnLGMsZSl9dmFyIFE7aWYoYWUpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6dmFyIEw9XCJvbkNvbXBvc2l0aW9uU3RhcnRcIjticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOkw9XCJvbkNvbXBvc2l0aW9uRW5kXCI7YnJlYWsgYjtcbmNhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOkw9XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCI7YnJlYWsgYn1MPXZvaWQgMH1lbHNlIGllP2dlKGEsYykmJihMPVwib25Db21wb3NpdGlvbkVuZFwiKTpcImtleWRvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKEw9XCJvbkNvbXBvc2l0aW9uU3RhcnRcIik7TCYmKGRlJiZcImtvXCIhPT1jLmxvY2FsZSYmKGllfHxcIm9uQ29tcG9zaXRpb25TdGFydFwiIT09TD9cIm9uQ29tcG9zaXRpb25FbmRcIj09PUwmJmllJiYoUT1uZCgpKTooa2Q9ZSxsZD1cInZhbHVlXCJpbiBrZD9rZC52YWx1ZTprZC50ZXh0Q29udGVudCxpZT0hMCkpLEs9b2UoZCxMKSwwPEsubGVuZ3RoJiYoTD1uZXcgTGQoTCxhLG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OkwsbGlzdGVuZXJzOkt9KSxRP0wuZGF0YT1ROihRPWhlKGMpLG51bGwhPT1RJiYoTC5kYXRhPVEpKSkpO2lmKFE9Y2U/amUoYSxjKTprZShhLGMpKWQ9b2UoZCxcIm9uQmVmb3JlSW5wdXRcIiksMDxkLmxlbmd0aCYmKGU9bmV3IExkKFwib25CZWZvcmVJbnB1dFwiLFxuXCJiZWZvcmVpbnB1dFwiLG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OmUsbGlzdGVuZXJzOmR9KSxlLmRhdGE9USl9c2UoZyxiKX0pfWZ1bmN0aW9uIGVmKGEsYixjKXtyZXR1cm57aW5zdGFuY2U6YSxsaXN0ZW5lcjpiLGN1cnJlbnRUYXJnZXQ6Y319ZnVuY3Rpb24gb2UoYSxiKXtmb3IodmFyIGM9YitcIkNhcHR1cmVcIixkPVtdO251bGwhPT1hOyl7dmFyIGU9YSxmPWUuc3RhdGVOb2RlOzU9PT1lLnRhZyYmbnVsbCE9PWYmJihlPWYsZj1PYihhLGMpLG51bGwhPWYmJmQudW5zaGlmdChlZihhLGYsZSkpLGY9T2IoYSxiKSxudWxsIT1mJiZkLnB1c2goZWYoYSxmLGUpKSk7YT1hLnJldHVybn1yZXR1cm4gZH1mdW5jdGlvbiBnZihhKXtpZihudWxsPT09YSlyZXR1cm4gbnVsbDtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfVxuZnVuY3Rpb24gaGYoYSxiLGMsZCxlKXtmb3IodmFyIGY9Yi5fcmVhY3ROYW1lLGc9W107bnVsbCE9PWMmJmMhPT1kOyl7dmFyIGg9YyxrPWguYWx0ZXJuYXRlLGw9aC5zdGF0ZU5vZGU7aWYobnVsbCE9PWsmJms9PT1kKWJyZWFrOzU9PT1oLnRhZyYmbnVsbCE9PWwmJihoPWwsZT8oaz1PYihjLGYpLG51bGwhPWsmJmcudW5zaGlmdChlZihjLGssaCkpKTplfHwoaz1PYihjLGYpLG51bGwhPWsmJmcucHVzaChlZihjLGssaCkpKSk7Yz1jLnJldHVybn0wIT09Zy5sZW5ndGgmJmEucHVzaCh7ZXZlbnQ6YixsaXN0ZW5lcnM6Z30pfWZ1bmN0aW9uIGpmKCl7fXZhciBrZj1udWxsLGxmPW51bGw7ZnVuY3Rpb24gbWYoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpyZXR1cm4hIWIuYXV0b0ZvY3VzfXJldHVybiExfVxuZnVuY3Rpb24gbmYoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm9wdGlvblwiPT09YXx8XCJub3NjcmlwdFwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfXZhciBvZj1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCxwZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDA7ZnVuY3Rpb24gcWYoYSl7MT09PWEubm9kZVR5cGU/YS50ZXh0Q29udGVudD1cIlwiOjk9PT1hLm5vZGVUeXBlJiYoYT1hLmJvZHksbnVsbCE9YSYmKGEudGV4dENvbnRlbnQ9XCJcIikpfVxuZnVuY3Rpb24gcmYoYSl7Zm9yKDtudWxsIT1hO2E9YS5uZXh0U2libGluZyl7dmFyIGI9YS5ub2RlVHlwZTtpZigxPT09Ynx8Mz09PWIpYnJlYWt9cmV0dXJuIGF9ZnVuY3Rpb24gc2YoYSl7YT1hLnByZXZpb3VzU2libGluZztmb3IodmFyIGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIiRcIj09PWN8fFwiJCFcIj09PWN8fFwiJD9cIj09PWMpe2lmKDA9PT1iKXJldHVybiBhO2ItLX1lbHNlXCIvJFwiPT09YyYmYisrfWE9YS5wcmV2aW91c1NpYmxpbmd9cmV0dXJuIG51bGx9dmFyIHRmPTA7ZnVuY3Rpb24gdWYoYSl7cmV0dXJueyQkdHlwZW9mOkdhLHRvU3RyaW5nOmEsdmFsdWVPZjphfX12YXIgdmY9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksd2Y9XCJfX3JlYWN0RmliZXIkXCIrdmYseGY9XCJfX3JlYWN0UHJvcHMkXCIrdmYsZmY9XCJfX3JlYWN0Q29udGFpbmVyJFwiK3ZmLHlmPVwiX19yZWFjdEV2ZW50cyRcIit2ZjtcbmZ1bmN0aW9uIHdjKGEpe3ZhciBiPWFbd2ZdO2lmKGIpcmV0dXJuIGI7Zm9yKHZhciBjPWEucGFyZW50Tm9kZTtjOyl7aWYoYj1jW2ZmXXx8Y1t3Zl0pe2M9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWIuY2hpbGR8fG51bGwhPT1jJiZudWxsIT09Yy5jaGlsZClmb3IoYT1zZihhKTtudWxsIT09YTspe2lmKGM9YVt3Zl0pcmV0dXJuIGM7YT1zZihhKX1yZXR1cm4gYn1hPWM7Yz1hLnBhcmVudE5vZGV9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQ2IoYSl7YT1hW3dmXXx8YVtmZl07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnJiYxMyE9PWEudGFnJiYzIT09YS50YWc/bnVsbDphfWZ1bmN0aW9uIHVlKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt0aHJvdyBFcnJvcih5KDMzKSk7fWZ1bmN0aW9uIERiKGEpe3JldHVybiBhW3hmXXx8bnVsbH1cbmZ1bmN0aW9uICRlKGEpe3ZhciBiPWFbeWZdO3ZvaWQgMD09PWImJihiPWFbeWZdPW5ldyBTZXQpO3JldHVybiBifXZhciB6Zj1bXSxBZj0tMTtmdW5jdGlvbiBCZihhKXtyZXR1cm57Y3VycmVudDphfX1mdW5jdGlvbiBIKGEpezA+QWZ8fChhLmN1cnJlbnQ9emZbQWZdLHpmW0FmXT1udWxsLEFmLS0pfWZ1bmN0aW9uIEkoYSxiKXtBZisrO3pmW0FmXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIENmPXt9LE09QmYoQ2YpLE49QmYoITEpLERmPUNmO1xuZnVuY3Rpb24gRWYoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBDZjt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1mdW5jdGlvbiBGZihhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfWZ1bmN0aW9uIEdmKCl7SChOKTtIKE0pfWZ1bmN0aW9uIEhmKGEsYixjKXtpZihNLmN1cnJlbnQhPT1DZil0aHJvdyBFcnJvcih5KDE2OCkpO0koTSxiKTtJKE4sYyl9XG5mdW5jdGlvbiBJZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7YT1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpaWYoIShlIGluIGEpKXRocm93IEVycm9yKHkoMTA4LFJhKGIpfHxcIlVua25vd25cIixlKSk7cmV0dXJuIG0oe30sYyxkKX1mdW5jdGlvbiBKZihhKXthPShhPWEuc3RhdGVOb2RlKSYmYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dHx8Q2Y7RGY9TS5jdXJyZW50O0koTSxhKTtJKE4sTi5jdXJyZW50KTtyZXR1cm4hMH1mdW5jdGlvbiBLZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoIWQpdGhyb3cgRXJyb3IoeSgxNjkpKTtjPyhhPUlmKGEsYixEZiksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1hLEgoTiksSChNKSxJKE0sYSkpOkgoTik7SShOLGMpfVxudmFyIExmPW51bGwsTWY9bnVsbCxOZj1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxPZj1yLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2ssUGY9ci51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayxRZj1yLnVuc3RhYmxlX3Nob3VsZFlpZWxkLFJmPXIudW5zdGFibGVfcmVxdWVzdFBhaW50LFNmPXIudW5zdGFibGVfbm93LFRmPXIudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwsVWY9ci51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxWZj1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LFdmPXIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksWGY9ci51bnN0YWJsZV9Mb3dQcmlvcml0eSxZZj1yLnVuc3RhYmxlX0lkbGVQcmlvcml0eSxaZj17fSwkZj12b2lkIDAhPT1SZj9SZjpmdW5jdGlvbigpe30sYWc9bnVsbCxiZz1udWxsLGNnPSExLGRnPVNmKCksTz0xRTQ+ZGc/U2Y6ZnVuY3Rpb24oKXtyZXR1cm4gU2YoKS1kZ307XG5mdW5jdGlvbiBlZygpe3N3aXRjaChUZigpKXtjYXNlIFVmOnJldHVybiA5OTtjYXNlIFZmOnJldHVybiA5ODtjYXNlIFdmOnJldHVybiA5NztjYXNlIFhmOnJldHVybiA5NjtjYXNlIFlmOnJldHVybiA5NTtkZWZhdWx0OnRocm93IEVycm9yKHkoMzMyKSk7fX1mdW5jdGlvbiBmZyhhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gVWY7Y2FzZSA5ODpyZXR1cm4gVmY7Y2FzZSA5NzpyZXR1cm4gV2Y7Y2FzZSA5NjpyZXR1cm4gWGY7Y2FzZSA5NTpyZXR1cm4gWWY7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMzMikpO319ZnVuY3Rpb24gZ2coYSxiKXthPWZnKGEpO3JldHVybiBOZihhLGIpfWZ1bmN0aW9uIGhnKGEsYixjKXthPWZnKGEpO3JldHVybiBPZihhLGIsYyl9ZnVuY3Rpb24gaWcoKXtpZihudWxsIT09Ymcpe3ZhciBhPWJnO2JnPW51bGw7UGYoYSl9amcoKX1cbmZ1bmN0aW9uIGpnKCl7aWYoIWNnJiZudWxsIT09YWcpe2NnPSEwO3ZhciBhPTA7dHJ5e3ZhciBiPWFnO2dnKDk5LGZ1bmN0aW9uKCl7Zm9yKDthPGIubGVuZ3RoO2ErKyl7dmFyIGM9YlthXTtkbyBjPWMoITApO3doaWxlKG51bGwhPT1jKX19KTthZz1udWxsfWNhdGNoKGMpe3Rocm93IG51bGwhPT1hZyYmKGFnPWFnLnNsaWNlKGErMSkpLE9mKFVmLGlnKSxjO31maW5hbGx5e2NnPSExfX19dmFyIGtnPXJhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnO2Z1bmN0aW9uIGxnKGEsYil7aWYoYSYmYS5kZWZhdWx0UHJvcHMpe2I9bSh7fSxiKTthPWEuZGVmYXVsdFByb3BzO2Zvcih2YXIgYyBpbiBhKXZvaWQgMD09PWJbY10mJihiW2NdPWFbY10pO3JldHVybiBifXJldHVybiBifXZhciBtZz1CZihudWxsKSxuZz1udWxsLG9nPW51bGwscGc9bnVsbDtmdW5jdGlvbiBxZygpe3BnPW9nPW5nPW51bGx9XG5mdW5jdGlvbiByZyhhKXt2YXIgYj1tZy5jdXJyZW50O0gobWcpO2EudHlwZS5fY29udGV4dC5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gc2coYSxiKXtmb3IoO251bGwhPT1hOyl7dmFyIGM9YS5hbHRlcm5hdGU7aWYoKGEuY2hpbGRMYW5lcyZiKT09PWIpaWYobnVsbD09PWN8fChjLmNoaWxkTGFuZXMmYik9PT1iKWJyZWFrO2Vsc2UgYy5jaGlsZExhbmVzfD1iO2Vsc2UgYS5jaGlsZExhbmVzfD1iLG51bGwhPT1jJiYoYy5jaGlsZExhbmVzfD1iKTthPWEucmV0dXJufX1mdW5jdGlvbiB0ZyhhLGIpe25nPWE7cGc9b2c9bnVsbDthPWEuZGVwZW5kZW5jaWVzO251bGwhPT1hJiZudWxsIT09YS5maXJzdENvbnRleHQmJigwIT09KGEubGFuZXMmYikmJih1Zz0hMCksYS5maXJzdENvbnRleHQ9bnVsbCl9XG5mdW5jdGlvbiB2ZyhhLGIpe2lmKHBnIT09YSYmITEhPT1iJiYwIT09Yil7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBifHwxMDczNzQxODIzPT09YilwZz1hLGI9MTA3Mzc0MTgyMztiPXtjb250ZXh0OmEsb2JzZXJ2ZWRCaXRzOmIsbmV4dDpudWxsfTtpZihudWxsPT09b2cpe2lmKG51bGw9PT1uZyl0aHJvdyBFcnJvcih5KDMwOCkpO29nPWI7bmcuZGVwZW5kZW5jaWVzPXtsYW5lczowLGZpcnN0Q29udGV4dDpiLHJlc3BvbmRlcnM6bnVsbH19ZWxzZSBvZz1vZy5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgd2c9ITE7ZnVuY3Rpb24geGcoYSl7YS51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEubWVtb2l6ZWRTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6bnVsbCxsYXN0QmFzZVVwZGF0ZTpudWxsLHNoYXJlZDp7cGVuZGluZzpudWxsfSxlZmZlY3RzOm51bGx9fVxuZnVuY3Rpb24geWcoYSxiKXthPWEudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT09PWEmJihiLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5iYXNlU3RhdGUsZmlyc3RCYXNlVXBkYXRlOmEuZmlyc3RCYXNlVXBkYXRlLGxhc3RCYXNlVXBkYXRlOmEubGFzdEJhc2VVcGRhdGUsc2hhcmVkOmEuc2hhcmVkLGVmZmVjdHM6YS5lZmZlY3RzfSl9ZnVuY3Rpb24gemcoYSxiKXtyZXR1cm57ZXZlbnRUaW1lOmEsbGFuZTpiLHRhZzowLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbH19ZnVuY3Rpb24gQWcoYSxiKXthPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWEpe2E9YS5zaGFyZWQ7dmFyIGM9YS5wZW5kaW5nO251bGw9PT1jP2IubmV4dD1iOihiLm5leHQ9Yy5uZXh0LGMubmV4dD1iKTthLnBlbmRpbmc9Yn19XG5mdW5jdGlvbiBCZyhhLGIpe3ZhciBjPWEudXBkYXRlUXVldWUsZD1hLmFsdGVybmF0ZTtpZihudWxsIT09ZCYmKGQ9ZC51cGRhdGVRdWV1ZSxjPT09ZCkpe3ZhciBlPW51bGwsZj1udWxsO2M9Yy5maXJzdEJhc2VVcGRhdGU7aWYobnVsbCE9PWMpe2Rve3ZhciBnPXtldmVudFRpbWU6Yy5ldmVudFRpbWUsbGFuZTpjLmxhbmUsdGFnOmMudGFnLHBheWxvYWQ6Yy5wYXlsb2FkLGNhbGxiYWNrOmMuY2FsbGJhY2ssbmV4dDpudWxsfTtudWxsPT09Zj9lPWY9ZzpmPWYubmV4dD1nO2M9Yy5uZXh0fXdoaWxlKG51bGwhPT1jKTtudWxsPT09Zj9lPWY9YjpmPWYubmV4dD1ifWVsc2UgZT1mPWI7Yz17YmFzZVN0YXRlOmQuYmFzZVN0YXRlLGZpcnN0QmFzZVVwZGF0ZTplLGxhc3RCYXNlVXBkYXRlOmYsc2hhcmVkOmQuc2hhcmVkLGVmZmVjdHM6ZC5lZmZlY3RzfTthLnVwZGF0ZVF1ZXVlPWM7cmV0dXJufWE9Yy5sYXN0QmFzZVVwZGF0ZTtudWxsPT09YT9jLmZpcnN0QmFzZVVwZGF0ZT1iOmEubmV4dD1cbmI7Yy5sYXN0QmFzZVVwZGF0ZT1ifVxuZnVuY3Rpb24gQ2coYSxiLGMsZCl7dmFyIGU9YS51cGRhdGVRdWV1ZTt3Zz0hMTt2YXIgZj1lLmZpcnN0QmFzZVVwZGF0ZSxnPWUubGFzdEJhc2VVcGRhdGUsaD1lLnNoYXJlZC5wZW5kaW5nO2lmKG51bGwhPT1oKXtlLnNoYXJlZC5wZW5kaW5nPW51bGw7dmFyIGs9aCxsPWsubmV4dDtrLm5leHQ9bnVsbDtudWxsPT09Zz9mPWw6Zy5uZXh0PWw7Zz1rO3ZhciBuPWEuYWx0ZXJuYXRlO2lmKG51bGwhPT1uKXtuPW4udXBkYXRlUXVldWU7dmFyIEE9bi5sYXN0QmFzZVVwZGF0ZTtBIT09ZyYmKG51bGw9PT1BP24uZmlyc3RCYXNlVXBkYXRlPWw6QS5uZXh0PWwsbi5sYXN0QmFzZVVwZGF0ZT1rKX19aWYobnVsbCE9PWYpe0E9ZS5iYXNlU3RhdGU7Zz0wO249bD1rPW51bGw7ZG97aD1mLmxhbmU7dmFyIHA9Zi5ldmVudFRpbWU7aWYoKGQmaCk9PT1oKXtudWxsIT09biYmKG49bi5uZXh0PXtldmVudFRpbWU6cCxsYW5lOjAsdGFnOmYudGFnLHBheWxvYWQ6Zi5wYXlsb2FkLGNhbGxiYWNrOmYuY2FsbGJhY2ssXG5uZXh0Om51bGx9KTthOnt2YXIgQz1hLHg9ZjtoPWI7cD1jO3N3aXRjaCh4LnRhZyl7Y2FzZSAxOkM9eC5wYXlsb2FkO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBDKXtBPUMuY2FsbChwLEEsaCk7YnJlYWsgYX1BPUM7YnJlYWsgYTtjYXNlIDM6Qy5mbGFncz1DLmZsYWdzJi00MDk3fDY0O2Nhc2UgMDpDPXgucGF5bG9hZDtoPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBDP0MuY2FsbChwLEEsaCk6QztpZihudWxsPT09aHx8dm9pZCAwPT09aClicmVhayBhO0E9bSh7fSxBLGgpO2JyZWFrIGE7Y2FzZSAyOndnPSEwfX1udWxsIT09Zi5jYWxsYmFjayYmKGEuZmxhZ3N8PTMyLGg9ZS5lZmZlY3RzLG51bGw9PT1oP2UuZWZmZWN0cz1bZl06aC5wdXNoKGYpKX1lbHNlIHA9e2V2ZW50VGltZTpwLGxhbmU6aCx0YWc6Zi50YWcscGF5bG9hZDpmLnBheWxvYWQsY2FsbGJhY2s6Zi5jYWxsYmFjayxuZXh0Om51bGx9LG51bGw9PT1uPyhsPW49cCxrPUEpOm49bi5uZXh0PXAsZ3w9aDtmPWYubmV4dDtpZihudWxsPT09XG5mKWlmKGg9ZS5zaGFyZWQucGVuZGluZyxudWxsPT09aClicmVhaztlbHNlIGY9aC5uZXh0LGgubmV4dD1udWxsLGUubGFzdEJhc2VVcGRhdGU9aCxlLnNoYXJlZC5wZW5kaW5nPW51bGx9d2hpbGUoMSk7bnVsbD09PW4mJihrPUEpO2UuYmFzZVN0YXRlPWs7ZS5maXJzdEJhc2VVcGRhdGU9bDtlLmxhc3RCYXNlVXBkYXRlPW47RGd8PWc7YS5sYW5lcz1nO2EubWVtb2l6ZWRTdGF0ZT1BfX1mdW5jdGlvbiBFZyhhLGIsYyl7YT1iLmVmZmVjdHM7Yi5lZmZlY3RzPW51bGw7aWYobnVsbCE9PWEpZm9yKGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGQ9YVtiXSxlPWQuY2FsbGJhY2s7aWYobnVsbCE9PWUpe2QuY2FsbGJhY2s9bnVsbDtkPWM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGUpdGhyb3cgRXJyb3IoeSgxOTEsZSkpO2UuY2FsbChkKX19fXZhciBGZz0obmV3IGFhLkNvbXBvbmVudCkucmVmcztcbmZ1bmN0aW9uIEdnKGEsYixjLGQpe2I9YS5tZW1vaXplZFN0YXRlO2M9YyhkLGIpO2M9bnVsbD09PWN8fHZvaWQgMD09PWM/YjptKHt9LGIsYyk7YS5tZW1vaXplZFN0YXRlPWM7MD09PWEubGFuZXMmJihhLnVwZGF0ZVF1ZXVlLmJhc2VTdGF0ZT1jKX1cbnZhciBLZz17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxzKT9aYihhKT09PWE6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsczt2YXIgZD1IZygpLGU9SWcoYSksZj16ZyhkLGUpO2YucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZi5jYWxsYmFjaz1jKTtBZyhhLGYpO0pnKGEsZSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsczt2YXIgZD1IZygpLGU9SWcoYSksZj16ZyhkLGUpO2YudGFnPTE7Zi5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihmLmNhbGxiYWNrPWMpO0FnKGEsZik7SmcoYSxlLGQpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYSxiKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBjPUhnKCksZD1JZyhhKSxlPXpnKGMsZCk7ZS50YWc9Mjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGUuY2FsbGJhY2s9XG5iKTtBZyhhLGUpO0pnKGEsZCxjKX19O2Z1bmN0aW9uIExnKGEsYixjLGQsZSxmLGcpe2E9YS5zdGF0ZU5vZGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2Euc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsZixnKTpiLnByb3RvdHlwZSYmYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IUplKGMsZCl8fCFKZShlLGYpOiEwfVxuZnVuY3Rpb24gTWcoYSxiLGMpe3ZhciBkPSExLGU9Q2Y7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2Y9dmcoZik6KGU9RmYoYik/RGY6TS5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/RWYoYSxlKTpDZik7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPUtnO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbHM9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gTmcoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJktnLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24gT2coYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1GZzt4ZyhhKTt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PXZnKGYpOihmPUZmKGIpP0RmOk0uY3VycmVudCxlLmNvbnRleHQ9RWYoYSxmKSk7Q2coYSxjLGUsZCk7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKEdnKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fFxuKGI9ZS5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJktnLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLENnKGEsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZmxhZ3N8PTQpfXZhciBQZz1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gUWcoYSxiLGMpe2E9Yy5yZWY7aWYobnVsbCE9PWEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZcIm9iamVjdFwiIT09dHlwZW9mIGEpe2lmKGMuX293bmVyKXtjPWMuX293bmVyO2lmKGMpe2lmKDEhPT1jLnRhZyl0aHJvdyBFcnJvcih5KDMwOSkpO3ZhciBkPWMuc3RhdGVOb2RlfWlmKCFkKXRocm93IEVycm9yKHkoMTQ3LGEpKTt2YXIgZT1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZSlyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1kLnJlZnM7Yj09PUZnJiYoYj1kLnJlZnM9e30pO251bGw9PT1hP2RlbGV0ZSBiW2VdOmJbZV09YX07Yi5fc3RyaW5nUmVmPWU7cmV0dXJuIGJ9aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBhKXRocm93IEVycm9yKHkoMjg0KSk7aWYoIWMuX293bmVyKXRocm93IEVycm9yKHkoMjkwLGEpKTt9cmV0dXJuIGF9XG5mdW5jdGlvbiBSZyhhLGIpe2lmKFwidGV4dGFyZWFcIiE9PWEudHlwZSl0aHJvdyBFcnJvcih5KDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YikpO31cbmZ1bmN0aW9uIFNnKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZmxhZ3M9OH19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIpe2E9VGcoYSxiKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZmxhZ3M9MixcbmMpOmQ7Yi5mbGFncz0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmbnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5mbGFncz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9VWcoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gayhhLGIsYyxkKXtpZihudWxsIT09YiYmYi5lbGVtZW50VHlwZT09PWMudHlwZSlyZXR1cm4gZD1lKGIsYy5wcm9wcyksZC5yZWY9UWcoYSxiLGMpLGQucmV0dXJuPWEsZDtkPVZnKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPVFnKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPVxuV2coYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG4oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPVhnKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gQShhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9VWcoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2Ugc2E6cmV0dXJuIGM9VmcoYi50eXBlLGIua2V5LGIucHJvcHMsbnVsbCxhLm1vZGUsYyksYy5yZWY9UWcoYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlIHRhOnJldHVybiBiPVdnKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYn1pZihQZyhiKXx8TGEoYikpcmV0dXJuIGI9WGcoYixcbmEubW9kZSxjLG51bGwpLGIucmV0dXJuPWEsYjtSZyhhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIHAoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2Ugc2E6cmV0dXJuIGMua2V5PT09ZT9jLnR5cGU9PT11YT9uKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsZSk6ayhhLGIsYyxkKTpudWxsO2Nhc2UgdGE6cmV0dXJuIGMua2V5PT09ZT9sKGEsYixjLGQpOm51bGx9aWYoUGcoYyl8fExhKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm4oYSxiLGMsZCxudWxsKTtSZyhhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIEMoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1hLmdldChjKXx8XG5udWxsLGgoYixhLFwiXCIrZCxlKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSBzYTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsZC50eXBlPT09dWE/bihiLGEsZC5wcm9wcy5jaGlsZHJlbixlLGQua2V5KTprKGIsYSxkLGUpO2Nhc2UgdGE6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGwoYixhLGQsZSl9aWYoUGcoZCl8fExhKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLG4oYixhLGQsZSxudWxsKTtSZyhiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIHgoZSxnLGgsayl7Zm9yKHZhciBsPW51bGwsdD1udWxsLHU9Zyx6PWc9MCxxPW51bGw7bnVsbCE9PXUmJno8aC5sZW5ndGg7eisrKXt1LmluZGV4Pno/KHE9dSx1PW51bGwpOnE9dS5zaWJsaW5nO3ZhciBuPXAoZSx1LGhbel0sayk7aWYobnVsbD09PW4pe251bGw9PT11JiYodT1xKTticmVha31hJiZ1JiZudWxsPT09XG5uLmFsdGVybmF0ZSYmYihlLHUpO2c9ZihuLGcseik7bnVsbD09PXQ/bD1uOnQuc2libGluZz1uO3Q9bjt1PXF9aWYoej09PWgubGVuZ3RoKXJldHVybiBjKGUsdSksbDtpZihudWxsPT09dSl7Zm9yKDt6PGgubGVuZ3RoO3orKyl1PUEoZSxoW3pdLGspLG51bGwhPT11JiYoZz1mKHUsZyx6KSxudWxsPT09dD9sPXU6dC5zaWJsaW5nPXUsdD11KTtyZXR1cm4gbH1mb3IodT1kKGUsdSk7ejxoLmxlbmd0aDt6KyspcT1DKHUsZSx6LGhbel0sayksbnVsbCE9PXEmJihhJiZudWxsIT09cS5hbHRlcm5hdGUmJnUuZGVsZXRlKG51bGw9PT1xLmtleT96OnEua2V5KSxnPWYocSxnLHopLG51bGw9PT10P2w9cTp0LnNpYmxpbmc9cSx0PXEpO2EmJnUuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9ZnVuY3Rpb24gdyhlLGcsaCxrKXt2YXIgbD1MYShoKTtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgbCl0aHJvdyBFcnJvcih5KDE1MCkpO2g9bC5jYWxsKGgpO2lmKG51bGw9PVxuaCl0aHJvdyBFcnJvcih5KDE1MSkpO2Zvcih2YXIgdD1sPW51bGwsdT1nLHo9Zz0wLHE9bnVsbCxuPWgubmV4dCgpO251bGwhPT11JiYhbi5kb25lO3orKyxuPWgubmV4dCgpKXt1LmluZGV4Pno/KHE9dSx1PW51bGwpOnE9dS5zaWJsaW5nO3ZhciB3PXAoZSx1LG4udmFsdWUsayk7aWYobnVsbD09PXcpe251bGw9PT11JiYodT1xKTticmVha31hJiZ1JiZudWxsPT09dy5hbHRlcm5hdGUmJmIoZSx1KTtnPWYodyxnLHopO251bGw9PT10P2w9dzp0LnNpYmxpbmc9dzt0PXc7dT1xfWlmKG4uZG9uZSlyZXR1cm4gYyhlLHUpLGw7aWYobnVsbD09PXUpe2Zvcig7IW4uZG9uZTt6Kyssbj1oLm5leHQoKSluPUEoZSxuLnZhbHVlLGspLG51bGwhPT1uJiYoZz1mKG4sZyx6KSxudWxsPT09dD9sPW46dC5zaWJsaW5nPW4sdD1uKTtyZXR1cm4gbH1mb3IodT1kKGUsdSk7IW4uZG9uZTt6Kyssbj1oLm5leHQoKSluPUModSxlLHosbi52YWx1ZSxrKSxudWxsIT09biYmKGEmJm51bGwhPT1uLmFsdGVybmF0ZSYmXG51LmRlbGV0ZShudWxsPT09bi5rZXk/ejpuLmtleSksZz1mKG4sZyx6KSxudWxsPT09dD9sPW46dC5zaWJsaW5nPW4sdD1uKTthJiZ1LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfXJldHVybiBmdW5jdGlvbihhLGQsZixoKXt2YXIgaz1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT11YSYmbnVsbD09PWYua2V5O2smJihmPWYucHJvcHMuY2hpbGRyZW4pO3ZhciBsPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobClzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSBzYTphOntsPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PWwpe3N3aXRjaChrLnRhZyl7Y2FzZSA3OmlmKGYudHlwZT09PXVhKXtjKGEsay5zaWJsaW5nKTtkPWUoayxmLnByb3BzLmNoaWxkcmVuKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWJyZWFrO2RlZmF1bHQ6aWYoay5lbGVtZW50VHlwZT09PWYudHlwZSl7YyhhLGsuc2libGluZyk7XG5kPWUoayxmLnByb3BzKTtkLnJlZj1RZyhhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX19YyhhLGspO2JyZWFrfWVsc2UgYihhLGspO2s9ay5zaWJsaW5nfWYudHlwZT09PXVhPyhkPVhnKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD1WZyhmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1RZyhhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgdGE6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9ZC5zaWJsaW5nfWQ9XG5XZyhmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZiksZC5yZXR1cm49YSxhPWQpOihjKGEsZCksZD1VZyhmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKTtpZihQZyhmKSlyZXR1cm4geChhLGQsZixoKTtpZihMYShmKSlyZXR1cm4gdyhhLGQsZixoKTtsJiZSZyhhLGYpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgZiYmIWspc3dpdGNoKGEudGFnKXtjYXNlIDE6Y2FzZSAyMjpjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnRocm93IEVycm9yKHkoMTUyLFJhKGEudHlwZSl8fFwiQ29tcG9uZW50XCIpKTt9cmV0dXJuIGMoYSxkKX19dmFyIFlnPVNnKCEwKSxaZz1TZyghMSksJGc9e30sYWg9QmYoJGcpLGJoPUJmKCRnKSxjaD1CZigkZyk7XG5mdW5jdGlvbiBkaChhKXtpZihhPT09JGcpdGhyb3cgRXJyb3IoeSgxNzQpKTtyZXR1cm4gYX1mdW5jdGlvbiBlaChhLGIpe0koY2gsYik7SShiaCxhKTtJKGFoLCRnKTthPWIubm9kZVR5cGU7c3dpdGNoKGEpe2Nhc2UgOTpjYXNlIDExOmI9KGI9Yi5kb2N1bWVudEVsZW1lbnQpP2IubmFtZXNwYWNlVVJJOm1iKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDphPTg9PT1hP2IucGFyZW50Tm9kZTpiLGI9YS5uYW1lc3BhY2VVUkl8fG51bGwsYT1hLnRhZ05hbWUsYj1tYihiLGEpfUgoYWgpO0koYWgsYil9ZnVuY3Rpb24gZmgoKXtIKGFoKTtIKGJoKTtIKGNoKX1mdW5jdGlvbiBnaChhKXtkaChjaC5jdXJyZW50KTt2YXIgYj1kaChhaC5jdXJyZW50KTt2YXIgYz1tYihiLGEudHlwZSk7YiE9PWMmJihJKGJoLGEpLEkoYWgsYykpfWZ1bmN0aW9uIGhoKGEpe2JoLmN1cnJlbnQ9PT1hJiYoSChhaCksSChiaCkpfXZhciBQPUJmKDApO1xuZnVuY3Rpb24gaWgoYSl7Zm9yKHZhciBiPWE7bnVsbCE9PWI7KXtpZigxMz09PWIudGFnKXt2YXIgYz1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsPT09Y3x8XCIkP1wiPT09Yy5kYXRhfHxcIiQhXCI9PT1jLmRhdGEpKXJldHVybiBifWVsc2UgaWYoMTk9PT1iLnRhZyYmdm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLnJldmVhbE9yZGVyKXtpZigwIT09KGIuZmxhZ3MmNjQpKXJldHVybiBifWVsc2UgaWYobnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ31yZXR1cm4gbnVsbH12YXIgamg9bnVsbCxraD1udWxsLGxoPSExO1xuZnVuY3Rpb24gbWgoYSxiKXt2YXIgYz1uaCg1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2MudHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2MucmV0dXJuPWE7Yy5mbGFncz04O251bGwhPT1hLmxhc3RFZmZlY3Q/KGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsYS5sYXN0RWZmZWN0PWMpOmEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PWN9ZnVuY3Rpb24gb2goYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTp2YXIgYz1hLnR5cGU7Yj0xIT09Yi5ub2RlVHlwZXx8Yy50b0xvd2VyQ2FzZSgpIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP251bGw6YjtyZXR1cm4gbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgNjpyZXR1cm4gYj1cIlwiPT09YS5wZW5kaW5nUHJvcHN8fDMhPT1iLm5vZGVUeXBlP251bGw6YixudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSAxMzpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIHBoKGEpe2lmKGxoKXt2YXIgYj1raDtpZihiKXt2YXIgYz1iO2lmKCFvaChhLGIpKXtiPXJmKGMubmV4dFNpYmxpbmcpO2lmKCFifHwhb2goYSxiKSl7YS5mbGFncz1hLmZsYWdzJi0xMDI1fDI7bGg9ITE7amg9YTtyZXR1cm59bWgoamgsYyl9amg9YTtraD1yZihiLmZpcnN0Q2hpbGQpfWVsc2UgYS5mbGFncz1hLmZsYWdzJi0xMDI1fDIsbGg9ITEsamg9YX19ZnVuY3Rpb24gcWgoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnJiYxMyE9PWEudGFnOylhPWEucmV0dXJuO2poPWF9XG5mdW5jdGlvbiByaChhKXtpZihhIT09amgpcmV0dXJuITE7aWYoIWxoKXJldHVybiBxaChhKSxsaD0hMCwhMTt2YXIgYj1hLnR5cGU7aWYoNSE9PWEudGFnfHxcImhlYWRcIiE9PWImJlwiYm9keVwiIT09YiYmIW5mKGIsYS5tZW1vaXplZFByb3BzKSlmb3IoYj1raDtiOyltaChhLGIpLGI9cmYoYi5uZXh0U2libGluZyk7cWgoYSk7aWYoMTM9PT1hLnRhZyl7YT1hLm1lbW9pemVkU3RhdGU7YT1udWxsIT09YT9hLmRlaHlkcmF0ZWQ6bnVsbDtpZighYSl0aHJvdyBFcnJvcih5KDMxNykpO2E6e2E9YS5uZXh0U2libGluZztmb3IoYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKFwiLyRcIj09PWMpe2lmKDA9PT1iKXtraD1yZihhLm5leHRTaWJsaW5nKTticmVhayBhfWItLX1lbHNlXCIkXCIhPT1jJiZcIiQhXCIhPT1jJiZcIiQ/XCIhPT1jfHxiKyt9YT1hLm5leHRTaWJsaW5nfWtoPW51bGx9fWVsc2Uga2g9amg/cmYoYS5zdGF0ZU5vZGUubmV4dFNpYmxpbmcpOm51bGw7cmV0dXJuITB9XG5mdW5jdGlvbiBzaCgpe2toPWpoPW51bGw7bGg9ITF9dmFyIHRoPVtdO2Z1bmN0aW9uIHVoKCl7Zm9yKHZhciBhPTA7YTx0aC5sZW5ndGg7YSsrKXRoW2FdLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5PW51bGw7dGgubGVuZ3RoPTB9dmFyIHZoPXJhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsd2g9cmEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcseGg9MCxSPW51bGwsUz1udWxsLFQ9bnVsbCx5aD0hMSx6aD0hMTtmdW5jdGlvbiBBaCgpe3Rocm93IEVycm9yKHkoMzIxKSk7fWZ1bmN0aW9uIEJoKGEsYil7aWYobnVsbD09PWIpcmV0dXJuITE7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aCYmYzxhLmxlbmd0aDtjKyspaWYoIUhlKGFbY10sYltjXSkpcmV0dXJuITE7cmV0dXJuITB9XG5mdW5jdGlvbiBDaChhLGIsYyxkLGUsZil7eGg9ZjtSPWI7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2IubGFuZXM9MDt2aC5jdXJyZW50PW51bGw9PT1hfHxudWxsPT09YS5tZW1vaXplZFN0YXRlP0RoOkVoO2E9YyhkLGUpO2lmKHpoKXtmPTA7ZG97emg9ITE7aWYoISgyNT5mKSl0aHJvdyBFcnJvcih5KDMwMSkpO2YrPTE7VD1TPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO3ZoLmN1cnJlbnQ9Rmg7YT1jKGQsZSl9d2hpbGUoemgpfXZoLmN1cnJlbnQ9R2g7Yj1udWxsIT09UyYmbnVsbCE9PVMubmV4dDt4aD0wO1Q9Uz1SPW51bGw7eWg9ITE7aWYoYil0aHJvdyBFcnJvcih5KDMwMCkpO3JldHVybiBhfWZ1bmN0aW9uIEhoKCl7dmFyIGE9e21lbW9pemVkU3RhdGU6bnVsbCxiYXNlU3RhdGU6bnVsbCxiYXNlUXVldWU6bnVsbCxxdWV1ZTpudWxsLG5leHQ6bnVsbH07bnVsbD09PVQ/Ui5tZW1vaXplZFN0YXRlPVQ9YTpUPVQubmV4dD1hO3JldHVybiBUfVxuZnVuY3Rpb24gSWgoKXtpZihudWxsPT09Uyl7dmFyIGE9Ui5hbHRlcm5hdGU7YT1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbH1lbHNlIGE9Uy5uZXh0O3ZhciBiPW51bGw9PT1UP1IubWVtb2l6ZWRTdGF0ZTpULm5leHQ7aWYobnVsbCE9PWIpVD1iLFM9YTtlbHNle2lmKG51bGw9PT1hKXRocm93IEVycm9yKHkoMzEwKSk7Uz1hO2E9e21lbW9pemVkU3RhdGU6Uy5tZW1vaXplZFN0YXRlLGJhc2VTdGF0ZTpTLmJhc2VTdGF0ZSxiYXNlUXVldWU6Uy5iYXNlUXVldWUscXVldWU6Uy5xdWV1ZSxuZXh0Om51bGx9O251bGw9PT1UP1IubWVtb2l6ZWRTdGF0ZT1UPWE6VD1ULm5leHQ9YX1yZXR1cm4gVH1mdW5jdGlvbiBKaChhLGIpe3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yn1cbmZ1bmN0aW9uIEtoKGEpe3ZhciBiPUloKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHkoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9UyxlPWQuYmFzZVF1ZXVlLGY9Yy5wZW5kaW5nO2lmKG51bGwhPT1mKXtpZihudWxsIT09ZSl7dmFyIGc9ZS5uZXh0O2UubmV4dD1mLm5leHQ7Zi5uZXh0PWd9ZC5iYXNlUXVldWU9ZT1mO2MucGVuZGluZz1udWxsfWlmKG51bGwhPT1lKXtlPWUubmV4dDtkPWQuYmFzZVN0YXRlO3ZhciBoPWc9Zj1udWxsLGs9ZTtkb3t2YXIgbD1rLmxhbmU7aWYoKHhoJmwpPT09bCludWxsIT09aCYmKGg9aC5uZXh0PXtsYW5lOjAsYWN0aW9uOmsuYWN0aW9uLGVhZ2VyUmVkdWNlcjprLmVhZ2VyUmVkdWNlcixlYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9KSxkPWsuZWFnZXJSZWR1Y2VyPT09YT9rLmVhZ2VyU3RhdGU6YShkLGsuYWN0aW9uKTtlbHNle3ZhciBuPXtsYW5lOmwsYWN0aW9uOmsuYWN0aW9uLGVhZ2VyUmVkdWNlcjprLmVhZ2VyUmVkdWNlcixcbmVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH07bnVsbD09PWg/KGc9aD1uLGY9ZCk6aD1oLm5leHQ9bjtSLmxhbmVzfD1sO0RnfD1sfWs9ay5uZXh0fXdoaWxlKG51bGwhPT1rJiZrIT09ZSk7bnVsbD09PWg/Zj1kOmgubmV4dD1nO0hlKGQsYi5tZW1vaXplZFN0YXRlKXx8KHVnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZDtiLmJhc2VTdGF0ZT1mO2IuYmFzZVF1ZXVlPWg7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1kfXJldHVybltiLm1lbW9pemVkU3RhdGUsYy5kaXNwYXRjaF19XG5mdW5jdGlvbiBMaChhKXt2YXIgYj1JaCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih5KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPWMuZGlzcGF0Y2gsZT1jLnBlbmRpbmcsZj1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWUpe2MucGVuZGluZz1udWxsO3ZhciBnPWU9ZS5uZXh0O2RvIGY9YShmLGcuYWN0aW9uKSxnPWcubmV4dDt3aGlsZShnIT09ZSk7SGUoZixiLm1lbW9pemVkU3RhdGUpfHwodWc9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO251bGw9PT1iLmJhc2VRdWV1ZSYmKGIuYmFzZVN0YXRlPWYpO2MubGFzdFJlbmRlcmVkU3RhdGU9Zn1yZXR1cm5bZixkXX1cbmZ1bmN0aW9uIE1oKGEsYixjKXt2YXIgZD1iLl9nZXRWZXJzaW9uO2Q9ZChiLl9zb3VyY2UpO3ZhciBlPWIuX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk7aWYobnVsbCE9PWUpYT1lPT09ZDtlbHNlIGlmKGE9YS5tdXRhYmxlUmVhZExhbmVzLGE9KHhoJmEpPT09YSliLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5PWQsdGgucHVzaChiKTtpZihhKXJldHVybiBjKGIuX3NvdXJjZSk7dGgucHVzaChiKTt0aHJvdyBFcnJvcih5KDM1MCkpO31cbmZ1bmN0aW9uIE5oKGEsYixjLGQpe3ZhciBlPVU7aWYobnVsbD09PWUpdGhyb3cgRXJyb3IoeSgzNDkpKTt2YXIgZj1iLl9nZXRWZXJzaW9uLGc9ZihiLl9zb3VyY2UpLGg9dmguY3VycmVudCxrPWgudXNlU3RhdGUoZnVuY3Rpb24oKXtyZXR1cm4gTWgoZSxiLGMpfSksbD1rWzFdLG49a1swXTtrPVQ7dmFyIEE9YS5tZW1vaXplZFN0YXRlLHA9QS5yZWZzLEM9cC5nZXRTbmFwc2hvdCx4PUEuc291cmNlO0E9QS5zdWJzY3JpYmU7dmFyIHc9UjthLm1lbW9pemVkU3RhdGU9e3JlZnM6cCxzb3VyY2U6YixzdWJzY3JpYmU6ZH07aC51c2VFZmZlY3QoZnVuY3Rpb24oKXtwLmdldFNuYXBzaG90PWM7cC5zZXRTbmFwc2hvdD1sO3ZhciBhPWYoYi5fc291cmNlKTtpZighSGUoZyxhKSl7YT1jKGIuX3NvdXJjZSk7SGUobixhKXx8KGwoYSksYT1JZyh3KSxlLm11dGFibGVSZWFkTGFuZXN8PWEmZS5wZW5kaW5nTGFuZXMpO2E9ZS5tdXRhYmxlUmVhZExhbmVzO2UuZW50YW5nbGVkTGFuZXN8PWE7Zm9yKHZhciBkPVxuZS5lbnRhbmdsZW1lbnRzLGg9YTswPGg7KXt2YXIgaz0zMS1WYyhoKSx2PTE8PGs7ZFtrXXw9YTtoJj1+dn19fSxbYyxiLGRdKTtoLnVzZUVmZmVjdChmdW5jdGlvbigpe3JldHVybiBkKGIuX3NvdXJjZSxmdW5jdGlvbigpe3ZhciBhPXAuZ2V0U25hcHNob3QsYz1wLnNldFNuYXBzaG90O3RyeXtjKGEoYi5fc291cmNlKSk7dmFyIGQ9SWcodyk7ZS5tdXRhYmxlUmVhZExhbmVzfD1kJmUucGVuZGluZ0xhbmVzfWNhdGNoKHEpe2MoZnVuY3Rpb24oKXt0aHJvdyBxO30pfX0pfSxbYixkXSk7SGUoQyxjKSYmSGUoeCxiKSYmSGUoQSxkKXx8KGE9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6SmgsbGFzdFJlbmRlcmVkU3RhdGU6bn0sYS5kaXNwYXRjaD1sPU9oLmJpbmQobnVsbCxSLGEpLGsucXVldWU9YSxrLmJhc2VRdWV1ZT1udWxsLG49TWgoZSxiLGMpLGsubWVtb2l6ZWRTdGF0ZT1rLmJhc2VTdGF0ZT1uKTtyZXR1cm4gbn1cbmZ1bmN0aW9uIFBoKGEsYixjKXt2YXIgZD1JaCgpO3JldHVybiBOaChkLGEsYixjKX1mdW5jdGlvbiBRaChhKXt2YXIgYj1IaCgpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiYoYT1hKCkpO2IubWVtb2l6ZWRTdGF0ZT1iLmJhc2VTdGF0ZT1hO2E9Yi5xdWV1ZT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjpKaCxsYXN0UmVuZGVyZWRTdGF0ZTphfTthPWEuZGlzcGF0Y2g9T2guYmluZChudWxsLFIsYSk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxhXX1cbmZ1bmN0aW9uIFJoKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtiPVIudXBkYXRlUXVldWU7bnVsbD09PWI/KGI9e2xhc3RFZmZlY3Q6bnVsbH0sUi51cGRhdGVRdWV1ZT1iLGIubGFzdEVmZmVjdD1hLm5leHQ9YSk6KGM9Yi5sYXN0RWZmZWN0LG51bGw9PT1jP2IubGFzdEVmZmVjdD1hLm5leHQ9YTooZD1jLm5leHQsYy5uZXh0PWEsYS5uZXh0PWQsYi5sYXN0RWZmZWN0PWEpKTtyZXR1cm4gYX1mdW5jdGlvbiBTaChhKXt2YXIgYj1IaCgpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfWZ1bmN0aW9uIFRoKCl7cmV0dXJuIEloKCkubWVtb2l6ZWRTdGF0ZX1mdW5jdGlvbiBVaChhLGIsYyxkKXt2YXIgZT1IaCgpO1IuZmxhZ3N8PWE7ZS5tZW1vaXplZFN0YXRlPVJoKDF8YixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9XG5mdW5jdGlvbiBWaChhLGIsYyxkKXt2YXIgZT1JaCgpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1TKXt2YXIgZz1TLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJkJoKGQsZy5kZXBzKSl7UmgoYixjLGYsZCk7cmV0dXJufX1SLmZsYWdzfD1hO2UubWVtb2l6ZWRTdGF0ZT1SaCgxfGIsYyxmLGQpfWZ1bmN0aW9uIFdoKGEsYil7cmV0dXJuIFVoKDUxNiw0LGEsYil9ZnVuY3Rpb24gWGgoYSxiKXtyZXR1cm4gVmgoNTE2LDQsYSxiKX1mdW5jdGlvbiBZaChhLGIpe3JldHVybiBWaCg0LDIsYSxiKX1mdW5jdGlvbiBaaChhLGIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXJldHVybiBhPWEoKSxiKGEpLGZ1bmN0aW9uKCl7YihudWxsKX07aWYobnVsbCE9PWImJnZvaWQgMCE9PWIpcmV0dXJuIGE9YSgpLGIuY3VycmVudD1hLGZ1bmN0aW9uKCl7Yi5jdXJyZW50PW51bGx9fVxuZnVuY3Rpb24gJGgoYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBWaCg0LDIsWmguYmluZChudWxsLGIsYSksYyl9ZnVuY3Rpb24gYWkoKXt9ZnVuY3Rpb24gYmkoYSxiKXt2YXIgYz1JaCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmQmgoYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9ZnVuY3Rpb24gY2koYSxiKXt2YXIgYz1JaCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmQmgoYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9XG5mdW5jdGlvbiBkaShhLGIpe3ZhciBjPWVnKCk7Z2coOTg+Yz85ODpjLGZ1bmN0aW9uKCl7YSghMCl9KTtnZyg5NzxjPzk3OmMsZnVuY3Rpb24oKXt2YXIgYz13aC50cmFuc2l0aW9uO3doLnRyYW5zaXRpb249MTt0cnl7YSghMSksYigpfWZpbmFsbHl7d2gudHJhbnNpdGlvbj1jfX0pfVxuZnVuY3Rpb24gT2goYSxiLGMpe3ZhciBkPUhnKCksZT1JZyhhKSxmPXtsYW5lOmUsYWN0aW9uOmMsZWFnZXJSZWR1Y2VyOm51bGwsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH0sZz1iLnBlbmRpbmc7bnVsbD09PWc/Zi5uZXh0PWY6KGYubmV4dD1nLm5leHQsZy5uZXh0PWYpO2IucGVuZGluZz1mO2c9YS5hbHRlcm5hdGU7aWYoYT09PVJ8fG51bGwhPT1nJiZnPT09Uil6aD15aD0hMDtlbHNle2lmKDA9PT1hLmxhbmVzJiYobnVsbD09PWd8fDA9PT1nLmxhbmVzKSYmKGc9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1nKSl0cnl7dmFyIGg9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxrPWcoaCxjKTtmLmVhZ2VyUmVkdWNlcj1nO2YuZWFnZXJTdGF0ZT1rO2lmKEhlKGssaCkpcmV0dXJufWNhdGNoKGwpe31maW5hbGx5e31KZyhhLGUsZCl9fVxudmFyIEdoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpBaCx1c2VDb250ZXh0OkFoLHVzZUVmZmVjdDpBaCx1c2VJbXBlcmF0aXZlSGFuZGxlOkFoLHVzZUxheW91dEVmZmVjdDpBaCx1c2VNZW1vOkFoLHVzZVJlZHVjZXI6QWgsdXNlUmVmOkFoLHVzZVN0YXRlOkFoLHVzZURlYnVnVmFsdWU6QWgsdXNlRGVmZXJyZWRWYWx1ZTpBaCx1c2VUcmFuc2l0aW9uOkFoLHVzZU11dGFibGVTb3VyY2U6QWgsdXNlT3BhcXVlSWRlbnRpZmllcjpBaCx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LERoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpmdW5jdGlvbihhLGIpe0hoKCkubWVtb2l6ZWRTdGF0ZT1bYSx2b2lkIDA9PT1iP251bGw6Yl07cmV0dXJuIGF9LHVzZUNvbnRleHQ6dmcsdXNlRWZmZWN0OldoLHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBVaCg0LDIsWmguYmluZChudWxsLFxuYixhKSxjKX0sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFVoKDQsMixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9SGgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9SGgoKTtiPXZvaWQgMCE9PWM/YyhiKTpiO2QubWVtb2l6ZWRTdGF0ZT1kLmJhc2VTdGF0ZT1iO2E9ZC5xdWV1ZT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjphLGxhc3RSZW5kZXJlZFN0YXRlOmJ9O2E9YS5kaXNwYXRjaD1PaC5iaW5kKG51bGwsUixhKTtyZXR1cm5bZC5tZW1vaXplZFN0YXRlLGFdfSx1c2VSZWY6U2gsdXNlU3RhdGU6UWgsdXNlRGVidWdWYWx1ZTphaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPVFoKGEpLGM9YlswXSxkPWJbMV07V2goZnVuY3Rpb24oKXt2YXIgYj13aC50cmFuc2l0aW9uO1xud2gudHJhbnNpdGlvbj0xO3RyeXtkKGEpfWZpbmFsbHl7d2gudHJhbnNpdGlvbj1ifX0sW2FdKTtyZXR1cm4gY30sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPVFoKCExKSxiPWFbMF07YT1kaS5iaW5kKG51bGwsYVsxXSk7U2goYSk7cmV0dXJuW2EsYl19LHVzZU11dGFibGVTb3VyY2U6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPUhoKCk7ZC5tZW1vaXplZFN0YXRlPXtyZWZzOntnZXRTbmFwc2hvdDpiLHNldFNuYXBzaG90Om51bGx9LHNvdXJjZTphLHN1YnNjcmliZTpjfTtyZXR1cm4gTmgoZCxhLGIsYyl9LHVzZU9wYXF1ZUlkZW50aWZpZXI6ZnVuY3Rpb24oKXtpZihsaCl7dmFyIGE9ITEsYj11ZihmdW5jdGlvbigpe2F8fChhPSEwLGMoXCJyOlwiKyh0ZisrKS50b1N0cmluZygzNikpKTt0aHJvdyBFcnJvcih5KDM1NSkpO30pLGM9UWgoYilbMV07MD09PShSLm1vZGUmMikmJihSLmZsYWdzfD01MTYsUmgoNSxmdW5jdGlvbigpe2MoXCJyOlwiKyh0ZisrKS50b1N0cmluZygzNikpfSxcbnZvaWQgMCxudWxsKSk7cmV0dXJuIGJ9Yj1cInI6XCIrKHRmKyspLnRvU3RyaW5nKDM2KTtRaChiKTtyZXR1cm4gYn0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxFaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6YmksdXNlQ29udGV4dDp2Zyx1c2VFZmZlY3Q6WGgsdXNlSW1wZXJhdGl2ZUhhbmRsZTokaCx1c2VMYXlvdXRFZmZlY3Q6WWgsdXNlTWVtbzpjaSx1c2VSZWR1Y2VyOktoLHVzZVJlZjpUaCx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiBLaChKaCl9LHVzZURlYnVnVmFsdWU6YWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1LaChKaCksYz1iWzBdLGQ9YlsxXTtYaChmdW5jdGlvbigpe3ZhciBiPXdoLnRyYW5zaXRpb247d2gudHJhbnNpdGlvbj0xO3RyeXtkKGEpfWZpbmFsbHl7d2gudHJhbnNpdGlvbj1ifX0sW2FdKTtyZXR1cm4gY30sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPUtoKEpoKVswXTtyZXR1cm5bVGgoKS5jdXJyZW50LFxuYV19LHVzZU11dGFibGVTb3VyY2U6UGgsdXNlT3BhcXVlSWRlbnRpZmllcjpmdW5jdGlvbigpe3JldHVybiBLaChKaClbMF19LHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sRmg9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOmJpLHVzZUNvbnRleHQ6dmcsdXNlRWZmZWN0OlhoLHVzZUltcGVyYXRpdmVIYW5kbGU6JGgsdXNlTGF5b3V0RWZmZWN0OlloLHVzZU1lbW86Y2ksdXNlUmVkdWNlcjpMaCx1c2VSZWY6VGgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gTGgoSmgpfSx1c2VEZWJ1Z1ZhbHVlOmFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9TGgoSmgpLGM9YlswXSxkPWJbMV07WGgoZnVuY3Rpb24oKXt2YXIgYj13aC50cmFuc2l0aW9uO3doLnRyYW5zaXRpb249MTt0cnl7ZChhKX1maW5hbGx5e3doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1MaChKaClbMF07cmV0dXJuW1RoKCkuY3VycmVudCxcbmFdfSx1c2VNdXRhYmxlU291cmNlOlBoLHVzZU9wYXF1ZUlkZW50aWZpZXI6ZnVuY3Rpb24oKXtyZXR1cm4gTGgoSmgpWzBdfSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LGVpPXJhLlJlYWN0Q3VycmVudE93bmVyLHVnPSExO2Z1bmN0aW9uIGZpKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/WmcoYixudWxsLGMsZCk6WWcoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gZ2koYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO3RnKGIsZSk7ZD1DaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiF1ZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZmxhZ3MmPS01MTcsYS5sYW5lcyY9fmUsaGkoYSxiLGUpO2IuZmxhZ3N8PTE7ZmkoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBpaShhLGIsYyxkLGUsZil7aWYobnVsbD09PWEpe3ZhciBnPWMudHlwZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmIWppKGcpJiZ2b2lkIDA9PT1nLmRlZmF1bHRQcm9wcyYmbnVsbD09PWMuY29tcGFyZSYmdm9pZCAwPT09Yy5kZWZhdWx0UHJvcHMpcmV0dXJuIGIudGFnPTE1LGIudHlwZT1nLGtpKGEsYixnLGQsZSxmKTthPVZnKGMudHlwZSxudWxsLGQsYixiLm1vZGUsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWc9YS5jaGlsZDtpZigwPT09KGUmZikmJihlPWcubWVtb2l6ZWRQcm9wcyxjPWMuY29tcGFyZSxjPW51bGwhPT1jP2M6SmUsYyhlLGQpJiZhLnJlZj09PWIucmVmKSlyZXR1cm4gaGkoYSxiLGYpO2IuZmxhZ3N8PTE7YT1UZyhnLGQpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1cbmZ1bmN0aW9uIGtpKGEsYixjLGQsZSxmKXtpZihudWxsIT09YSYmSmUoYS5tZW1vaXplZFByb3BzLGQpJiZhLnJlZj09PWIucmVmKWlmKHVnPSExLDAhPT0oZiZlKSkwIT09KGEuZmxhZ3MmMTYzODQpJiYodWc9ITApO2Vsc2UgcmV0dXJuIGIubGFuZXM9YS5sYW5lcyxoaShhLGIsZik7cmV0dXJuIGxpKGEsYixjLGQsZil9XG5mdW5jdGlvbiBtaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLmNoaWxkcmVuLGY9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGw7aWYoXCJoaWRkZW5cIj09PWQubW9kZXx8XCJ1bnN0YWJsZS1kZWZlci13aXRob3V0LWhpZGluZ1wiPT09ZC5tb2RlKWlmKDA9PT0oYi5tb2RlJjQpKWIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOjB9LG5pKGIsYyk7ZWxzZSBpZigwIT09KGMmMTA3Mzc0MTgyNCkpYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6MH0sbmkoYixudWxsIT09Zj9mLmJhc2VMYW5lczpjKTtlbHNlIHJldHVybiBhPW51bGwhPT1mP2YuYmFzZUxhbmVzfGM6YyxiLmxhbmVzPWIuY2hpbGRMYW5lcz0xMDczNzQxODI0LGIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOmF9LG5pKGIsYSksbnVsbDtlbHNlIG51bGwhPT1mPyhkPWYuYmFzZUxhbmVzfGMsYi5tZW1vaXplZFN0YXRlPW51bGwpOmQ9YyxuaShiLGQpO2ZpKGEsYixlLGMpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gb2koYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5mbGFnc3w9MTI4fWZ1bmN0aW9uIGxpKGEsYixjLGQsZSl7dmFyIGY9RmYoYyk/RGY6TS5jdXJyZW50O2Y9RWYoYixmKTt0ZyhiLGUpO2M9Q2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhdWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmZsYWdzJj0tNTE3LGEubGFuZXMmPX5lLGhpKGEsYixlKTtiLmZsYWdzfD0xO2ZpKGEsYixjLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gcGkoYSxiLGMsZCxlKXtpZihGZihjKSl7dmFyIGY9ITA7SmYoYil9ZWxzZSBmPSExO3RnKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpLE1nKGIsYyxkKSxPZyhiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD12ZyhsKToobD1GZihjKT9EZjpNLmN1cnJlbnQsbD1FZihiLGwpKTt2YXIgbj1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxBPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBufHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZTtBfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmTmcoYixnLGQsbCk7d2c9ITE7dmFyIHA9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9cDtDZyhiLGQsZyxlKTtrPWIubWVtb2l6ZWRTdGF0ZTtoIT09ZHx8cCE9PWt8fE4uY3VycmVudHx8d2c/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBuJiYoR2coYixjLG4sZCksaz1iLm1lbW9pemVkU3RhdGUpLChoPXdnfHxMZyhiLGMsaCxkLHAsayxsKSk/KEF8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudCYmZy5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSksXCJmdW5jdGlvblwiPT09XG50eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9ayksZy5wcm9wcz1kLGcuc3RhdGU9ayxnLmNvbnRleHQ9bCxkPWgpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQpLGQ9ITEpfWVsc2V7Zz1iLnN0YXRlTm9kZTt5ZyhhLGIpO2g9Yi5tZW1vaXplZFByb3BzO2w9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOmxnKGIudHlwZSxoKTtnLnByb3BzPWw7QT1iLnBlbmRpbmdQcm9wcztwPWcuY29udGV4dDtrPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBrJiZudWxsIT09az9rPXZnKGspOihrPUZmKGMpP0RmOk0uY3VycmVudCxrPUVmKGIsaykpO3ZhciBDPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOyhuPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBDfHxcblwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09QXx8cCE9PWspJiZOZyhiLGcsZCxrKTt3Zz0hMTtwPWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXA7Q2coYixkLGcsZSk7dmFyIHg9Yi5tZW1vaXplZFN0YXRlO2ghPT1BfHxwIT09eHx8Ti5jdXJyZW50fHx3Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIEMmJihHZyhiLGMsQyxkKSx4PWIubWVtb2l6ZWRTdGF0ZSksKGw9d2d8fExnKGIsYyxsLGQscCx4LGspKT8obnx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZnLmNvbXBvbmVudFdpbGxVcGRhdGUoZCxcbngsayksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCx4LGspKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZmxhZ3N8PTI1NikpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTI1NiksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPXgpLGcucHJvcHM9ZCxnLnN0YXRlPXgsZy5jb250ZXh0PWssZD1sKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxcbmg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTI1NiksZD0hMSl9cmV0dXJuIHFpKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIHFpKGEsYixjLGQsZSxmKXtvaShhLGIpO3ZhciBnPTAhPT0oYi5mbGFncyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZLZihiLGMsITEpLGhpKGEsYixmKTtkPWIuc3RhdGVOb2RlO2VpLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZmxhZ3N8PTE7bnVsbCE9PWEmJmc/KGIuY2hpbGQ9WWcoYixhLmNoaWxkLG51bGwsZiksYi5jaGlsZD1ZZyhiLG51bGwsaCxmKSk6ZmkoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmS2YoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiByaShhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P0hmKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJkhmKGEsYi5jb250ZXh0LCExKTtlaChhLGIuY29udGFpbmVySW5mbyl9XG52YXIgc2k9e2RlaHlkcmF0ZWQ6bnVsbCxyZXRyeUxhbmU6MH07XG5mdW5jdGlvbiB0aShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1QLmN1cnJlbnQsZj0hMSxnOyhnPTAhPT0oYi5mbGFncyY2NCkpfHwoZz1udWxsIT09YSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZT8hMTowIT09KGUmMikpO2c/KGY9ITAsYi5mbGFncyY9LTY1KTpudWxsIT09YSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZXx8dm9pZCAwPT09ZC5mYWxsYmFja3x8ITA9PT1kLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwoZXw9MSk7SShQLGUmMSk7aWYobnVsbD09PWEpe3ZvaWQgMCE9PWQuZmFsbGJhY2smJnBoKGIpO2E9ZC5jaGlsZHJlbjtlPWQuZmFsbGJhY2s7aWYoZilyZXR1cm4gYT11aShiLGEsZSxjKSxiLmNoaWxkLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczpjfSxiLm1lbW9pemVkU3RhdGU9c2ksYTtpZihcIm51bWJlclwiPT09dHlwZW9mIGQudW5zdGFibGVfZXhwZWN0ZWRMb2FkVGltZSlyZXR1cm4gYT11aShiLGEsZSxjKSxiLmNoaWxkLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczpjfSxcbmIubWVtb2l6ZWRTdGF0ZT1zaSxiLmxhbmVzPTMzNTU0NDMyLGE7Yz12aSh7bW9kZTpcInZpc2libGVcIixjaGlsZHJlbjphfSxiLm1vZGUsYyxudWxsKTtjLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWN9aWYobnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSl7aWYoZilyZXR1cm4gZD13aShhLGIsZC5jaGlsZHJlbixkLmZhbGxiYWNrLGMpLGY9Yi5jaGlsZCxlPWEuY2hpbGQubWVtb2l6ZWRTdGF0ZSxmLm1lbW9pemVkU3RhdGU9bnVsbD09PWU/e2Jhc2VMYW5lczpjfTp7YmFzZUxhbmVzOmUuYmFzZUxhbmVzfGN9LGYuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXMmfmMsYi5tZW1vaXplZFN0YXRlPXNpLGQ7Yz14aShhLGIsZC5jaGlsZHJlbixjKTtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gY31pZihmKXJldHVybiBkPXdpKGEsYixkLmNoaWxkcmVuLGQuZmFsbGJhY2ssYyksZj1iLmNoaWxkLGU9YS5jaGlsZC5tZW1vaXplZFN0YXRlLGYubWVtb2l6ZWRTdGF0ZT1udWxsPT09ZT97YmFzZUxhbmVzOmN9Olxue2Jhc2VMYW5lczplLmJhc2VMYW5lc3xjfSxmLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzJn5jLGIubWVtb2l6ZWRTdGF0ZT1zaSxkO2M9eGkoYSxiLGQuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGN9ZnVuY3Rpb24gdWkoYSxiLGMsZCl7dmFyIGU9YS5tb2RlLGY9YS5jaGlsZDtiPXttb2RlOlwiaGlkZGVuXCIsY2hpbGRyZW46Yn07MD09PShlJjIpJiZudWxsIT09Zj8oZi5jaGlsZExhbmVzPTAsZi5wZW5kaW5nUHJvcHM9Yik6Zj12aShiLGUsMCxudWxsKTtjPVhnKGMsZSxkLG51bGwpO2YucmV0dXJuPWE7Yy5yZXR1cm49YTtmLnNpYmxpbmc9YzthLmNoaWxkPWY7cmV0dXJuIGN9XG5mdW5jdGlvbiB4aShhLGIsYyxkKXt2YXIgZT1hLmNoaWxkO2E9ZS5zaWJsaW5nO2M9VGcoZSx7bW9kZTpcInZpc2libGVcIixjaGlsZHJlbjpjfSk7MD09PShiLm1vZGUmMikmJihjLmxhbmVzPWQpO2MucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGw7bnVsbCE9PWEmJihhLm5leHRFZmZlY3Q9bnVsbCxhLmZsYWdzPTgsYi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YSk7cmV0dXJuIGIuY2hpbGQ9Y31cbmZ1bmN0aW9uIHdpKGEsYixjLGQsZSl7dmFyIGY9Yi5tb2RlLGc9YS5jaGlsZDthPWcuc2libGluZzt2YXIgaD17bW9kZTpcImhpZGRlblwiLGNoaWxkcmVuOmN9OzA9PT0oZiYyKSYmYi5jaGlsZCE9PWc/KGM9Yi5jaGlsZCxjLmNoaWxkTGFuZXM9MCxjLnBlbmRpbmdQcm9wcz1oLGc9Yy5sYXN0RWZmZWN0LG51bGwhPT1nPyhiLmZpcnN0RWZmZWN0PWMuZmlyc3RFZmZlY3QsYi5sYXN0RWZmZWN0PWcsZy5uZXh0RWZmZWN0PW51bGwpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PW51bGwpOmM9VGcoZyxoKTtudWxsIT09YT9kPVRnKGEsZCk6KGQ9WGcoZCxmLGUsbnVsbCksZC5mbGFnc3w9Mik7ZC5yZXR1cm49YjtjLnJldHVybj1iO2Muc2libGluZz1kO2IuY2hpbGQ9YztyZXR1cm4gZH1mdW5jdGlvbiB5aShhLGIpe2EubGFuZXN8PWI7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJihjLmxhbmVzfD1iKTtzZyhhLnJldHVybixiKX1cbmZ1bmN0aW9uIHppKGEsYixjLGQsZSxmKXt2YXIgZz1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWc/YS5tZW1vaXplZFN0YXRlPXtpc0JhY2t3YXJkczpiLHJlbmRlcmluZzpudWxsLHJlbmRlcmluZ1N0YXJ0VGltZTowLGxhc3Q6ZCx0YWlsOmMsdGFpbE1vZGU6ZSxsYXN0RWZmZWN0OmZ9OihnLmlzQmFja3dhcmRzPWIsZy5yZW5kZXJpbmc9bnVsbCxnLnJlbmRlcmluZ1N0YXJ0VGltZT0wLGcubGFzdD1kLGcudGFpbD1jLGcudGFpbE1vZGU9ZSxnLmxhc3RFZmZlY3Q9Zil9XG5mdW5jdGlvbiBBaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLnJldmVhbE9yZGVyLGY9ZC50YWlsO2ZpKGEsYixkLmNoaWxkcmVuLGMpO2Q9UC5jdXJyZW50O2lmKDAhPT0oZCYyKSlkPWQmMXwyLGIuZmxhZ3N8PTY0O2Vsc2V7aWYobnVsbCE9PWEmJjAhPT0oYS5mbGFncyY2NCkpYTpmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7aWYoMTM9PT1hLnRhZyludWxsIT09YS5tZW1vaXplZFN0YXRlJiZ5aShhLGMpO2Vsc2UgaWYoMTk9PT1hLnRhZyl5aShhLGMpO2Vsc2UgaWYobnVsbCE9PWEuY2hpbGQpe2EuY2hpbGQucmV0dXJuPWE7YT1hLmNoaWxkO2NvbnRpbnVlfWlmKGE9PT1iKWJyZWFrIGE7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxhLnJldHVybj09PWIpYnJlYWsgYTthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47YT1hLnNpYmxpbmd9ZCY9MX1JKFAsZCk7aWYoMD09PShiLm1vZGUmMikpYi5tZW1vaXplZFN0YXRlPVxubnVsbDtlbHNlIHN3aXRjaChlKXtjYXNlIFwiZm9yd2FyZHNcIjpjPWIuY2hpbGQ7Zm9yKGU9bnVsbDtudWxsIT09YzspYT1jLmFsdGVybmF0ZSxudWxsIT09YSYmbnVsbD09PWloKGEpJiYoZT1jKSxjPWMuc2libGluZztjPWU7bnVsbD09PWM/KGU9Yi5jaGlsZCxiLmNoaWxkPW51bGwpOihlPWMuc2libGluZyxjLnNpYmxpbmc9bnVsbCk7emkoYiwhMSxlLGMsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJiYWNrd2FyZHNcIjpjPW51bGw7ZT1iLmNoaWxkO2ZvcihiLmNoaWxkPW51bGw7bnVsbCE9PWU7KXthPWUuYWx0ZXJuYXRlO2lmKG51bGwhPT1hJiZudWxsPT09aWgoYSkpe2IuY2hpbGQ9ZTticmVha31hPWUuc2libGluZztlLnNpYmxpbmc9YztjPWU7ZT1hfXppKGIsITAsYyxudWxsLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwidG9nZXRoZXJcIjp6aShiLCExLG51bGwsbnVsbCx2b2lkIDAsYi5sYXN0RWZmZWN0KTticmVhaztkZWZhdWx0OmIubWVtb2l6ZWRTdGF0ZT1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gaGkoYSxiLGMpe251bGwhPT1hJiYoYi5kZXBlbmRlbmNpZXM9YS5kZXBlbmRlbmNpZXMpO0RnfD1iLmxhbmVzO2lmKDAhPT0oYyZiLmNoaWxkTGFuZXMpKXtpZihudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQpdGhyb3cgRXJyb3IoeSgxNTMpKTtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9VGcoYSxhLnBlbmRpbmdQcm9wcyk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPVRnKGEsYS5wZW5kaW5nUHJvcHMpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9cmV0dXJuIG51bGx9dmFyIEJpLENpLERpLEVpO1xuQmk9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O0NpPWZ1bmN0aW9uKCl7fTtcbkRpPWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWEubWVtb2l6ZWRQcm9wcztpZihlIT09ZCl7YT1iLnN0YXRlTm9kZTtkaChhaC5jdXJyZW50KTt2YXIgZj1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjplPVlhKGEsZSk7ZD1ZYShhLGQpO2Y9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmU9ZWIoYSxlKTtkPWViKGEsZCk7Zj1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6ZT1tKHt9LGUse3ZhbHVlOnZvaWQgMH0pO2Q9bSh7fSxkLHt2YWx1ZTp2b2lkIDB9KTtmPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmU9Z2IoYSxlKTtkPWdiKGEsZCk7Zj1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihhLm9uY2xpY2s9amYpfXZiKGMsZCk7dmFyIGc7Yz1udWxsO2ZvcihsIGluIGUpaWYoIWQuaGFzT3duUHJvcGVydHkobCkmJmUuaGFzT3duUHJvcGVydHkobCkmJm51bGwhPWVbbF0paWYoXCJzdHlsZVwiPT09XG5sKXt2YXIgaD1lW2xdO2ZvcihnIGluIGgpaC5oYXNPd25Qcm9wZXJ0eShnKSYmKGN8fChjPXt9KSxjW2ddPVwiXCIpfWVsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1sJiZcImNoaWxkcmVuXCIhPT1sJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJlwiYXV0b0ZvY3VzXCIhPT1sJiYoY2EuaGFzT3duUHJvcGVydHkobCk/Znx8KGY9W10pOihmPWZ8fFtdKS5wdXNoKGwsbnVsbCkpO2ZvcihsIGluIGQpe3ZhciBrPWRbbF07aD1udWxsIT1lP2VbbF06dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkobCkmJmshPT1oJiYobnVsbCE9a3x8bnVsbCE9aCkpaWYoXCJzdHlsZVwiPT09bClpZihoKXtmb3IoZyBpbiBoKSFoLmhhc093blByb3BlcnR5KGcpfHxrJiZrLmhhc093blByb3BlcnR5KGcpfHwoY3x8KGM9e30pLGNbZ109XCJcIik7Zm9yKGcgaW4gaylrLmhhc093blByb3BlcnR5KGcpJiZoW2ddIT09a1tnXSYmKGN8fFxuKGM9e30pLGNbZ109a1tnXSl9ZWxzZSBjfHwoZnx8KGY9W10pLGYucHVzaChsLGMpKSxjPWs7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWw/KGs9az9rLl9faHRtbDp2b2lkIDAsaD1oP2guX19odG1sOnZvaWQgMCxudWxsIT1rJiZoIT09ayYmKGY9Znx8W10pLnB1c2gobCxrKSk6XCJjaGlsZHJlblwiPT09bD9cInN0cmluZ1wiIT09dHlwZW9mIGsmJlwibnVtYmVyXCIhPT10eXBlb2Yga3x8KGY9Znx8W10pLnB1c2gobCxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1sJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09bCYmKGNhLmhhc093blByb3BlcnR5KGwpPyhudWxsIT1rJiZcIm9uU2Nyb2xsXCI9PT1sJiZHKFwic2Nyb2xsXCIsYSksZnx8aD09PWt8fChmPVtdKSk6XCJvYmplY3RcIj09PXR5cGVvZiBrJiZudWxsIT09ayYmay4kJHR5cGVvZj09PUdhP2sudG9TdHJpbmcoKTooZj1mfHxbXSkucHVzaChsLGspKX1jJiYoZj1mfHxbXSkucHVzaChcInN0eWxlXCIsXG5jKTt2YXIgbD1mO2lmKGIudXBkYXRlUXVldWU9bCliLmZsYWdzfD00fX07RWk9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJihiLmZsYWdzfD00KX07ZnVuY3Rpb24gRmkoYSxiKXtpZighbGgpc3dpdGNoKGEudGFpbE1vZGUpe2Nhc2UgXCJoaWRkZW5cIjpiPWEudGFpbDtmb3IodmFyIGM9bnVsbDtudWxsIT09YjspbnVsbCE9PWIuYWx0ZXJuYXRlJiYoYz1iKSxiPWIuc2libGluZztudWxsPT09Yz9hLnRhaWw9bnVsbDpjLnNpYmxpbmc9bnVsbDticmVhaztjYXNlIFwiY29sbGFwc2VkXCI6Yz1hLnRhaWw7Zm9yKHZhciBkPW51bGw7bnVsbCE9PWM7KW51bGwhPT1jLmFsdGVybmF0ZSYmKGQ9YyksYz1jLnNpYmxpbmc7bnVsbD09PWQ/Ynx8bnVsbD09PWEudGFpbD9hLnRhaWw9bnVsbDphLnRhaWwuc2libGluZz1udWxsOmQuc2libGluZz1udWxsfX1cbmZ1bmN0aW9uIEdpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcztzd2l0Y2goYi50YWcpe2Nhc2UgMjpjYXNlIDE2OmNhc2UgMTU6Y2FzZSAwOmNhc2UgMTE6Y2FzZSA3OmNhc2UgODpjYXNlIDEyOmNhc2UgOTpjYXNlIDE0OnJldHVybiBudWxsO2Nhc2UgMTpyZXR1cm4gRmYoYi50eXBlKSYmR2YoKSxudWxsO2Nhc2UgMzpmaCgpO0goTik7SChNKTt1aCgpO2Q9Yi5zdGF0ZU5vZGU7ZC5wZW5kaW5nQ29udGV4dCYmKGQuY29udGV4dD1kLnBlbmRpbmdDb250ZXh0LGQucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKXJoKGIpP2IuZmxhZ3N8PTQ6ZC5oeWRyYXRlfHwoYi5mbGFnc3w9MjU2KTtDaShiKTtyZXR1cm4gbnVsbDtjYXNlIDU6aGgoYik7dmFyIGU9ZGgoY2guY3VycmVudCk7Yz1iLnR5cGU7aWYobnVsbCE9PWEmJm51bGwhPWIuc3RhdGVOb2RlKURpKGEsYixjLGQsZSksYS5yZWYhPT1iLnJlZiYmKGIuZmxhZ3N8PTEyOCk7ZWxzZXtpZighZCl7aWYobnVsbD09PVxuYi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IoeSgxNjYpKTtyZXR1cm4gbnVsbH1hPWRoKGFoLmN1cnJlbnQpO2lmKHJoKGIpKXtkPWIuc3RhdGVOb2RlO2M9Yi50eXBlO3ZhciBmPWIubWVtb2l6ZWRQcm9wcztkW3dmXT1iO2RbeGZdPWY7c3dpdGNoKGMpe2Nhc2UgXCJkaWFsb2dcIjpHKFwiY2FuY2VsXCIsZCk7RyhcImNsb3NlXCIsZCk7YnJlYWs7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpHKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihhPTA7YTxYZS5sZW5ndGg7YSsrKUcoWGVbYV0sZCk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkcoXCJlcnJvclwiLGQpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkcoXCJlcnJvclwiLGQpO0coXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpHKFwidG9nZ2xlXCIsZCk7YnJlYWs7Y2FzZSBcImlucHV0XCI6WmEoZCxmKTtHKFwiaW52YWxpZFwiLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpkLl93cmFwcGVyU3RhdGU9XG57d2FzTXVsdGlwbGU6ISFmLm11bHRpcGxlfTtHKFwiaW52YWxpZFwiLGQpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhiKGQsZiksRyhcImludmFsaWRcIixkKX12YihjLGYpO2E9bnVsbDtmb3IodmFyIGcgaW4gZilmLmhhc093blByb3BlcnR5KGcpJiYoZT1mW2ddLFwiY2hpbGRyZW5cIj09PWc/XCJzdHJpbmdcIj09PXR5cGVvZiBlP2QudGV4dENvbnRlbnQhPT1lJiYoYT1bXCJjaGlsZHJlblwiLGVdKTpcIm51bWJlclwiPT09dHlwZW9mIGUmJmQudGV4dENvbnRlbnQhPT1cIlwiK2UmJihhPVtcImNoaWxkcmVuXCIsXCJcIitlXSk6Y2EuaGFzT3duUHJvcGVydHkoZykmJm51bGwhPWUmJlwib25TY3JvbGxcIj09PWcmJkcoXCJzY3JvbGxcIixkKSk7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOlZhKGQpO2NiKGQsZiwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmEoZCk7amIoZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLm9uQ2xpY2smJihkLm9uY2xpY2s9XG5qZil9ZD1hO2IudXBkYXRlUXVldWU9ZDtudWxsIT09ZCYmKGIuZmxhZ3N8PTQpfWVsc2V7Zz05PT09ZS5ub2RlVHlwZT9lOmUub3duZXJEb2N1bWVudDthPT09a2IuaHRtbCYmKGE9bGIoYykpO2E9PT1rYi5odG1sP1wic2NyaXB0XCI9PT1jPyhhPWcuY3JlYXRlRWxlbWVudChcImRpdlwiKSxhLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGE9YS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpKTpcInN0cmluZ1wiPT09dHlwZW9mIGQuaXM/YT1nLmNyZWF0ZUVsZW1lbnQoYyx7aXM6ZC5pc30pOihhPWcuY3JlYXRlRWxlbWVudChjKSxcInNlbGVjdFwiPT09YyYmKGc9YSxkLm11bHRpcGxlP2cubXVsdGlwbGU9ITA6ZC5zaXplJiYoZy5zaXplPWQuc2l6ZSkpKTphPWcuY3JlYXRlRWxlbWVudE5TKGEsYyk7YVt3Zl09YjthW3hmXT1kO0JpKGEsYiwhMSwhMSk7Yi5zdGF0ZU5vZGU9YTtnPXdiKGMsZCk7c3dpdGNoKGMpe2Nhc2UgXCJkaWFsb2dcIjpHKFwiY2FuY2VsXCIsYSk7RyhcImNsb3NlXCIsYSk7XG5lPWQ7YnJlYWs7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpHKFwibG9hZFwiLGEpO2U9ZDticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZT0wO2U8WGUubGVuZ3RoO2UrKylHKFhlW2VdLGEpO2U9ZDticmVhaztjYXNlIFwic291cmNlXCI6RyhcImVycm9yXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkcoXCJlcnJvclwiLGEpO0coXCJsb2FkXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RyhcInRvZ2dsZVwiLGEpO2U9ZDticmVhaztjYXNlIFwiaW5wdXRcIjpaYShhLGQpO2U9WWEoYSxkKTtHKFwiaW52YWxpZFwiLGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjplPWViKGEsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFkLm11bHRpcGxlfTtlPW0oe30sZCx7dmFsdWU6dm9pZCAwfSk7RyhcImludmFsaWRcIixhKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoYihhLGQpO2U9XG5nYihhLGQpO0coXCJpbnZhbGlkXCIsYSk7YnJlYWs7ZGVmYXVsdDplPWR9dmIoYyxlKTt2YXIgaD1lO2ZvcihmIGluIGgpaWYoaC5oYXNPd25Qcm9wZXJ0eShmKSl7dmFyIGs9aFtmXTtcInN0eWxlXCI9PT1mP3RiKGEsayk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zj8oaz1rP2suX19odG1sOnZvaWQgMCxudWxsIT1rJiZvYihhLGspKTpcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2Ygaz8oXCJ0ZXh0YXJlYVwiIT09Y3x8XCJcIiE9PWspJiZwYihhLGspOlwibnVtYmVyXCI9PT10eXBlb2YgayYmcGIoYSxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1mJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09ZiYmXCJhdXRvRm9jdXNcIiE9PWYmJihjYS5oYXNPd25Qcm9wZXJ0eShmKT9udWxsIT1rJiZcIm9uU2Nyb2xsXCI9PT1mJiZHKFwic2Nyb2xsXCIsYSk6bnVsbCE9ayYmcWEoYSxmLGssZykpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpWYShhKTtjYihhLGQsITEpO1xuYnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmEoYSk7amIoYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPWQudmFsdWUmJmEuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK1NhKGQudmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5tdWx0aXBsZT0hIWQubXVsdGlwbGU7Zj1kLnZhbHVlO251bGwhPWY/ZmIoYSwhIWQubXVsdGlwbGUsZiwhMSk6bnVsbCE9ZC5kZWZhdWx0VmFsdWUmJmZiKGEsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLm9uQ2xpY2smJihhLm9uY2xpY2s9amYpfW1mKGMsZCkmJihiLmZsYWdzfD00KX1udWxsIT09Yi5yZWYmJihiLmZsYWdzfD0xMjgpfXJldHVybiBudWxsO2Nhc2UgNjppZihhJiZudWxsIT1iLnN0YXRlTm9kZSlFaShhLGIsYS5tZW1vaXplZFByb3BzLGQpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBkJiZudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IoeSgxNjYpKTtcbmM9ZGgoY2guY3VycmVudCk7ZGgoYWguY3VycmVudCk7cmgoYik/KGQ9Yi5zdGF0ZU5vZGUsYz1iLm1lbW9pemVkUHJvcHMsZFt3Zl09YixkLm5vZGVWYWx1ZSE9PWMmJihiLmZsYWdzfD00KSk6KGQ9KDk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShkKSxkW3dmXT1iLGIuc3RhdGVOb2RlPWQpfXJldHVybiBudWxsO2Nhc2UgMTM6SChQKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZigwIT09KGIuZmxhZ3MmNjQpKXJldHVybiBiLmxhbmVzPWMsYjtkPW51bGwhPT1kO2M9ITE7bnVsbD09PWE/dm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLmZhbGxiYWNrJiZyaChiKTpjPW51bGwhPT1hLm1lbW9pemVkU3RhdGU7aWYoZCYmIWMmJjAhPT0oYi5tb2RlJjIpKWlmKG51bGw9PT1hJiYhMCE9PWIubWVtb2l6ZWRQcm9wcy51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8MCE9PShQLmN1cnJlbnQmMSkpMD09PVYmJihWPTMpO2Vsc2V7aWYoMD09PVZ8fDM9PT1WKVY9XG40O251bGw9PT1VfHwwPT09KERnJjEzNDIxNzcyNykmJjA9PT0oSGkmMTM0MjE3NzI3KXx8SWkoVSxXKX1pZihkfHxjKWIuZmxhZ3N8PTQ7cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiBmaCgpLENpKGIpLG51bGw9PT1hJiZjZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxudWxsO2Nhc2UgMTA6cmV0dXJuIHJnKGIpLG51bGw7Y2FzZSAxNzpyZXR1cm4gRmYoYi50eXBlKSYmR2YoKSxudWxsO2Nhc2UgMTk6SChQKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsPT09ZClyZXR1cm4gbnVsbDtmPTAhPT0oYi5mbGFncyY2NCk7Zz1kLnJlbmRlcmluZztpZihudWxsPT09ZylpZihmKUZpKGQsITEpO2Vsc2V7aWYoMCE9PVZ8fG51bGwhPT1hJiYwIT09KGEuZmxhZ3MmNjQpKWZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtnPWloKGEpO2lmKG51bGwhPT1nKXtiLmZsYWdzfD02NDtGaShkLCExKTtmPWcudXBkYXRlUXVldWU7bnVsbCE9PWYmJihiLnVwZGF0ZVF1ZXVlPWYsYi5mbGFnc3w9NCk7XG5udWxsPT09ZC5sYXN0RWZmZWN0JiYoYi5maXJzdEVmZmVjdD1udWxsKTtiLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0O2Q9Yztmb3IoYz1iLmNoaWxkO251bGwhPT1jOylmPWMsYT1kLGYuZmxhZ3MmPTIsZi5uZXh0RWZmZWN0PW51bGwsZi5maXJzdEVmZmVjdD1udWxsLGYubGFzdEVmZmVjdD1udWxsLGc9Zi5hbHRlcm5hdGUsbnVsbD09PWc/KGYuY2hpbGRMYW5lcz0wLGYubGFuZXM9YSxmLmNoaWxkPW51bGwsZi5tZW1vaXplZFByb3BzPW51bGwsZi5tZW1vaXplZFN0YXRlPW51bGwsZi51cGRhdGVRdWV1ZT1udWxsLGYuZGVwZW5kZW5jaWVzPW51bGwsZi5zdGF0ZU5vZGU9bnVsbCk6KGYuY2hpbGRMYW5lcz1nLmNoaWxkTGFuZXMsZi5sYW5lcz1nLmxhbmVzLGYuY2hpbGQ9Zy5jaGlsZCxmLm1lbW9pemVkUHJvcHM9Zy5tZW1vaXplZFByb3BzLGYubWVtb2l6ZWRTdGF0ZT1nLm1lbW9pemVkU3RhdGUsZi51cGRhdGVRdWV1ZT1nLnVwZGF0ZVF1ZXVlLGYudHlwZT1nLnR5cGUsYT1nLmRlcGVuZGVuY2llcyxcbmYuZGVwZW5kZW5jaWVzPW51bGw9PT1hP251bGw6e2xhbmVzOmEubGFuZXMsZmlyc3RDb250ZXh0OmEuZmlyc3RDb250ZXh0fSksYz1jLnNpYmxpbmc7SShQLFAuY3VycmVudCYxfDIpO3JldHVybiBiLmNoaWxkfWE9YS5zaWJsaW5nfW51bGwhPT1kLnRhaWwmJk8oKT5KaSYmKGIuZmxhZ3N8PTY0LGY9ITAsRmkoZCwhMSksYi5sYW5lcz0zMzU1NDQzMil9ZWxzZXtpZighZilpZihhPWloKGcpLG51bGwhPT1hKXtpZihiLmZsYWdzfD02NCxmPSEwLGM9YS51cGRhdGVRdWV1ZSxudWxsIT09YyYmKGIudXBkYXRlUXVldWU9YyxiLmZsYWdzfD00KSxGaShkLCEwKSxudWxsPT09ZC50YWlsJiZcImhpZGRlblwiPT09ZC50YWlsTW9kZSYmIWcuYWx0ZXJuYXRlJiYhbGgpcmV0dXJuIGI9Yi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdCxudWxsIT09YiYmKGIubmV4dEVmZmVjdD1udWxsKSxudWxsfWVsc2UgMipPKCktZC5yZW5kZXJpbmdTdGFydFRpbWU+SmkmJjEwNzM3NDE4MjQhPT1jJiYoYi5mbGFnc3w9XG42NCxmPSEwLEZpKGQsITEpLGIubGFuZXM9MzM1NTQ0MzIpO2QuaXNCYWNrd2FyZHM/KGcuc2libGluZz1iLmNoaWxkLGIuY2hpbGQ9Zyk6KGM9ZC5sYXN0LG51bGwhPT1jP2Muc2libGluZz1nOmIuY2hpbGQ9ZyxkLmxhc3Q9Zyl9cmV0dXJuIG51bGwhPT1kLnRhaWw/KGM9ZC50YWlsLGQucmVuZGVyaW5nPWMsZC50YWlsPWMuc2libGluZyxkLmxhc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0LGQucmVuZGVyaW5nU3RhcnRUaW1lPU8oKSxjLnNpYmxpbmc9bnVsbCxiPVAuY3VycmVudCxJKFAsZj9iJjF8MjpiJjEpLGMpOm51bGw7Y2FzZSAyMzpjYXNlIDI0OnJldHVybiBLaSgpLG51bGwhPT1hJiZudWxsIT09YS5tZW1vaXplZFN0YXRlIT09KG51bGwhPT1iLm1lbW9pemVkU3RhdGUpJiZcInVuc3RhYmxlLWRlZmVyLXdpdGhvdXQtaGlkaW5nXCIhPT1kLm1vZGUmJihiLmZsYWdzfD00KSxudWxsfXRocm93IEVycm9yKHkoMTU2LGIudGFnKSk7fVxuZnVuY3Rpb24gTGkoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDE6RmYoYS50eXBlKSYmR2YoKTt2YXIgYj1hLmZsYWdzO3JldHVybiBiJjQwOTY/KGEuZmxhZ3M9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMzpmaCgpO0goTik7SChNKTt1aCgpO2I9YS5mbGFncztpZigwIT09KGImNjQpKXRocm93IEVycm9yKHkoMjg1KSk7YS5mbGFncz1iJi00MDk3fDY0O3JldHVybiBhO2Nhc2UgNTpyZXR1cm4gaGgoYSksbnVsbDtjYXNlIDEzOnJldHVybiBIKFApLGI9YS5mbGFncyxiJjQwOTY/KGEuZmxhZ3M9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMTk6cmV0dXJuIEgoUCksbnVsbDtjYXNlIDQ6cmV0dXJuIGZoKCksbnVsbDtjYXNlIDEwOnJldHVybiByZyhhKSxudWxsO2Nhc2UgMjM6Y2FzZSAyNDpyZXR1cm4gS2koKSxudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24gTWkoYSxiKXt0cnl7dmFyIGM9XCJcIixkPWI7ZG8gYys9UWEoZCksZD1kLnJldHVybjt3aGlsZShkKTt2YXIgZT1jfWNhdGNoKGYpe2U9XCJcXG5FcnJvciBnZW5lcmF0aW5nIHN0YWNrOiBcIitmLm1lc3NhZ2UrXCJcXG5cIitmLnN0YWNrfXJldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOmV9fWZ1bmN0aW9uIE5pKGEsYil7dHJ5e2NvbnNvbGUuZXJyb3IoYi52YWx1ZSl9Y2F0Y2goYyl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGM7fSl9fXZhciBPaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiBQaShhLGIsYyl7Yz16ZygtMSxjKTtjLnRhZz0zO2MucGF5bG9hZD17ZWxlbWVudDpudWxsfTt2YXIgZD1iLnZhbHVlO2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtRaXx8KFFpPSEwLFJpPWQpO05pKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gU2koYSxiLGMpe2M9emcoLTEsYyk7Yy50YWc9Mzt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe05pKGEsYik7cmV0dXJuIGQoZSl9fXZhciBmPWEuc3RhdGVOb2RlO251bGwhPT1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCYmKG51bGw9PT1UaT9UaT1uZXcgU2V0KFt0aGlzXSk6VGkuYWRkKHRoaXMpLE5pKGEsYikpO3ZhciBjPWIuc3RhY2s7dGhpcy5jb21wb25lbnREaWRDYXRjaChiLnZhbHVlLHtjb21wb25lbnRTdGFjazpudWxsIT09Yz9jOlwiXCJ9KX0pO3JldHVybiBjfXZhciBVaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldDtcbmZ1bmN0aW9uIFZpKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe1dpKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1mdW5jdGlvbiBYaShhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOnJldHVybjtjYXNlIDE6aWYoYi5mbGFncyYyNTYmJm51bGwhPT1hKXt2YXIgYz1hLm1lbW9pemVkUHJvcHMsZD1hLm1lbW9pemVkU3RhdGU7YT1iLnN0YXRlTm9kZTtiPWEuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoYi5lbGVtZW50VHlwZT09PWIudHlwZT9jOmxnKGIudHlwZSxjKSxkKTthLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlPWJ9cmV0dXJuO2Nhc2UgMzpiLmZsYWdzJjI1NiYmcWYoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7cmV0dXJuO2Nhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6cmV0dXJufXRocm93IEVycm9yKHkoMTYzKSk7fVxuZnVuY3Rpb24gWWkoYSxiLGMpe3N3aXRjaChjLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOmI9Yy51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXthPWI9Yi5uZXh0O2Rve2lmKDM9PT0oYS50YWcmMykpe3ZhciBkPWEuY3JlYXRlO2EuZGVzdHJveT1kKCl9YT1hLm5leHR9d2hpbGUoYSE9PWIpfWI9Yy51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXthPWI9Yi5uZXh0O2Rve3ZhciBlPWE7ZD1lLm5leHQ7ZT1lLnRhZzswIT09KGUmNCkmJjAhPT0oZSYxKSYmKFppKGMsYSksJGkoYyxhKSk7YT1kfXdoaWxlKGEhPT1iKX1yZXR1cm47Y2FzZSAxOmE9Yy5zdGF0ZU5vZGU7Yy5mbGFncyY0JiYobnVsbD09PWI/YS5jb21wb25lbnREaWRNb3VudCgpOihkPWMuZWxlbWVudFR5cGU9PT1jLnR5cGU/Yi5tZW1vaXplZFByb3BzOmxnKGMudHlwZSxiLm1lbW9pemVkUHJvcHMpLGEuY29tcG9uZW50RGlkVXBkYXRlKGQsXG5iLm1lbW9pemVkU3RhdGUsYS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSkpKTtiPWMudXBkYXRlUXVldWU7bnVsbCE9PWImJkVnKGMsYixhKTtyZXR1cm47Y2FzZSAzOmI9Yy51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YT1udWxsO2lmKG51bGwhPT1jLmNoaWxkKXN3aXRjaChjLmNoaWxkLnRhZyl7Y2FzZSA1OmE9Yy5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAxOmE9Yy5jaGlsZC5zdGF0ZU5vZGV9RWcoYyxiLGEpfXJldHVybjtjYXNlIDU6YT1jLnN0YXRlTm9kZTtudWxsPT09YiYmYy5mbGFncyY0JiZtZihjLnR5cGUsYy5tZW1vaXplZFByb3BzKSYmYS5mb2N1cygpO3JldHVybjtjYXNlIDY6cmV0dXJuO2Nhc2UgNDpyZXR1cm47Y2FzZSAxMjpyZXR1cm47Y2FzZSAxMzpudWxsPT09Yy5tZW1vaXplZFN0YXRlJiYoYz1jLmFsdGVybmF0ZSxudWxsIT09YyYmKGM9Yy5tZW1vaXplZFN0YXRlLG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbCE9PWMmJkNjKGMpKSkpO1xucmV0dXJuO2Nhc2UgMTk6Y2FzZSAxNzpjYXNlIDIwOmNhc2UgMjE6Y2FzZSAyMzpjYXNlIDI0OnJldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31cbmZ1bmN0aW9uIGFqKGEsYil7Zm9yKHZhciBjPWE7Oyl7aWYoNT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihiKWQ9ZC5zdHlsZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5zZXRQcm9wZXJ0eT9kLnNldFByb3BlcnR5KFwiZGlzcGxheVwiLFwibm9uZVwiLFwiaW1wb3J0YW50XCIpOmQuZGlzcGxheT1cIm5vbmVcIjtlbHNle2Q9Yy5zdGF0ZU5vZGU7dmFyIGU9Yy5tZW1vaXplZFByb3BzLnN0eWxlO2U9dm9pZCAwIT09ZSYmbnVsbCE9PWUmJmUuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2UuZGlzcGxheTpudWxsO2Quc3R5bGUuZGlzcGxheT1zYihcImRpc3BsYXlcIixlKX19ZWxzZSBpZig2PT09Yy50YWcpYy5zdGF0ZU5vZGUubm9kZVZhbHVlPWI/XCJcIjpjLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigoMjMhPT1jLnRhZyYmMjQhPT1jLnRhZ3x8bnVsbD09PWMubWVtb2l6ZWRTdGF0ZXx8Yz09PWEpJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PVxuYSlicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YSlyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX1cbmZ1bmN0aW9uIGJqKGEsYil7aWYoTWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBNZi5vbkNvbW1pdEZpYmVyVW5tb3VudCl0cnl7TWYub25Db21taXRGaWJlclVubW91bnQoTGYsYil9Y2F0Y2goZil7fXN3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6YT1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hJiYoYT1hLmxhc3RFZmZlY3QsbnVsbCE9PWEpKXt2YXIgYz1hPWEubmV4dDtkb3t2YXIgZD1jLGU9ZC5kZXN0cm95O2Q9ZC50YWc7aWYodm9pZCAwIT09ZSlpZigwIT09KGQmNCkpWmkoYixjKTtlbHNle2Q9Yjt0cnl7ZSgpfWNhdGNoKGYpe1dpKGQsZil9fWM9Yy5uZXh0fXdoaWxlKGMhPT1hKX1icmVhaztjYXNlIDE6VmkoYik7YT1iLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5jb21wb25lbnRXaWxsVW5tb3VudCl0cnl7YS5wcm9wcz1iLm1lbW9pemVkUHJvcHMsYS5zdGF0ZT1iLm1lbW9pemVkU3RhdGUsYS5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGYpe1dpKGIsXG5mKX1icmVhaztjYXNlIDU6VmkoYik7YnJlYWs7Y2FzZSA0OmNqKGEsYil9fWZ1bmN0aW9uIGRqKGEpe2EuYWx0ZXJuYXRlPW51bGw7YS5jaGlsZD1udWxsO2EuZGVwZW5kZW5jaWVzPW51bGw7YS5maXJzdEVmZmVjdD1udWxsO2EubGFzdEVmZmVjdD1udWxsO2EubWVtb2l6ZWRQcm9wcz1udWxsO2EubWVtb2l6ZWRTdGF0ZT1udWxsO2EucGVuZGluZ1Byb3BzPW51bGw7YS5yZXR1cm49bnVsbDthLnVwZGF0ZVF1ZXVlPW51bGx9ZnVuY3Rpb24gZWooYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiBmaihhKXthOntmb3IodmFyIGI9YS5yZXR1cm47bnVsbCE9PWI7KXtpZihlaihiKSlicmVhayBhO2I9Yi5yZXR1cm59dGhyb3cgRXJyb3IoeSgxNjApKTt9dmFyIGM9YjtiPWMuc3RhdGVOb2RlO3N3aXRjaChjLnRhZyl7Y2FzZSA1OnZhciBkPSExO2JyZWFrO2Nhc2UgMzpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgxNjEpKTt9Yy5mbGFncyYxNiYmKHBiKGIsXCJcIiksYy5mbGFncyY9LTE3KTthOmI6Zm9yKGM9YTs7KXtmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGVqKGMucmV0dXJuKSl7Yz1udWxsO2JyZWFrIGF9Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2ZvcihjPWMuc2libGluZzs1IT09Yy50YWcmJjYhPT1jLnRhZyYmMTghPT1jLnRhZzspe2lmKGMuZmxhZ3MmMiljb250aW51ZSBiO2lmKG51bGw9PT1cbmMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZC5yZXR1cm49YyxjPWMuY2hpbGR9aWYoIShjLmZsYWdzJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWQ/Z2ooYSxjLGIpOmhqKGEsYyxiKX1cbmZ1bmN0aW9uIGdqKGEsYixjKXt2YXIgZD1hLnRhZyxlPTU9PT1kfHw2PT09ZDtpZihlKWE9ZT9hLnN0YXRlTm9kZTphLnN0YXRlTm9kZS5pbnN0YW5jZSxiPzg9PT1jLm5vZGVUeXBlP2MucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSxiKTpjLmluc2VydEJlZm9yZShhLGIpOig4PT09Yy5ub2RlVHlwZT8oYj1jLnBhcmVudE5vZGUsYi5pbnNlcnRCZWZvcmUoYSxjKSk6KGI9YyxiLmFwcGVuZENoaWxkKGEpKSxjPWMuX3JlYWN0Um9vdENvbnRhaW5lcixudWxsIT09YyYmdm9pZCAwIT09Y3x8bnVsbCE9PWIub25jbGlja3x8KGIub25jbGljaz1qZikpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihnaihhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KWdqKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIGhqKGEsYixjKXt2YXIgZD1hLnRhZyxlPTU9PT1kfHw2PT09ZDtpZihlKWE9ZT9hLnN0YXRlTm9kZTphLnN0YXRlTm9kZS5pbnN0YW5jZSxiP2MuaW5zZXJ0QmVmb3JlKGEsYik6Yy5hcHBlbmRDaGlsZChhKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoaGooYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOyloaihhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBjaihhLGIpe2Zvcih2YXIgYz1iLGQ9ITEsZSxmOzspe2lmKCFkKXtkPWMucmV0dXJuO2E6Zm9yKDs7KXtpZihudWxsPT09ZCl0aHJvdyBFcnJvcih5KDE2MCkpO2U9ZC5zdGF0ZU5vZGU7c3dpdGNoKGQudGFnKXtjYXNlIDU6Zj0hMTticmVhayBhO2Nhc2UgMzplPWUuY29udGFpbmVySW5mbztmPSEwO2JyZWFrIGE7Y2FzZSA0OmU9ZS5jb250YWluZXJJbmZvO2Y9ITA7YnJlYWsgYX1kPWQucmV0dXJufWQ9ITB9aWYoNT09PWMudGFnfHw2PT09Yy50YWcpe2E6Zm9yKHZhciBnPWEsaD1jLGs9aDs7KWlmKGJqKGcsayksbnVsbCE9PWsuY2hpbGQmJjQhPT1rLnRhZylrLmNoaWxkLnJldHVybj1rLGs9ay5jaGlsZDtlbHNle2lmKGs9PT1oKWJyZWFrIGE7Zm9yKDtudWxsPT09ay5zaWJsaW5nOyl7aWYobnVsbD09PWsucmV0dXJufHxrLnJldHVybj09PWgpYnJlYWsgYTtrPWsucmV0dXJufWsuc2libGluZy5yZXR1cm49ay5yZXR1cm47az1rLnNpYmxpbmd9Zj8oZz1lLGg9Yy5zdGF0ZU5vZGUsXG44PT09Zy5ub2RlVHlwZT9nLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoaCk6Zy5yZW1vdmVDaGlsZChoKSk6ZS5yZW1vdmVDaGlsZChjLnN0YXRlTm9kZSl9ZWxzZSBpZig0PT09Yy50YWcpe2lmKG51bGwhPT1jLmNoaWxkKXtlPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87Zj0hMDtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX19ZWxzZSBpZihiaihhLGMpLG51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybjs0PT09Yy50YWcmJihkPSExKX1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX1cbmZ1bmN0aW9uIGlqKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6Y2FzZSAyMjp2YXIgYz1iLnVwZGF0ZVF1ZXVlO2M9bnVsbCE9PWM/Yy5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWMpe3ZhciBkPWM9Yy5uZXh0O2RvIDM9PT0oZC50YWcmMykmJihhPWQuZGVzdHJveSxkLmRlc3Ryb3k9dm9pZCAwLHZvaWQgMCE9PWEmJmEoKSksZD1kLm5leHQ7d2hpbGUoZCE9PWMpfXJldHVybjtjYXNlIDE6cmV0dXJuO2Nhc2UgNTpjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe2Q9Yi5tZW1vaXplZFByb3BzO3ZhciBlPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO2E9Yi50eXBlO3ZhciBmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKG51bGwhPT1mKXtjW3hmXT1kO1wiaW5wdXRcIj09PWEmJlwicmFkaW9cIj09PWQudHlwZSYmbnVsbCE9ZC5uYW1lJiYkYShjLGQpO3diKGEsZSk7Yj13YihhLGQpO2ZvcihlPTA7ZTxmLmxlbmd0aDtlKz1cbjIpe3ZhciBnPWZbZV0saD1mW2UrMV07XCJzdHlsZVwiPT09Zz90YihjLGgpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/b2IoYyxoKTpcImNoaWxkcmVuXCI9PT1nP3BiKGMsaCk6cWEoYyxnLGgsYil9c3dpdGNoKGEpe2Nhc2UgXCJpbnB1dFwiOmFiKGMsZCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aWIoYyxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6YT1jLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGUsYy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZC5tdWx0aXBsZSxmPWQudmFsdWUsbnVsbCE9Zj9mYihjLCEhZC5tdWx0aXBsZSxmLCExKTphIT09ISFkLm11bHRpcGxlJiYobnVsbCE9ZC5kZWZhdWx0VmFsdWU/ZmIoYywhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApOmZiKGMsISFkLm11bHRpcGxlLGQubXVsdGlwbGU/W106XCJcIiwhMSkpfX19cmV0dXJuO2Nhc2UgNjppZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IoeSgxNjIpKTtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9XG5iLm1lbW9pemVkUHJvcHM7cmV0dXJuO2Nhc2UgMzpjPWIuc3RhdGVOb2RlO2MuaHlkcmF0ZSYmKGMuaHlkcmF0ZT0hMSxDYyhjLmNvbnRhaW5lckluZm8pKTtyZXR1cm47Y2FzZSAxMjpyZXR1cm47Y2FzZSAxMzpudWxsIT09Yi5tZW1vaXplZFN0YXRlJiYoamo9TygpLGFqKGIuY2hpbGQsITApKTtraihiKTtyZXR1cm47Y2FzZSAxOTpraihiKTtyZXR1cm47Y2FzZSAxNzpyZXR1cm47Y2FzZSAyMzpjYXNlIDI0OmFqKGIsbnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSk7cmV0dXJufXRocm93IEVycm9yKHkoMTYzKSk7fWZ1bmN0aW9uIGtqKGEpe3ZhciBiPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2EudXBkYXRlUXVldWU9bnVsbDt2YXIgYz1hLnN0YXRlTm9kZTtudWxsPT09YyYmKGM9YS5zdGF0ZU5vZGU9bmV3IFVpKTtiLmZvckVhY2goZnVuY3Rpb24oYil7dmFyIGQ9bGouYmluZChudWxsLGEsYik7Yy5oYXMoYil8fChjLmFkZChiKSxiLnRoZW4oZCxkKSl9KX19XG5mdW5jdGlvbiBtaihhLGIpe3JldHVybiBudWxsIT09YSYmKGE9YS5tZW1vaXplZFN0YXRlLG51bGw9PT1hfHxudWxsIT09YS5kZWh5ZHJhdGVkKT8oYj1iLm1lbW9pemVkU3RhdGUsbnVsbCE9PWImJm51bGw9PT1iLmRlaHlkcmF0ZWQpOiExfXZhciBuaj1NYXRoLmNlaWwsb2o9cmEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixwaj1yYS5SZWFjdEN1cnJlbnRPd25lcixYPTAsVT1udWxsLFk9bnVsbCxXPTAscWo9MCxyaj1CZigwKSxWPTAsc2o9bnVsbCx0aj0wLERnPTAsSGk9MCx1aj0wLHZqPW51bGwsamo9MCxKaT1JbmZpbml0eTtmdW5jdGlvbiB3aigpe0ppPU8oKSs1MDB9dmFyIFo9bnVsbCxRaT0hMSxSaT1udWxsLFRpPW51bGwseGo9ITEseWo9bnVsbCx6aj05MCxBaj1bXSxCaj1bXSxDaj1udWxsLERqPTAsRWo9bnVsbCxGaj0tMSxHaj0wLEhqPTAsSWo9bnVsbCxKaj0hMTtmdW5jdGlvbiBIZygpe3JldHVybiAwIT09KFgmNDgpP08oKTotMSE9PUZqP0ZqOkZqPU8oKX1cbmZ1bmN0aW9uIElnKGEpe2E9YS5tb2RlO2lmKDA9PT0oYSYyKSlyZXR1cm4gMTtpZigwPT09KGEmNCkpcmV0dXJuIDk5PT09ZWcoKT8xOjI7MD09PUdqJiYoR2o9dGopO2lmKDAhPT1rZy50cmFuc2l0aW9uKXswIT09SGomJihIaj1udWxsIT09dmo/dmoucGVuZGluZ0xhbmVzOjApO2E9R2o7dmFyIGI9NDE4NjExMiZ+SGo7YiY9LWI7MD09PWImJihhPTQxODYxMTImfmEsYj1hJi1hLDA9PT1iJiYoYj04MTkyKSk7cmV0dXJuIGJ9YT1lZygpOzAhPT0oWCY0KSYmOTg9PT1hP2E9WGMoMTIsR2opOihhPVNjKGEpLGE9WGMoYSxHaikpO3JldHVybiBhfVxuZnVuY3Rpb24gSmcoYSxiLGMpe2lmKDUwPERqKXRocm93IERqPTAsRWo9bnVsbCxFcnJvcih5KDE4NSkpO2E9S2ooYSxiKTtpZihudWxsPT09YSlyZXR1cm4gbnVsbDskYyhhLGIsYyk7YT09PVUmJihIaXw9Yiw0PT09ViYmSWkoYSxXKSk7dmFyIGQ9ZWcoKTsxPT09Yj8wIT09KFgmOCkmJjA9PT0oWCY0OCk/TGooYSk6KE1qKGEsYyksMD09PVgmJih3aigpLGlnKCkpKTooMD09PShYJjQpfHw5OCE9PWQmJjk5IT09ZHx8KG51bGw9PT1Daj9Daj1uZXcgU2V0KFthXSk6Q2ouYWRkKGEpKSxNaihhLGMpKTt2aj1hfWZ1bmN0aW9uIEtqKGEsYil7YS5sYW5lc3w9Yjt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmKGMubGFuZXN8PWIpO2M9YTtmb3IoYT1hLnJldHVybjtudWxsIT09YTspYS5jaGlsZExhbmVzfD1iLGM9YS5hbHRlcm5hdGUsbnVsbCE9PWMmJihjLmNoaWxkTGFuZXN8PWIpLGM9YSxhPWEucmV0dXJuO3JldHVybiAzPT09Yy50YWc/Yy5zdGF0ZU5vZGU6bnVsbH1cbmZ1bmN0aW9uIE1qKGEsYil7Zm9yKHZhciBjPWEuY2FsbGJhY2tOb2RlLGQ9YS5zdXNwZW5kZWRMYW5lcyxlPWEucGluZ2VkTGFuZXMsZj1hLmV4cGlyYXRpb25UaW1lcyxnPWEucGVuZGluZ0xhbmVzOzA8Zzspe3ZhciBoPTMxLVZjKGcpLGs9MTw8aCxsPWZbaF07aWYoLTE9PT1sKXtpZigwPT09KGsmZCl8fDAhPT0oayZlKSl7bD1iO1JjKGspO3ZhciBuPUY7ZltoXT0xMDw9bj9sKzI1MDo2PD1uP2wrNUUzOi0xfX1lbHNlIGw8PWImJihhLmV4cGlyZWRMYW5lc3w9ayk7ZyY9fmt9ZD1VYyhhLGE9PT1VP1c6MCk7Yj1GO2lmKDA9PT1kKW51bGwhPT1jJiYoYyE9PVpmJiZQZihjKSxhLmNhbGxiYWNrTm9kZT1udWxsLGEuY2FsbGJhY2tQcmlvcml0eT0wKTtlbHNle2lmKG51bGwhPT1jKXtpZihhLmNhbGxiYWNrUHJpb3JpdHk9PT1iKXJldHVybjtjIT09WmYmJlBmKGMpfTE1PT09Yj8oYz1Mai5iaW5kKG51bGwsYSksbnVsbD09PWFnPyhhZz1bY10sYmc9T2YoVWYsamcpKTphZy5wdXNoKGMpLFxuYz1aZik6MTQ9PT1iP2M9aGcoOTksTGouYmluZChudWxsLGEpKTooYz1UYyhiKSxjPWhnKGMsTmouYmluZChudWxsLGEpKSk7YS5jYWxsYmFja1ByaW9yaXR5PWI7YS5jYWxsYmFja05vZGU9Y319XG5mdW5jdGlvbiBOaihhKXtGaj0tMTtIaj1Haj0wO2lmKDAhPT0oWCY0OCkpdGhyb3cgRXJyb3IoeSgzMjcpKTt2YXIgYj1hLmNhbGxiYWNrTm9kZTtpZihPaigpJiZhLmNhbGxiYWNrTm9kZSE9PWIpcmV0dXJuIG51bGw7dmFyIGM9VWMoYSxhPT09VT9XOjApO2lmKDA9PT1jKXJldHVybiBudWxsO3ZhciBkPWM7dmFyIGU9WDtYfD0xNjt2YXIgZj1QaigpO2lmKFUhPT1hfHxXIT09ZCl3aigpLFFqKGEsZCk7ZG8gdHJ5e1JqKCk7YnJlYWt9Y2F0Y2goaCl7U2ooYSxoKX13aGlsZSgxKTtxZygpO29qLmN1cnJlbnQ9ZjtYPWU7bnVsbCE9PVk/ZD0wOihVPW51bGwsVz0wLGQ9Vik7aWYoMCE9PSh0aiZIaSkpUWooYSwwKTtlbHNlIGlmKDAhPT1kKXsyPT09ZCYmKFh8PTY0LGEuaHlkcmF0ZSYmKGEuaHlkcmF0ZT0hMSxxZihhLmNvbnRhaW5lckluZm8pKSxjPVdjKGEpLDAhPT1jJiYoZD1UaihhLGMpKSk7aWYoMT09PWQpdGhyb3cgYj1zaixRaihhLDApLElpKGEsYyksTWooYSxPKCkpLGI7YS5maW5pc2hlZFdvcms9XG5hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRMYW5lcz1jO3N3aXRjaChkKXtjYXNlIDA6Y2FzZSAxOnRocm93IEVycm9yKHkoMzQ1KSk7Y2FzZSAyOlVqKGEpO2JyZWFrO2Nhc2UgMzpJaShhLGMpO2lmKChjJjYyOTE0NTYwKT09PWMmJihkPWpqKzUwMC1PKCksMTA8ZCkpe2lmKDAhPT1VYyhhLDApKWJyZWFrO2U9YS5zdXNwZW5kZWRMYW5lcztpZigoZSZjKSE9PWMpe0hnKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZlO2JyZWFrfWEudGltZW91dEhhbmRsZT1vZihVai5iaW5kKG51bGwsYSksZCk7YnJlYWt9VWooYSk7YnJlYWs7Y2FzZSA0OklpKGEsYyk7aWYoKGMmNDE4NjExMik9PT1jKWJyZWFrO2Q9YS5ldmVudFRpbWVzO2ZvcihlPS0xOzA8Yzspe3ZhciBnPTMxLVZjKGMpO2Y9MTw8ZztnPWRbZ107Zz5lJiYoZT1nKTtjJj1+Zn1jPWU7Yz1PKCktYztjPSgxMjA+Yz8xMjA6NDgwPmM/NDgwOjEwODA+Yz8xMDgwOjE5MjA+Yz8xOTIwOjNFMz5jPzNFMzo0MzIwPlxuYz80MzIwOjE5NjAqbmooYy8xOTYwKSktYztpZigxMDxjKXthLnRpbWVvdXRIYW5kbGU9b2YoVWouYmluZChudWxsLGEpLGMpO2JyZWFrfVVqKGEpO2JyZWFrO2Nhc2UgNTpVaihhKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHkoMzI5KSk7fX1NaihhLE8oKSk7cmV0dXJuIGEuY2FsbGJhY2tOb2RlPT09Yj9Oai5iaW5kKG51bGwsYSk6bnVsbH1mdW5jdGlvbiBJaShhLGIpe2ImPX51ajtiJj1+SGk7YS5zdXNwZW5kZWRMYW5lc3w9YjthLnBpbmdlZExhbmVzJj1+Yjtmb3IoYT1hLmV4cGlyYXRpb25UaW1lczswPGI7KXt2YXIgYz0zMS1WYyhiKSxkPTE8PGM7YVtjXT0tMTtiJj1+ZH19XG5mdW5jdGlvbiBMaihhKXtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7T2ooKTtpZihhPT09VSYmMCE9PShhLmV4cGlyZWRMYW5lcyZXKSl7dmFyIGI9Vzt2YXIgYz1UaihhLGIpOzAhPT0odGomSGkpJiYoYj1VYyhhLGIpLGM9VGooYSxiKSl9ZWxzZSBiPVVjKGEsMCksYz1UaihhLGIpOzAhPT1hLnRhZyYmMj09PWMmJihYfD02NCxhLmh5ZHJhdGUmJihhLmh5ZHJhdGU9ITEscWYoYS5jb250YWluZXJJbmZvKSksYj1XYyhhKSwwIT09YiYmKGM9VGooYSxiKSkpO2lmKDE9PT1jKXRocm93IGM9c2osUWooYSwwKSxJaShhLGIpLE1qKGEsTygpKSxjO2EuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGU7YS5maW5pc2hlZExhbmVzPWI7VWooYSk7TWooYSxPKCkpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gVmooKXtpZihudWxsIT09Q2ope3ZhciBhPUNqO0NqPW51bGw7YS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2EuZXhwaXJlZExhbmVzfD0yNCZhLnBlbmRpbmdMYW5lcztNaihhLE8oKSl9KX1pZygpfWZ1bmN0aW9uIFdqKGEsYil7dmFyIGM9WDtYfD0xO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1g9YywwPT09WCYmKHdqKCksaWcoKSl9fWZ1bmN0aW9uIFhqKGEsYil7dmFyIGM9WDtYJj0tMjtYfD04O3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1g9YywwPT09WCYmKHdqKCksaWcoKSl9fWZ1bmN0aW9uIG5pKGEsYil7SShyaixxaik7cWp8PWI7dGp8PWJ9ZnVuY3Rpb24gS2koKXtxaj1yai5jdXJyZW50O0gocmopfVxuZnVuY3Rpb24gUWooYSxiKXthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRMYW5lcz0wO3ZhciBjPWEudGltZW91dEhhbmRsZTstMSE9PWMmJihhLnRpbWVvdXRIYW5kbGU9LTEscGYoYykpO2lmKG51bGwhPT1ZKWZvcihjPVkucmV0dXJuO251bGwhPT1jOyl7dmFyIGQ9Yztzd2l0Y2goZC50YWcpe2Nhc2UgMTpkPWQudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09ZCYmdm9pZCAwIT09ZCYmR2YoKTticmVhaztjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTticmVhaztjYXNlIDU6aGgoZCk7YnJlYWs7Y2FzZSA0OmZoKCk7YnJlYWs7Y2FzZSAxMzpIKFApO2JyZWFrO2Nhc2UgMTk6SChQKTticmVhaztjYXNlIDEwOnJnKGQpO2JyZWFrO2Nhc2UgMjM6Y2FzZSAyNDpLaSgpfWM9Yy5yZXR1cm59VT1hO1k9VGcoYS5jdXJyZW50LG51bGwpO1c9cWo9dGo9YjtWPTA7c2o9bnVsbDt1aj1IaT1EZz0wfVxuZnVuY3Rpb24gU2ooYSxiKXtkb3t2YXIgYz1ZO3RyeXtxZygpO3ZoLmN1cnJlbnQ9R2g7aWYoeWgpe2Zvcih2YXIgZD1SLm1lbW9pemVkU3RhdGU7bnVsbCE9PWQ7KXt2YXIgZT1kLnF1ZXVlO251bGwhPT1lJiYoZS5wZW5kaW5nPW51bGwpO2Q9ZC5uZXh0fXloPSExfXhoPTA7VD1TPVI9bnVsbDt6aD0hMTtwai5jdXJyZW50PW51bGw7aWYobnVsbD09PWN8fG51bGw9PT1jLnJldHVybil7Vj0xO3NqPWI7WT1udWxsO2JyZWFrfWE6e3ZhciBmPWEsZz1jLnJldHVybixoPWMsaz1iO2I9VztoLmZsYWdzfD0yMDQ4O2guZmlyc3RFZmZlY3Q9aC5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PWsmJlwib2JqZWN0XCI9PT10eXBlb2YgayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGsudGhlbil7dmFyIGw9aztpZigwPT09KGgubW9kZSYyKSl7dmFyIG49aC5hbHRlcm5hdGU7bj8oaC51cGRhdGVRdWV1ZT1uLnVwZGF0ZVF1ZXVlLGgubWVtb2l6ZWRTdGF0ZT1uLm1lbW9pemVkU3RhdGUsaC5sYW5lcz1uLmxhbmVzKTpcbihoLnVwZGF0ZVF1ZXVlPW51bGwsaC5tZW1vaXplZFN0YXRlPW51bGwpfXZhciBBPTAhPT0oUC5jdXJyZW50JjEpLHA9Zztkb3t2YXIgQztpZihDPTEzPT09cC50YWcpe3ZhciB4PXAubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09eClDPW51bGwhPT14LmRlaHlkcmF0ZWQ/ITA6ITE7ZWxzZXt2YXIgdz1wLm1lbW9pemVkUHJvcHM7Qz12b2lkIDA9PT13LmZhbGxiYWNrPyExOiEwIT09dy51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjaz8hMDpBPyExOiEwfX1pZihDKXt2YXIgej1wLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT16KXt2YXIgdT1uZXcgU2V0O3UuYWRkKGwpO3AudXBkYXRlUXVldWU9dX1lbHNlIHouYWRkKGwpO2lmKDA9PT0ocC5tb2RlJjIpKXtwLmZsYWdzfD02NDtoLmZsYWdzfD0xNjM4NDtoLmZsYWdzJj0tMjk4MTtpZigxPT09aC50YWcpaWYobnVsbD09PWguYWx0ZXJuYXRlKWgudGFnPTE3O2Vsc2V7dmFyIHQ9emcoLTEsMSk7dC50YWc9MjtBZyhoLHQpfWgubGFuZXN8PTE7YnJlYWsgYX1rPVxudm9pZCAwO2g9Yjt2YXIgcT1mLnBpbmdDYWNoZTtudWxsPT09cT8ocT1mLnBpbmdDYWNoZT1uZXcgT2ksaz1uZXcgU2V0LHEuc2V0KGwsaykpOihrPXEuZ2V0KGwpLHZvaWQgMD09PWsmJihrPW5ldyBTZXQscS5zZXQobCxrKSkpO2lmKCFrLmhhcyhoKSl7ay5hZGQoaCk7dmFyIHY9WWouYmluZChudWxsLGYsbCxoKTtsLnRoZW4odix2KX1wLmZsYWdzfD00MDk2O3AubGFuZXM9YjticmVhayBhfXA9cC5yZXR1cm59d2hpbGUobnVsbCE9PXApO2s9RXJyb3IoKFJhKGgudHlwZSl8fFwiQSBSZWFjdCBjb21wb25lbnRcIikrXCIgc3VzcGVuZGVkIHdoaWxlIHJlbmRlcmluZywgYnV0IG5vIGZhbGxiYWNrIFVJIHdhcyBzcGVjaWZpZWQuXFxuXFxuQWRkIGEgPFN1c3BlbnNlIGZhbGxiYWNrPS4uLj4gY29tcG9uZW50IGhpZ2hlciBpbiB0aGUgdHJlZSB0byBwcm92aWRlIGEgbG9hZGluZyBpbmRpY2F0b3Igb3IgcGxhY2Vob2xkZXIgdG8gZGlzcGxheS5cIil9NSE9PVYmJihWPTIpO2s9TWkoayxoKTtwPVxuZztkb3tzd2l0Y2gocC50YWcpe2Nhc2UgMzpmPWs7cC5mbGFnc3w9NDA5NjtiJj0tYjtwLmxhbmVzfD1iO3ZhciBKPVBpKHAsZixiKTtCZyhwLEopO2JyZWFrIGE7Y2FzZSAxOmY9azt2YXIgSz1wLnR5cGUsUT1wLnN0YXRlTm9kZTtpZigwPT09KHAuZmxhZ3MmNjQpJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEsuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09USYmXCJmdW5jdGlvblwiPT09dHlwZW9mIFEuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09VGl8fCFUaS5oYXMoUSkpKSl7cC5mbGFnc3w9NDA5NjtiJj0tYjtwLmxhbmVzfD1iO3ZhciBMPVNpKHAsZixiKTtCZyhwLEwpO2JyZWFrIGF9fXA9cC5yZXR1cm59d2hpbGUobnVsbCE9PXApfVpqKGMpfWNhdGNoKHZhKXtiPXZhO1k9PT1jJiZudWxsIT09YyYmKFk9Yz1jLnJldHVybik7Y29udGludWV9YnJlYWt9d2hpbGUoMSl9XG5mdW5jdGlvbiBQaigpe3ZhciBhPW9qLmN1cnJlbnQ7b2ouY3VycmVudD1HaDtyZXR1cm4gbnVsbD09PWE/R2g6YX1mdW5jdGlvbiBUaihhLGIpe3ZhciBjPVg7WHw9MTY7dmFyIGQ9UGooKTtVPT09YSYmVz09PWJ8fFFqKGEsYik7ZG8gdHJ5e2FrKCk7YnJlYWt9Y2F0Y2goZSl7U2ooYSxlKX13aGlsZSgxKTtxZygpO1g9Yztvai5jdXJyZW50PWQ7aWYobnVsbCE9PVkpdGhyb3cgRXJyb3IoeSgyNjEpKTtVPW51bGw7Vz0wO3JldHVybiBWfWZ1bmN0aW9uIGFrKCl7Zm9yKDtudWxsIT09WTspYmsoWSl9ZnVuY3Rpb24gUmooKXtmb3IoO251bGwhPT1ZJiYhUWYoKTspYmsoWSl9ZnVuY3Rpb24gYmsoYSl7dmFyIGI9Y2soYS5hbHRlcm5hdGUsYSxxaik7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iP1pqKGEpOlk9Yjtwai5jdXJyZW50PW51bGx9XG5mdW5jdGlvbiBaaihhKXt2YXIgYj1hO2Rve3ZhciBjPWIuYWx0ZXJuYXRlO2E9Yi5yZXR1cm47aWYoMD09PShiLmZsYWdzJjIwNDgpKXtjPUdpKGMsYixxaik7aWYobnVsbCE9PWMpe1k9YztyZXR1cm59Yz1iO2lmKDI0IT09Yy50YWcmJjIzIT09Yy50YWd8fG51bGw9PT1jLm1lbW9pemVkU3RhdGV8fDAhPT0ocWomMTA3Mzc0MTgyNCl8fDA9PT0oYy5tb2RlJjQpKXtmb3IodmFyIGQ9MCxlPWMuY2hpbGQ7bnVsbCE9PWU7KWR8PWUubGFuZXN8ZS5jaGlsZExhbmVzLGU9ZS5zaWJsaW5nO2MuY2hpbGRMYW5lcz1kfW51bGwhPT1hJiYwPT09KGEuZmxhZ3MmMjA0OCkmJihudWxsPT09YS5maXJzdEVmZmVjdCYmKGEuZmlyc3RFZmZlY3Q9Yi5maXJzdEVmZmVjdCksbnVsbCE9PWIubGFzdEVmZmVjdCYmKG51bGwhPT1hLmxhc3RFZmZlY3QmJihhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1iLmZpcnN0RWZmZWN0KSxhLmxhc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0KSwxPGIuZmxhZ3MmJihudWxsIT09XG5hLmxhc3RFZmZlY3Q/YS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YjphLmZpcnN0RWZmZWN0PWIsYS5sYXN0RWZmZWN0PWIpKX1lbHNle2M9TGkoYik7aWYobnVsbCE9PWMpe2MuZmxhZ3MmPTIwNDc7WT1jO3JldHVybn1udWxsIT09YSYmKGEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PW51bGwsYS5mbGFnc3w9MjA0OCl9Yj1iLnNpYmxpbmc7aWYobnVsbCE9PWIpe1k9YjtyZXR1cm59WT1iPWF9d2hpbGUobnVsbCE9PWIpOzA9PT1WJiYoVj01KX1mdW5jdGlvbiBVaihhKXt2YXIgYj1lZygpO2dnKDk5LGRrLmJpbmQobnVsbCxhLGIpKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGRrKGEsYil7ZG8gT2ooKTt3aGlsZShudWxsIT09eWopO2lmKDAhPT0oWCY0OCkpdGhyb3cgRXJyb3IoeSgzMjcpKTt2YXIgYz1hLmZpbmlzaGVkV29yaztpZihudWxsPT09YylyZXR1cm4gbnVsbDthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRMYW5lcz0wO2lmKGM9PT1hLmN1cnJlbnQpdGhyb3cgRXJyb3IoeSgxNzcpKTthLmNhbGxiYWNrTm9kZT1udWxsO3ZhciBkPWMubGFuZXN8Yy5jaGlsZExhbmVzLGU9ZCxmPWEucGVuZGluZ0xhbmVzJn5lO2EucGVuZGluZ0xhbmVzPWU7YS5zdXNwZW5kZWRMYW5lcz0wO2EucGluZ2VkTGFuZXM9MDthLmV4cGlyZWRMYW5lcyY9ZTthLm11dGFibGVSZWFkTGFuZXMmPWU7YS5lbnRhbmdsZWRMYW5lcyY9ZTtlPWEuZW50YW5nbGVtZW50cztmb3IodmFyIGc9YS5ldmVudFRpbWVzLGg9YS5leHBpcmF0aW9uVGltZXM7MDxmOyl7dmFyIGs9MzEtVmMoZiksbD0xPDxrO2Vba109MDtnW2tdPS0xO2hba109LTE7ZiY9fmx9bnVsbCE9PVxuQ2omJjA9PT0oZCYyNCkmJkNqLmhhcyhhKSYmQ2ouZGVsZXRlKGEpO2E9PT1VJiYoWT1VPW51bGwsVz0wKTsxPGMuZmxhZ3M/bnVsbCE9PWMubGFzdEVmZmVjdD8oYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxkPWMuZmlyc3RFZmZlY3QpOmQ9YzpkPWMuZmlyc3RFZmZlY3Q7aWYobnVsbCE9PWQpe2U9WDtYfD0zMjtwai5jdXJyZW50PW51bGw7a2Y9ZmQ7Zz1OZSgpO2lmKE9lKGcpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBnKWg9e3N0YXJ0Omcuc2VsZWN0aW9uU3RhcnQsZW5kOmcuc2VsZWN0aW9uRW5kfTtlbHNlIGE6aWYoaD0oaD1nLm93bmVyRG9jdW1lbnQpJiZoLmRlZmF1bHRWaWV3fHx3aW5kb3csKGw9aC5nZXRTZWxlY3Rpb24mJmguZ2V0U2VsZWN0aW9uKCkpJiYwIT09bC5yYW5nZUNvdW50KXtoPWwuYW5jaG9yTm9kZTtmPWwuYW5jaG9yT2Zmc2V0O2s9bC5mb2N1c05vZGU7bD1sLmZvY3VzT2Zmc2V0O3RyeXtoLm5vZGVUeXBlLGsubm9kZVR5cGV9Y2F0Y2godmEpe2g9bnVsbDtcbmJyZWFrIGF9dmFyIG49MCxBPS0xLHA9LTEsQz0wLHg9MCx3PWcsej1udWxsO2I6Zm9yKDs7KXtmb3IodmFyIHU7Oyl7dyE9PWh8fDAhPT1mJiYzIT09dy5ub2RlVHlwZXx8KEE9bitmKTt3IT09a3x8MCE9PWwmJjMhPT13Lm5vZGVUeXBlfHwocD1uK2wpOzM9PT13Lm5vZGVUeXBlJiYobis9dy5ub2RlVmFsdWUubGVuZ3RoKTtpZihudWxsPT09KHU9dy5maXJzdENoaWxkKSlicmVhazt6PXc7dz11fWZvcig7Oyl7aWYodz09PWcpYnJlYWsgYjt6PT09aCYmKytDPT09ZiYmKEE9bik7ej09PWsmJisreD09PWwmJihwPW4pO2lmKG51bGwhPT0odT13Lm5leHRTaWJsaW5nKSlicmVhazt3PXo7ej13LnBhcmVudE5vZGV9dz11fWg9LTE9PT1BfHwtMT09PXA/bnVsbDp7c3RhcnQ6QSxlbmQ6cH19ZWxzZSBoPW51bGw7aD1ofHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBoPW51bGw7bGY9e2ZvY3VzZWRFbGVtOmcsc2VsZWN0aW9uUmFuZ2U6aH07ZmQ9ITE7SWo9bnVsbDtKaj0hMTtaPWQ7ZG8gdHJ5e2VrKCl9Y2F0Y2godmEpe2lmKG51bGw9PT1cblopdGhyb3cgRXJyb3IoeSgzMzApKTtXaShaLHZhKTtaPVoubmV4dEVmZmVjdH13aGlsZShudWxsIT09Wik7SWo9bnVsbDtaPWQ7ZG8gdHJ5e2ZvcihnPWE7bnVsbCE9PVo7KXt2YXIgdD1aLmZsYWdzO3QmMTYmJnBiKFouc3RhdGVOb2RlLFwiXCIpO2lmKHQmMTI4KXt2YXIgcT1aLmFsdGVybmF0ZTtpZihudWxsIT09cSl7dmFyIHY9cS5yZWY7bnVsbCE9PXYmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdj92KG51bGwpOnYuY3VycmVudD1udWxsKX19c3dpdGNoKHQmMTAzOCl7Y2FzZSAyOmZqKFopO1ouZmxhZ3MmPS0zO2JyZWFrO2Nhc2UgNjpmaihaKTtaLmZsYWdzJj0tMztpaihaLmFsdGVybmF0ZSxaKTticmVhaztjYXNlIDEwMjQ6Wi5mbGFncyY9LTEwMjU7YnJlYWs7Y2FzZSAxMDI4OlouZmxhZ3MmPS0xMDI1O2lqKFouYWx0ZXJuYXRlLFopO2JyZWFrO2Nhc2UgNDppaihaLmFsdGVybmF0ZSxaKTticmVhaztjYXNlIDg6aD1aO2NqKGcsaCk7dmFyIEo9aC5hbHRlcm5hdGU7ZGooaCk7bnVsbCE9PVxuSiYmZGooSil9Wj1aLm5leHRFZmZlY3R9fWNhdGNoKHZhKXtpZihudWxsPT09Wil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKFosdmEpO1o9Wi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1aKTt2PWxmO3E9TmUoKTt0PXYuZm9jdXNlZEVsZW07Zz12LnNlbGVjdGlvblJhbmdlO2lmKHEhPT10JiZ0JiZ0Lm93bmVyRG9jdW1lbnQmJk1lKHQub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsdCkpe251bGwhPT1nJiZPZSh0KSYmKHE9Zy5zdGFydCx2PWcuZW5kLHZvaWQgMD09PXYmJih2PXEpLFwic2VsZWN0aW9uU3RhcnRcImluIHQ/KHQuc2VsZWN0aW9uU3RhcnQ9cSx0LnNlbGVjdGlvbkVuZD1NYXRoLm1pbih2LHQudmFsdWUubGVuZ3RoKSk6KHY9KHE9dC5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJnEuZGVmYXVsdFZpZXd8fHdpbmRvdyx2LmdldFNlbGVjdGlvbiYmKHY9di5nZXRTZWxlY3Rpb24oKSxoPXQudGV4dENvbnRlbnQubGVuZ3RoLEo9TWF0aC5taW4oZy5zdGFydCxoKSxnPXZvaWQgMD09PVxuZy5lbmQ/SjpNYXRoLm1pbihnLmVuZCxoKSwhdi5leHRlbmQmJko+ZyYmKGg9ZyxnPUosSj1oKSxoPUxlKHQsSiksZj1MZSh0LGcpLGgmJmYmJigxIT09di5yYW5nZUNvdW50fHx2LmFuY2hvck5vZGUhPT1oLm5vZGV8fHYuYW5jaG9yT2Zmc2V0IT09aC5vZmZzZXR8fHYuZm9jdXNOb2RlIT09Zi5ub2RlfHx2LmZvY3VzT2Zmc2V0IT09Zi5vZmZzZXQpJiYocT1xLmNyZWF0ZVJhbmdlKCkscS5zZXRTdGFydChoLm5vZGUsaC5vZmZzZXQpLHYucmVtb3ZlQWxsUmFuZ2VzKCksSj5nPyh2LmFkZFJhbmdlKHEpLHYuZXh0ZW5kKGYubm9kZSxmLm9mZnNldCkpOihxLnNldEVuZChmLm5vZGUsZi5vZmZzZXQpLHYuYWRkUmFuZ2UocSkpKSkpKTtxPVtdO2Zvcih2PXQ7dj12LnBhcmVudE5vZGU7KTE9PT12Lm5vZGVUeXBlJiZxLnB1c2goe2VsZW1lbnQ6dixsZWZ0OnYuc2Nyb2xsTGVmdCx0b3A6di5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgdC5mb2N1cyYmdC5mb2N1cygpO2Zvcih0PVxuMDt0PHEubGVuZ3RoO3QrKyl2PXFbdF0sdi5lbGVtZW50LnNjcm9sbExlZnQ9di5sZWZ0LHYuZWxlbWVudC5zY3JvbGxUb3A9di50b3B9ZmQ9ISFrZjtsZj1rZj1udWxsO2EuY3VycmVudD1jO1o9ZDtkbyB0cnl7Zm9yKHQ9YTtudWxsIT09Wjspe3ZhciBLPVouZmxhZ3M7SyYzNiYmWWkodCxaLmFsdGVybmF0ZSxaKTtpZihLJjEyOCl7cT12b2lkIDA7dmFyIFE9Wi5yZWY7aWYobnVsbCE9PVEpe3ZhciBMPVouc3RhdGVOb2RlO3N3aXRjaChaLnRhZyl7Y2FzZSA1OnE9TDticmVhaztkZWZhdWx0OnE9TH1cImZ1bmN0aW9uXCI9PT10eXBlb2YgUT9RKHEpOlEuY3VycmVudD1xfX1aPVoubmV4dEVmZmVjdH19Y2F0Y2godmEpe2lmKG51bGw9PT1aKXRocm93IEVycm9yKHkoMzMwKSk7V2koWix2YSk7Wj1aLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVopO1o9bnVsbDskZigpO1g9ZX1lbHNlIGEuY3VycmVudD1jO2lmKHhqKXhqPSExLHlqPWEsemo9YjtlbHNlIGZvcihaPWQ7bnVsbCE9PVo7KWI9XG5aLm5leHRFZmZlY3QsWi5uZXh0RWZmZWN0PW51bGwsWi5mbGFncyY4JiYoSz1aLEsuc2libGluZz1udWxsLEsuc3RhdGVOb2RlPW51bGwpLFo9YjtkPWEucGVuZGluZ0xhbmVzOzA9PT1kJiYoVGk9bnVsbCk7MT09PWQ/YT09PUVqP0RqKys6KERqPTAsRWo9YSk6RGo9MDtjPWMuc3RhdGVOb2RlO2lmKE1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgTWYub25Db21taXRGaWJlclJvb3QpdHJ5e01mLm9uQ29tbWl0RmliZXJSb290KExmLGMsdm9pZCAwLDY0PT09KGMuY3VycmVudC5mbGFncyY2NCkpfWNhdGNoKHZhKXt9TWooYSxPKCkpO2lmKFFpKXRocm93IFFpPSExLGE9UmksUmk9bnVsbCxhO2lmKDAhPT0oWCY4KSlyZXR1cm4gbnVsbDtpZygpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gZWsoKXtmb3IoO251bGwhPT1aOyl7dmFyIGE9Wi5hbHRlcm5hdGU7Smp8fG51bGw9PT1Janx8KDAhPT0oWi5mbGFncyY4KT9kYyhaLElqKSYmKEpqPSEwKToxMz09PVoudGFnJiZtaihhLFopJiZkYyhaLElqKSYmKEpqPSEwKSk7dmFyIGI9Wi5mbGFnczswIT09KGImMjU2KSYmWGkoYSxaKTswPT09KGImNTEyKXx8eGp8fCh4aj0hMCxoZyg5NyxmdW5jdGlvbigpe09qKCk7cmV0dXJuIG51bGx9KSk7Wj1aLm5leHRFZmZlY3R9fWZ1bmN0aW9uIE9qKCl7aWYoOTAhPT16ail7dmFyIGE9OTc8emo/OTc6emo7emo9OTA7cmV0dXJuIGdnKGEsZmspfXJldHVybiExfWZ1bmN0aW9uICRpKGEsYil7QWoucHVzaChiLGEpO3hqfHwoeGo9ITAsaGcoOTcsZnVuY3Rpb24oKXtPaigpO3JldHVybiBudWxsfSkpfWZ1bmN0aW9uIFppKGEsYil7QmoucHVzaChiLGEpO3hqfHwoeGo9ITAsaGcoOTcsZnVuY3Rpb24oKXtPaigpO3JldHVybiBudWxsfSkpfVxuZnVuY3Rpb24gZmsoKXtpZihudWxsPT09eWopcmV0dXJuITE7dmFyIGE9eWo7eWo9bnVsbDtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzMxKSk7dmFyIGI9WDtYfD0zMjt2YXIgYz1CajtCaj1bXTtmb3IodmFyIGQ9MDtkPGMubGVuZ3RoO2QrPTIpe3ZhciBlPWNbZF0sZj1jW2QrMV0sZz1lLmRlc3Ryb3k7ZS5kZXN0cm95PXZvaWQgMDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyl0cnl7ZygpfWNhdGNoKGspe2lmKG51bGw9PT1mKXRocm93IEVycm9yKHkoMzMwKSk7V2koZixrKX19Yz1BajtBaj1bXTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCs9Mil7ZT1jW2RdO2Y9Y1tkKzFdO3RyeXt2YXIgaD1lLmNyZWF0ZTtlLmRlc3Ryb3k9aCgpfWNhdGNoKGspe2lmKG51bGw9PT1mKXRocm93IEVycm9yKHkoMzMwKSk7V2koZixrKX19Zm9yKGg9YS5jdXJyZW50LmZpcnN0RWZmZWN0O251bGwhPT1oOylhPWgubmV4dEVmZmVjdCxoLm5leHRFZmZlY3Q9bnVsbCxoLmZsYWdzJjgmJihoLnNpYmxpbmc9XG5udWxsLGguc3RhdGVOb2RlPW51bGwpLGg9YTtYPWI7aWcoKTtyZXR1cm4hMH1mdW5jdGlvbiBnayhhLGIsYyl7Yj1NaShjLGIpO2I9UGkoYSxiLDEpO0FnKGEsYik7Yj1IZygpO2E9S2ooYSwxKTtudWxsIT09YSYmKCRjKGEsMSxiKSxNaihhLGIpKX1cbmZ1bmN0aW9uIFdpKGEsYil7aWYoMz09PWEudGFnKWdrKGEsYSxiKTtlbHNlIGZvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe2lmKDM9PT1jLnRhZyl7Z2soYyxhLGIpO2JyZWFrfWVsc2UgaWYoMT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09VGl8fCFUaS5oYXMoZCkpKXthPU1pKGIsYSk7dmFyIGU9U2koYyxhLDEpO0FnKGMsZSk7ZT1IZygpO2M9S2ooYywxKTtpZihudWxsIT09YykkYyhjLDEsZSksTWooYyxlKTtlbHNlIGlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVRpfHwhVGkuaGFzKGQpKSl0cnl7ZC5jb21wb25lbnREaWRDYXRjaChiLGEpfWNhdGNoKGYpe31icmVha319Yz1jLnJldHVybn19XG5mdW5jdGlvbiBZaihhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO2I9SGcoKTthLnBpbmdlZExhbmVzfD1hLnN1c3BlbmRlZExhbmVzJmM7VT09PWEmJihXJmMpPT09YyYmKDQ9PT1WfHwzPT09ViYmKFcmNjI5MTQ1NjApPT09VyYmNTAwPk8oKS1qaj9RaihhLDApOnVqfD1jKTtNaihhLGIpfWZ1bmN0aW9uIGxqKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbCE9PWMmJmMuZGVsZXRlKGIpO2I9MDswPT09YiYmKGI9YS5tb2RlLDA9PT0oYiYyKT9iPTE6MD09PShiJjQpP2I9OTk9PT1lZygpPzE6MjooMD09PUdqJiYoR2o9dGopLGI9WWMoNjI5MTQ1NjAmfkdqKSwwPT09YiYmKGI9NDE5NDMwNCkpKTtjPUhnKCk7YT1LaihhLGIpO251bGwhPT1hJiYoJGMoYSxiLGMpLE1qKGEsYykpfXZhciBjaztcbmNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1iLmxhbmVzO2lmKG51bGwhPT1hKWlmKGEubWVtb2l6ZWRQcm9wcyE9PWIucGVuZGluZ1Byb3BzfHxOLmN1cnJlbnQpdWc9ITA7ZWxzZSBpZigwIT09KGMmZCkpdWc9MCE9PShhLmZsYWdzJjE2Mzg0KT8hMDohMTtlbHNle3VnPSExO3N3aXRjaChiLnRhZyl7Y2FzZSAzOnJpKGIpO3NoKCk7YnJlYWs7Y2FzZSA1OmdoKGIpO2JyZWFrO2Nhc2UgMTpGZihiLnR5cGUpJiZKZihiKTticmVhaztjYXNlIDQ6ZWgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOmQ9Yi5tZW1vaXplZFByb3BzLnZhbHVlO3ZhciBlPWIudHlwZS5fY29udGV4dDtJKG1nLGUuX2N1cnJlbnRWYWx1ZSk7ZS5fY3VycmVudFZhbHVlPWQ7YnJlYWs7Y2FzZSAxMzppZihudWxsIT09Yi5tZW1vaXplZFN0YXRlKXtpZigwIT09KGMmYi5jaGlsZC5jaGlsZExhbmVzKSlyZXR1cm4gdGkoYSxiLGMpO0koUCxQLmN1cnJlbnQmMSk7Yj1oaShhLGIsYyk7cmV0dXJuIG51bGwhPT1cbmI/Yi5zaWJsaW5nOm51bGx9SShQLFAuY3VycmVudCYxKTticmVhaztjYXNlIDE5OmQ9MCE9PShjJmIuY2hpbGRMYW5lcyk7aWYoMCE9PShhLmZsYWdzJjY0KSl7aWYoZClyZXR1cm4gQWkoYSxiLGMpO2IuZmxhZ3N8PTY0fWU9Yi5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYoZS5yZW5kZXJpbmc9bnVsbCxlLnRhaWw9bnVsbCxlLmxhc3RFZmZlY3Q9bnVsbCk7SShQLFAuY3VycmVudCk7aWYoZClicmVhaztlbHNlIHJldHVybiBudWxsO2Nhc2UgMjM6Y2FzZSAyNDpyZXR1cm4gYi5sYW5lcz0wLG1pKGEsYixjKX1yZXR1cm4gaGkoYSxiLGMpfWVsc2UgdWc9ITE7Yi5sYW5lcz0wO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmQ9Yi50eXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7ZT1FZihiLE0uY3VycmVudCk7dGcoYixjKTtlPUNoKG51bGwsYixkLGEsZSxjKTtiLmZsYWdzfD0xO2lmKFwib2JqZWN0XCI9PT1cbnR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZ2b2lkIDA9PT1lLiQkdHlwZW9mKXtiLnRhZz0xO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtpZihGZihkKSl7dmFyIGY9ITA7SmYoYil9ZWxzZSBmPSExO2IubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZS5zdGF0ZSYmdm9pZCAwIT09ZS5zdGF0ZT9lLnN0YXRlOm51bGw7eGcoYik7dmFyIGc9ZC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJkdnKGIsZCxnLGEpO2UudXBkYXRlcj1LZztiLnN0YXRlTm9kZT1lO2UuX3JlYWN0SW50ZXJuYWxzPWI7T2coYixkLGEsYyk7Yj1xaShudWxsLGIsZCwhMCxmLGMpfWVsc2UgYi50YWc9MCxmaShudWxsLGIsZSxjKSxiPWIuY2hpbGQ7cmV0dXJuIGI7Y2FzZSAxNjplPWIuZWxlbWVudFR5cGU7YTp7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9Mik7XG5hPWIucGVuZGluZ1Byb3BzO2Y9ZS5faW5pdDtlPWYoZS5fcGF5bG9hZCk7Yi50eXBlPWU7Zj1iLnRhZz1oayhlKTthPWxnKGUsYSk7c3dpdGNoKGYpe2Nhc2UgMDpiPWxpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE6Yj1waShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxMTpiPWdpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE0OmI9aWkobnVsbCxiLGUsbGcoZS50eXBlLGEpLGQsYyk7YnJlYWsgYX10aHJvdyBFcnJvcih5KDMwNixlLFwiXCIpKTt9cmV0dXJuIGI7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpsZyhkLGUpLGxpKGEsYixkLGUsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpsZyhkLGUpLHBpKGEsYixkLGUsYyk7Y2FzZSAzOnJpKGIpO2Q9Yi51cGRhdGVRdWV1ZTtpZihudWxsPT09YXx8bnVsbD09PWQpdGhyb3cgRXJyb3IoeSgyODIpKTtcbmQ9Yi5wZW5kaW5nUHJvcHM7ZT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09ZT9lLmVsZW1lbnQ6bnVsbDt5ZyhhLGIpO0NnKGIsZCxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpc2goKSxiPWhpKGEsYixjKTtlbHNle2U9Yi5zdGF0ZU5vZGU7aWYoZj1lLmh5ZHJhdGUpa2g9cmYoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mby5maXJzdENoaWxkKSxqaD1iLGY9bGg9ITA7aWYoZil7YT1lLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE7aWYobnVsbCE9YSlmb3IoZT0wO2U8YS5sZW5ndGg7ZSs9MilmPWFbZV0sZi5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1hW2UrMV0sdGgucHVzaChmKTtjPVpnKGIsbnVsbCxkLGMpO2ZvcihiLmNoaWxkPWM7YzspYy5mbGFncz1jLmZsYWdzJi0zfDEwMjQsYz1jLnNpYmxpbmd9ZWxzZSBmaShhLGIsZCxjKSxzaCgpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDU6cmV0dXJuIGdoKGIpLG51bGw9PT1hJiZcbnBoKGIpLGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6bnVsbCxnPWUuY2hpbGRyZW4sbmYoZCxlKT9nPW51bGw6bnVsbCE9PWYmJm5mKGQsZikmJihiLmZsYWdzfD0xNiksb2koYSxiKSxmaShhLGIsZyxjKSxiLmNoaWxkO2Nhc2UgNjpyZXR1cm4gbnVsbD09PWEmJnBoKGIpLG51bGw7Y2FzZSAxMzpyZXR1cm4gdGkoYSxiLGMpO2Nhc2UgNDpyZXR1cm4gZWgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxkPWIucGVuZGluZ1Byb3BzLG51bGw9PT1hP2IuY2hpbGQ9WWcoYixudWxsLGQsYyk6ZmkoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpsZyhkLGUpLGdpKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBmaShhLGIsYi5wZW5kaW5nUHJvcHMsYyksYi5jaGlsZDtjYXNlIDg6cmV0dXJuIGZpKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixcbmMpLGIuY2hpbGQ7Y2FzZSAxMjpyZXR1cm4gZmkoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTt2YXIgaD1iLnR5cGUuX2NvbnRleHQ7SShtZyxoLl9jdXJyZW50VmFsdWUpO2guX2N1cnJlbnRWYWx1ZT1mO2lmKG51bGwhPT1nKWlmKGg9Zy52YWx1ZSxmPUhlKGgsZik/MDooXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzP2QuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzKGgsZik6MTA3Mzc0MTgyMyl8MCwwPT09Zil7aWYoZy5jaGlsZHJlbj09PWUuY2hpbGRyZW4mJiFOLmN1cnJlbnQpe2I9aGkoYSxiLGMpO2JyZWFrIGF9fWVsc2UgZm9yKGg9Yi5jaGlsZCxudWxsIT09aCYmKGgucmV0dXJuPWIpO251bGwhPT1oOyl7dmFyIGs9aC5kZXBlbmRlbmNpZXM7aWYobnVsbCE9PWspe2c9aC5jaGlsZDtmb3IodmFyIGw9XG5rLmZpcnN0Q29udGV4dDtudWxsIT09bDspe2lmKGwuY29udGV4dD09PWQmJjAhPT0obC5vYnNlcnZlZEJpdHMmZikpezE9PT1oLnRhZyYmKGw9emcoLTEsYyYtYyksbC50YWc9MixBZyhoLGwpKTtoLmxhbmVzfD1jO2w9aC5hbHRlcm5hdGU7bnVsbCE9PWwmJihsLmxhbmVzfD1jKTtzZyhoLnJldHVybixjKTtrLmxhbmVzfD1jO2JyZWFrfWw9bC5uZXh0fX1lbHNlIGc9MTA9PT1oLnRhZz9oLnR5cGU9PT1iLnR5cGU/bnVsbDpoLmNoaWxkOmguY2hpbGQ7aWYobnVsbCE9PWcpZy5yZXR1cm49aDtlbHNlIGZvcihnPWg7bnVsbCE9PWc7KXtpZihnPT09Yil7Zz1udWxsO2JyZWFrfWg9Zy5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1nLnJldHVybjtnPWg7YnJlYWt9Zz1nLnJldHVybn1oPWd9ZmkoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4sdGcoYixjKSxlPXZnKGUsXG5mLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZmxhZ3N8PTEsZmkoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDE0OnJldHVybiBlPWIudHlwZSxmPWxnKGUsYi5wZW5kaW5nUHJvcHMpLGY9bGcoZS50eXBlLGYpLGlpKGEsYixlLGYsZCxjKTtjYXNlIDE1OnJldHVybiBraShhLGIsYi50eXBlLGIucGVuZGluZ1Byb3BzLGQsYyk7Y2FzZSAxNzpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKSxiLnRhZz0xLEZmKGQpPyhhPSEwLEpmKGIpKTphPSExLHRnKGIsYyksTWcoYixkLGUpLE9nKGIsZCxlLGMpLHFpKG51bGwsYixkLCEwLGEsYyk7Y2FzZSAxOTpyZXR1cm4gQWkoYSxiLGMpO2Nhc2UgMjM6cmV0dXJuIG1pKGEsYixjKTtjYXNlIDI0OnJldHVybiBtaShhLGIsYyl9dGhyb3cgRXJyb3IoeSgxNTYsYi50YWcpKTtcbn07ZnVuY3Rpb24gaWsoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmRlcGVuZGVuY2llcz10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmZsYWdzPTA7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5jaGlsZExhbmVzPXRoaXMubGFuZXM9MDt0aGlzLmFsdGVybmF0ZT1udWxsfWZ1bmN0aW9uIG5oKGEsYixjLGQpe3JldHVybiBuZXcgaWsoYSxiLGMsZCl9ZnVuY3Rpb24gamkoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1cbmZ1bmN0aW9uIGhrKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBqaShhKT8xOjA7aWYodm9pZCAwIT09YSYmbnVsbCE9PWEpe2E9YS4kJHR5cGVvZjtpZihhPT09QWEpcmV0dXJuIDExO2lmKGE9PT1EYSlyZXR1cm4gMTR9cmV0dXJuIDJ9XG5mdW5jdGlvbiBUZyhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPW5oKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMudHlwZT1hLnR5cGUsYy5mbGFncz0wLGMubmV4dEVmZmVjdD1udWxsLGMuZmlyc3RFZmZlY3Q9bnVsbCxjLmxhc3RFZmZlY3Q9bnVsbCk7Yy5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcztjLmxhbmVzPWEubGFuZXM7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yj1hLmRlcGVuZGVuY2llcztjLmRlcGVuZGVuY2llcz1udWxsPT09Yj9udWxsOntsYW5lczpiLmxhbmVzLGZpcnN0Q29udGV4dDpiLmZpcnN0Q29udGV4dH07XG5jLnNpYmxpbmc9YS5zaWJsaW5nO2MuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uIFZnKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlqaShhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSB1YTpyZXR1cm4gWGcoYy5jaGlsZHJlbixlLGYsYik7Y2FzZSBIYTpnPTg7ZXw9MTY7YnJlYWs7Y2FzZSB3YTpnPTg7ZXw9MTticmVhaztjYXNlIHhhOnJldHVybiBhPW5oKDEyLGMsYixlfDgpLGEuZWxlbWVudFR5cGU9eGEsYS50eXBlPXhhLGEubGFuZXM9ZixhO2Nhc2UgQmE6cmV0dXJuIGE9bmgoMTMsYyxiLGUpLGEudHlwZT1CYSxhLmVsZW1lbnRUeXBlPUJhLGEubGFuZXM9ZixhO2Nhc2UgQ2E6cmV0dXJuIGE9bmgoMTksYyxiLGUpLGEuZWxlbWVudFR5cGU9Q2EsYS5sYW5lcz1mLGE7Y2FzZSBJYTpyZXR1cm4gdmkoYyxlLGYsYik7Y2FzZSBKYTpyZXR1cm4gYT1uaCgyNCxjLGIsZSksYS5lbGVtZW50VHlwZT1KYSxhLmxhbmVzPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT1cbnR5cGVvZiBhJiZudWxsIT09YSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSB5YTpnPTEwO2JyZWFrIGE7Y2FzZSB6YTpnPTk7YnJlYWsgYTtjYXNlIEFhOmc9MTE7YnJlYWsgYTtjYXNlIERhOmc9MTQ7YnJlYWsgYTtjYXNlIEVhOmc9MTY7ZD1udWxsO2JyZWFrIGE7Y2FzZSBGYTpnPTIyO2JyZWFrIGF9dGhyb3cgRXJyb3IoeSgxMzAsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpKTt9Yj1uaChnLGMsYixlKTtiLmVsZW1lbnRUeXBlPWE7Yi50eXBlPWQ7Yi5sYW5lcz1mO3JldHVybiBifWZ1bmN0aW9uIFhnKGEsYixjLGQpe2E9bmgoNyxhLGQsYik7YS5sYW5lcz1jO3JldHVybiBhfWZ1bmN0aW9uIHZpKGEsYixjLGQpe2E9bmgoMjMsYSxkLGIpO2EuZWxlbWVudFR5cGU9SWE7YS5sYW5lcz1jO3JldHVybiBhfWZ1bmN0aW9uIFVnKGEsYixjKXthPW5oKDYsYSxudWxsLGIpO2EubGFuZXM9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIFdnKGEsYixjKXtiPW5oKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmxhbmVzPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifVxuZnVuY3Rpb24gamsoYSxiLGMpe3RoaXMudGFnPWI7dGhpcy5jb250YWluZXJJbmZvPWE7dGhpcy5maW5pc2hlZFdvcms9dGhpcy5waW5nQ2FjaGU9dGhpcy5jdXJyZW50PXRoaXMucGVuZGluZ0NoaWxkcmVuPW51bGw7dGhpcy50aW1lb3V0SGFuZGxlPS0xO3RoaXMucGVuZGluZ0NvbnRleHQ9dGhpcy5jb250ZXh0PW51bGw7dGhpcy5oeWRyYXRlPWM7dGhpcy5jYWxsYmFja05vZGU9bnVsbDt0aGlzLmNhbGxiYWNrUHJpb3JpdHk9MDt0aGlzLmV2ZW50VGltZXM9WmMoMCk7dGhpcy5leHBpcmF0aW9uVGltZXM9WmMoLTEpO3RoaXMuZW50YW5nbGVkTGFuZXM9dGhpcy5maW5pc2hlZExhbmVzPXRoaXMubXV0YWJsZVJlYWRMYW5lcz10aGlzLmV4cGlyZWRMYW5lcz10aGlzLnBpbmdlZExhbmVzPXRoaXMuc3VzcGVuZGVkTGFuZXM9dGhpcy5wZW5kaW5nTGFuZXM9MDt0aGlzLmVudGFuZ2xlbWVudHM9WmMoMCk7dGhpcy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPW51bGx9XG5mdW5jdGlvbiBrayhhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOnRhLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxuZnVuY3Rpb24gbGsoYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9SGcoKSxnPUlnKGUpO2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFscztiOntpZihaYihjKSE9PWN8fDEhPT1jLnRhZyl0aHJvdyBFcnJvcih5KDE3MCkpO3ZhciBoPWM7ZG97c3dpdGNoKGgudGFnKXtjYXNlIDM6aD1oLnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGI7Y2FzZSAxOmlmKEZmKGgudHlwZSkpe2g9aC5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYn19aD1oLnJldHVybn13aGlsZShudWxsIT09aCk7dGhyb3cgRXJyb3IoeSgxNzEpKTt9aWYoMT09PWMudGFnKXt2YXIgaz1jLnR5cGU7aWYoRmYoaykpe2M9SWYoYyxrLGgpO2JyZWFrIGF9fWM9aH1lbHNlIGM9Q2Y7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj16ZyhmLGcpO2IucGF5bG9hZD17ZWxlbWVudDphfTtkPXZvaWQgMD09PWQ/bnVsbDpkO251bGwhPT1cbmQmJihiLmNhbGxiYWNrPWQpO0FnKGUsYik7SmcoZSxnLGYpO3JldHVybiBnfWZ1bmN0aW9uIG1rKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19ZnVuY3Rpb24gbmsoYSxiKXthPWEubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YSYmbnVsbCE9PWEuZGVoeWRyYXRlZCl7dmFyIGM9YS5yZXRyeUxhbmU7YS5yZXRyeUxhbmU9MCE9PWMmJmM8Yj9jOmJ9fWZ1bmN0aW9uIG9rKGEsYil7bmsoYSxiKTsoYT1hLmFsdGVybmF0ZSkmJm5rKGEsYil9ZnVuY3Rpb24gcGsoKXtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIHFrKGEsYixjKXt2YXIgZD1udWxsIT1jJiZudWxsIT1jLmh5ZHJhdGlvbk9wdGlvbnMmJmMuaHlkcmF0aW9uT3B0aW9ucy5tdXRhYmxlU291cmNlc3x8bnVsbDtjPW5ldyBqayhhLGIsbnVsbCE9YyYmITA9PT1jLmh5ZHJhdGUpO2I9bmgoMyxudWxsLG51bGwsMj09PWI/NzoxPT09Yj8zOjApO2MuY3VycmVudD1iO2Iuc3RhdGVOb2RlPWM7eGcoYik7YVtmZl09Yy5jdXJyZW50O2NmKDg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphKTtpZihkKWZvcihhPTA7YTxkLmxlbmd0aDthKyspe2I9ZFthXTt2YXIgZT1iLl9nZXRWZXJzaW9uO2U9ZShiLl9zb3VyY2UpO251bGw9PWMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT9jLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE9W2IsZV06Yy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhLnB1c2goYixlKX10aGlzLl9pbnRlcm5hbFJvb3Q9Y31cbnFrLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7bGsoYSx0aGlzLl9pbnRlcm5hbFJvb3QsbnVsbCxudWxsKX07cWsucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLl9pbnRlcm5hbFJvb3QsYj1hLmNvbnRhaW5lckluZm87bGsobnVsbCxhLG51bGwsZnVuY3Rpb24oKXtiW2ZmXT1udWxsfSl9O2Z1bmN0aW9uIHJrKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1cbmZ1bmN0aW9uIHNrKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgcWsoYSwwLGI/e2h5ZHJhdGU6ITB9OnZvaWQgMCl9XG5mdW5jdGlvbiB0ayhhLGIsYyxkLGUpe3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXt2YXIgZz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPW1rKGcpO2guY2FsbChhKX19bGsoYixnLGEsZSl9ZWxzZXtmPWMuX3JlYWN0Um9vdENvbnRhaW5lcj1zayhjLGQpO2c9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1tayhnKTtrLmNhbGwoYSl9fVhqKGZ1bmN0aW9uKCl7bGsoYixnLGEsZSl9KX1yZXR1cm4gbWsoZyl9ZWM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9SGcoKTtKZyhhLDQsYik7b2soYSw0KX19O2ZjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCk7SmcoYSw2NzEwODg2NCxiKTtvayhhLDY3MTA4ODY0KX19O1xuZ2M9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9SGcoKSxjPUlnKGEpO0pnKGEsYyxiKTtvayhhLGMpfX07aGM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYigpfTtcbnliPWZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6YWIoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPWMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWU9XCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlPVwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPURiKGQpO2lmKCFlKXRocm93IEVycm9yKHkoOTApKTtXYShkKTthYihkLGUpfX19YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aWIoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLnZhbHVlLG51bGwhPWImJmZiKGEsISFjLm11bHRpcGxlLGIsITEpfX07R2I9V2o7XG5IYj1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPVg7WHw9NDt0cnl7cmV0dXJuIGdnKDk4LGEuYmluZChudWxsLGIsYyxkLGUpKX1maW5hbGx5e1g9ZiwwPT09WCYmKHdqKCksaWcoKSl9fTtJYj1mdW5jdGlvbigpezA9PT0oWCY0OSkmJihWaigpLE9qKCkpfTtKYj1mdW5jdGlvbihhLGIpe3ZhciBjPVg7WHw9Mjt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX07ZnVuY3Rpb24gdWsoYSxiKXt2YXIgYz0yPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbDtpZighcmsoYikpdGhyb3cgRXJyb3IoeSgyMDApKTtyZXR1cm4ga2soYSxiLG51bGwsYyl9dmFyIHZrPXtFdmVudHM6W0NiLHVlLERiLEViLEZiLE9qLHtjdXJyZW50OiExfV19LHdrPXtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTp3YyxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE3LjAuMlwiLHJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn07XG52YXIgeGs9e2J1bmRsZVR5cGU6d2suYnVuZGxlVHlwZSx2ZXJzaW9uOndrLnZlcnNpb24scmVuZGVyZXJQYWNrYWdlTmFtZTp3ay5yZW5kZXJlclBhY2thZ2VOYW1lLHJlbmRlcmVyQ29uZmlnOndrLnJlbmRlcmVyQ29uZmlnLG92ZXJyaWRlSG9va1N0YXRlOm51bGwsb3ZlcnJpZGVIb29rU3RhdGVEZWxldGVQYXRoOm51bGwsb3ZlcnJpZGVIb29rU3RhdGVSZW5hbWVQYXRoOm51bGwsb3ZlcnJpZGVQcm9wczpudWxsLG92ZXJyaWRlUHJvcHNEZWxldGVQYXRoOm51bGwsb3ZlcnJpZGVQcm9wc1JlbmFtZVBhdGg6bnVsbCxzZXRTdXNwZW5zZUhhbmRsZXI6bnVsbCxzY2hlZHVsZVVwZGF0ZTpudWxsLGN1cnJlbnREaXNwYXRjaGVyUmVmOnJhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1jYyhhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6d2suZmluZEZpYmVyQnlIb3N0SW5zdGFuY2V8fFxucGssZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoOm51bGwsc2NoZWR1bGVSZWZyZXNoOm51bGwsc2NoZWR1bGVSb290Om51bGwsc2V0UmVmcmVzaEhhbmRsZXI6bnVsbCxnZXRDdXJyZW50RmliZXI6bnVsbH07aWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pe3ZhciB5az1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoIXlrLmlzRGlzYWJsZWQmJnlrLnN1cHBvcnRzRmliZXIpdHJ5e0xmPXlrLmluamVjdCh4ayksTWY9eWt9Y2F0Y2goYSl7fX1leHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPXZrO2V4cG9ydHMuY3JlYXRlUG9ydGFsPXVrO1xuZXhwb3J0cy5maW5kRE9NTm9kZT1mdW5jdGlvbihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKDE9PT1hLm5vZGVUeXBlKXJldHVybiBhO3ZhciBiPWEuX3JlYWN0SW50ZXJuYWxzO2lmKHZvaWQgMD09PWIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcil0aHJvdyBFcnJvcih5KDE4OCkpO3Rocm93IEVycm9yKHkoMjY4LE9iamVjdC5rZXlzKGEpKSk7fWE9Y2MoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfTtleHBvcnRzLmZsdXNoU3luYz1mdW5jdGlvbihhLGIpe3ZhciBjPVg7aWYoMCE9PShjJjQ4KSlyZXR1cm4gYShiKTtYfD0xO3RyeXtpZihhKXJldHVybiBnZyg5OSxhLmJpbmQobnVsbCxiKSl9ZmluYWxseXtYPWMsaWcoKX19O2V4cG9ydHMuaHlkcmF0ZT1mdW5jdGlvbihhLGIsYyl7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIHRrKG51bGwsYSxiLCEwLGMpfTtcbmV4cG9ydHMucmVuZGVyPWZ1bmN0aW9uKGEsYixjKXtpZighcmsoYikpdGhyb3cgRXJyb3IoeSgyMDApKTtyZXR1cm4gdGsobnVsbCxhLGIsITEsYyl9O2V4cG9ydHMudW5tb3VudENvbXBvbmVudEF0Tm9kZT1mdW5jdGlvbihhKXtpZighcmsoYSkpdGhyb3cgRXJyb3IoeSg0MCkpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KFhqKGZ1bmN0aW9uKCl7dGsobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbDthW2ZmXT1udWxsfSl9KSwhMCk6ITF9O2V4cG9ydHMudW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM9V2o7ZXhwb3J0cy51bnN0YWJsZV9jcmVhdGVQb3J0YWw9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdWsoYSxiLDI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsKX07XG5leHBvcnRzLnVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyPWZ1bmN0aW9uKGEsYixjLGQpe2lmKCFyayhjKSl0aHJvdyBFcnJvcih5KDIwMCkpO2lmKG51bGw9PWF8fHZvaWQgMD09PWEuX3JlYWN0SW50ZXJuYWxzKXRocm93IEVycm9yKHkoMzgpKTtyZXR1cm4gdGsoYSxiLGMsITEsZCl9O2V4cG9ydHMudmVyc2lvbj1cIjE3LjAuMlwiO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xMy4xXG4gKiByZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLGM9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxkPWI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixlPWI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGY9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsZz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxoPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGs9Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxsPWI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsbT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsbj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixwPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHE9Yj9cblN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpOjYwMTIwLHI9Yj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSx0PWI/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsdj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5ibG9ja1wiKTo2MDEyMSx3PWI/U3ltYm9sLmZvcihcInJlYWN0LmZ1bmRhbWVudGFsXCIpOjYwMTE3LHg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucmVzcG9uZGVyXCIpOjYwMTE4LHk9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc2NvcGVcIik6NjAxMTk7XG5mdW5jdGlvbiB6KGEpe2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpe3ZhciB1PWEuJCR0eXBlb2Y7c3dpdGNoKHUpe2Nhc2UgYzpzd2l0Y2goYT1hLnR5cGUsYSl7Y2FzZSBsOmNhc2UgbTpjYXNlIGU6Y2FzZSBnOmNhc2UgZjpjYXNlIHA6cmV0dXJuIGE7ZGVmYXVsdDpzd2l0Y2goYT1hJiZhLiQkdHlwZW9mLGEpe2Nhc2UgazpjYXNlIG46Y2FzZSB0OmNhc2UgcjpjYXNlIGg6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm4gdX19Y2FzZSBkOnJldHVybiB1fX19ZnVuY3Rpb24gQShhKXtyZXR1cm4geihhKT09PW19ZXhwb3J0cy5Bc3luY01vZGU9bDtleHBvcnRzLkNvbmN1cnJlbnRNb2RlPW07ZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9aztleHBvcnRzLkNvbnRleHRQcm92aWRlcj1oO2V4cG9ydHMuRWxlbWVudD1jO2V4cG9ydHMuRm9yd2FyZFJlZj1uO2V4cG9ydHMuRnJhZ21lbnQ9ZTtleHBvcnRzLkxhenk9dDtleHBvcnRzLk1lbW89cjtleHBvcnRzLlBvcnRhbD1kO1xuZXhwb3J0cy5Qcm9maWxlcj1nO2V4cG9ydHMuU3RyaWN0TW9kZT1mO2V4cG9ydHMuU3VzcGVuc2U9cDtleHBvcnRzLmlzQXN5bmNNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiBBKGEpfHx6KGEpPT09bH07ZXhwb3J0cy5pc0NvbmN1cnJlbnRNb2RlPUE7ZXhwb3J0cy5pc0NvbnRleHRDb25zdW1lcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWt9O2V4cG9ydHMuaXNDb250ZXh0UHJvdmlkZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ofTtleHBvcnRzLmlzRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09Y307ZXhwb3J0cy5pc0ZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ufTtleHBvcnRzLmlzRnJhZ21lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1lfTtleHBvcnRzLmlzTGF6eT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXR9O1xuZXhwb3J0cy5pc01lbW89ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1yfTtleHBvcnRzLmlzUG9ydGFsPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09ZH07ZXhwb3J0cy5pc1Byb2ZpbGVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09Z307ZXhwb3J0cy5pc1N0cmljdE1vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1mfTtleHBvcnRzLmlzU3VzcGVuc2U9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1wfTtcbmV4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlPWZ1bmN0aW9uKGEpe3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGF8fGE9PT1lfHxhPT09bXx8YT09PWd8fGE9PT1mfHxhPT09cHx8YT09PXF8fFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJihhLiQkdHlwZW9mPT09dHx8YS4kJHR5cGVvZj09PXJ8fGEuJCR0eXBlb2Y9PT1ofHxhLiQkdHlwZW9mPT09a3x8YS4kJHR5cGVvZj09PW58fGEuJCR0eXBlb2Y9PT13fHxhLiQkdHlwZW9mPT09eHx8YS4kJHR5cGVvZj09PXl8fGEuJCR0eXBlb2Y9PT12KX07ZXhwb3J0cy50eXBlT2Y9ejtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xyXG5cclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XHJcbiAgdmFsdWU6IHRydWVcclxufSk7XHJcblxyXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xyXG5cclxudmFyIF9yZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcblxyXG52YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcclxuXHJcbnZhciBfcHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xyXG5cclxudmFyIF9wcm9wVHlwZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvcFR5cGVzKTtcclxuXHJcbnZhciBfbG9hZFNjcmlwdCA9IHJlcXVpcmUoJ2xvYWQtc2NyaXB0Jyk7XHJcblxyXG52YXIgX2xvYWRTY3JpcHQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfbG9hZFNjcmlwdCk7XHJcblxyXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxyXG5cclxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cclxuXHJcbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxyXG5cclxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9IC8qIGdsb2JhbCBNYXRoSmF4ICovXHJcblxyXG4vKipcclxuICogQ29udGV4dCBmb3IgbG9hZGluZyBNYXRoSmF4XHJcbiAqL1xyXG52YXIgQ29udGV4dCA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XHJcbiAgX2luaGVyaXRzKENvbnRleHQsIF9SZWFjdCRDb21wb25lbnQpO1xyXG5cclxuICBmdW5jdGlvbiBDb250ZXh0KHByb3BzKSB7XHJcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ29udGV4dCk7XHJcblxyXG4gICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKENvbnRleHQuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihDb250ZXh0KSkuY2FsbCh0aGlzLCBwcm9wcykpO1xyXG5cclxuICAgIF90aGlzLnN0YXRlID0geyBsb2FkZWQ6IGZhbHNlIH07XHJcbiAgICBfdGhpcy5vbkxvYWQgPSBfdGhpcy5vbkxvYWQuYmluZChfdGhpcyk7XHJcbiAgICByZXR1cm4gX3RoaXM7XHJcbiAgfVxyXG5cclxuICBfY3JlYXRlQ2xhc3MoQ29udGV4dCwgW3tcclxuICAgIGtleTogJ2dldENoaWxkQ29udGV4dCcsXHJcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIE1hdGhKYXg6IHR5cGVvZiBNYXRoSmF4ID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IE1hdGhKYXgsXHJcbiAgICAgICAgaW5wdXQ6IHRoaXMucHJvcHMuaW5wdXRcclxuICAgICAgfTtcclxuICAgIH1cclxuICB9LCB7XHJcbiAgICBrZXk6ICdjb21wb25lbnREaWRNb3VudCcsXHJcbiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XHJcbiAgICAgIHZhciBzY3JpcHQgPSB0aGlzLnByb3BzLnNjcmlwdDtcclxuXHJcbiAgICAgIGlmICghc2NyaXB0KSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMub25Mb2FkKCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICgwLCBfbG9hZFNjcmlwdDIuZGVmYXVsdCkoc2NyaXB0LCB0aGlzLm9uTG9hZCk7XHJcbiAgICB9XHJcbiAgfSwge1xyXG4gICAga2V5OiAnb25Mb2FkJyxcclxuICAgIHZhbHVlOiBmdW5jdGlvbiBvbkxvYWQoKSB7XHJcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xyXG5cclxuICAgICAgdmFyIG9wdGlvbnMgPSB0aGlzLnByb3BzLm9wdGlvbnM7XHJcblxyXG4gICAgICBNYXRoSmF4Lkh1Yi5Db25maWcob3B0aW9ucyk7XHJcblxyXG4gICAgICBNYXRoSmF4Lkh1Yi5SZWdpc3Rlci5TdGFydHVwSG9vaygnRW5kJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIE1hdGhKYXguSHViLnByb2Nlc3NTZWN0aW9uRGVsYXkgPSBfdGhpczIucHJvcHMuZGVsYXk7XHJcblxyXG4gICAgICAgIGlmIChfdGhpczIucHJvcHMuZGlkRmluaXNoVHlwZXNldCkge1xyXG4gICAgICAgICAgX3RoaXMyLnByb3BzLmRpZEZpbmlzaFR5cGVzZXQoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChfdGhpczIucHJvcHMub25Mb2FkKSB7XHJcbiAgICAgICAgICBfdGhpczIucHJvcHMub25Mb2FkKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBfdGhpczIuc2V0U3RhdGUoe1xyXG4gICAgICAgICAgbG9hZGVkOiB0cnVlXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgTWF0aEpheC5IdWIuUmVnaXN0ZXIuTWVzc2FnZUhvb2soXCJNYXRoIFByb2Nlc3NpbmcgRXJyb3JcIiwgZnVuY3Rpb24gKG1lc3NhZ2UpIHtcclxuICAgICAgICBpZiAoX3RoaXMyLnByb3BzLm9uRXJyb3IpIHtcclxuICAgICAgICAgIF90aGlzMi5wcm9wcy5vbkVycm9yKE1hdGhKYXgsIG1lc3NhZ2UpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfSwge1xyXG4gICAga2V5OiAncmVuZGVyJyxcclxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XHJcbiAgICAgIGlmICghdGhpcy5zdGF0ZS5sb2FkZWQgJiYgIXRoaXMucHJvcHMubm9HYXRlKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvcHMubG9hZGluZztcclxuICAgICAgfVxyXG5cclxuICAgICAgdmFyIGNoaWxkcmVuID0gdGhpcy5wcm9wcy5jaGlsZHJlbjtcclxuXHJcbiAgICAgIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuQ2hpbGRyZW4ub25seShjaGlsZHJlbik7XHJcbiAgICB9XHJcbiAgfV0pO1xyXG5cclxuICByZXR1cm4gQ29udGV4dDtcclxufShfcmVhY3QyLmRlZmF1bHQuQ29tcG9uZW50KTtcclxuXHJcbkNvbnRleHQucHJvcFR5cGVzID0ge1xyXG4gIGNoaWxkcmVuOiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm5vZGUuaXNSZXF1aXJlZCxcclxuICBkaWRGaW5pc2hUeXBlc2V0OiBfcHJvcFR5cGVzMi5kZWZhdWx0LmZ1bmMsXHJcbiAgc2NyaXB0OiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9uZU9mVHlwZShbX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsIF9wcm9wVHlwZXMyLmRlZmF1bHQub25lT2YoW2ZhbHNlXSldKSxcclxuICBpbnB1dDogX3Byb3BUeXBlczIuZGVmYXVsdC5vbmVPZihbJ2FzY2lpJywgJ3RleCddKSxcclxuICBkZWxheTogX3Byb3BUeXBlczIuZGVmYXVsdC5udW1iZXIsXHJcbiAgb3B0aW9uczogX3Byb3BUeXBlczIuZGVmYXVsdC5vYmplY3QsXHJcbiAgbG9hZGluZzogX3Byb3BUeXBlczIuZGVmYXVsdC5ub2RlLFxyXG4gIG5vR2F0ZTogX3Byb3BUeXBlczIuZGVmYXVsdC5ib29sXHJcbn07XHJcblxyXG5Db250ZXh0LmNoaWxkQ29udGV4dFR5cGVzID0ge1xyXG4gIE1hdGhKYXg6IF9wcm9wVHlwZXMyLmRlZmF1bHQub2JqZWN0LFxyXG4gIGlucHV0OiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZ1xyXG59O1xyXG5cclxuQ29udGV4dC5kZWZhdWx0UHJvcHMgPSB7XHJcbiAgc2NyaXB0OiAnaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvbWF0aGpheC8yLjcuMS9NYXRoSmF4LmpzP2NvbmZpZz1UZVgtTU1MLUFNX0NIVE1MJyxcclxuICBpbnB1dDogJ2FzY2lpJyxcclxuICBkZWxheTogMCxcclxuICBvcHRpb25zOiB7fSxcclxuICBsb2FkaW5nOiBudWxsLFxyXG4gIG5vR2F0ZTogZmFsc2VcclxufTtcclxuXHJcbmV4cG9ydHMuZGVmYXVsdCA9IENvbnRleHQ7IiwiJ3VzZSBzdHJpY3QnO1xyXG5cclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XHJcbiAgdmFsdWU6IHRydWVcclxufSk7XHJcblxyXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xyXG5cclxudmFyIF9yZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcblxyXG52YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcclxuXHJcbnZhciBfcHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xyXG5cclxudmFyIF9wcm9wVHlwZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvcFR5cGVzKTtcclxuXHJcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XHJcblxyXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxyXG5cclxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XHJcblxyXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cclxuXHJcbnZhciBIdG1sID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcclxuICBfaW5oZXJpdHMoSHRtbCwgX1JlYWN0JENvbXBvbmVudCk7XHJcblxyXG4gIGZ1bmN0aW9uIEh0bWwoKSB7XHJcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSHRtbCk7XHJcblxyXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChIdG1sLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoSHRtbCkpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xyXG4gIH1cclxuXHJcbiAgX2NyZWF0ZUNsYXNzKEh0bWwsIFt7XHJcbiAgICBrZXk6ICdjb21wb25lbnREaWRNb3VudCcsXHJcbiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XHJcbiAgICAgIHRoaXMucmVmcmVzaE1hdGhKYXgoKTtcclxuICAgIH1cclxuICB9LCB7XHJcbiAgICBrZXk6ICdjb21wb25lbnREaWRVcGRhdGUnLFxyXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZSgpIHtcclxuICAgICAgdGhpcy5yZWZyZXNoTWF0aEpheCgpO1xyXG4gICAgfVxyXG4gIH0sIHtcclxuICAgIGtleTogJ3JlZnJlc2hNYXRoSmF4JyxcclxuICAgIHZhbHVlOiBmdW5jdGlvbiByZWZyZXNoTWF0aEpheCgpIHtcclxuICAgICAgdmFyIE1hdGhKYXggPSB0aGlzLmNvbnRleHQuTWF0aEpheDtcclxuXHJcbiAgICAgIGlmICghTWF0aEpheCkge1xyXG4gICAgICAgIHRocm93IEVycm9yKFwiQ291bGQgbm90IGZpbmQgTWF0aEpheCB3aGlsZSBhdHRlbXB0aW5nIHR5cGVzZXQhIFByb2JhYmx5IE1hdGhKYXggc2NyaXB0IGhhc24ndCBiZWVuIGxvYWRlZCBvciBNYXRoSmF4LkNvbnRleHQgaXMgbm90IGluIHRoZSBoaWVyYXJjaHlcIik7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIE1hdGhKYXguSHViLlF1ZXVlKE1hdGhKYXguSHViLlR5cGVzZXQodGhpcy5kaXYsIHRoaXMucHJvcHMub25SZW5kZXIpKTtcclxuICAgIH1cclxuICB9LCB7XHJcbiAgICBrZXk6ICdyZW5kZXInLFxyXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcclxuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XHJcblxyXG4gICAgICB2YXIgX3Byb3BzID0gdGhpcy5wcm9wcyxcclxuICAgICAgICAgIGNsYXNzZXMgPSBfcHJvcHMuY2xhc3NlcyxcclxuICAgICAgICAgIG9wdGlvbnMgPSBfcHJvcHMub3B0aW9ucztcclxuXHJcblxyXG4gICAgICByZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoJ2RpdicsIHsga2V5OiB0aGlzLnByb3BzLnRleHQsIHJlZjogZnVuY3Rpb24gcmVmKGRpdikge1xyXG4gICAgICAgICAgcmV0dXJuIF90aGlzMi5kaXYgPSBkaXY7XHJcbiAgICAgICAgfSwgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHsgX19odG1sOiB0aGlzLnByb3BzLmh0bWwgfSB9KTtcclxuICAgIH1cclxuICB9XSk7XHJcblxyXG4gIHJldHVybiBIdG1sO1xyXG59KF9yZWFjdDIuZGVmYXVsdC5Db21wb25lbnQpO1xyXG5cclxuSHRtbC5jb250ZXh0VHlwZXMgPSB7XHJcbiAgTWF0aEpheDogX3Byb3BUeXBlczIuZGVmYXVsdC5vYmplY3RcclxufTtcclxuXHJcbmV4cG9ydHMuZGVmYXVsdCA9IEh0bWw7IiwiJ3VzZSBzdHJpY3QnO1xyXG5cclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XHJcbiAgdmFsdWU6IHRydWVcclxufSk7XHJcblxyXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xyXG5cclxudmFyIF9yZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcblxyXG52YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcclxuXHJcbnZhciBfcHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xyXG5cclxudmFyIF9wcm9wVHlwZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvcFR5cGVzKTtcclxuXHJcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XHJcblxyXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxyXG5cclxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XHJcblxyXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cclxuXHJcbnZhciB0eXBlcyA9IHtcclxuICBhc2NpaTogJ2FzY2lpbWF0aCcsXHJcbiAgdGV4OiAndGV4J1xyXG59O1xyXG5cclxudmFyIE5vZGUgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xyXG4gIF9pbmhlcml0cyhOb2RlLCBfUmVhY3QkQ29tcG9uZW50KTtcclxuXHJcbiAgZnVuY3Rpb24gTm9kZSgpIHtcclxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBOb2RlKTtcclxuXHJcbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKE5vZGUuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihOb2RlKSkuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XHJcbiAgfVxyXG5cclxuICBfY3JlYXRlQ2xhc3MoTm9kZSwgW3tcclxuICAgIGtleTogJ2NvbXBvbmVudERpZE1vdW50JyxcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJlbmRlciB0aGUgbWF0aCBvbmNlIHRoZSBub2RlIGlzIG1vdW50ZWRcclxuICAgICAqL1xyXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xyXG4gICAgICB0aGlzLnR5cGVzZXQoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFVwZGF0ZSB0aGUgamF4LCBmb3JjZSB1cGRhdGUgaWYgdGhlIGRpc3BsYXkgbW9kZSBjaGFuZ2VkXHJcbiAgICAgKi9cclxuXHJcbiAgfSwge1xyXG4gICAga2V5OiAnY29tcG9uZW50RGlkVXBkYXRlJyxcclxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XHJcbiAgICAgIHZhciBmb3JjZVVwZGF0ZSA9IHByZXZQcm9wcy5pbmxpbmUgIT09IHRoaXMucHJvcHMuaW5saW5lIHx8IHByZXZQcm9wcy5jaGlsZHJlbiAhPT0gdGhpcy5wcm9wcy5jaGlsZHJlbjtcclxuICAgICAgdGhpcy50eXBlc2V0KGZvcmNlVXBkYXRlKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFByZXZlbnQgdXBkYXRlIHdoZW4gdGhlIHNvdXJjZSBoYXMgbm90IGNoYW5nZWRcclxuICAgICAqL1xyXG5cclxuICB9LCB7XHJcbiAgICBrZXk6ICdzaG91bGRDb21wb25lbnRVcGRhdGUnLFxyXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNob3VsZENvbXBvbmVudFVwZGF0ZShuZXh0UHJvcHMsIG5leHRTdGF0ZSwgbmV4dENvbnRleHQpIHtcclxuICAgICAgcmV0dXJuIG5leHRQcm9wcy5jaGlsZHJlbiAhPT0gdGhpcy5wcm9wcy5jaGlsZHJlbiB8fCBuZXh0UHJvcHMuaW5saW5lICE9PSB0aGlzLnByb3BzLmlubGluZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENsZWFyIHRoZSBtYXRoIHdoZW4gdW5tb3VudGluZyB0aGUgbm9kZVxyXG4gICAgICovXHJcblxyXG4gIH0sIHtcclxuICAgIGtleTogJ2NvbXBvbmVudFdpbGxVbm1vdW50JyxcclxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcclxuICAgICAgdGhpcy5jbGVhcigpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ2xlYXIgdGhlIGpheFxyXG4gICAgICovXHJcblxyXG4gIH0sIHtcclxuICAgIGtleTogJ2NsZWFyJyxcclxuICAgIHZhbHVlOiBmdW5jdGlvbiBjbGVhcigpIHtcclxuICAgICAgdmFyIE1hdGhKYXggPSB0aGlzLmNvbnRleHQuTWF0aEpheDtcclxuXHJcbiAgICAgIGlmICghdGhpcy5zY3JpcHQpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHZhciBqYXggPSBNYXRoSmF4Lkh1Yi5nZXRKYXhGb3IodGhpcy5zY3JpcHQpO1xyXG5cclxuICAgICAgaWYgKGpheCkge1xyXG4gICAgICAgIGpheC5SZW1vdmUoKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVXBkYXRlIG1hdGggaW4gdGhlIG5vZGVcclxuICAgICAqIEBwYXJhbSB7IEJvb2xlYW4gfSBmb3JjZVVwZGF0ZVxyXG4gICAgICovXHJcblxyXG4gIH0sIHtcclxuICAgIGtleTogJ3R5cGVzZXQnLFxyXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHR5cGVzZXQoZm9yY2VVcGRhdGUpIHtcclxuICAgICAgdmFyIE1hdGhKYXggPSB0aGlzLmNvbnRleHQuTWF0aEpheDtcclxuXHJcblxyXG4gICAgICBpZiAoIU1hdGhKYXgpIHtcclxuICAgICAgICB0aHJvdyBFcnJvcihcIkNvdWxkIG5vdCBmaW5kIE1hdGhKYXggd2hpbGUgYXR0ZW1wdGluZyB0eXBlc2V0ISBQcm9iYWJseSBNYXRoSmF4IHNjcmlwdCBoYXNuJ3QgYmVlbiBsb2FkZWQgb3IgTWF0aEpheC5Db250ZXh0IGlzIG5vdCBpbiB0aGUgaGllcmFyY2h5XCIpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB2YXIgdGV4dCA9IHRoaXMucHJvcHMuY2hpbGRyZW47XHJcblxyXG4gICAgICBpZiAoZm9yY2VVcGRhdGUpIHtcclxuICAgICAgICB0aGlzLmNsZWFyKCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChmb3JjZVVwZGF0ZSB8fCAhdGhpcy5zY3JpcHQpIHtcclxuICAgICAgICB0aGlzLnNldFNjcmlwdFRleHQodGV4dCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIE1hdGhKYXguSHViLlF1ZXVlKE1hdGhKYXguSHViLlJlcHJvY2Vzcyh0aGlzLnNjcmlwdCwgdGhpcy5wcm9wcy5vblJlbmRlcikpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlIGEgc2NyaXB0XHJcbiAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSB0ZXh0XHJcbiAgICAgKi9cclxuXHJcbiAgfSwge1xyXG4gICAga2V5OiAnc2V0U2NyaXB0VGV4dCcsXHJcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0U2NyaXB0VGV4dCh0ZXh0KSB7XHJcbiAgICAgIHZhciBpbmxpbmUgPSB0aGlzLnByb3BzLmlubGluZTtcclxuICAgICAgdmFyIHR5cGUgPSB0eXBlc1t0aGlzLmNvbnRleHQuaW5wdXRdO1xyXG4gICAgICBpZiAoIXRoaXMuc2NyaXB0KSB7XHJcbiAgICAgICAgdGhpcy5zY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcclxuICAgICAgICB0aGlzLnNjcmlwdC50eXBlID0gJ21hdGgvJyArIHR5cGUgKyAnOyAnICsgKGlubGluZSA/ICcnIDogJ21vZGU9ZGlzcGxheScpO1xyXG4gICAgICAgIHRoaXMucmVmcy5ub2RlLmFwcGVuZENoaWxkKHRoaXMuc2NyaXB0KTtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKCd0ZXh0JyBpbiB0aGlzLnNjcmlwdCkge1xyXG4gICAgICAgIC8vIElFOCwgZXRjXHJcbiAgICAgICAgdGhpcy5zY3JpcHQudGV4dCA9IHRleHQ7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5zY3JpcHQudGV4dENvbnRlbnQgPSB0ZXh0O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSwge1xyXG4gICAga2V5OiAncmVuZGVyJyxcclxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XHJcbiAgICAgIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudCgnc3BhbicsIHsgcmVmOiAnbm9kZScgfSk7XHJcbiAgICB9XHJcbiAgfV0pO1xyXG5cclxuICByZXR1cm4gTm9kZTtcclxufShfcmVhY3QyLmRlZmF1bHQuQ29tcG9uZW50KTtcclxuXHJcbk5vZGUucHJvcFR5cGVzID0ge1xyXG4gIGlubGluZTogX3Byb3BUeXBlczIuZGVmYXVsdC5ib29sLFxyXG4gIGNoaWxkcmVuOiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm5vZGUuaXNSZXF1aXJlZCxcclxuICBvblJlbmRlcjogX3Byb3BUeXBlczIuZGVmYXVsdC5mdW5jXHJcbn07XHJcblxyXG5Ob2RlLmNvbnRleHRUeXBlcyA9IHtcclxuICBNYXRoSmF4OiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9iamVjdCxcclxuICBpbnB1dDogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmdcclxufTtcclxuXHJcbk5vZGUuZGVmYXVsdFByb3BzID0ge1xyXG4gIGlubGluZTogZmFsc2UsXHJcbiAgb25SZW5kZXI6IGZ1bmN0aW9uIG9uUmVuZGVyKCkge31cclxufTtcclxuXHJcbmV4cG9ydHMuZGVmYXVsdCA9IE5vZGU7IiwiJ3VzZSBzdHJpY3QnO1xyXG5cclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XHJcbiAgdmFsdWU6IHRydWVcclxufSk7XHJcblxyXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xyXG5cclxudmFyIF9yZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcblxyXG52YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcclxuXHJcbnZhciBfcHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xyXG5cclxudmFyIF9wcm9wVHlwZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvcFR5cGVzKTtcclxuXHJcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XHJcblxyXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxyXG5cclxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XHJcblxyXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cclxuXHJcbnZhciBUZXh0ID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcclxuICBfaW5oZXJpdHMoVGV4dCwgX1JlYWN0JENvbXBvbmVudCk7XHJcblxyXG4gIGZ1bmN0aW9uIFRleHQoKSB7XHJcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVGV4dCk7XHJcblxyXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChUZXh0Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoVGV4dCkpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xyXG4gIH1cclxuXHJcbiAgX2NyZWF0ZUNsYXNzKFRleHQsIFt7XHJcbiAgICBrZXk6ICdjb21wb25lbnREaWRNb3VudCcsXHJcbiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XHJcbiAgICAgIHRoaXMucmVmcmVzaE1hdGhKYXgoKTtcclxuICAgIH1cclxuICB9LCB7XHJcbiAgICBrZXk6ICdjb21wb25lbnREaWRVcGRhdGUnLFxyXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZSgpIHtcclxuICAgICAgdGhpcy5yZWZyZXNoTWF0aEpheCgpO1xyXG4gICAgfVxyXG4gIH0sIHtcclxuICAgIGtleTogJ3JlZnJlc2hNYXRoSmF4JyxcclxuICAgIHZhbHVlOiBmdW5jdGlvbiByZWZyZXNoTWF0aEpheCgpIHtcclxuICAgICAgdmFyIE1hdGhKYXggPSB0aGlzLmNvbnRleHQuTWF0aEpheDtcclxuXHJcbiAgICAgIGlmICghTWF0aEpheCkge1xyXG4gICAgICAgIHRocm93IEVycm9yKFwiQ291bGQgbm90IGZpbmQgTWF0aEpheCB3aGlsZSBhdHRlbXB0aW5nIHR5cGVzZXQhIFByb2JhYmx5IE1hdGhKYXggc2NyaXB0IGhhc24ndCBiZWVuIGxvYWRlZCBvciBNYXRoSmF4LkNvbnRleHQgaXMgbm90IGluIHRoZSBoaWVyYXJjaHlcIik7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIE1hdGhKYXguSHViLlF1ZXVlKE1hdGhKYXguSHViLlR5cGVzZXQodGhpcy5kaXYsIHRoaXMucHJvcHMub25SZW5kZXIpKTtcclxuICAgIH1cclxuICB9LCB7XHJcbiAgICBrZXk6ICdyZW5kZXInLFxyXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcclxuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XHJcblxyXG4gICAgICB2YXIgX3Byb3BzID0gdGhpcy5wcm9wcyxcclxuICAgICAgICAgIGNsYXNzZXMgPSBfcHJvcHMuY2xhc3NlcyxcclxuICAgICAgICAgIG9wdGlvbnMgPSBfcHJvcHMub3B0aW9ucztcclxuXHJcblxyXG4gICAgICByZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXHJcbiAgICAgICAgJ2RpdicsXHJcbiAgICAgICAgeyBrZXk6IHRoaXMucHJvcHMudGV4dCwgcmVmOiBmdW5jdGlvbiByZWYoZGl2KSB7XHJcbiAgICAgICAgICAgIHJldHVybiBfdGhpczIuZGl2ID0gZGl2O1xyXG4gICAgICAgICAgfSB9LFxyXG4gICAgICAgIHRoaXMucHJvcHMudGV4dFxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gIH1dKTtcclxuXHJcbiAgcmV0dXJuIFRleHQ7XHJcbn0oX3JlYWN0Mi5kZWZhdWx0LkNvbXBvbmVudCk7XHJcblxyXG5UZXh0LmNvbnRleHRUeXBlcyA9IHtcclxuICBNYXRoSmF4OiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9iamVjdFxyXG59O1xyXG5cclxuZXhwb3J0cy5kZWZhdWx0ID0gVGV4dDsiLCIndXNlIHN0cmljdCc7XHJcblxyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcclxuICB2YWx1ZTogdHJ1ZVxyXG59KTtcclxuZXhwb3J0cy5IdG1sID0gZXhwb3J0cy5UZXh0ID0gZXhwb3J0cy5Db250ZXh0ID0gZXhwb3J0cy5Ob2RlID0gdW5kZWZpbmVkO1xyXG5cclxudmFyIF9Ob2RlID0gcmVxdWlyZSgnLi9Ob2RlJyk7XHJcblxyXG52YXIgX05vZGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfTm9kZSk7XHJcblxyXG52YXIgX0NvbnRleHQgPSByZXF1aXJlKCcuL0NvbnRleHQnKTtcclxuXHJcbnZhciBfQ29udGV4dDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9Db250ZXh0KTtcclxuXHJcbnZhciBfVGV4dCA9IHJlcXVpcmUoJy4vVGV4dCcpO1xyXG5cclxudmFyIF9UZXh0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1RleHQpO1xyXG5cclxudmFyIF9IdG1sID0gcmVxdWlyZSgnLi9IdG1sJyk7XHJcblxyXG52YXIgX0h0bWwyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfSHRtbCk7XHJcblxyXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxyXG5cclxuZXhwb3J0cy5Ob2RlID0gX05vZGUyLmRlZmF1bHQ7XHJcbmV4cG9ydHMuQ29udGV4dCA9IF9Db250ZXh0Mi5kZWZhdWx0O1xyXG5leHBvcnRzLlRleHQgPSBfVGV4dDIuZGVmYXVsdDtcclxuZXhwb3J0cy5IdG1sID0gX0h0bWwyLmRlZmF1bHQ7XHJcbmV4cG9ydHMuZGVmYXVsdCA9IHsgTm9kZTogX05vZGUyLmRlZmF1bHQsIENvbnRleHQ6IF9Db250ZXh0Mi5kZWZhdWx0LCBUZXh0OiBfVGV4dDIuZGVmYXVsdCwgSHRtbDogX0h0bWwyLmRlZmF1bHQgfTsiLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjE0LjBcclxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcclxuICpcclxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXHJcbiAqXHJcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxyXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXHJcbiAqL1xyXG5cclxuJ3VzZSBzdHJpY3QnO3ZhciBsPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixwPW4/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMscT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYscj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyx0PW4/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LHU9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsdj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSx3PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAseD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMix5PW4/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHo9bj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSxBPW4/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6XHJcbjYwMTE2LEI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIEMoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9XHJcbnZhciBEPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxFPXt9O2Z1bmN0aW9uIEYoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RTt0aGlzLnVwZGF0ZXI9Y3x8RH1GLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0YucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YSl0aHJvdyBFcnJvcihDKDg1KSk7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtGLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtcclxuZnVuY3Rpb24gRygpe31HLnByb3RvdHlwZT1GLnByb3RvdHlwZTtmdW5jdGlvbiBIKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUU7dGhpcy51cGRhdGVyPWN8fER9dmFyIEk9SC5wcm90b3R5cGU9bmV3IEc7SS5jb25zdHJ1Y3Rvcj1IO2woSSxGLnByb3RvdHlwZSk7SS5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgSj17Y3VycmVudDpudWxsfSxLPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksTD17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xyXG5mdW5jdGlvbiBNKGEsYixjKXt2YXIgZSxkPXt9LGc9bnVsbCxrPW51bGw7aWYobnVsbCE9Yilmb3IoZSBpbiB2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxiKUsuY2FsbChiLGUpJiYhTC5oYXNPd25Qcm9wZXJ0eShlKSYmKGRbZV09YltlXSk7dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWQuY2hpbGRyZW49YztlbHNlIGlmKDE8Zil7Zm9yKHZhciBoPUFycmF5KGYpLG09MDttPGY7bSsrKWhbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1ofWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihlIGluIGY9YS5kZWZhdWx0UHJvcHMsZil2b2lkIDA9PT1kW2VdJiYoZFtlXT1mW2VdKTtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEsa2V5OmcscmVmOmsscHJvcHM6ZCxfb3duZXI6Si5jdXJyZW50fX1cclxuZnVuY3Rpb24gTihhLGIpe3JldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTyhhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBQPS9cXC8rL2csUT1bXTtmdW5jdGlvbiBSKGEsYixjLGUpe2lmKFEubGVuZ3RoKXt2YXIgZD1RLnBvcCgpO2QucmVzdWx0PWE7ZC5rZXlQcmVmaXg9YjtkLmZ1bmM9YztkLmNvbnRleHQ9ZTtkLmNvdW50PTA7cmV0dXJuIGR9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6Yyxjb250ZXh0OmUsY291bnQ6MH19XHJcbmZ1bmN0aW9uIFMoYSl7YS5yZXN1bHQ9bnVsbDthLmtleVByZWZpeD1udWxsO2EuZnVuYz1udWxsO2EuY29udGV4dD1udWxsO2EuY291bnQ9MDsxMD5RLmxlbmd0aCYmUS5wdXNoKGEpfVxyXG5mdW5jdGlvbiBUKGEsYixjLGUpe3ZhciBkPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1kfHxcImJvb2xlYW5cIj09PWQpYT1udWxsO3ZhciBnPSExO2lmKG51bGw9PT1hKWc9ITA7ZWxzZSBzd2l0Y2goZCl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpnPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBwOmNhc2UgcTpnPSEwfX1pZihnKXJldHVybiBjKGUsYSxcIlwiPT09Yj9cIi5cIitVKGEsMCk6YiksMTtnPTA7Yj1cIlwiPT09Yj9cIi5cIjpiK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBrPTA7azxhLmxlbmd0aDtrKyspe2Q9YVtrXTt2YXIgZj1iK1UoZCxrKTtnKz1UKGQsZixjLGUpfWVsc2UgaWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYT9mPW51bGw6KGY9QiYmYVtCXXx8YVtcIkBAaXRlcmF0b3JcIl0sZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgZj9mOm51bGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxrPVxyXG4wOyEoZD1hLm5leHQoKSkuZG9uZTspZD1kLnZhbHVlLGY9YitVKGQsaysrKSxnKz1UKGQsZixjLGUpO2Vsc2UgaWYoXCJvYmplY3RcIj09PWQpdGhyb3cgYz1cIlwiK2EsRXJyb3IoQygzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09Yz9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjpjLFwiXCIpKTtyZXR1cm4gZ31mdW5jdGlvbiBWKGEsYixjKXtyZXR1cm4gbnVsbD09YT8wOlQoYSxcIlwiLGIsYyl9ZnVuY3Rpb24gVShhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShhLmtleSk6Yi50b1N0cmluZygzNil9ZnVuY3Rpb24gVyhhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XHJcbmZ1bmN0aW9uIGFhKGEsYixjKXt2YXIgZT1hLnJlc3VsdCxkPWEua2V5UHJlZml4O2E9YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKTtBcnJheS5pc0FycmF5KGEpP1goYSxlLGMsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTpudWxsIT1hJiYoTyhhKSYmKGE9TihhLGQrKCFhLmtleXx8YiYmYi5rZXk9PT1hLmtleT9cIlwiOihcIlwiK2Eua2V5KS5yZXBsYWNlKFAsXCIkJi9cIikrXCIvXCIpK2MpKSxlLnB1c2goYSkpfWZ1bmN0aW9uIFgoYSxiLGMsZSxkKXt2YXIgZz1cIlwiO251bGwhPWMmJihnPShcIlwiK2MpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIik7Yj1SKGIsZyxlLGQpO1YoYSxhYSxiKTtTKGIpfXZhciBZPXtjdXJyZW50Om51bGx9O2Z1bmN0aW9uIFooKXt2YXIgYT1ZLmN1cnJlbnQ7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IoQygzMjEpKTtyZXR1cm4gYX1cclxudmFyIGJhPXtSZWFjdEN1cnJlbnREaXNwYXRjaGVyOlksUmVhY3RDdXJyZW50QmF0Y2hDb25maWc6e3N1c3BlbnNlOm51bGx9LFJlYWN0Q3VycmVudE93bmVyOkosSXNTb21lUmVuZGVyZXJBY3Rpbmc6e2N1cnJlbnQ6ITF9LGFzc2lnbjpsfTtleHBvcnRzLkNoaWxkcmVuPXttYXA6ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGU9W107WChhLGUsbnVsbCxiLGMpO3JldHVybiBlfSxmb3JFYWNoOmZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO2I9UihudWxsLG51bGwsYixjKTtWKGEsVyxiKTtTKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gVihhLGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1goYSxiLG51bGwsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtpZighTyhhKSl0aHJvdyBFcnJvcihDKDE0MykpO3JldHVybiBhfX07XHJcbmV4cG9ydHMuQ29tcG9uZW50PUY7ZXhwb3J0cy5GcmFnbWVudD1yO2V4cG9ydHMuUHJvZmlsZXI9dTtleHBvcnRzLlB1cmVDb21wb25lbnQ9SDtleHBvcnRzLlN0cmljdE1vZGU9dDtleHBvcnRzLlN1c3BlbnNlPXk7ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1iYTtcclxuZXhwb3J0cy5jbG9uZUVsZW1lbnQ9ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PT1hfHx2b2lkIDA9PT1hKXRocm93IEVycm9yKEMoMjY3LGEpKTt2YXIgZT1sKHt9LGEucHJvcHMpLGQ9YS5rZXksZz1hLnJlZixrPWEuX293bmVyO2lmKG51bGwhPWIpe3ZvaWQgMCE9PWIucmVmJiYoZz1iLnJlZixrPUouY3VycmVudCk7dm9pZCAwIT09Yi5rZXkmJihkPVwiXCIrYi5rZXkpO2lmKGEudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyl2YXIgZj1hLnR5cGUuZGVmYXVsdFByb3BzO2ZvcihoIGluIGIpSy5jYWxsKGIsaCkmJiFMLmhhc093blByb3BlcnR5KGgpJiYoZVtoXT12b2lkIDA9PT1iW2hdJiZ2b2lkIDAhPT1mP2ZbaF06YltoXSl9dmFyIGg9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1oKWUuY2hpbGRyZW49YztlbHNlIGlmKDE8aCl7Zj1BcnJheShoKTtmb3IodmFyIG09MDttPGg7bSsrKWZbbV09YXJndW1lbnRzW20rMl07ZS5jaGlsZHJlbj1mfXJldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLFxyXG5rZXk6ZCxyZWY6Zyxwcm9wczplLF9vd25lcjprfX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6dyxfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6YixfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnYsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX07ZXhwb3J0cy5jcmVhdGVFbGVtZW50PU07ZXhwb3J0cy5jcmVhdGVGYWN0b3J5PWZ1bmN0aW9uKGEpe3ZhciBiPU0uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifTtleHBvcnRzLmNyZWF0ZVJlZj1mdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fTtleHBvcnRzLmZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOngscmVuZGVyOmF9fTtleHBvcnRzLmlzVmFsaWRFbGVtZW50PU87XHJcbmV4cG9ydHMubGF6eT1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6QSxfY3RvcjphLF9zdGF0dXM6LTEsX3Jlc3VsdDpudWxsfX07ZXhwb3J0cy5tZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOnosdHlwZTphLGNvbXBhcmU6dm9pZCAwPT09Yj9udWxsOmJ9fTtleHBvcnRzLnVzZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VDYWxsYmFjayhhLGIpfTtleHBvcnRzLnVzZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUNvbnRleHQoYSxiKX07ZXhwb3J0cy51c2VEZWJ1Z1ZhbHVlPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVzZUVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlRWZmZWN0KGEsYil9O2V4cG9ydHMudXNlSW1wZXJhdGl2ZUhhbmRsZT1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFooKS51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixjKX07XHJcbmV4cG9ydHMudXNlTGF5b3V0RWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VMYXlvdXRFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VNZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VNZW1vKGEsYil9O2V4cG9ydHMudXNlUmVkdWNlcj1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFooKS51c2VSZWR1Y2VyKGEsYixjKX07ZXhwb3J0cy51c2VSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIFooKS51c2VSZWYoYSl9O2V4cG9ydHMudXNlU3RhdGU9ZnVuY3Rpb24oYSl7cmV0dXJuIFooKS51c2VTdGF0ZShhKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTYuMTQuMFwiO1xyXG4iLCIndXNlIHN0cmljdCc7XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xyXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcclxufSBlbHNlIHtcclxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcclxuICBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcclxuICAgIG8uX19wcm90b19fID0gcDtcclxuICAgIHJldHVybiBvO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XHJcbn0iLCJpbXBvcnQgc2V0UHJvdG90eXBlT2YgZnJvbSBcIi4vc2V0UHJvdG90eXBlT2YuanNcIjtcclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcclxuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTtcclxuICBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzcztcclxuICBzZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZXh0ZW5kcygpIHtcclxuICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xyXG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcclxuXHJcbiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcclxuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xyXG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdGFyZ2V0O1xyXG4gIH07XHJcblxyXG4gIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xyXG59IiwiZnVuY3Rpb24gaXNBYnNvbHV0ZShwYXRobmFtZSkge1xyXG4gIHJldHVybiBwYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJztcclxufVxyXG5cclxuLy8gQWJvdXQgMS41eCBmYXN0ZXIgdGhhbiB0aGUgdHdvLWFyZyB2ZXJzaW9uIG9mIEFycmF5I3NwbGljZSgpXHJcbmZ1bmN0aW9uIHNwbGljZU9uZShsaXN0LCBpbmRleCkge1xyXG4gIGZvciAodmFyIGkgPSBpbmRleCwgayA9IGkgKyAxLCBuID0gbGlzdC5sZW5ndGg7IGsgPCBuOyBpICs9IDEsIGsgKz0gMSkge1xyXG4gICAgbGlzdFtpXSA9IGxpc3Rba107XHJcbiAgfVxyXG5cclxuICBsaXN0LnBvcCgpO1xyXG59XHJcblxyXG4vLyBUaGlzIGltcGxlbWVudGF0aW9uIGlzIGJhc2VkIGhlYXZpbHkgb24gbm9kZSdzIHVybC5wYXJzZVxyXG5mdW5jdGlvbiByZXNvbHZlUGF0aG5hbWUodG8sIGZyb20pIHtcclxuICBpZiAoZnJvbSA9PT0gdW5kZWZpbmVkKSBmcm9tID0gJyc7XHJcblxyXG4gIHZhciB0b1BhcnRzID0gKHRvICYmIHRvLnNwbGl0KCcvJykpIHx8IFtdO1xyXG4gIHZhciBmcm9tUGFydHMgPSAoZnJvbSAmJiBmcm9tLnNwbGl0KCcvJykpIHx8IFtdO1xyXG5cclxuICB2YXIgaXNUb0FicyA9IHRvICYmIGlzQWJzb2x1dGUodG8pO1xyXG4gIHZhciBpc0Zyb21BYnMgPSBmcm9tICYmIGlzQWJzb2x1dGUoZnJvbSk7XHJcbiAgdmFyIG11c3RFbmRBYnMgPSBpc1RvQWJzIHx8IGlzRnJvbUFicztcclxuXHJcbiAgaWYgKHRvICYmIGlzQWJzb2x1dGUodG8pKSB7XHJcbiAgICAvLyB0byBpcyBhYnNvbHV0ZVxyXG4gICAgZnJvbVBhcnRzID0gdG9QYXJ0cztcclxuICB9IGVsc2UgaWYgKHRvUGFydHMubGVuZ3RoKSB7XHJcbiAgICAvLyB0byBpcyByZWxhdGl2ZSwgZHJvcCB0aGUgZmlsZW5hbWVcclxuICAgIGZyb21QYXJ0cy5wb3AoKTtcclxuICAgIGZyb21QYXJ0cyA9IGZyb21QYXJ0cy5jb25jYXQodG9QYXJ0cyk7XHJcbiAgfVxyXG5cclxuICBpZiAoIWZyb21QYXJ0cy5sZW5ndGgpIHJldHVybiAnLyc7XHJcblxyXG4gIHZhciBoYXNUcmFpbGluZ1NsYXNoO1xyXG4gIGlmIChmcm9tUGFydHMubGVuZ3RoKSB7XHJcbiAgICB2YXIgbGFzdCA9IGZyb21QYXJ0c1tmcm9tUGFydHMubGVuZ3RoIC0gMV07XHJcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gbGFzdCA9PT0gJy4nIHx8IGxhc3QgPT09ICcuLicgfHwgbGFzdCA9PT0gJyc7XHJcbiAgfSBlbHNlIHtcclxuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBmYWxzZTtcclxuICB9XHJcblxyXG4gIHZhciB1cCA9IDA7XHJcbiAgZm9yICh2YXIgaSA9IGZyb21QYXJ0cy5sZW5ndGg7IGkgPj0gMDsgaS0tKSB7XHJcbiAgICB2YXIgcGFydCA9IGZyb21QYXJ0c1tpXTtcclxuXHJcbiAgICBpZiAocGFydCA9PT0gJy4nKSB7XHJcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xyXG4gICAgfSBlbHNlIGlmIChwYXJ0ID09PSAnLi4nKSB7XHJcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xyXG4gICAgICB1cCsrO1xyXG4gICAgfSBlbHNlIGlmICh1cCkge1xyXG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcclxuICAgICAgdXAtLTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGlmICghbXVzdEVuZEFicykgZm9yICg7IHVwLS07IHVwKSBmcm9tUGFydHMudW5zaGlmdCgnLi4nKTtcclxuXHJcbiAgaWYgKFxyXG4gICAgbXVzdEVuZEFicyAmJlxyXG4gICAgZnJvbVBhcnRzWzBdICE9PSAnJyAmJlxyXG4gICAgKCFmcm9tUGFydHNbMF0gfHwgIWlzQWJzb2x1dGUoZnJvbVBhcnRzWzBdKSlcclxuICApXHJcbiAgICBmcm9tUGFydHMudW5zaGlmdCgnJyk7XHJcblxyXG4gIHZhciByZXN1bHQgPSBmcm9tUGFydHMuam9pbignLycpO1xyXG5cclxuICBpZiAoaGFzVHJhaWxpbmdTbGFzaCAmJiByZXN1bHQuc3Vic3RyKC0xKSAhPT0gJy8nKSByZXN1bHQgKz0gJy8nO1xyXG5cclxuICByZXR1cm4gcmVzdWx0O1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCByZXNvbHZlUGF0aG5hbWU7XHJcbiIsImZ1bmN0aW9uIHZhbHVlT2Yob2JqKSB7XHJcbiAgcmV0dXJuIG9iai52YWx1ZU9mID8gb2JqLnZhbHVlT2YoKSA6IE9iamVjdC5wcm90b3R5cGUudmFsdWVPZi5jYWxsKG9iaik7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHZhbHVlRXF1YWwoYSwgYikge1xyXG4gIC8vIFRlc3QgZm9yIHN0cmljdCBlcXVhbGl0eSBmaXJzdC5cclxuICBpZiAoYSA9PT0gYikgcmV0dXJuIHRydWU7XHJcblxyXG4gIC8vIE90aGVyd2lzZSwgaWYgZWl0aGVyIG9mIHRoZW0gPT0gbnVsbCB0aGV5IGFyZSBub3QgZXF1YWwuXHJcbiAgaWYgKGEgPT0gbnVsbCB8fCBiID09IG51bGwpIHJldHVybiBmYWxzZTtcclxuXHJcbiAgaWYgKEFycmF5LmlzQXJyYXkoYSkpIHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIEFycmF5LmlzQXJyYXkoYikgJiZcclxuICAgICAgYS5sZW5ndGggPT09IGIubGVuZ3RoICYmXHJcbiAgICAgIGEuZXZlcnkoZnVuY3Rpb24oaXRlbSwgaW5kZXgpIHtcclxuICAgICAgICByZXR1cm4gdmFsdWVFcXVhbChpdGVtLCBiW2luZGV4XSk7XHJcbiAgICAgIH0pXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgaWYgKHR5cGVvZiBhID09PSAnb2JqZWN0JyB8fCB0eXBlb2YgYiA9PT0gJ29iamVjdCcpIHtcclxuICAgIHZhciBhVmFsdWUgPSB2YWx1ZU9mKGEpO1xyXG4gICAgdmFyIGJWYWx1ZSA9IHZhbHVlT2YoYik7XHJcblxyXG4gICAgaWYgKGFWYWx1ZSAhPT0gYSB8fCBiVmFsdWUgIT09IGIpIHJldHVybiB2YWx1ZUVxdWFsKGFWYWx1ZSwgYlZhbHVlKTtcclxuXHJcbiAgICByZXR1cm4gT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgYSwgYikpLmV2ZXJ5KGZ1bmN0aW9uKGtleSkge1xyXG4gICAgICByZXR1cm4gdmFsdWVFcXVhbChhW2tleV0sIGJba2V5XSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHJldHVybiBmYWxzZTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgdmFsdWVFcXVhbDtcclxuIiwidmFyIGlzUHJvZHVjdGlvbiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbic7XHJcbnZhciBwcmVmaXggPSAnSW52YXJpYW50IGZhaWxlZCc7XHJcbmZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIG1lc3NhZ2UpIHtcclxuICAgIGlmIChjb25kaXRpb24pIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZiAoaXNQcm9kdWN0aW9uKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKHByZWZpeCk7XHJcbiAgICB9XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4ICsgXCI6IFwiICsgKG1lc3NhZ2UgfHwgJycpKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgaW52YXJpYW50O1xyXG4iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XHJcbmltcG9ydCByZXNvbHZlUGF0aG5hbWUgZnJvbSAncmVzb2x2ZS1wYXRobmFtZSc7XHJcbmltcG9ydCB2YWx1ZUVxdWFsIGZyb20gJ3ZhbHVlLWVxdWFsJztcclxuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcclxuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XHJcblxyXG5mdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xyXG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aCA6ICcvJyArIHBhdGg7XHJcbn1cclxuZnVuY3Rpb24gc3RyaXBMZWFkaW5nU2xhc2gocGF0aCkge1xyXG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xyXG59XHJcbmZ1bmN0aW9uIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xyXG4gIHJldHVybiBwYXRoLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihwcmVmaXgudG9Mb3dlckNhc2UoKSkgPT09IDAgJiYgJy8/IycuaW5kZXhPZihwYXRoLmNoYXJBdChwcmVmaXgubGVuZ3RoKSkgIT09IC0xO1xyXG59XHJcbmZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XHJcbiAgcmV0dXJuIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkgPyBwYXRoLnN1YnN0cihwcmVmaXgubGVuZ3RoKSA6IHBhdGg7XHJcbn1cclxuZnVuY3Rpb24gc3RyaXBUcmFpbGluZ1NsYXNoKHBhdGgpIHtcclxuICByZXR1cm4gcGF0aC5jaGFyQXQocGF0aC5sZW5ndGggLSAxKSA9PT0gJy8nID8gcGF0aC5zbGljZSgwLCAtMSkgOiBwYXRoO1xyXG59XHJcbmZ1bmN0aW9uIHBhcnNlUGF0aChwYXRoKSB7XHJcbiAgdmFyIHBhdGhuYW1lID0gcGF0aCB8fCAnLyc7XHJcbiAgdmFyIHNlYXJjaCA9ICcnO1xyXG4gIHZhciBoYXNoID0gJyc7XHJcbiAgdmFyIGhhc2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJyMnKTtcclxuXHJcbiAgaWYgKGhhc2hJbmRleCAhPT0gLTEpIHtcclxuICAgIGhhc2ggPSBwYXRobmFtZS5zdWJzdHIoaGFzaEluZGV4KTtcclxuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIGhhc2hJbmRleCk7XHJcbiAgfVxyXG5cclxuICB2YXIgc2VhcmNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCc/Jyk7XHJcblxyXG4gIGlmIChzZWFyY2hJbmRleCAhPT0gLTEpIHtcclxuICAgIHNlYXJjaCA9IHBhdGhuYW1lLnN1YnN0cihzZWFyY2hJbmRleCk7XHJcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBzZWFyY2hJbmRleCk7XHJcbiAgfVxyXG5cclxuICByZXR1cm4ge1xyXG4gICAgcGF0aG5hbWU6IHBhdGhuYW1lLFxyXG4gICAgc2VhcmNoOiBzZWFyY2ggPT09ICc/JyA/ICcnIDogc2VhcmNoLFxyXG4gICAgaGFzaDogaGFzaCA9PT0gJyMnID8gJycgOiBoYXNoXHJcbiAgfTtcclxufVxyXG5mdW5jdGlvbiBjcmVhdGVQYXRoKGxvY2F0aW9uKSB7XHJcbiAgdmFyIHBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWUsXHJcbiAgICAgIHNlYXJjaCA9IGxvY2F0aW9uLnNlYXJjaCxcclxuICAgICAgaGFzaCA9IGxvY2F0aW9uLmhhc2g7XHJcbiAgdmFyIHBhdGggPSBwYXRobmFtZSB8fCAnLyc7XHJcbiAgaWYgKHNlYXJjaCAmJiBzZWFyY2ggIT09ICc/JykgcGF0aCArPSBzZWFyY2guY2hhckF0KDApID09PSAnPycgPyBzZWFyY2ggOiBcIj9cIiArIHNlYXJjaDtcclxuICBpZiAoaGFzaCAmJiBoYXNoICE9PSAnIycpIHBhdGggKz0gaGFzaC5jaGFyQXQoMCkgPT09ICcjJyA/IGhhc2ggOiBcIiNcIiArIGhhc2g7XHJcbiAgcmV0dXJuIHBhdGg7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXksIGN1cnJlbnRMb2NhdGlvbikge1xyXG4gIHZhciBsb2NhdGlvbjtcclxuXHJcbiAgaWYgKHR5cGVvZiBwYXRoID09PSAnc3RyaW5nJykge1xyXG4gICAgLy8gVHdvLWFyZyBmb3JtOiBwdXNoKHBhdGgsIHN0YXRlKVxyXG4gICAgbG9jYXRpb24gPSBwYXJzZVBhdGgocGF0aCk7XHJcbiAgICBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xyXG4gIH0gZWxzZSB7XHJcbiAgICAvLyBPbmUtYXJnIGZvcm06IHB1c2gobG9jYXRpb24pXHJcbiAgICBsb2NhdGlvbiA9IF9leHRlbmRzKHt9LCBwYXRoKTtcclxuICAgIGlmIChsb2NhdGlvbi5wYXRobmFtZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5wYXRobmFtZSA9ICcnO1xyXG5cclxuICAgIGlmIChsb2NhdGlvbi5zZWFyY2gpIHtcclxuICAgICAgaWYgKGxvY2F0aW9uLnNlYXJjaC5jaGFyQXQoMCkgIT09ICc/JykgbG9jYXRpb24uc2VhcmNoID0gJz8nICsgbG9jYXRpb24uc2VhcmNoO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgbG9jYXRpb24uc2VhcmNoID0gJyc7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGxvY2F0aW9uLmhhc2gpIHtcclxuICAgICAgaWYgKGxvY2F0aW9uLmhhc2guY2hhckF0KDApICE9PSAnIycpIGxvY2F0aW9uLmhhc2ggPSAnIycgKyBsb2NhdGlvbi5oYXNoO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgbG9jYXRpb24uaGFzaCA9ICcnO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChzdGF0ZSAhPT0gdW5kZWZpbmVkICYmIGxvY2F0aW9uLnN0YXRlID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgbG9jYXRpb24ucGF0aG5hbWUgPSBkZWNvZGVVUkkobG9jYXRpb24ucGF0aG5hbWUpO1xyXG4gIH0gY2F0Y2ggKGUpIHtcclxuICAgIGlmIChlIGluc3RhbmNlb2YgVVJJRXJyb3IpIHtcclxuICAgICAgdGhyb3cgbmV3IFVSSUVycm9yKCdQYXRobmFtZSBcIicgKyBsb2NhdGlvbi5wYXRobmFtZSArICdcIiBjb3VsZCBub3QgYmUgZGVjb2RlZC4gJyArICdUaGlzIGlzIGxpa2VseSBjYXVzZWQgYnkgYW4gaW52YWxpZCBwZXJjZW50LWVuY29kaW5nLicpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhyb3cgZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGlmIChrZXkpIGxvY2F0aW9uLmtleSA9IGtleTtcclxuXHJcbiAgaWYgKGN1cnJlbnRMb2NhdGlvbikge1xyXG4gICAgLy8gUmVzb2x2ZSBpbmNvbXBsZXRlL3JlbGF0aXZlIHBhdGhuYW1lIHJlbGF0aXZlIHRvIGN1cnJlbnQgbG9jYXRpb24uXHJcbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XHJcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gY3VycmVudExvY2F0aW9uLnBhdGhuYW1lO1xyXG4gICAgfSBlbHNlIGlmIChsb2NhdGlvbi5wYXRobmFtZS5jaGFyQXQoMCkgIT09ICcvJykge1xyXG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IHJlc29sdmVQYXRobmFtZShsb2NhdGlvbi5wYXRobmFtZSwgY3VycmVudExvY2F0aW9uLnBhdGhuYW1lKTtcclxuICAgIH1cclxuICB9IGVsc2Uge1xyXG4gICAgLy8gV2hlbiB0aGVyZSBpcyBubyBwcmlvciBsb2NhdGlvbiBhbmQgcGF0aG5hbWUgaXMgZW1wdHksIHNldCBpdCB0byAvXHJcbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XHJcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gJy8nO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGxvY2F0aW9uO1xyXG59XHJcbmZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsKGEsIGIpIHtcclxuICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2ggJiYgYS5rZXkgPT09IGIua2V5ICYmIHZhbHVlRXF1YWwoYS5zdGF0ZSwgYi5zdGF0ZSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCkge1xyXG4gIHZhciBwcm9tcHQgPSBudWxsO1xyXG5cclxuICBmdW5jdGlvbiBzZXRQcm9tcHQobmV4dFByb21wdCkge1xyXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhwcm9tcHQgPT0gbnVsbCwgJ0EgaGlzdG9yeSBzdXBwb3J0cyBvbmx5IG9uZSBwcm9tcHQgYXQgYSB0aW1lJykgOiB2b2lkIDA7XHJcbiAgICBwcm9tcHQgPSBuZXh0UHJvbXB0O1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcclxuICAgICAgaWYgKHByb21wdCA9PT0gbmV4dFByb21wdCkgcHJvbXB0ID0gbnVsbDtcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBjb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGNhbGxiYWNrKSB7XHJcbiAgICAvLyBUT0RPOiBJZiBhbm90aGVyIHRyYW5zaXRpb24gc3RhcnRzIHdoaWxlIHdlJ3JlIHN0aWxsIGNvbmZpcm1pbmdcclxuICAgIC8vIHRoZSBwcmV2aW91cyBvbmUsIHdlIG1heSBlbmQgdXAgaW4gYSB3ZWlyZCBzdGF0ZS4gRmlndXJlIG91dCB0aGVcclxuICAgIC8vIGJlc3Qgd2F5IHRvIGhhbmRsZSB0aGlzLlxyXG4gICAgaWYgKHByb21wdCAhPSBudWxsKSB7XHJcbiAgICAgIHZhciByZXN1bHQgPSB0eXBlb2YgcHJvbXB0ID09PSAnZnVuY3Rpb24nID8gcHJvbXB0KGxvY2F0aW9uLCBhY3Rpb24pIDogcHJvbXB0O1xyXG5cclxuICAgICAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgaWYgKHR5cGVvZiBnZXRVc2VyQ29uZmlybWF0aW9uID09PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgICAgICBnZXRVc2VyQ29uZmlybWF0aW9uKHJlc3VsdCwgY2FsbGJhY2spO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCAnQSBoaXN0b3J5IG5lZWRzIGEgZ2V0VXNlckNvbmZpcm1hdGlvbiBmdW5jdGlvbiBpbiBvcmRlciB0byB1c2UgYSBwcm9tcHQgbWVzc2FnZScpIDogdm9pZCAwO1xyXG4gICAgICAgICAgY2FsbGJhY2sodHJ1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIC8vIFJldHVybiBmYWxzZSBmcm9tIGEgdHJhbnNpdGlvbiBob29rIHRvIGNhbmNlbCB0aGUgdHJhbnNpdGlvbi5cclxuICAgICAgICBjYWxsYmFjayhyZXN1bHQgIT09IGZhbHNlKTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgY2FsbGJhY2sodHJ1ZSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICB2YXIgbGlzdGVuZXJzID0gW107XHJcblxyXG4gIGZ1bmN0aW9uIGFwcGVuZExpc3RlbmVyKGZuKSB7XHJcbiAgICB2YXIgaXNBY3RpdmUgPSB0cnVlO1xyXG5cclxuICAgIGZ1bmN0aW9uIGxpc3RlbmVyKCkge1xyXG4gICAgICBpZiAoaXNBY3RpdmUpIGZuLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKTtcclxuICAgIH1cclxuXHJcbiAgICBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xyXG4gICAgICBpc0FjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICBsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XHJcbiAgICAgICAgcmV0dXJuIGl0ZW0gIT09IGxpc3RlbmVyO1xyXG4gICAgICB9KTtcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBub3RpZnlMaXN0ZW5lcnMoKSB7XHJcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcclxuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcclxuICAgIH1cclxuXHJcbiAgICBsaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAobGlzdGVuZXIpIHtcclxuICAgICAgcmV0dXJuIGxpc3RlbmVyLmFwcGx5KHZvaWQgMCwgYXJncyk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHJldHVybiB7XHJcbiAgICBzZXRQcm9tcHQ6IHNldFByb21wdCxcclxuICAgIGNvbmZpcm1UcmFuc2l0aW9uVG86IGNvbmZpcm1UcmFuc2l0aW9uVG8sXHJcbiAgICBhcHBlbmRMaXN0ZW5lcjogYXBwZW5kTGlzdGVuZXIsXHJcbiAgICBub3RpZnlMaXN0ZW5lcnM6IG5vdGlmeUxpc3RlbmVyc1xyXG4gIH07XHJcbn1cclxuXHJcbnZhciBjYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xyXG5mdW5jdGlvbiBnZXRDb25maXJtYXRpb24obWVzc2FnZSwgY2FsbGJhY2spIHtcclxuICBjYWxsYmFjayh3aW5kb3cuY29uZmlybShtZXNzYWdlKSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tYWxlcnRcclxufVxyXG4vKipcclxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpcyBzdXBwb3J0ZWQuIFRha2VuIGZyb20gTW9kZXJuaXpyLlxyXG4gKlxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9MSUNFTlNFXHJcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL2ZlYXR1cmUtZGV0ZWN0cy9oaXN0b3J5LmpzXHJcbiAqIGNoYW5nZWQgdG8gYXZvaWQgZmFsc2UgbmVnYXRpdmVzIGZvciBXaW5kb3dzIFBob25lczogaHR0cHM6Ly9naXRodWIuY29tL3JlYWN0anMvcmVhY3Qtcm91dGVyL2lzc3Vlcy81ODZcclxuICovXHJcblxyXG5mdW5jdGlvbiBzdXBwb3J0c0hpc3RvcnkoKSB7XHJcbiAgdmFyIHVhID0gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQ7XHJcbiAgaWYgKCh1YS5pbmRleE9mKCdBbmRyb2lkIDIuJykgIT09IC0xIHx8IHVhLmluZGV4T2YoJ0FuZHJvaWQgNC4wJykgIT09IC0xKSAmJiB1YS5pbmRleE9mKCdNb2JpbGUgU2FmYXJpJykgIT09IC0xICYmIHVhLmluZGV4T2YoJ0Nocm9tZScpID09PSAtMSAmJiB1YS5pbmRleE9mKCdXaW5kb3dzIFBob25lJykgPT09IC0xKSByZXR1cm4gZmFsc2U7XHJcbiAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5ICYmICdwdXNoU3RhdGUnIGluIHdpbmRvdy5oaXN0b3J5O1xyXG59XHJcbi8qKlxyXG4gKiBSZXR1cm5zIHRydWUgaWYgYnJvd3NlciBmaXJlcyBwb3BzdGF0ZSBvbiBoYXNoIGNoYW5nZS5cclxuICogSUUxMCBhbmQgSUUxMSBkbyBub3QuXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpIHtcclxuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignVHJpZGVudCcpID09PSAtMTtcclxufVxyXG4vKipcclxuICogUmV0dXJucyBmYWxzZSBpZiB1c2luZyBnbyhuKSB3aXRoIGhhc2ggaGlzdG9yeSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkLlxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCkge1xyXG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdGaXJlZm94JykgPT09IC0xO1xyXG59XHJcbi8qKlxyXG4gKiBSZXR1cm5zIHRydWUgaWYgYSBnaXZlbiBwb3BzdGF0ZSBldmVudCBpcyBhbiBleHRyYW5lb3VzIFdlYktpdCBldmVudC5cclxuICogQWNjb3VudHMgZm9yIHRoZSBmYWN0IHRoYXQgQ2hyb21lIG9uIGlPUyBmaXJlcyByZWFsIHBvcHN0YXRlIGV2ZW50c1xyXG4gKiBjb250YWluaW5nIHVuZGVmaW5lZCBzdGF0ZSB3aGVuIHByZXNzaW5nIHRoZSBiYWNrIGJ1dHRvbi5cclxuICovXHJcblxyXG5mdW5jdGlvbiBpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSB7XHJcbiAgcmV0dXJuIGV2ZW50LnN0YXRlID09PSB1bmRlZmluZWQgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdDcmlPUycpID09PSAtMTtcclxufVxyXG5cclxudmFyIFBvcFN0YXRlRXZlbnQgPSAncG9wc3RhdGUnO1xyXG52YXIgSGFzaENoYW5nZUV2ZW50ID0gJ2hhc2hjaGFuZ2UnO1xyXG5cclxuZnVuY3Rpb24gZ2V0SGlzdG9yeVN0YXRlKCkge1xyXG4gIHRyeSB7XHJcbiAgICByZXR1cm4gd2luZG93Lmhpc3Rvcnkuc3RhdGUgfHwge307XHJcbiAgfSBjYXRjaCAoZSkge1xyXG4gICAgLy8gSUUgMTEgc29tZXRpbWVzIHRocm93cyB3aGVuIGFjY2Vzc2luZyB3aW5kb3cuaGlzdG9yeS5zdGF0ZVxyXG4gICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9SZWFjdFRyYWluaW5nL2hpc3RvcnkvcHVsbC8yODlcclxuICAgIHJldHVybiB7fTtcclxuICB9XHJcbn1cclxuLyoqXHJcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHVzZXMgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGluY2x1ZGluZ1xyXG4gKiBwdXNoU3RhdGUsIHJlcGxhY2VTdGF0ZSwgYW5kIHRoZSBwb3BzdGF0ZSBldmVudC5cclxuICovXHJcblxyXG5cclxuZnVuY3Rpb24gY3JlYXRlQnJvd3Nlckhpc3RvcnkocHJvcHMpIHtcclxuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xyXG4gICAgcHJvcHMgPSB7fTtcclxuICB9XHJcblxyXG4gICFjYW5Vc2VET00gPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdCcm93c2VyIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XHJcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcclxuICB2YXIgY2FuVXNlSGlzdG9yeSA9IHN1cHBvcnRzSGlzdG9yeSgpO1xyXG4gIHZhciBuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciA9ICFzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCk7XHJcbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxyXG4gICAgICBfcHJvcHMkZm9yY2VSZWZyZXNoID0gX3Byb3BzLmZvcmNlUmVmcmVzaCxcclxuICAgICAgZm9yY2VSZWZyZXNoID0gX3Byb3BzJGZvcmNlUmVmcmVzaCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcHJvcHMkZm9yY2VSZWZyZXNoLFxyXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcclxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdm9pZCAwID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxyXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gX3Byb3BzLmtleUxlbmd0aCxcclxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdm9pZCAwID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XHJcbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcclxuXHJcbiAgZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oaGlzdG9yeVN0YXRlKSB7XHJcbiAgICB2YXIgX3JlZiA9IGhpc3RvcnlTdGF0ZSB8fCB7fSxcclxuICAgICAgICBrZXkgPSBfcmVmLmtleSxcclxuICAgICAgICBzdGF0ZSA9IF9yZWYuc3RhdGU7XHJcblxyXG4gICAgdmFyIF93aW5kb3ckbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb24sXHJcbiAgICAgICAgcGF0aG5hbWUgPSBfd2luZG93JGxvY2F0aW9uLnBhdGhuYW1lLFxyXG4gICAgICAgIHNlYXJjaCA9IF93aW5kb3ckbG9jYXRpb24uc2VhcmNoLFxyXG4gICAgICAgIGhhc2ggPSBfd2luZG93JGxvY2F0aW9uLmhhc2g7XHJcbiAgICB2YXIgcGF0aCA9IHBhdGhuYW1lICsgc2VhcmNoICsgaGFzaDtcclxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJykgOiB2b2lkIDA7XHJcbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcclxuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5KTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcclxuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcclxuICB9XHJcblxyXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XHJcblxyXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xyXG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcclxuXHJcbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xyXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcFN0YXRlKGV2ZW50KSB7XHJcbiAgICAvLyBJZ25vcmUgZXh0cmFuZW91cyBwb3BzdGF0ZSBldmVudHMgaW4gV2ViS2l0LlxyXG4gICAgaWYgKGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpKSByZXR1cm47XHJcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZXZlbnQuc3RhdGUpKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XHJcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpKTtcclxuICB9XHJcblxyXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcclxuXHJcbiAgZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XHJcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XHJcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xyXG4gICAgICBzZXRTdGF0ZSgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xyXG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xyXG4gICAgICAgIGlmIChvaykge1xyXG4gICAgICAgICAgc2V0U3RhdGUoe1xyXG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcclxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xyXG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uOyAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxyXG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2Yga2V5cyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxyXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIGtleXMgd2UgZG9uJ3Qga25vdy5cclxuXHJcbiAgICB2YXIgdG9JbmRleCA9IGFsbEtleXMuaW5kZXhPZih0b0xvY2F0aW9uLmtleSk7XHJcbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xyXG4gICAgdmFyIGZyb21JbmRleCA9IGFsbEtleXMuaW5kZXhPZihmcm9tTG9jYXRpb24ua2V5KTtcclxuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xyXG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcclxuXHJcbiAgICBpZiAoZGVsdGEpIHtcclxuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcclxuICAgICAgZ28oZGVsdGEpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKTtcclxuICB2YXIgYWxsS2V5cyA9IFtpbml0aWFsTG9jYXRpb24ua2V5XTsgLy8gUHVibGljIGludGVyZmFjZVxyXG5cclxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XHJcbiAgICByZXR1cm4gYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcclxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcclxuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XHJcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xyXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcclxuICAgICAgaWYgKCFvaykgcmV0dXJuO1xyXG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xyXG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxyXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcclxuXHJcbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XHJcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5wdXNoU3RhdGUoe1xyXG4gICAgICAgICAga2V5OiBrZXksXHJcbiAgICAgICAgICBzdGF0ZTogc3RhdGVcclxuICAgICAgICB9LCBudWxsLCBocmVmKTtcclxuXHJcbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xyXG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcclxuICAgICAgICAgIHZhciBuZXh0S2V5cyA9IGFsbEtleXMuc2xpY2UoMCwgcHJldkluZGV4ICsgMSk7XHJcbiAgICAgICAgICBuZXh0S2V5cy5wdXNoKGxvY2F0aW9uLmtleSk7XHJcbiAgICAgICAgICBhbGxLZXlzID0gbmV4dEtleXM7XHJcbiAgICAgICAgICBzZXRTdGF0ZSh7XHJcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxyXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5JykgOiB2b2lkIDA7XHJcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcclxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcclxuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XHJcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xyXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcclxuICAgICAgaWYgKCFvaykgcmV0dXJuO1xyXG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xyXG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxyXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcclxuXHJcbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XHJcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5yZXBsYWNlU3RhdGUoe1xyXG4gICAgICAgICAga2V5OiBrZXksXHJcbiAgICAgICAgICBzdGF0ZTogc3RhdGVcclxuICAgICAgICB9LCBudWxsLCBocmVmKTtcclxuXHJcbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xyXG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xyXG4gICAgICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbEtleXNbcHJldkluZGV4XSA9IGxvY2F0aW9uLmtleTtcclxuICAgICAgICAgIHNldFN0YXRlKHtcclxuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXHJcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKSA6IHZvaWQgMDtcclxuICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBnbyhuKSB7XHJcbiAgICBnbG9iYWxIaXN0b3J5LmdvKG4pO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xyXG4gICAgZ28oLTEpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xyXG4gICAgZ28oMSk7XHJcbiAgfVxyXG5cclxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XHJcblxyXG4gIGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XHJcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xyXG5cclxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxICYmIGRlbHRhID09PSAxKSB7XHJcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcclxuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xyXG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XHJcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcclxuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xyXG5cclxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcclxuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xyXG4gICAgICBwcm9tcHQgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xyXG5cclxuICAgIGlmICghaXNCbG9ja2VkKSB7XHJcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xyXG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcclxuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcclxuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XHJcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XHJcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcclxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcclxuICAgICAgdW5saXN0ZW4oKTtcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICB2YXIgaGlzdG9yeSA9IHtcclxuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXHJcbiAgICBhY3Rpb246ICdQT1AnLFxyXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcclxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXHJcbiAgICBwdXNoOiBwdXNoLFxyXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcclxuICAgIGdvOiBnbyxcclxuICAgIGdvQmFjazogZ29CYWNrLFxyXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXHJcbiAgICBibG9jazogYmxvY2ssXHJcbiAgICBsaXN0ZW46IGxpc3RlblxyXG4gIH07XHJcbiAgcmV0dXJuIGhpc3Rvcnk7XHJcbn1cclxuXHJcbnZhciBIYXNoQ2hhbmdlRXZlbnQkMSA9ICdoYXNoY2hhbmdlJztcclxudmFyIEhhc2hQYXRoQ29kZXJzID0ge1xyXG4gIGhhc2hiYW5nOiB7XHJcbiAgICBlbmNvZGVQYXRoOiBmdW5jdGlvbiBlbmNvZGVQYXRoKHBhdGgpIHtcclxuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoIDogJyEvJyArIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpO1xyXG4gICAgfSxcclxuICAgIGRlY29kZVBhdGg6IGZ1bmN0aW9uIGRlY29kZVBhdGgocGF0aCkge1xyXG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcclxuICAgIH1cclxuICB9LFxyXG4gIG5vc2xhc2g6IHtcclxuICAgIGVuY29kZVBhdGg6IHN0cmlwTGVhZGluZ1NsYXNoLFxyXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXHJcbiAgfSxcclxuICBzbGFzaDoge1xyXG4gICAgZW5jb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoLFxyXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXHJcbiAgfVxyXG59O1xyXG5cclxuZnVuY3Rpb24gc3RyaXBIYXNoKHVybCkge1xyXG4gIHZhciBoYXNoSW5kZXggPSB1cmwuaW5kZXhPZignIycpO1xyXG4gIHJldHVybiBoYXNoSW5kZXggPT09IC0xID8gdXJsIDogdXJsLnNsaWNlKDAsIGhhc2hJbmRleCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldEhhc2hQYXRoKCkge1xyXG4gIC8vIFdlIGNhbid0IHVzZSB3aW5kb3cubG9jYXRpb24uaGFzaCBoZXJlIGJlY2F1c2UgaXQncyBub3RcclxuICAvLyBjb25zaXN0ZW50IGFjcm9zcyBicm93c2VycyAtIEZpcmVmb3ggd2lsbCBwcmUtZGVjb2RlIGl0IVxyXG4gIHZhciBocmVmID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XHJcbiAgdmFyIGhhc2hJbmRleCA9IGhyZWYuaW5kZXhPZignIycpO1xyXG4gIHJldHVybiBoYXNoSW5kZXggPT09IC0xID8gJycgOiBocmVmLnN1YnN0cmluZyhoYXNoSW5kZXggKyAxKTtcclxufVxyXG5cclxuZnVuY3Rpb24gcHVzaEhhc2hQYXRoKHBhdGgpIHtcclxuICB3aW5kb3cubG9jYXRpb24uaGFzaCA9IHBhdGg7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJlcGxhY2VIYXNoUGF0aChwYXRoKSB7XHJcbiAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2Uoc3RyaXBIYXNoKHdpbmRvdy5sb2NhdGlvbi5ocmVmKSArICcjJyArIHBhdGgpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVIYXNoSGlzdG9yeShwcm9wcykge1xyXG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XHJcbiAgICBwcm9wcyA9IHt9O1xyXG4gIH1cclxuXHJcbiAgIWNhblVzZURPTSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0hhc2ggaGlzdG9yeSBuZWVkcyBhIERPTScpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcclxuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xyXG4gIHZhciBjYW5Hb1dpdGhvdXRSZWxvYWQgPSBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpO1xyXG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcclxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXHJcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHZvaWQgMCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcclxuICAgICAgX3Byb3BzJGhhc2hUeXBlID0gX3Byb3BzLmhhc2hUeXBlLFxyXG4gICAgICBoYXNoVHlwZSA9IF9wcm9wcyRoYXNoVHlwZSA9PT0gdm9pZCAwID8gJ3NsYXNoJyA6IF9wcm9wcyRoYXNoVHlwZTtcclxuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xyXG4gIHZhciBfSGFzaFBhdGhDb2RlcnMkaGFzaFQgPSBIYXNoUGF0aENvZGVyc1toYXNoVHlwZV0sXHJcbiAgICAgIGVuY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZW5jb2RlUGF0aCxcclxuICAgICAgZGVjb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5kZWNvZGVQYXRoO1xyXG5cclxuICBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbigpIHtcclxuICAgIHZhciBwYXRoID0gZGVjb2RlUGF0aChnZXRIYXNoUGF0aCgpKTtcclxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJykgOiB2b2lkIDA7XHJcbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcclxuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoKTtcclxuICB9XHJcblxyXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XHJcblxyXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xyXG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcclxuXHJcbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xyXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcclxuICB9XHJcblxyXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcclxuICB2YXIgaWdub3JlUGF0aCA9IG51bGw7XHJcblxyXG4gIGZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsJCQxKGEsIGIpIHtcclxuICAgIHJldHVybiBhLnBhdGhuYW1lID09PSBiLnBhdGhuYW1lICYmIGEuc2VhcmNoID09PSBiLnNlYXJjaCAmJiBhLmhhc2ggPT09IGIuaGFzaDtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XHJcbiAgICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XHJcbiAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xyXG5cclxuICAgIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkge1xyXG4gICAgICAvLyBFbnN1cmUgd2UgYWx3YXlzIGhhdmUgYSBwcm9wZXJseS1lbmNvZGVkIGhhc2guXHJcbiAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB2YXIgbG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xyXG4gICAgICB2YXIgcHJldkxvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjtcclxuICAgICAgaWYgKCFmb3JjZU5leHRQb3AgJiYgbG9jYXRpb25zQXJlRXF1YWwkJDEocHJldkxvY2F0aW9uLCBsb2NhdGlvbikpIHJldHVybjsgLy8gQSBoYXNoY2hhbmdlIGRvZXNuJ3QgYWx3YXlzID09IGxvY2F0aW9uIGNoYW5nZS5cclxuXHJcbiAgICAgIGlmIChpZ25vcmVQYXRoID09PSBjcmVhdGVQYXRoKGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBJZ25vcmUgdGhpcyBjaGFuZ2U7IHdlIGFscmVhZHkgc2V0U3RhdGUgaW4gcHVzaC9yZXBsYWNlLlxyXG5cclxuICAgICAgaWdub3JlUGF0aCA9IG51bGw7XHJcbiAgICAgIGhhbmRsZVBvcChsb2NhdGlvbik7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBoYW5kbGVQb3AobG9jYXRpb24pIHtcclxuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcclxuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XHJcbiAgICAgIHNldFN0YXRlKCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XHJcbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XHJcbiAgICAgICAgaWYgKG9rKSB7XHJcbiAgICAgICAgICBzZXRTdGF0ZSh7XHJcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxyXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XHJcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247IC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XHJcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBwYXRocyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxyXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIHBhdGhzIHdlIGRvbid0IGtub3cuXHJcblxyXG4gICAgdmFyIHRvSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKHRvTG9jYXRpb24pKTtcclxuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XHJcbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChmcm9tTG9jYXRpb24pKTtcclxuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xyXG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcclxuXHJcbiAgICBpZiAoZGVsdGEpIHtcclxuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcclxuICAgICAgZ28oZGVsdGEpO1xyXG4gICAgfVxyXG4gIH0gLy8gRW5zdXJlIHRoZSBoYXNoIGlzIGVuY29kZWQgcHJvcGVybHkgYmVmb3JlIGRvaW5nIGFueXRoaW5nIGVsc2UuXHJcblxyXG5cclxuICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XHJcbiAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcclxuICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XHJcbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XHJcbiAgdmFyIGFsbFBhdGhzID0gW2NyZWF0ZVBhdGgoaW5pdGlhbExvY2F0aW9uKV07IC8vIFB1YmxpYyBpbnRlcmZhY2VcclxuXHJcbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xyXG4gICAgdmFyIGJhc2VUYWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdiYXNlJyk7XHJcbiAgICB2YXIgaHJlZiA9ICcnO1xyXG5cclxuICAgIGlmIChiYXNlVGFnICYmIGJhc2VUYWcuZ2V0QXR0cmlidXRlKCdocmVmJykpIHtcclxuICAgICAgaHJlZiA9IHN0cmlwSGFzaCh3aW5kb3cubG9jYXRpb24uaHJlZik7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGhyZWYgKyAnIycgKyBlbmNvZGVQYXRoKGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbikpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xyXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XHJcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xyXG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xyXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcclxuICAgICAgaWYgKCFvaykgcmV0dXJuO1xyXG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xyXG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XHJcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xyXG5cclxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XHJcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBQVVNILCBzbyB3ZSdkXHJcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXHJcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxyXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xyXG4gICAgICAgIHB1c2hIYXNoUGF0aChlbmNvZGVkUGF0aCk7XHJcbiAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xyXG4gICAgICAgIHZhciBuZXh0UGF0aHMgPSBhbGxQYXRocy5zbGljZSgwLCBwcmV2SW5kZXggKyAxKTtcclxuICAgICAgICBuZXh0UGF0aHMucHVzaChwYXRoKTtcclxuICAgICAgICBhbGxQYXRocyA9IG5leHRQYXRocztcclxuICAgICAgICBzZXRTdGF0ZSh7XHJcbiAgICAgICAgICBhY3Rpb246IGFjdGlvbixcclxuICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsICdIYXNoIGhpc3RvcnkgY2Fubm90IFBVU0ggdGhlIHNhbWUgcGF0aDsgYSBuZXcgZW50cnkgd2lsbCBub3QgYmUgYWRkZWQgdG8gdGhlIGhpc3Rvcnkgc3RhY2snKSA6IHZvaWQgMDtcclxuICAgICAgICBzZXRTdGF0ZSgpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcclxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xyXG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcclxuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcclxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XHJcbiAgICAgIGlmICghb2spIHJldHVybjtcclxuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcclxuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xyXG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcclxuXHJcbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xyXG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUkVQTEFDRSwgc28gd2UnZFxyXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxyXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cclxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcclxuICAgICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB2YXIgcHJldkluZGV4ID0gYWxsUGF0aHMuaW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcclxuICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbFBhdGhzW3ByZXZJbmRleF0gPSBwYXRoO1xyXG4gICAgICBzZXRTdGF0ZSh7XHJcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXHJcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBnbyhuKSB7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGNhbkdvV2l0aG91dFJlbG9hZCwgJ0hhc2ggaGlzdG9yeSBnbyhuKSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkIGluIHRoaXMgYnJvd3NlcicpIDogdm9pZCAwO1xyXG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcclxuICAgIGdvKC0xKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcclxuICAgIGdvKDEpO1xyXG4gIH1cclxuXHJcbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xyXG5cclxuICBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xyXG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcclxuXHJcbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSAmJiBkZWx0YSA9PT0gMSkge1xyXG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQkMSwgaGFuZGxlSGFzaENoYW5nZSk7XHJcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcclxuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50JDEsIGhhbmRsZUhhc2hDaGFuZ2UpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xyXG5cclxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcclxuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xyXG4gICAgICBwcm9tcHQgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xyXG5cclxuICAgIGlmICghaXNCbG9ja2VkKSB7XHJcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xyXG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcclxuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcclxuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XHJcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XHJcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcclxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcclxuICAgICAgdW5saXN0ZW4oKTtcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICB2YXIgaGlzdG9yeSA9IHtcclxuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXHJcbiAgICBhY3Rpb246ICdQT1AnLFxyXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcclxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXHJcbiAgICBwdXNoOiBwdXNoLFxyXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcclxuICAgIGdvOiBnbyxcclxuICAgIGdvQmFjazogZ29CYWNrLFxyXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXHJcbiAgICBibG9jazogYmxvY2ssXHJcbiAgICBsaXN0ZW46IGxpc3RlblxyXG4gIH07XHJcbiAgcmV0dXJuIGhpc3Rvcnk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNsYW1wKG4sIGxvd2VyQm91bmQsIHVwcGVyQm91bmQpIHtcclxuICByZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgobiwgbG93ZXJCb3VuZCksIHVwcGVyQm91bmQpO1xyXG59XHJcbi8qKlxyXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCBzdG9yZXMgbG9jYXRpb25zIGluIG1lbW9yeS5cclxuICovXHJcblxyXG5cclxuZnVuY3Rpb24gY3JlYXRlTWVtb3J5SGlzdG9yeShwcm9wcykge1xyXG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XHJcbiAgICBwcm9wcyA9IHt9O1xyXG4gIH1cclxuXHJcbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxyXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXHJcbiAgICAgIF9wcm9wcyRpbml0aWFsRW50cmllcyA9IF9wcm9wcy5pbml0aWFsRW50cmllcyxcclxuICAgICAgaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPT09IHZvaWQgMCA/IFsnLyddIDogX3Byb3BzJGluaXRpYWxFbnRyaWVzLFxyXG4gICAgICBfcHJvcHMkaW5pdGlhbEluZGV4ID0gX3Byb3BzLmluaXRpYWxJbmRleCxcclxuICAgICAgaW5pdGlhbEluZGV4ID0gX3Byb3BzJGluaXRpYWxJbmRleCA9PT0gdm9pZCAwID8gMCA6IF9wcm9wcyRpbml0aWFsSW5kZXgsXHJcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBfcHJvcHMua2V5TGVuZ3RoLFxyXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB2b2lkIDAgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcclxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xyXG5cclxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcclxuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XHJcblxyXG4gICAgaGlzdG9yeS5sZW5ndGggPSBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xyXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcclxuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcclxuICB9XHJcblxyXG4gIHZhciBpbmRleCA9IGNsYW1wKGluaXRpYWxJbmRleCwgMCwgaW5pdGlhbEVudHJpZXMubGVuZ3RoIC0gMSk7XHJcbiAgdmFyIGVudHJpZXMgPSBpbml0aWFsRW50cmllcy5tYXAoZnVuY3Rpb24gKGVudHJ5KSB7XHJcbiAgICByZXR1cm4gdHlwZW9mIGVudHJ5ID09PSAnc3RyaW5nJyA/IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGNyZWF0ZUtleSgpKSA6IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGVudHJ5LmtleSB8fCBjcmVhdGVLZXkoKSk7XHJcbiAgfSk7IC8vIFB1YmxpYyBpbnRlcmZhY2VcclxuXHJcbiAgdmFyIGNyZWF0ZUhyZWYgPSBjcmVhdGVQYXRoO1xyXG5cclxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XHJcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xyXG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcclxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XHJcbiAgICAgIGlmICghb2spIHJldHVybjtcclxuICAgICAgdmFyIHByZXZJbmRleCA9IGhpc3RvcnkuaW5kZXg7XHJcbiAgICAgIHZhciBuZXh0SW5kZXggPSBwcmV2SW5kZXggKyAxO1xyXG4gICAgICB2YXIgbmV4dEVudHJpZXMgPSBoaXN0b3J5LmVudHJpZXMuc2xpY2UoMCk7XHJcblxyXG4gICAgICBpZiAobmV4dEVudHJpZXMubGVuZ3RoID4gbmV4dEluZGV4KSB7XHJcbiAgICAgICAgbmV4dEVudHJpZXMuc3BsaWNlKG5leHRJbmRleCwgbmV4dEVudHJpZXMubGVuZ3RoIC0gbmV4dEluZGV4LCBsb2NhdGlvbik7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgbmV4dEVudHJpZXMucHVzaChsb2NhdGlvbik7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHNldFN0YXRlKHtcclxuICAgICAgICBhY3Rpb246IGFjdGlvbixcclxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXHJcbiAgICAgICAgaW5kZXg6IG5leHRJbmRleCxcclxuICAgICAgICBlbnRyaWVzOiBuZXh0RW50cmllc1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xyXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byByZXBsYWNlIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xyXG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcclxuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XHJcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xyXG4gICAgICBpZiAoIW9rKSByZXR1cm47XHJcbiAgICAgIGhpc3RvcnkuZW50cmllc1toaXN0b3J5LmluZGV4XSA9IGxvY2F0aW9uO1xyXG4gICAgICBzZXRTdGF0ZSh7XHJcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXHJcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBnbyhuKSB7XHJcbiAgICB2YXIgbmV4dEluZGV4ID0gY2xhbXAoaGlzdG9yeS5pbmRleCArIG4sIDAsIGhpc3RvcnkuZW50cmllcy5sZW5ndGggLSAxKTtcclxuICAgIHZhciBhY3Rpb24gPSAnUE9QJztcclxuICAgIHZhciBsb2NhdGlvbiA9IGhpc3RvcnkuZW50cmllc1tuZXh0SW5kZXhdO1xyXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcclxuICAgICAgaWYgKG9rKSB7XHJcbiAgICAgICAgc2V0U3RhdGUoe1xyXG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXHJcbiAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXHJcbiAgICAgICAgICBpbmRleDogbmV4dEluZGV4XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gTWltaWMgdGhlIGJlaGF2aW9yIG9mIERPTSBoaXN0b3JpZXMgYnlcclxuICAgICAgICAvLyBjYXVzaW5nIGEgcmVuZGVyIGFmdGVyIGEgY2FuY2VsbGVkIFBPUC5cclxuICAgICAgICBzZXRTdGF0ZSgpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcclxuICAgIGdvKC0xKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcclxuICAgIGdvKDEpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gY2FuR28obikge1xyXG4gICAgdmFyIG5leHRJbmRleCA9IGhpc3RvcnkuaW5kZXggKyBuO1xyXG4gICAgcmV0dXJuIG5leHRJbmRleCA+PSAwICYmIG5leHRJbmRleCA8IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcclxuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xyXG4gICAgICBwcm9tcHQgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcclxuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XHJcbiAgfVxyXG5cclxuICB2YXIgaGlzdG9yeSA9IHtcclxuICAgIGxlbmd0aDogZW50cmllcy5sZW5ndGgsXHJcbiAgICBhY3Rpb246ICdQT1AnLFxyXG4gICAgbG9jYXRpb246IGVudHJpZXNbaW5kZXhdLFxyXG4gICAgaW5kZXg6IGluZGV4LFxyXG4gICAgZW50cmllczogZW50cmllcyxcclxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXHJcbiAgICBwdXNoOiBwdXNoLFxyXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcclxuICAgIGdvOiBnbyxcclxuICAgIGdvQmFjazogZ29CYWNrLFxyXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXHJcbiAgICBjYW5HbzogY2FuR28sXHJcbiAgICBibG9jazogYmxvY2ssXHJcbiAgICBsaXN0ZW46IGxpc3RlblxyXG4gIH07XHJcbiAgcmV0dXJuIGhpc3Rvcnk7XHJcbn1cclxuXHJcbmV4cG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5LCBjcmVhdGVIYXNoSGlzdG9yeSwgY3JlYXRlTWVtb3J5SGlzdG9yeSwgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsLCBwYXJzZVBhdGgsIGNyZWF0ZVBhdGggfTtcclxuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xyXG5cclxudmFyIE1BWF9TSUdORURfMzFfQklUX0lOVCA9IDEwNzM3NDE4MjM7XHJcbnZhciBjb21tb25qc0dsb2JhbCA9IHR5cGVvZiBnbG9iYWxUaGlzICE9PSAndW5kZWZpbmVkJyA/IGdsb2JhbFRoaXMgOiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHdpbmRvdyA6IHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnID8gZ2xvYmFsIDoge307XHJcblxyXG5mdW5jdGlvbiBnZXRVbmlxdWVJZCgpIHtcclxuICB2YXIga2V5ID0gJ19fZ2xvYmFsX3VuaXF1ZV9pZF9fJztcclxuICByZXR1cm4gY29tbW9uanNHbG9iYWxba2V5XSA9IChjb21tb25qc0dsb2JhbFtrZXldIHx8IDApICsgMTtcclxufVxyXG5cclxuZnVuY3Rpb24gb2JqZWN0SXMoeCwgeSkge1xyXG4gIGlmICh4ID09PSB5KSB7XHJcbiAgICByZXR1cm4geCAhPT0gMCB8fCAxIC8geCA9PT0gMSAvIHk7XHJcbiAgfSBlbHNlIHtcclxuICAgIHJldHVybiB4ICE9PSB4ICYmIHkgIT09IHk7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVFdmVudEVtaXR0ZXIodmFsdWUpIHtcclxuICB2YXIgaGFuZGxlcnMgPSBbXTtcclxuICByZXR1cm4ge1xyXG4gICAgb246IGZ1bmN0aW9uIG9uKGhhbmRsZXIpIHtcclxuICAgICAgaGFuZGxlcnMucHVzaChoYW5kbGVyKTtcclxuICAgIH0sXHJcbiAgICBvZmY6IGZ1bmN0aW9uIG9mZihoYW5kbGVyKSB7XHJcbiAgICAgIGhhbmRsZXJzID0gaGFuZGxlcnMuZmlsdGVyKGZ1bmN0aW9uIChoKSB7XHJcbiAgICAgICAgcmV0dXJuIGggIT09IGhhbmRsZXI7XHJcbiAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xyXG4gICAgICByZXR1cm4gdmFsdWU7XHJcbiAgICB9LFxyXG4gICAgc2V0OiBmdW5jdGlvbiBzZXQobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XHJcbiAgICAgIHZhbHVlID0gbmV3VmFsdWU7XHJcbiAgICAgIGhhbmRsZXJzLmZvckVhY2goZnVuY3Rpb24gKGhhbmRsZXIpIHtcclxuICAgICAgICByZXR1cm4gaGFuZGxlcih2YWx1ZSwgY2hhbmdlZEJpdHMpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9O1xyXG59XHJcblxyXG5mdW5jdGlvbiBvbmx5Q2hpbGQoY2hpbGRyZW4pIHtcclxuICByZXR1cm4gQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlblswXSA6IGNoaWxkcmVuO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVSZWFjdENvbnRleHQoZGVmYXVsdFZhbHVlLCBjYWxjdWxhdGVDaGFuZ2VkQml0cykge1xyXG4gIHZhciBfUHJvdmlkZXIkY2hpbGRDb250ZXgsIF9Db25zdW1lciRjb250ZXh0VHlwZTtcclxuXHJcbiAgdmFyIGNvbnRleHRQcm9wID0gJ19fY3JlYXRlLXJlYWN0LWNvbnRleHQtJyArIGdldFVuaXF1ZUlkKCkgKyAnX18nO1xyXG5cclxuICB2YXIgUHJvdmlkZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcclxuICAgIF9pbmhlcml0c0xvb3NlKFByb3ZpZGVyLCBfQ29tcG9uZW50KTtcclxuXHJcbiAgICBmdW5jdGlvbiBQcm92aWRlcigpIHtcclxuICAgICAgdmFyIF90aGlzO1xyXG5cclxuICAgICAgX3RoaXMgPSBfQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuICAgICAgX3RoaXMuZW1pdHRlciA9IGNyZWF0ZUV2ZW50RW1pdHRlcihfdGhpcy5wcm9wcy52YWx1ZSk7XHJcbiAgICAgIHJldHVybiBfdGhpcztcclxuICAgIH1cclxuXHJcbiAgICB2YXIgX3Byb3RvID0gUHJvdmlkZXIucHJvdG90eXBlO1xyXG5cclxuICAgIF9wcm90by5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XHJcbiAgICAgIHZhciBfcmVmO1xyXG5cclxuICAgICAgcmV0dXJuIF9yZWYgPSB7fSwgX3JlZltjb250ZXh0UHJvcF0gPSB0aGlzLmVtaXR0ZXIsIF9yZWY7XHJcbiAgICB9O1xyXG5cclxuICAgIF9wcm90by5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcclxuICAgICAgaWYgKHRoaXMucHJvcHMudmFsdWUgIT09IG5leHRQcm9wcy52YWx1ZSkge1xyXG4gICAgICAgIHZhciBvbGRWYWx1ZSA9IHRoaXMucHJvcHMudmFsdWU7XHJcbiAgICAgICAgdmFyIG5ld1ZhbHVlID0gbmV4dFByb3BzLnZhbHVlO1xyXG4gICAgICAgIHZhciBjaGFuZ2VkQml0cztcclxuXHJcbiAgICAgICAgaWYgKG9iamVjdElzKG9sZFZhbHVlLCBuZXdWYWx1ZSkpIHtcclxuICAgICAgICAgIGNoYW5nZWRCaXRzID0gMDtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgY2hhbmdlZEJpdHMgPSB0eXBlb2YgY2FsY3VsYXRlQ2hhbmdlZEJpdHMgPT09ICdmdW5jdGlvbicgPyBjYWxjdWxhdGVDaGFuZ2VkQml0cyhvbGRWYWx1ZSwgbmV3VmFsdWUpIDogTUFYX1NJR05FRF8zMV9CSVRfSU5UO1xyXG5cclxuICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XHJcbiAgICAgICAgICAgIHdhcm5pbmcoKGNoYW5nZWRCaXRzICYgTUFYX1NJR05FRF8zMV9CSVRfSU5UKSA9PT0gY2hhbmdlZEJpdHMsICdjYWxjdWxhdGVDaGFuZ2VkQml0czogRXhwZWN0ZWQgdGhlIHJldHVybiB2YWx1ZSB0byBiZSBhICcgKyAnMzEtYml0IGludGVnZXIuIEluc3RlYWQgcmVjZWl2ZWQ6ICcgKyBjaGFuZ2VkQml0cyk7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgY2hhbmdlZEJpdHMgfD0gMDtcclxuXHJcbiAgICAgICAgICBpZiAoY2hhbmdlZEJpdHMgIT09IDApIHtcclxuICAgICAgICAgICAgdGhpcy5lbWl0dGVyLnNldChuZXh0UHJvcHMudmFsdWUsIGNoYW5nZWRCaXRzKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcclxuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY2hpbGRyZW47XHJcbiAgICB9O1xyXG5cclxuICAgIHJldHVybiBQcm92aWRlcjtcclxuICB9KENvbXBvbmVudCk7XHJcblxyXG4gIFByb3ZpZGVyLmNoaWxkQ29udGV4dFR5cGVzID0gKF9Qcm92aWRlciRjaGlsZENvbnRleCA9IHt9LCBfUHJvdmlkZXIkY2hpbGRDb250ZXhbY29udGV4dFByb3BdID0gUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLCBfUHJvdmlkZXIkY2hpbGRDb250ZXgpO1xyXG5cclxuICB2YXIgQ29uc3VtZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9Db21wb25lbnQyKSB7XHJcbiAgICBfaW5oZXJpdHNMb29zZShDb25zdW1lciwgX0NvbXBvbmVudDIpO1xyXG5cclxuICAgIGZ1bmN0aW9uIENvbnN1bWVyKCkge1xyXG4gICAgICB2YXIgX3RoaXMyO1xyXG5cclxuICAgICAgX3RoaXMyID0gX0NvbXBvbmVudDIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xyXG4gICAgICBfdGhpczIuc3RhdGUgPSB7XHJcbiAgICAgICAgdmFsdWU6IF90aGlzMi5nZXRWYWx1ZSgpXHJcbiAgICAgIH07XHJcblxyXG4gICAgICBfdGhpczIub25VcGRhdGUgPSBmdW5jdGlvbiAobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XHJcbiAgICAgICAgdmFyIG9ic2VydmVkQml0cyA9IF90aGlzMi5vYnNlcnZlZEJpdHMgfCAwO1xyXG5cclxuICAgICAgICBpZiAoKG9ic2VydmVkQml0cyAmIGNoYW5nZWRCaXRzKSAhPT0gMCkge1xyXG4gICAgICAgICAgX3RoaXMyLnNldFN0YXRlKHtcclxuICAgICAgICAgICAgdmFsdWU6IF90aGlzMi5nZXRWYWx1ZSgpXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgIH07XHJcblxyXG4gICAgICByZXR1cm4gX3RoaXMyO1xyXG4gICAgfVxyXG5cclxuICAgIHZhciBfcHJvdG8yID0gQ29uc3VtZXIucHJvdG90eXBlO1xyXG5cclxuICAgIF9wcm90bzIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XHJcbiAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSBuZXh0UHJvcHMub2JzZXJ2ZWRCaXRzO1xyXG4gICAgICB0aGlzLm9ic2VydmVkQml0cyA9IG9ic2VydmVkQml0cyA9PT0gdW5kZWZpbmVkIHx8IG9ic2VydmVkQml0cyA9PT0gbnVsbCA/IE1BWF9TSUdORURfMzFfQklUX0lOVCA6IG9ic2VydmVkQml0cztcclxuICAgIH07XHJcblxyXG4gICAgX3Byb3RvMi5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xyXG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xyXG4gICAgICAgIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0ub24odGhpcy5vblVwZGF0ZSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSB0aGlzLnByb3BzLm9ic2VydmVkQml0cztcclxuICAgICAgdGhpcy5vYnNlcnZlZEJpdHMgPSBvYnNlcnZlZEJpdHMgPT09IHVuZGVmaW5lZCB8fCBvYnNlcnZlZEJpdHMgPT09IG51bGwgPyBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgOiBvYnNlcnZlZEJpdHM7XHJcbiAgICB9O1xyXG5cclxuICAgIF9wcm90bzIuY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcclxuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcclxuICAgICAgICB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLm9mZih0aGlzLm9uVXBkYXRlKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBfcHJvdG8yLmdldFZhbHVlID0gZnVuY3Rpb24gZ2V0VmFsdWUoKSB7XHJcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0uZ2V0KCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBfcHJvdG8yLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcclxuICAgICAgcmV0dXJuIG9ubHlDaGlsZCh0aGlzLnByb3BzLmNoaWxkcmVuKSh0aGlzLnN0YXRlLnZhbHVlKTtcclxuICAgIH07XHJcblxyXG4gICAgcmV0dXJuIENvbnN1bWVyO1xyXG4gIH0oQ29tcG9uZW50KTtcclxuXHJcbiAgQ29uc3VtZXIuY29udGV4dFR5cGVzID0gKF9Db25zdW1lciRjb250ZXh0VHlwZSA9IHt9LCBfQ29uc3VtZXIkY29udGV4dFR5cGVbY29udGV4dFByb3BdID0gUHJvcFR5cGVzLm9iamVjdCwgX0NvbnN1bWVyJGNvbnRleHRUeXBlKTtcclxuICByZXR1cm4ge1xyXG4gICAgUHJvdmlkZXI6IFByb3ZpZGVyLFxyXG4gICAgQ29uc3VtZXI6IENvbnN1bWVyXHJcbiAgfTtcclxufVxyXG5cclxudmFyIGluZGV4ID0gUmVhY3QuY3JlYXRlQ29udGV4dCB8fCBjcmVhdGVSZWFjdENvbnRleHQ7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBpbmRleDtcclxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkge1xyXG4gIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xyXG4gIHZhciB0YXJnZXQgPSB7fTtcclxuICB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XHJcbiAgdmFyIGtleSwgaTtcclxuXHJcbiAgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHtcclxuICAgIGtleSA9IHNvdXJjZUtleXNbaV07XHJcbiAgICBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlO1xyXG4gICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcclxuICB9XHJcblxyXG4gIHJldHVybiB0YXJnZXQ7XHJcbn0iLCJpbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XHJcbmltcG9ydCB7IGNyZWF0ZU1lbW9yeUhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCwgY3JlYXRlUGF0aCB9IGZyb20gJ2hpc3RvcnknO1xyXG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xyXG5pbXBvcnQgY3JlYXRlQ29udGV4dCBmcm9tICdtaW5pLWNyZWF0ZS1yZWFjdC1jb250ZXh0JztcclxuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XHJcbmltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcclxuaW1wb3J0IHBhdGhUb1JlZ2V4cCBmcm9tICdwYXRoLXRvLXJlZ2V4cCc7XHJcbmltcG9ydCB7IGlzVmFsaWRFbGVtZW50VHlwZSB9IGZyb20gJ3JlYWN0LWlzJztcclxuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UnO1xyXG5pbXBvcnQgaG9pc3RTdGF0aWNzIGZyb20gJ2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzJztcclxuXHJcbi8vIFRPRE86IFJlcGxhY2Ugd2l0aCBSZWFjdC5jcmVhdGVDb250ZXh0IG9uY2Ugd2UgY2FuIGFzc3VtZSBSZWFjdCAxNitcclxuXHJcbnZhciBjcmVhdGVOYW1lZENvbnRleHQgPSBmdW5jdGlvbiBjcmVhdGVOYW1lZENvbnRleHQobmFtZSkge1xyXG4gIHZhciBjb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xyXG4gIGNvbnRleHQuZGlzcGxheU5hbWUgPSBuYW1lO1xyXG4gIHJldHVybiBjb250ZXh0O1xyXG59O1xyXG5cclxudmFyIGhpc3RvcnlDb250ZXh0ID1cclxuLyojX19QVVJFX18qL1xyXG5jcmVhdGVOYW1lZENvbnRleHQoXCJSb3V0ZXItSGlzdG9yeVwiKTtcclxuXHJcbi8vIFRPRE86IFJlcGxhY2Ugd2l0aCBSZWFjdC5jcmVhdGVDb250ZXh0IG9uY2Ugd2UgY2FuIGFzc3VtZSBSZWFjdCAxNitcclxuXHJcbnZhciBjcmVhdGVOYW1lZENvbnRleHQkMSA9IGZ1bmN0aW9uIGNyZWF0ZU5hbWVkQ29udGV4dChuYW1lKSB7XHJcbiAgdmFyIGNvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XHJcbiAgY29udGV4dC5kaXNwbGF5TmFtZSA9IG5hbWU7XHJcbiAgcmV0dXJuIGNvbnRleHQ7XHJcbn07XHJcblxyXG52YXIgY29udGV4dCA9XHJcbi8qI19fUFVSRV9fKi9cclxuY3JlYXRlTmFtZWRDb250ZXh0JDEoXCJSb3V0ZXJcIik7XHJcblxyXG4vKipcclxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHB1dHRpbmcgaGlzdG9yeSBvbiBjb250ZXh0LlxyXG4gKi9cclxuXHJcbnZhciBSb3V0ZXIgPVxyXG4vKiNfX1BVUkVfXyovXHJcbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XHJcbiAgX2luaGVyaXRzTG9vc2UoUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcclxuXHJcbiAgUm91dGVyLmNvbXB1dGVSb290TWF0Y2ggPSBmdW5jdGlvbiBjb21wdXRlUm9vdE1hdGNoKHBhdGhuYW1lKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBwYXRoOiBcIi9cIixcclxuICAgICAgdXJsOiBcIi9cIixcclxuICAgICAgcGFyYW1zOiB7fSxcclxuICAgICAgaXNFeGFjdDogcGF0aG5hbWUgPT09IFwiL1wiXHJcbiAgICB9O1xyXG4gIH07XHJcblxyXG4gIGZ1bmN0aW9uIFJvdXRlcihwcm9wcykge1xyXG4gICAgdmFyIF90aGlzO1xyXG5cclxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzKSB8fCB0aGlzO1xyXG4gICAgX3RoaXMuc3RhdGUgPSB7XHJcbiAgICAgIGxvY2F0aW9uOiBwcm9wcy5oaXN0b3J5LmxvY2F0aW9uXHJcbiAgICB9OyAvLyBUaGlzIGlzIGEgYml0IG9mIGEgaGFjay4gV2UgaGF2ZSB0byBzdGFydCBsaXN0ZW5pbmcgZm9yIGxvY2F0aW9uXHJcbiAgICAvLyBjaGFuZ2VzIGhlcmUgaW4gdGhlIGNvbnN0cnVjdG9yIGluIGNhc2UgdGhlcmUgYXJlIGFueSA8UmVkaXJlY3Q+c1xyXG4gICAgLy8gb24gdGhlIGluaXRpYWwgcmVuZGVyLiBJZiB0aGVyZSBhcmUsIHRoZXkgd2lsbCByZXBsYWNlL3B1c2ggd2hlblxyXG4gICAgLy8gdGhleSBtb3VudCBhbmQgc2luY2UgY0RNIGZpcmVzIGluIGNoaWxkcmVuIGJlZm9yZSBwYXJlbnRzLCB3ZSBtYXlcclxuICAgIC8vIGdldCBhIG5ldyBsb2NhdGlvbiBiZWZvcmUgdGhlIDxSb3V0ZXI+IGlzIG1vdW50ZWQuXHJcblxyXG4gICAgX3RoaXMuX2lzTW91bnRlZCA9IGZhbHNlO1xyXG4gICAgX3RoaXMuX3BlbmRpbmdMb2NhdGlvbiA9IG51bGw7XHJcblxyXG4gICAgaWYgKCFwcm9wcy5zdGF0aWNDb250ZXh0KSB7XHJcbiAgICAgIF90aGlzLnVubGlzdGVuID0gcHJvcHMuaGlzdG9yeS5saXN0ZW4oZnVuY3Rpb24gKGxvY2F0aW9uKSB7XHJcbiAgICAgICAgaWYgKF90aGlzLl9pc01vdW50ZWQpIHtcclxuICAgICAgICAgIF90aGlzLnNldFN0YXRlKHtcclxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgX3RoaXMuX3BlbmRpbmdMb2NhdGlvbiA9IGxvY2F0aW9uO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIF90aGlzO1xyXG4gIH1cclxuXHJcbiAgdmFyIF9wcm90byA9IFJvdXRlci5wcm90b3R5cGU7XHJcblxyXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xyXG4gICAgdGhpcy5faXNNb3VudGVkID0gdHJ1ZTtcclxuXHJcbiAgICBpZiAodGhpcy5fcGVuZGluZ0xvY2F0aW9uKSB7XHJcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xyXG4gICAgICAgIGxvY2F0aW9uOiB0aGlzLl9wZW5kaW5nTG9jYXRpb25cclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XHJcbiAgICBpZiAodGhpcy51bmxpc3RlbikgdGhpcy51bmxpc3RlbigpO1xyXG4gIH07XHJcblxyXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XHJcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LlByb3ZpZGVyLCB7XHJcbiAgICAgIHZhbHVlOiB7XHJcbiAgICAgICAgaGlzdG9yeTogdGhpcy5wcm9wcy5oaXN0b3J5LFxyXG4gICAgICAgIGxvY2F0aW9uOiB0aGlzLnN0YXRlLmxvY2F0aW9uLFxyXG4gICAgICAgIG1hdGNoOiBSb3V0ZXIuY29tcHV0ZVJvb3RNYXRjaCh0aGlzLnN0YXRlLmxvY2F0aW9uLnBhdGhuYW1lKSxcclxuICAgICAgICBzdGF0aWNDb250ZXh0OiB0aGlzLnByb3BzLnN0YXRpY0NvbnRleHRcclxuICAgICAgfVxyXG4gICAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudChoaXN0b3J5Q29udGV4dC5Qcm92aWRlciwge1xyXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlbiB8fCBudWxsLFxyXG4gICAgICB2YWx1ZTogdGhpcy5wcm9wcy5oaXN0b3J5XHJcbiAgICB9KSk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIFJvdXRlcjtcclxufShSZWFjdC5Db21wb25lbnQpO1xyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xyXG4gIFJvdXRlci5wcm9wVHlwZXMgPSB7XHJcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXHJcbiAgICBoaXN0b3J5OiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXHJcbiAgICBzdGF0aWNDb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0XHJcbiAgfTtcclxuXHJcbiAgUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHByZXZQcm9wcy5oaXN0b3J5ID09PSB0aGlzLnByb3BzLmhpc3RvcnksIFwiWW91IGNhbm5vdCBjaGFuZ2UgPFJvdXRlciBoaXN0b3J5PlwiKSA6IHZvaWQgMDtcclxuICB9O1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCBzdG9yZXMgbG9jYXRpb24gaW4gbWVtb3J5LlxyXG4gKi9cclxuXHJcbnZhciBNZW1vcnlSb3V0ZXIgPVxyXG4vKiNfX1BVUkVfXyovXHJcbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XHJcbiAgX2luaGVyaXRzTG9vc2UoTWVtb3J5Um91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcclxuXHJcbiAgZnVuY3Rpb24gTWVtb3J5Um91dGVyKCkge1xyXG4gICAgdmFyIF90aGlzO1xyXG5cclxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xyXG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xyXG4gICAgfVxyXG5cclxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XHJcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlTWVtb3J5SGlzdG9yeShfdGhpcy5wcm9wcyk7XHJcbiAgICByZXR1cm4gX3RoaXM7XHJcbiAgfVxyXG5cclxuICB2YXIgX3Byb3RvID0gTWVtb3J5Um91dGVyLnByb3RvdHlwZTtcclxuXHJcbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcclxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xyXG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXHJcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuXHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICByZXR1cm4gTWVtb3J5Um91dGVyO1xyXG59KFJlYWN0LkNvbXBvbmVudCk7XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgTWVtb3J5Um91dGVyLnByb3BUeXBlcyA9IHtcclxuICAgIGluaXRpYWxFbnRyaWVzOiBQcm9wVHlwZXMuYXJyYXksXHJcbiAgICBpbml0aWFsSW5kZXg6IFByb3BUeXBlcy5udW1iZXIsXHJcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcclxuICAgIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlcixcclxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZVxyXG4gIH07XHJcblxyXG4gIE1lbW9yeVJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPE1lbW9yeVJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IE1lbW9yeVJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xyXG4gIH07XHJcbn1cclxuXHJcbnZhciBMaWZlY3ljbGUgPVxyXG4vKiNfX1BVUkVfXyovXHJcbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XHJcbiAgX2luaGVyaXRzTG9vc2UoTGlmZWN5Y2xlLCBfUmVhY3QkQ29tcG9uZW50KTtcclxuXHJcbiAgZnVuY3Rpb24gTGlmZWN5Y2xlKCkge1xyXG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xyXG4gIH1cclxuXHJcbiAgdmFyIF9wcm90byA9IExpZmVjeWNsZS5wcm90b3R5cGU7XHJcblxyXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xyXG4gICAgaWYgKHRoaXMucHJvcHMub25Nb3VudCkgdGhpcy5wcm9wcy5vbk1vdW50LmNhbGwodGhpcywgdGhpcyk7XHJcbiAgfTtcclxuXHJcbiAgX3Byb3RvLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcclxuICAgIGlmICh0aGlzLnByb3BzLm9uVXBkYXRlKSB0aGlzLnByb3BzLm9uVXBkYXRlLmNhbGwodGhpcywgdGhpcywgcHJldlByb3BzKTtcclxuICB9O1xyXG5cclxuICBfcHJvdG8uY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcclxuICAgIGlmICh0aGlzLnByb3BzLm9uVW5tb3VudCkgdGhpcy5wcm9wcy5vblVubW91bnQuY2FsbCh0aGlzLCB0aGlzKTtcclxuICB9O1xyXG5cclxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIExpZmVjeWNsZTtcclxufShSZWFjdC5Db21wb25lbnQpO1xyXG5cclxuLyoqXHJcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBwcm9tcHRpbmcgdGhlIHVzZXIgYmVmb3JlIG5hdmlnYXRpbmcgYXdheSBmcm9tIGEgc2NyZWVuLlxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIFByb21wdChfcmVmKSB7XHJcbiAgdmFyIG1lc3NhZ2UgPSBfcmVmLm1lc3NhZ2UsXHJcbiAgICAgIF9yZWYkd2hlbiA9IF9yZWYud2hlbixcclxuICAgICAgd2hlbiA9IF9yZWYkd2hlbiA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9yZWYkd2hlbjtcclxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xyXG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxQcm9tcHQ+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XHJcbiAgICBpZiAoIXdoZW4gfHwgY29udGV4dC5zdGF0aWNDb250ZXh0KSByZXR1cm4gbnVsbDtcclxuICAgIHZhciBtZXRob2QgPSBjb250ZXh0Lmhpc3RvcnkuYmxvY2s7XHJcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMaWZlY3ljbGUsIHtcclxuICAgICAgb25Nb3VudDogZnVuY3Rpb24gb25Nb3VudChzZWxmKSB7XHJcbiAgICAgICAgc2VsZi5yZWxlYXNlID0gbWV0aG9kKG1lc3NhZ2UpO1xyXG4gICAgICB9LFxyXG4gICAgICBvblVwZGF0ZTogZnVuY3Rpb24gb25VcGRhdGUoc2VsZiwgcHJldlByb3BzKSB7XHJcbiAgICAgICAgaWYgKHByZXZQcm9wcy5tZXNzYWdlICE9PSBtZXNzYWdlKSB7XHJcbiAgICAgICAgICBzZWxmLnJlbGVhc2UoKTtcclxuICAgICAgICAgIHNlbGYucmVsZWFzZSA9IG1ldGhvZChtZXNzYWdlKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICAgIG9uVW5tb3VudDogZnVuY3Rpb24gb25Vbm1vdW50KHNlbGYpIHtcclxuICAgICAgICBzZWxmLnJlbGVhc2UoKTtcclxuICAgICAgfSxcclxuICAgICAgbWVzc2FnZTogbWVzc2FnZVxyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn1cclxuXHJcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICB2YXIgbWVzc2FnZVR5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLnN0cmluZ10pO1xyXG4gIFByb21wdC5wcm9wVHlwZXMgPSB7XHJcbiAgICB3aGVuOiBQcm9wVHlwZXMuYm9vbCxcclxuICAgIG1lc3NhZ2U6IG1lc3NhZ2VUeXBlLmlzUmVxdWlyZWRcclxuICB9O1xyXG59XHJcblxyXG52YXIgY2FjaGUgPSB7fTtcclxudmFyIGNhY2hlTGltaXQgPSAxMDAwMDtcclxudmFyIGNhY2hlQ291bnQgPSAwO1xyXG5cclxuZnVuY3Rpb24gY29tcGlsZVBhdGgocGF0aCkge1xyXG4gIGlmIChjYWNoZVtwYXRoXSkgcmV0dXJuIGNhY2hlW3BhdGhdO1xyXG4gIHZhciBnZW5lcmF0b3IgPSBwYXRoVG9SZWdleHAuY29tcGlsZShwYXRoKTtcclxuXHJcbiAgaWYgKGNhY2hlQ291bnQgPCBjYWNoZUxpbWl0KSB7XHJcbiAgICBjYWNoZVtwYXRoXSA9IGdlbmVyYXRvcjtcclxuICAgIGNhY2hlQ291bnQrKztcclxuICB9XHJcblxyXG4gIHJldHVybiBnZW5lcmF0b3I7XHJcbn1cclxuLyoqXHJcbiAqIFB1YmxpYyBBUEkgZm9yIGdlbmVyYXRpbmcgYSBVUkwgcGF0aG5hbWUgZnJvbSBhIHBhdGggYW5kIHBhcmFtZXRlcnMuXHJcbiAqL1xyXG5cclxuXHJcbmZ1bmN0aW9uIGdlbmVyYXRlUGF0aChwYXRoLCBwYXJhbXMpIHtcclxuICBpZiAocGF0aCA9PT0gdm9pZCAwKSB7XHJcbiAgICBwYXRoID0gXCIvXCI7XHJcbiAgfVxyXG5cclxuICBpZiAocGFyYW1zID09PSB2b2lkIDApIHtcclxuICAgIHBhcmFtcyA9IHt9O1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHBhdGggPT09IFwiL1wiID8gcGF0aCA6IGNvbXBpbGVQYXRoKHBhdGgpKHBhcmFtcywge1xyXG4gICAgcHJldHR5OiB0cnVlXHJcbiAgfSk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgbmF2aWdhdGluZyBwcm9ncmFtbWF0aWNhbGx5IHdpdGggYSBjb21wb25lbnQuXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gUmVkaXJlY3QoX3JlZikge1xyXG4gIHZhciBjb21wdXRlZE1hdGNoID0gX3JlZi5jb21wdXRlZE1hdGNoLFxyXG4gICAgICB0byA9IF9yZWYudG8sXHJcbiAgICAgIF9yZWYkcHVzaCA9IF9yZWYucHVzaCxcclxuICAgICAgcHVzaCA9IF9yZWYkcHVzaCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcmVmJHB1c2g7XHJcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcclxuICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8UmVkaXJlY3Q+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XHJcbiAgICB2YXIgaGlzdG9yeSA9IGNvbnRleHQuaGlzdG9yeSxcclxuICAgICAgICBzdGF0aWNDb250ZXh0ID0gY29udGV4dC5zdGF0aWNDb250ZXh0O1xyXG4gICAgdmFyIG1ldGhvZCA9IHB1c2ggPyBoaXN0b3J5LnB1c2ggOiBoaXN0b3J5LnJlcGxhY2U7XHJcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihjb21wdXRlZE1hdGNoID8gdHlwZW9mIHRvID09PSBcInN0cmluZ1wiID8gZ2VuZXJhdGVQYXRoKHRvLCBjb21wdXRlZE1hdGNoLnBhcmFtcykgOiBfZXh0ZW5kcyh7fSwgdG8sIHtcclxuICAgICAgcGF0aG5hbWU6IGdlbmVyYXRlUGF0aCh0by5wYXRobmFtZSwgY29tcHV0ZWRNYXRjaC5wYXJhbXMpXHJcbiAgICB9KSA6IHRvKTsgLy8gV2hlbiByZW5kZXJpbmcgaW4gYSBzdGF0aWMgY29udGV4dCxcclxuICAgIC8vIHNldCB0aGUgbmV3IGxvY2F0aW9uIGltbWVkaWF0ZWx5LlxyXG5cclxuICAgIGlmIChzdGF0aWNDb250ZXh0KSB7XHJcbiAgICAgIG1ldGhvZChsb2NhdGlvbik7XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpZmVjeWNsZSwge1xyXG4gICAgICBvbk1vdW50OiBmdW5jdGlvbiBvbk1vdW50KCkge1xyXG4gICAgICAgIG1ldGhvZChsb2NhdGlvbik7XHJcbiAgICAgIH0sXHJcbiAgICAgIG9uVXBkYXRlOiBmdW5jdGlvbiBvblVwZGF0ZShzZWxmLCBwcmV2UHJvcHMpIHtcclxuICAgICAgICB2YXIgcHJldkxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocHJldlByb3BzLnRvKTtcclxuXHJcbiAgICAgICAgaWYgKCFsb2NhdGlvbnNBcmVFcXVhbChwcmV2TG9jYXRpb24sIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xyXG4gICAgICAgICAga2V5OiBwcmV2TG9jYXRpb24ua2V5XHJcbiAgICAgICAgfSkpKSB7XHJcbiAgICAgICAgICBtZXRob2QobG9jYXRpb24pO1xyXG4gICAgICAgIH1cclxuICAgICAgfSxcclxuICAgICAgdG86IHRvXHJcbiAgICB9KTtcclxuICB9KTtcclxufVxyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xyXG4gIFJlZGlyZWN0LnByb3BUeXBlcyA9IHtcclxuICAgIHB1c2g6IFByb3BUeXBlcy5ib29sLFxyXG4gICAgZnJvbTogUHJvcFR5cGVzLnN0cmluZyxcclxuICAgIHRvOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSkuaXNSZXF1aXJlZFxyXG4gIH07XHJcbn1cclxuXHJcbnZhciBjYWNoZSQxID0ge307XHJcbnZhciBjYWNoZUxpbWl0JDEgPSAxMDAwMDtcclxudmFyIGNhY2hlQ291bnQkMSA9IDA7XHJcblxyXG5mdW5jdGlvbiBjb21waWxlUGF0aCQxKHBhdGgsIG9wdGlvbnMpIHtcclxuICB2YXIgY2FjaGVLZXkgPSBcIlwiICsgb3B0aW9ucy5lbmQgKyBvcHRpb25zLnN0cmljdCArIG9wdGlvbnMuc2Vuc2l0aXZlO1xyXG4gIHZhciBwYXRoQ2FjaGUgPSBjYWNoZSQxW2NhY2hlS2V5XSB8fCAoY2FjaGUkMVtjYWNoZUtleV0gPSB7fSk7XHJcbiAgaWYgKHBhdGhDYWNoZVtwYXRoXSkgcmV0dXJuIHBhdGhDYWNoZVtwYXRoXTtcclxuICB2YXIga2V5cyA9IFtdO1xyXG4gIHZhciByZWdleHAgPSBwYXRoVG9SZWdleHAocGF0aCwga2V5cywgb3B0aW9ucyk7XHJcbiAgdmFyIHJlc3VsdCA9IHtcclxuICAgIHJlZ2V4cDogcmVnZXhwLFxyXG4gICAga2V5czoga2V5c1xyXG4gIH07XHJcblxyXG4gIGlmIChjYWNoZUNvdW50JDEgPCBjYWNoZUxpbWl0JDEpIHtcclxuICAgIHBhdGhDYWNoZVtwYXRoXSA9IHJlc3VsdDtcclxuICAgIGNhY2hlQ291bnQkMSsrO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHJlc3VsdDtcclxufVxyXG4vKipcclxuICogUHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBVUkwgcGF0aG5hbWUgdG8gYSBwYXRoLlxyXG4gKi9cclxuXHJcblxyXG5mdW5jdGlvbiBtYXRjaFBhdGgocGF0aG5hbWUsIG9wdGlvbnMpIHtcclxuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XHJcbiAgICBvcHRpb25zID0ge307XHJcbiAgfVxyXG5cclxuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09IFwic3RyaW5nXCIgfHwgQXJyYXkuaXNBcnJheShvcHRpb25zKSkge1xyXG4gICAgb3B0aW9ucyA9IHtcclxuICAgICAgcGF0aDogb3B0aW9uc1xyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHZhciBfb3B0aW9ucyA9IG9wdGlvbnMsXHJcbiAgICAgIHBhdGggPSBfb3B0aW9ucy5wYXRoLFxyXG4gICAgICBfb3B0aW9ucyRleGFjdCA9IF9vcHRpb25zLmV4YWN0LFxyXG4gICAgICBleGFjdCA9IF9vcHRpb25zJGV4YWN0ID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJGV4YWN0LFxyXG4gICAgICBfb3B0aW9ucyRzdHJpY3QgPSBfb3B0aW9ucy5zdHJpY3QsXHJcbiAgICAgIHN0cmljdCA9IF9vcHRpb25zJHN0cmljdCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRzdHJpY3QsXHJcbiAgICAgIF9vcHRpb25zJHNlbnNpdGl2ZSA9IF9vcHRpb25zLnNlbnNpdGl2ZSxcclxuICAgICAgc2Vuc2l0aXZlID0gX29wdGlvbnMkc2Vuc2l0aXZlID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJHNlbnNpdGl2ZTtcclxuICB2YXIgcGF0aHMgPSBbXS5jb25jYXQocGF0aCk7XHJcbiAgcmV0dXJuIHBhdGhzLnJlZHVjZShmdW5jdGlvbiAobWF0Y2hlZCwgcGF0aCkge1xyXG4gICAgaWYgKCFwYXRoICYmIHBhdGggIT09IFwiXCIpIHJldHVybiBudWxsO1xyXG4gICAgaWYgKG1hdGNoZWQpIHJldHVybiBtYXRjaGVkO1xyXG5cclxuICAgIHZhciBfY29tcGlsZVBhdGggPSBjb21waWxlUGF0aCQxKHBhdGgsIHtcclxuICAgICAgZW5kOiBleGFjdCxcclxuICAgICAgc3RyaWN0OiBzdHJpY3QsXHJcbiAgICAgIHNlbnNpdGl2ZTogc2Vuc2l0aXZlXHJcbiAgICB9KSxcclxuICAgICAgICByZWdleHAgPSBfY29tcGlsZVBhdGgucmVnZXhwLFxyXG4gICAgICAgIGtleXMgPSBfY29tcGlsZVBhdGgua2V5cztcclxuXHJcbiAgICB2YXIgbWF0Y2ggPSByZWdleHAuZXhlYyhwYXRobmFtZSk7XHJcbiAgICBpZiAoIW1hdGNoKSByZXR1cm4gbnVsbDtcclxuICAgIHZhciB1cmwgPSBtYXRjaFswXSxcclxuICAgICAgICB2YWx1ZXMgPSBtYXRjaC5zbGljZSgxKTtcclxuICAgIHZhciBpc0V4YWN0ID0gcGF0aG5hbWUgPT09IHVybDtcclxuICAgIGlmIChleGFjdCAmJiAhaXNFeGFjdCkgcmV0dXJuIG51bGw7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBwYXRoOiBwYXRoLFxyXG4gICAgICAvLyB0aGUgcGF0aCB1c2VkIHRvIG1hdGNoXHJcbiAgICAgIHVybDogcGF0aCA9PT0gXCIvXCIgJiYgdXJsID09PSBcIlwiID8gXCIvXCIgOiB1cmwsXHJcbiAgICAgIC8vIHRoZSBtYXRjaGVkIHBvcnRpb24gb2YgdGhlIFVSTFxyXG4gICAgICBpc0V4YWN0OiBpc0V4YWN0LFxyXG4gICAgICAvLyB3aGV0aGVyIG9yIG5vdCB3ZSBtYXRjaGVkIGV4YWN0bHlcclxuICAgICAgcGFyYW1zOiBrZXlzLnJlZHVjZShmdW5jdGlvbiAobWVtbywga2V5LCBpbmRleCkge1xyXG4gICAgICAgIG1lbW9ba2V5Lm5hbWVdID0gdmFsdWVzW2luZGV4XTtcclxuICAgICAgICByZXR1cm4gbWVtbztcclxuICAgICAgfSwge30pXHJcbiAgICB9O1xyXG4gIH0sIG51bGwpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBpc0VtcHR5Q2hpbGRyZW4oY2hpbGRyZW4pIHtcclxuICByZXR1cm4gUmVhY3QuQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pID09PSAwO1xyXG59XHJcblxyXG5mdW5jdGlvbiBldmFsQ2hpbGRyZW5EZXYoY2hpbGRyZW4sIHByb3BzLCBwYXRoKSB7XHJcbiAgdmFyIHZhbHVlID0gY2hpbGRyZW4ocHJvcHMpO1xyXG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcodmFsdWUgIT09IHVuZGVmaW5lZCwgXCJZb3UgcmV0dXJuZWQgYHVuZGVmaW5lZGAgZnJvbSB0aGUgYGNoaWxkcmVuYCBmdW5jdGlvbiBvZiBcIiArIChcIjxSb3V0ZVwiICsgKHBhdGggPyBcIiBwYXRoPVxcXCJcIiArIHBhdGggKyBcIlxcXCJcIiA6IFwiXCIpICsgXCI+LCBidXQgeW91IFwiKSArIFwic2hvdWxkIGhhdmUgcmV0dXJuZWQgYSBSZWFjdCBlbGVtZW50IG9yIGBudWxsYFwiKSA6IHZvaWQgMDtcclxuICByZXR1cm4gdmFsdWUgfHwgbnVsbDtcclxufVxyXG4vKipcclxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgc2luZ2xlIHBhdGggYW5kIHJlbmRlcmluZy5cclxuICovXHJcblxyXG5cclxudmFyIFJvdXRlID1cclxuLyojX19QVVJFX18qL1xyXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xyXG4gIF9pbmhlcml0c0xvb3NlKFJvdXRlLCBfUmVhY3QkQ29tcG9uZW50KTtcclxuXHJcbiAgZnVuY3Rpb24gUm91dGUoKSB7XHJcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcbiAgfVxyXG5cclxuICB2YXIgX3Byb3RvID0gUm91dGUucHJvdG90eXBlO1xyXG5cclxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xyXG4gICAgdmFyIF90aGlzID0gdGhpcztcclxuXHJcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCQxKSB7XHJcbiAgICAgICFjb250ZXh0JDEgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZT4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcclxuICAgICAgdmFyIGxvY2F0aW9uID0gX3RoaXMucHJvcHMubG9jYXRpb24gfHwgY29udGV4dCQxLmxvY2F0aW9uO1xyXG4gICAgICB2YXIgbWF0Y2ggPSBfdGhpcy5wcm9wcy5jb21wdXRlZE1hdGNoID8gX3RoaXMucHJvcHMuY29tcHV0ZWRNYXRjaCAvLyA8U3dpdGNoPiBhbHJlYWR5IGNvbXB1dGVkIHRoZSBtYXRjaCBmb3IgdXNcclxuICAgICAgOiBfdGhpcy5wcm9wcy5wYXRoID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCBfdGhpcy5wcm9wcykgOiBjb250ZXh0JDEubWF0Y2g7XHJcblxyXG4gICAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7fSwgY29udGV4dCQxLCB7XHJcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxyXG4gICAgICAgIG1hdGNoOiBtYXRjaFxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIHZhciBfdGhpcyRwcm9wcyA9IF90aGlzLnByb3BzLFxyXG4gICAgICAgICAgY2hpbGRyZW4gPSBfdGhpcyRwcm9wcy5jaGlsZHJlbixcclxuICAgICAgICAgIGNvbXBvbmVudCA9IF90aGlzJHByb3BzLmNvbXBvbmVudCxcclxuICAgICAgICAgIHJlbmRlciA9IF90aGlzJHByb3BzLnJlbmRlcjsgLy8gUHJlYWN0IHVzZXMgYW4gZW1wdHkgYXJyYXkgYXMgY2hpbGRyZW4gYnlcclxuICAgICAgLy8gZGVmYXVsdCwgc28gdXNlIG51bGwgaWYgdGhhdCdzIHRoZSBjYXNlLlxyXG5cclxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pICYmIGNoaWxkcmVuLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgIGNoaWxkcmVuID0gbnVsbDtcclxuICAgICAgfVxyXG5cclxuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Qcm92aWRlciwge1xyXG4gICAgICAgIHZhbHVlOiBwcm9wc1xyXG4gICAgICB9LCBwcm9wcy5tYXRjaCA/IGNoaWxkcmVuID8gdHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBldmFsQ2hpbGRyZW5EZXYoY2hpbGRyZW4sIHByb3BzLCBfdGhpcy5wcm9wcy5wYXRoKSA6IGNoaWxkcmVuKHByb3BzKSA6IGNoaWxkcmVuIDogY29tcG9uZW50ID8gUmVhY3QuY3JlYXRlRWxlbWVudChjb21wb25lbnQsIHByb3BzKSA6IHJlbmRlciA/IHJlbmRlcihwcm9wcykgOiBudWxsIDogdHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBldmFsQ2hpbGRyZW5EZXYoY2hpbGRyZW4sIHByb3BzLCBfdGhpcy5wcm9wcy5wYXRoKSA6IGNoaWxkcmVuKHByb3BzKSA6IG51bGwpO1xyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIFJvdXRlO1xyXG59KFJlYWN0LkNvbXBvbmVudCk7XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgUm91dGUucHJvcFR5cGVzID0ge1xyXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMubm9kZV0pLFxyXG4gICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQocHJvcHMsIHByb3BOYW1lKSB7XHJcbiAgICAgIGlmIChwcm9wc1twcm9wTmFtZV0gJiYgIWlzVmFsaWRFbGVtZW50VHlwZShwcm9wc1twcm9wTmFtZV0pKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBFcnJvcihcIkludmFsaWQgcHJvcCAnY29tcG9uZW50JyBzdXBwbGllZCB0byAnUm91dGUnOiB0aGUgcHJvcCBpcyBub3QgYSB2YWxpZCBSZWFjdCBjb21wb25lbnRcIik7XHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICBleGFjdDogUHJvcFR5cGVzLmJvb2wsXHJcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcclxuICAgIHBhdGg6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5zdHJpbmcpXSksXHJcbiAgICByZW5kZXI6IFByb3BUeXBlcy5mdW5jLFxyXG4gICAgc2Vuc2l0aXZlOiBQcm9wVHlwZXMuYm9vbCxcclxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2xcclxuICB9O1xyXG5cclxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5jaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pICYmIHRoaXMucHJvcHMuY29tcG9uZW50KSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSBjb21wb25lbnQ+IHdpbGwgYmUgaWdub3JlZFwiKSA6IHZvaWQgMDtcclxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikgJiYgdGhpcy5wcm9wcy5yZW5kZXIpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgcmVuZGVyPiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xyXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY29tcG9uZW50ICYmIHRoaXMucHJvcHMucmVuZGVyKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSByZW5kZXI+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XHJcbiAgfTtcclxuXHJcbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcclxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmxvY2F0aW9uICYmICFwcmV2UHJvcHMubG9jYXRpb24pLCAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xyXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKCF0aGlzLnByb3BzLmxvY2F0aW9uICYmIHByZXZQcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcclxuICB9O1xyXG59XHJcblxyXG5mdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xyXG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gXCIvXCIgPyBwYXRoIDogXCIvXCIgKyBwYXRoO1xyXG59XHJcblxyXG5mdW5jdGlvbiBhZGRCYXNlbmFtZShiYXNlbmFtZSwgbG9jYXRpb24pIHtcclxuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XHJcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xyXG4gICAgcGF0aG5hbWU6IGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSkgKyBsb2NhdGlvbi5wYXRobmFtZVxyXG4gIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xyXG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcclxuICB2YXIgYmFzZSA9IGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSk7XHJcbiAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmluZGV4T2YoYmFzZSkgIT09IDApIHJldHVybiBsb2NhdGlvbjtcclxuICByZXR1cm4gX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XHJcbiAgICBwYXRobmFtZTogbG9jYXRpb24ucGF0aG5hbWUuc3Vic3RyKGJhc2UubGVuZ3RoKVxyXG4gIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVVUkwobG9jYXRpb24pIHtcclxuICByZXR1cm4gdHlwZW9mIGxvY2F0aW9uID09PSBcInN0cmluZ1wiID8gbG9jYXRpb24gOiBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcclxufVxyXG5cclxuZnVuY3Rpb24gc3RhdGljSGFuZGxlcihtZXRob2ROYW1lKSB7XHJcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcclxuICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IGNhbm5vdCAlcyB3aXRoIDxTdGF0aWNSb3V0ZXI+XCIsIG1ldGhvZE5hbWUpIDogaW52YXJpYW50KGZhbHNlKSA7XHJcbiAgfTtcclxufVxyXG5cclxuZnVuY3Rpb24gbm9vcCgpIHt9XHJcbi8qKlxyXG4gKiBUaGUgcHVibGljIHRvcC1sZXZlbCBBUEkgZm9yIGEgXCJzdGF0aWNcIiA8Um91dGVyPiwgc28tY2FsbGVkIGJlY2F1c2UgaXRcclxuICogY2FuJ3QgYWN0dWFsbHkgY2hhbmdlIHRoZSBjdXJyZW50IGxvY2F0aW9uLiBJbnN0ZWFkLCBpdCBqdXN0IHJlY29yZHNcclxuICogbG9jYXRpb24gY2hhbmdlcyBpbiBhIGNvbnRleHQgb2JqZWN0LiBVc2VmdWwgbWFpbmx5IGluIHRlc3RpbmcgYW5kXHJcbiAqIHNlcnZlci1yZW5kZXJpbmcgc2NlbmFyaW9zLlxyXG4gKi9cclxuXHJcblxyXG52YXIgU3RhdGljUm91dGVyID1cclxuLyojX19QVVJFX18qL1xyXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xyXG4gIF9pbmhlcml0c0xvb3NlKFN0YXRpY1JvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XHJcblxyXG4gIGZ1bmN0aW9uIFN0YXRpY1JvdXRlcigpIHtcclxuICAgIHZhciBfdGhpcztcclxuXHJcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcclxuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcclxuICAgIH1cclxuXHJcbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xyXG5cclxuICAgIF90aGlzLmhhbmRsZVB1c2ggPSBmdW5jdGlvbiAobG9jYXRpb24pIHtcclxuICAgICAgcmV0dXJuIF90aGlzLm5hdmlnYXRlVG8obG9jYXRpb24sIFwiUFVTSFwiKTtcclxuICAgIH07XHJcblxyXG4gICAgX3RoaXMuaGFuZGxlUmVwbGFjZSA9IGZ1bmN0aW9uIChsb2NhdGlvbikge1xyXG4gICAgICByZXR1cm4gX3RoaXMubmF2aWdhdGVUbyhsb2NhdGlvbiwgXCJSRVBMQUNFXCIpO1xyXG4gICAgfTtcclxuXHJcbiAgICBfdGhpcy5oYW5kbGVMaXN0ZW4gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIHJldHVybiBub29wO1xyXG4gICAgfTtcclxuXHJcbiAgICBfdGhpcy5oYW5kbGVCbG9jayA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgcmV0dXJuIG5vb3A7XHJcbiAgICB9O1xyXG5cclxuICAgIHJldHVybiBfdGhpcztcclxuICB9XHJcblxyXG4gIHZhciBfcHJvdG8gPSBTdGF0aWNSb3V0ZXIucHJvdG90eXBlO1xyXG5cclxuICBfcHJvdG8ubmF2aWdhdGVUbyA9IGZ1bmN0aW9uIG5hdmlnYXRlVG8obG9jYXRpb24sIGFjdGlvbikge1xyXG4gICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcyxcclxuICAgICAgICBfdGhpcyRwcm9wcyRiYXNlbmFtZSA9IF90aGlzJHByb3BzLmJhc2VuYW1lLFxyXG4gICAgICAgIGJhc2VuYW1lID0gX3RoaXMkcHJvcHMkYmFzZW5hbWUgPT09IHZvaWQgMCA/IFwiXCIgOiBfdGhpcyRwcm9wcyRiYXNlbmFtZSxcclxuICAgICAgICBfdGhpcyRwcm9wcyRjb250ZXh0ID0gX3RoaXMkcHJvcHMuY29udGV4dCxcclxuICAgICAgICBjb250ZXh0ID0gX3RoaXMkcHJvcHMkY29udGV4dCA9PT0gdm9pZCAwID8ge30gOiBfdGhpcyRwcm9wcyRjb250ZXh0O1xyXG4gICAgY29udGV4dC5hY3Rpb24gPSBhY3Rpb247XHJcbiAgICBjb250ZXh0LmxvY2F0aW9uID0gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSk7XHJcbiAgICBjb250ZXh0LnVybCA9IGNyZWF0ZVVSTChjb250ZXh0LmxvY2F0aW9uKTtcclxuICB9O1xyXG5cclxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xyXG4gICAgdmFyIF90aGlzJHByb3BzMiA9IHRoaXMucHJvcHMsXHJcbiAgICAgICAgX3RoaXMkcHJvcHMyJGJhc2VuYW1lID0gX3RoaXMkcHJvcHMyLmJhc2VuYW1lLFxyXG4gICAgICAgIGJhc2VuYW1lID0gX3RoaXMkcHJvcHMyJGJhc2VuYW1lID09PSB2b2lkIDAgPyBcIlwiIDogX3RoaXMkcHJvcHMyJGJhc2VuYW1lLFxyXG4gICAgICAgIF90aGlzJHByb3BzMiRjb250ZXh0ID0gX3RoaXMkcHJvcHMyLmNvbnRleHQsXHJcbiAgICAgICAgY29udGV4dCA9IF90aGlzJHByb3BzMiRjb250ZXh0ID09PSB2b2lkIDAgPyB7fSA6IF90aGlzJHByb3BzMiRjb250ZXh0LFxyXG4gICAgICAgIF90aGlzJHByb3BzMiRsb2NhdGlvbiA9IF90aGlzJHByb3BzMi5sb2NhdGlvbixcclxuICAgICAgICBsb2NhdGlvbiA9IF90aGlzJHByb3BzMiRsb2NhdGlvbiA9PT0gdm9pZCAwID8gXCIvXCIgOiBfdGhpcyRwcm9wczIkbG9jYXRpb24sXHJcbiAgICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF90aGlzJHByb3BzMiwgW1wiYmFzZW5hbWVcIiwgXCJjb250ZXh0XCIsIFwibG9jYXRpb25cIl0pO1xyXG5cclxuICAgIHZhciBoaXN0b3J5ID0ge1xyXG4gICAgICBjcmVhdGVIcmVmOiBmdW5jdGlvbiBjcmVhdGVIcmVmKHBhdGgpIHtcclxuICAgICAgICByZXR1cm4gYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lICsgY3JlYXRlVVJMKHBhdGgpKTtcclxuICAgICAgfSxcclxuICAgICAgYWN0aW9uOiBcIlBPUFwiLFxyXG4gICAgICBsb2NhdGlvbjogc3RyaXBCYXNlbmFtZShiYXNlbmFtZSwgY3JlYXRlTG9jYXRpb24obG9jYXRpb24pKSxcclxuICAgICAgcHVzaDogdGhpcy5oYW5kbGVQdXNoLFxyXG4gICAgICByZXBsYWNlOiB0aGlzLmhhbmRsZVJlcGxhY2UsXHJcbiAgICAgIGdvOiBzdGF0aWNIYW5kbGVyKFwiZ29cIiksXHJcbiAgICAgIGdvQmFjazogc3RhdGljSGFuZGxlcihcImdvQmFja1wiKSxcclxuICAgICAgZ29Gb3J3YXJkOiBzdGF0aWNIYW5kbGVyKFwiZ29Gb3J3YXJkXCIpLFxyXG4gICAgICBsaXN0ZW46IHRoaXMuaGFuZGxlTGlzdGVuLFxyXG4gICAgICBibG9jazogdGhpcy5oYW5kbGVCbG9ja1xyXG4gICAgfTtcclxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwgX2V4dGVuZHMoe30sIHJlc3QsIHtcclxuICAgICAgaGlzdG9yeTogaGlzdG9yeSxcclxuICAgICAgc3RhdGljQ29udGV4dDogY29udGV4dFxyXG4gICAgfSkpO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiBTdGF0aWNSb3V0ZXI7XHJcbn0oUmVhY3QuQ29tcG9uZW50KTtcclxuXHJcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICBTdGF0aWNSb3V0ZXIucHJvcFR5cGVzID0ge1xyXG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgICBjb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0LFxyXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKVxyXG4gIH07XHJcblxyXG4gIFN0YXRpY1JvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPFN0YXRpY1JvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IFN0YXRpY1JvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xyXG4gIH07XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIHRoZSBmaXJzdCA8Um91dGU+IHRoYXQgbWF0Y2hlcy5cclxuICovXHJcblxyXG52YXIgU3dpdGNoID1cclxuLyojX19QVVJFX18qL1xyXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xyXG4gIF9pbmhlcml0c0xvb3NlKFN3aXRjaCwgX1JlYWN0JENvbXBvbmVudCk7XHJcblxyXG4gIGZ1bmN0aW9uIFN3aXRjaCgpIHtcclxuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuICB9XHJcblxyXG4gIHZhciBfcHJvdG8gPSBTd2l0Y2gucHJvdG90eXBlO1xyXG5cclxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xyXG4gICAgdmFyIF90aGlzID0gdGhpcztcclxuXHJcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xyXG4gICAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFN3aXRjaD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcclxuICAgICAgdmFyIGxvY2F0aW9uID0gX3RoaXMucHJvcHMubG9jYXRpb24gfHwgY29udGV4dC5sb2NhdGlvbjtcclxuICAgICAgdmFyIGVsZW1lbnQsIG1hdGNoOyAvLyBXZSB1c2UgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaCBpbnN0ZWFkIG9mIFJlYWN0LkNoaWxkcmVuLnRvQXJyYXkoKS5maW5kKClcclxuICAgICAgLy8gaGVyZSBiZWNhdXNlIHRvQXJyYXkgYWRkcyBrZXlzIHRvIGFsbCBjaGlsZCBlbGVtZW50cyBhbmQgd2UgZG8gbm90IHdhbnRcclxuICAgICAgLy8gdG8gdHJpZ2dlciBhbiB1bm1vdW50L3JlbW91bnQgZm9yIHR3byA8Um91dGU+cyB0aGF0IHJlbmRlciB0aGUgc2FtZVxyXG4gICAgICAvLyBjb21wb25lbnQgYXQgZGlmZmVyZW50IFVSTHMuXHJcblxyXG4gICAgICBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoKF90aGlzLnByb3BzLmNoaWxkcmVuLCBmdW5jdGlvbiAoY2hpbGQpIHtcclxuICAgICAgICBpZiAobWF0Y2ggPT0gbnVsbCAmJiBSZWFjdC5pc1ZhbGlkRWxlbWVudChjaGlsZCkpIHtcclxuICAgICAgICAgIGVsZW1lbnQgPSBjaGlsZDtcclxuICAgICAgICAgIHZhciBwYXRoID0gY2hpbGQucHJvcHMucGF0aCB8fCBjaGlsZC5wcm9wcy5mcm9tO1xyXG4gICAgICAgICAgbWF0Y2ggPSBwYXRoID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCBfZXh0ZW5kcyh7fSwgY2hpbGQucHJvcHMsIHtcclxuICAgICAgICAgICAgcGF0aDogcGF0aFxyXG4gICAgICAgICAgfSkpIDogY29udGV4dC5tYXRjaDtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgICByZXR1cm4gbWF0Y2ggPyBSZWFjdC5jbG9uZUVsZW1lbnQoZWxlbWVudCwge1xyXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcclxuICAgICAgICBjb21wdXRlZE1hdGNoOiBtYXRjaFxyXG4gICAgICB9KSA6IG51bGw7XHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICByZXR1cm4gU3dpdGNoO1xyXG59KFJlYWN0LkNvbXBvbmVudCk7XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgU3dpdGNoLnByb3BUeXBlcyA9IHtcclxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcclxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0XHJcbiAgfTtcclxuXHJcbiAgU3dpdGNoLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5sb2NhdGlvbiAmJiAhcHJldlByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEoIXRoaXMucHJvcHMubG9jYXRpb24gJiYgcHJldlByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcclxuICB9O1xyXG59XHJcblxyXG4vKipcclxuICogQSBwdWJsaWMgaGlnaGVyLW9yZGVyIGNvbXBvbmVudCB0byBhY2Nlc3MgdGhlIGltcGVyYXRpdmUgQVBJXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gd2l0aFJvdXRlcihDb21wb25lbnQpIHtcclxuICB2YXIgZGlzcGxheU5hbWUgPSBcIndpdGhSb3V0ZXIoXCIgKyAoQ29tcG9uZW50LmRpc3BsYXlOYW1lIHx8IENvbXBvbmVudC5uYW1lKSArIFwiKVwiO1xyXG5cclxuICB2YXIgQyA9IGZ1bmN0aW9uIEMocHJvcHMpIHtcclxuICAgIHZhciB3cmFwcGVkQ29tcG9uZW50UmVmID0gcHJvcHMud3JhcHBlZENvbXBvbmVudFJlZixcclxuICAgICAgICByZW1haW5pbmdQcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBbXCJ3cmFwcGVkQ29tcG9uZW50UmVmXCJdKTtcclxuXHJcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xyXG4gICAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFwiICsgZGlzcGxheU5hbWUgKyBcIiAvPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xyXG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIF9leHRlbmRzKHt9LCByZW1haW5pbmdQcm9wcywgY29udGV4dCwge1xyXG4gICAgICAgIHJlZjogd3JhcHBlZENvbXBvbmVudFJlZlxyXG4gICAgICB9KSk7XHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICBDLmRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7XHJcbiAgQy5XcmFwcGVkQ29tcG9uZW50ID0gQ29tcG9uZW50O1xyXG5cclxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgICBDLnByb3BUeXBlcyA9IHtcclxuICAgICAgd3JhcHBlZENvbXBvbmVudFJlZjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3RdKVxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHJldHVybiBob2lzdFN0YXRpY3MoQywgQ29tcG9uZW50KTtcclxufVxyXG5cclxudmFyIHVzZUNvbnRleHQgPSBSZWFjdC51c2VDb250ZXh0O1xyXG5mdW5jdGlvbiB1c2VIaXN0b3J5KCkge1xyXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZUhpc3RvcnkoKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gdXNlQ29udGV4dChoaXN0b3J5Q29udGV4dCk7XHJcbn1cclxuZnVuY3Rpb24gdXNlTG9jYXRpb24oKSB7XHJcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xyXG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlTG9jYXRpb24oKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gdXNlQ29udGV4dChjb250ZXh0KS5sb2NhdGlvbjtcclxufVxyXG5mdW5jdGlvbiB1c2VQYXJhbXMoKSB7XHJcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xyXG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlUGFyYW1zKClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xyXG4gIH1cclxuXHJcbiAgdmFyIG1hdGNoID0gdXNlQ29udGV4dChjb250ZXh0KS5tYXRjaDtcclxuICByZXR1cm4gbWF0Y2ggPyBtYXRjaC5wYXJhbXMgOiB7fTtcclxufVxyXG5mdW5jdGlvbiB1c2VSb3V0ZU1hdGNoKHBhdGgpIHtcclxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VSb3V0ZU1hdGNoKClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xyXG4gIH1cclxuXHJcbiAgdmFyIGxvY2F0aW9uID0gdXNlTG9jYXRpb24oKTtcclxuICB2YXIgbWF0Y2ggPSB1c2VDb250ZXh0KGNvbnRleHQpLm1hdGNoO1xyXG4gIHJldHVybiBwYXRoID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCBwYXRoKSA6IG1hdGNoO1xyXG59XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcclxuICAgIHZhciBnbG9iYWwgPSB3aW5kb3c7XHJcbiAgICB2YXIga2V5ID0gXCJfX3JlYWN0X3JvdXRlcl9idWlsZF9fXCI7XHJcbiAgICB2YXIgYnVpbGROYW1lcyA9IHtcclxuICAgICAgY2pzOiBcIkNvbW1vbkpTXCIsXHJcbiAgICAgIGVzbTogXCJFUyBtb2R1bGVzXCIsXHJcbiAgICAgIHVtZDogXCJVTURcIlxyXG4gICAgfTtcclxuXHJcbiAgICBpZiAoZ2xvYmFsW2tleV0gJiYgZ2xvYmFsW2tleV0gIT09IFwiZXNtXCIpIHtcclxuICAgICAgdmFyIGluaXRpYWxCdWlsZE5hbWUgPSBidWlsZE5hbWVzW2dsb2JhbFtrZXldXTtcclxuICAgICAgdmFyIHNlY29uZGFyeUJ1aWxkTmFtZSA9IGJ1aWxkTmFtZXNbXCJlc21cIl07IC8vIFRPRE86IEFkZCBsaW5rIHRvIGFydGljbGUgdGhhdCBleHBsYWlucyBpbiBkZXRhaWwgaG93IHRvIGF2b2lkXHJcbiAgICAgIC8vIGxvYWRpbmcgMiBkaWZmZXJlbnQgYnVpbGRzLlxyXG5cclxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiWW91IGFyZSBsb2FkaW5nIHRoZSBcIiArIHNlY29uZGFyeUJ1aWxkTmFtZSArIFwiIGJ1aWxkIG9mIFJlYWN0IFJvdXRlciBcIiArIChcIm9uIGEgcGFnZSB0aGF0IGlzIGFscmVhZHkgcnVubmluZyB0aGUgXCIgKyBpbml0aWFsQnVpbGROYW1lICsgXCIgXCIpICsgXCJidWlsZCwgc28gdGhpbmdzIHdvbid0IHdvcmsgcmlnaHQuXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIGdsb2JhbFtrZXldID0gXCJlc21cIjtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCB7IE1lbW9yeVJvdXRlciwgUHJvbXB0LCBSZWRpcmVjdCwgUm91dGUsIFJvdXRlciwgU3RhdGljUm91dGVyLCBTd2l0Y2gsIGhpc3RvcnlDb250ZXh0IGFzIF9fSGlzdG9yeUNvbnRleHQsIGNvbnRleHQgYXMgX19Sb3V0ZXJDb250ZXh0LCBnZW5lcmF0ZVBhdGgsIG1hdGNoUGF0aCwgdXNlSGlzdG9yeSwgdXNlTG9jYXRpb24sIHVzZVBhcmFtcywgdXNlUm91dGVNYXRjaCwgd2l0aFJvdXRlciB9O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFjdC1yb3V0ZXIuanMubWFwXHJcbiIsImltcG9ydCB7IFJvdXRlciwgX19Sb3V0ZXJDb250ZXh0LCBtYXRjaFBhdGggfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xyXG5leHBvcnQgeyBNZW1vcnlSb3V0ZXIsIFByb21wdCwgUmVkaXJlY3QsIFJvdXRlLCBSb3V0ZXIsIFN0YXRpY1JvdXRlciwgU3dpdGNoLCBnZW5lcmF0ZVBhdGgsIG1hdGNoUGF0aCwgdXNlSGlzdG9yeSwgdXNlTG9jYXRpb24sIHVzZVBhcmFtcywgdXNlUm91dGVNYXRjaCwgd2l0aFJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XHJcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlJztcclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnksIGNyZWF0ZUhhc2hIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiB9IGZyb20gJ2hpc3RvcnknO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xyXG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XHJcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlJztcclxuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XHJcblxyXG4vKipcclxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIEhUTUw1IGhpc3RvcnkuXHJcbiAqL1xyXG5cclxudmFyIEJyb3dzZXJSb3V0ZXIgPVxyXG4vKiNfX1BVUkVfXyovXHJcbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XHJcbiAgX2luaGVyaXRzTG9vc2UoQnJvd3NlclJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XHJcblxyXG4gIGZ1bmN0aW9uIEJyb3dzZXJSb3V0ZXIoKSB7XHJcbiAgICB2YXIgX3RoaXM7XHJcblxyXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XHJcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XHJcbiAgICB9XHJcblxyXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcclxuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVCcm93c2VySGlzdG9yeShfdGhpcy5wcm9wcyk7XHJcbiAgICByZXR1cm4gX3RoaXM7XHJcbiAgfVxyXG5cclxuICB2YXIgX3Byb3RvID0gQnJvd3NlclJvdXRlci5wcm90b3R5cGU7XHJcblxyXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XHJcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcclxuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxyXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIEJyb3dzZXJSb3V0ZXI7XHJcbn0oUmVhY3QuQ29tcG9uZW50KTtcclxuXHJcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICBCcm93c2VyUm91dGVyLnByb3BUeXBlcyA9IHtcclxuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxyXG4gICAgZm9yY2VSZWZyZXNoOiBQcm9wVHlwZXMuYm9vbCxcclxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxyXG4gICAga2V5TGVuZ3RoOiBQcm9wVHlwZXMubnVtYmVyXHJcbiAgfTtcclxuXHJcbiAgQnJvd3NlclJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEJyb3dzZXJSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBCcm93c2VyUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XHJcbiAgfTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgdXNlcyB3aW5kb3cubG9jYXRpb24uaGFzaC5cclxuICovXHJcblxyXG52YXIgSGFzaFJvdXRlciA9XHJcbi8qI19fUFVSRV9fKi9cclxuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcclxuICBfaW5oZXJpdHNMb29zZShIYXNoUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcclxuXHJcbiAgZnVuY3Rpb24gSGFzaFJvdXRlcigpIHtcclxuICAgIHZhciBfdGhpcztcclxuXHJcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcclxuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcclxuICAgIH1cclxuXHJcbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xyXG4gICAgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZUhhc2hIaXN0b3J5KF90aGlzLnByb3BzKTtcclxuICAgIHJldHVybiBfdGhpcztcclxuICB9XHJcblxyXG4gIHZhciBfcHJvdG8gPSBIYXNoUm91dGVyLnByb3RvdHlwZTtcclxuXHJcbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcclxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xyXG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXHJcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuXHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICByZXR1cm4gSGFzaFJvdXRlcjtcclxufShSZWFjdC5Db21wb25lbnQpO1xyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xyXG4gIEhhc2hSb3V0ZXIucHJvcFR5cGVzID0ge1xyXG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXHJcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcclxuICAgIGhhc2hUeXBlOiBQcm9wVHlwZXMub25lT2YoW1wiaGFzaGJhbmdcIiwgXCJub3NsYXNoXCIsIFwic2xhc2hcIl0pXHJcbiAgfTtcclxuXHJcbiAgSGFzaFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEhhc2hSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBIYXNoUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XHJcbiAgfTtcclxufVxyXG5cclxudmFyIHJlc29sdmVUb0xvY2F0aW9uID0gZnVuY3Rpb24gcmVzb2x2ZVRvTG9jYXRpb24odG8sIGN1cnJlbnRMb2NhdGlvbikge1xyXG4gIHJldHVybiB0eXBlb2YgdG8gPT09IFwiZnVuY3Rpb25cIiA/IHRvKGN1cnJlbnRMb2NhdGlvbikgOiB0bztcclxufTtcclxudmFyIG5vcm1hbGl6ZVRvTG9jYXRpb24gPSBmdW5jdGlvbiBub3JtYWxpemVUb0xvY2F0aW9uKHRvLCBjdXJyZW50TG9jYXRpb24pIHtcclxuICByZXR1cm4gdHlwZW9mIHRvID09PSBcInN0cmluZ1wiID8gY3JlYXRlTG9jYXRpb24odG8sIG51bGwsIG51bGwsIGN1cnJlbnRMb2NhdGlvbikgOiB0bztcclxufTtcclxuXHJcbnZhciBmb3J3YXJkUmVmU2hpbSA9IGZ1bmN0aW9uIGZvcndhcmRSZWZTaGltKEMpIHtcclxuICByZXR1cm4gQztcclxufTtcclxuXHJcbnZhciBmb3J3YXJkUmVmID0gUmVhY3QuZm9yd2FyZFJlZjtcclxuXHJcbmlmICh0eXBlb2YgZm9yd2FyZFJlZiA9PT0gXCJ1bmRlZmluZWRcIikge1xyXG4gIGZvcndhcmRSZWYgPSBmb3J3YXJkUmVmU2hpbTtcclxufVxyXG5cclxuZnVuY3Rpb24gaXNNb2RpZmllZEV2ZW50KGV2ZW50KSB7XHJcbiAgcmV0dXJuICEhKGV2ZW50Lm1ldGFLZXkgfHwgZXZlbnQuYWx0S2V5IHx8IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQuc2hpZnRLZXkpO1xyXG59XHJcblxyXG52YXIgTGlua0FuY2hvciA9IGZvcndhcmRSZWYoZnVuY3Rpb24gKF9yZWYsIGZvcndhcmRlZFJlZikge1xyXG4gIHZhciBpbm5lclJlZiA9IF9yZWYuaW5uZXJSZWYsXHJcbiAgICAgIG5hdmlnYXRlID0gX3JlZi5uYXZpZ2F0ZSxcclxuICAgICAgX29uQ2xpY2sgPSBfcmVmLm9uQ2xpY2ssXHJcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLCBbXCJpbm5lclJlZlwiLCBcIm5hdmlnYXRlXCIsIFwib25DbGlja1wiXSk7XHJcblxyXG4gIHZhciB0YXJnZXQgPSByZXN0LnRhcmdldDtcclxuXHJcbiAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIHJlc3QsIHtcclxuICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soZXZlbnQpIHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBpZiAoX29uQ2xpY2spIF9vbkNsaWNrKGV2ZW50KTtcclxuICAgICAgfSBjYXRjaCAoZXgpIHtcclxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIHRocm93IGV4O1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQgJiYgLy8gb25DbGljayBwcmV2ZW50ZWQgZGVmYXVsdFxyXG4gICAgICBldmVudC5idXR0b24gPT09IDAgJiYgKCAvLyBpZ25vcmUgZXZlcnl0aGluZyBidXQgbGVmdCBjbGlja3NcclxuICAgICAgIXRhcmdldCB8fCB0YXJnZXQgPT09IFwiX3NlbGZcIikgJiYgLy8gbGV0IGJyb3dzZXIgaGFuZGxlIFwidGFyZ2V0PV9ibGFua1wiIGV0Yy5cclxuICAgICAgIWlzTW9kaWZpZWRFdmVudChldmVudCkgLy8gaWdub3JlIGNsaWNrcyB3aXRoIG1vZGlmaWVyIGtleXNcclxuICAgICAgKSB7XHJcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgbmF2aWdhdGUoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgfSk7IC8vIFJlYWN0IDE1IGNvbXBhdFxyXG5cclxuXHJcbiAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XHJcbiAgICBwcm9wcy5yZWYgPSBmb3J3YXJkZWRSZWYgfHwgaW5uZXJSZWY7XHJcbiAgfSBlbHNlIHtcclxuICAgIHByb3BzLnJlZiA9IGlubmVyUmVmO1xyXG4gIH1cclxuICAvKiBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUganN4LWExMXkvYW5jaG9yLWhhcy1jb250ZW50ICovXHJcblxyXG5cclxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwgcHJvcHMpO1xyXG59KTtcclxuXHJcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICBMaW5rQW5jaG9yLmRpc3BsYXlOYW1lID0gXCJMaW5rQW5jaG9yXCI7XHJcbn1cclxuLyoqXHJcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgYSBoaXN0b3J5LWF3YXJlIDxhPi5cclxuICovXHJcblxyXG5cclxudmFyIExpbmsgPSBmb3J3YXJkUmVmKGZ1bmN0aW9uIChfcmVmMiwgZm9yd2FyZGVkUmVmKSB7XHJcbiAgdmFyIF9yZWYyJGNvbXBvbmVudCA9IF9yZWYyLmNvbXBvbmVudCxcclxuICAgICAgY29tcG9uZW50ID0gX3JlZjIkY29tcG9uZW50ID09PSB2b2lkIDAgPyBMaW5rQW5jaG9yIDogX3JlZjIkY29tcG9uZW50LFxyXG4gICAgICByZXBsYWNlID0gX3JlZjIucmVwbGFjZSxcclxuICAgICAgdG8gPSBfcmVmMi50byxcclxuICAgICAgaW5uZXJSZWYgPSBfcmVmMi5pbm5lclJlZixcclxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYyLCBbXCJjb21wb25lbnRcIiwgXCJyZXBsYWNlXCIsIFwidG9cIiwgXCJpbm5lclJlZlwiXSk7XHJcblxyXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcclxuICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8TGluaz4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcclxuICAgIHZhciBoaXN0b3J5ID0gY29udGV4dC5oaXN0b3J5O1xyXG4gICAgdmFyIGxvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihyZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbiksIGNvbnRleHQubG9jYXRpb24pO1xyXG4gICAgdmFyIGhyZWYgPSBsb2NhdGlvbiA/IGhpc3RvcnkuY3JlYXRlSHJlZihsb2NhdGlvbikgOiBcIlwiO1xyXG5cclxuICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCByZXN0LCB7XHJcbiAgICAgIGhyZWY6IGhyZWYsXHJcbiAgICAgIG5hdmlnYXRlOiBmdW5jdGlvbiBuYXZpZ2F0ZSgpIHtcclxuICAgICAgICB2YXIgbG9jYXRpb24gPSByZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbik7XHJcbiAgICAgICAgdmFyIG1ldGhvZCA9IHJlcGxhY2UgPyBoaXN0b3J5LnJlcGxhY2UgOiBoaXN0b3J5LnB1c2g7XHJcbiAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcclxuICAgICAgfVxyXG4gICAgfSk7IC8vIFJlYWN0IDE1IGNvbXBhdFxyXG5cclxuXHJcbiAgICBpZiAoZm9yd2FyZFJlZlNoaW0gIT09IGZvcndhcmRSZWYpIHtcclxuICAgICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcHJvcHMuaW5uZXJSZWYgPSBpbm5lclJlZjtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb21wb25lbnQsIHByb3BzKTtcclxuICB9KTtcclxufSk7XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgdmFyIHRvVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5mdW5jXSk7XHJcbiAgdmFyIHJlZlR5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLnNoYXBlKHtcclxuICAgIGN1cnJlbnQ6IFByb3BUeXBlcy5hbnlcclxuICB9KV0pO1xyXG4gIExpbmsuZGlzcGxheU5hbWUgPSBcIkxpbmtcIjtcclxuICBMaW5rLnByb3BUeXBlcyA9IHtcclxuICAgIGlubmVyUmVmOiByZWZUeXBlLFxyXG4gICAgb25DbGljazogUHJvcFR5cGVzLmZ1bmMsXHJcbiAgICByZXBsYWNlOiBQcm9wVHlwZXMuYm9vbCxcclxuICAgIHRhcmdldDogUHJvcFR5cGVzLnN0cmluZyxcclxuICAgIHRvOiB0b1R5cGUuaXNSZXF1aXJlZFxyXG4gIH07XHJcbn1cclxuXHJcbnZhciBmb3J3YXJkUmVmU2hpbSQxID0gZnVuY3Rpb24gZm9yd2FyZFJlZlNoaW0oQykge1xyXG4gIHJldHVybiBDO1xyXG59O1xyXG5cclxudmFyIGZvcndhcmRSZWYkMSA9IFJlYWN0LmZvcndhcmRSZWY7XHJcblxyXG5pZiAodHlwZW9mIGZvcndhcmRSZWYkMSA9PT0gXCJ1bmRlZmluZWRcIikge1xyXG4gIGZvcndhcmRSZWYkMSA9IGZvcndhcmRSZWZTaGltJDE7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGpvaW5DbGFzc25hbWVzKCkge1xyXG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBjbGFzc25hbWVzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xyXG4gICAgY2xhc3NuYW1lc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcclxuICB9XHJcblxyXG4gIHJldHVybiBjbGFzc25hbWVzLmZpbHRlcihmdW5jdGlvbiAoaSkge1xyXG4gICAgcmV0dXJuIGk7XHJcbiAgfSkuam9pbihcIiBcIik7XHJcbn1cclxuLyoqXHJcbiAqIEEgPExpbms+IHdyYXBwZXIgdGhhdCBrbm93cyBpZiBpdCdzIFwiYWN0aXZlXCIgb3Igbm90LlxyXG4gKi9cclxuXHJcblxyXG52YXIgTmF2TGluayA9IGZvcndhcmRSZWYkMShmdW5jdGlvbiAoX3JlZiwgZm9yd2FyZGVkUmVmKSB7XHJcbiAgdmFyIF9yZWYkYXJpYUN1cnJlbnQgPSBfcmVmW1wiYXJpYS1jdXJyZW50XCJdLFxyXG4gICAgICBhcmlhQ3VycmVudCA9IF9yZWYkYXJpYUN1cnJlbnQgPT09IHZvaWQgMCA/IFwicGFnZVwiIDogX3JlZiRhcmlhQ3VycmVudCxcclxuICAgICAgX3JlZiRhY3RpdmVDbGFzc05hbWUgPSBfcmVmLmFjdGl2ZUNsYXNzTmFtZSxcclxuICAgICAgYWN0aXZlQ2xhc3NOYW1lID0gX3JlZiRhY3RpdmVDbGFzc05hbWUgPT09IHZvaWQgMCA/IFwiYWN0aXZlXCIgOiBfcmVmJGFjdGl2ZUNsYXNzTmFtZSxcclxuICAgICAgYWN0aXZlU3R5bGUgPSBfcmVmLmFjdGl2ZVN0eWxlLFxyXG4gICAgICBjbGFzc05hbWVQcm9wID0gX3JlZi5jbGFzc05hbWUsXHJcbiAgICAgIGV4YWN0ID0gX3JlZi5leGFjdCxcclxuICAgICAgaXNBY3RpdmVQcm9wID0gX3JlZi5pc0FjdGl2ZSxcclxuICAgICAgbG9jYXRpb25Qcm9wID0gX3JlZi5sb2NhdGlvbixcclxuICAgICAgc2Vuc2l0aXZlID0gX3JlZi5zZW5zaXRpdmUsXHJcbiAgICAgIHN0cmljdCA9IF9yZWYuc3RyaWN0LFxyXG4gICAgICBzdHlsZVByb3AgPSBfcmVmLnN0eWxlLFxyXG4gICAgICB0byA9IF9yZWYudG8sXHJcbiAgICAgIGlubmVyUmVmID0gX3JlZi5pbm5lclJlZixcclxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcImFyaWEtY3VycmVudFwiLCBcImFjdGl2ZUNsYXNzTmFtZVwiLCBcImFjdGl2ZVN0eWxlXCIsIFwiY2xhc3NOYW1lXCIsIFwiZXhhY3RcIiwgXCJpc0FjdGl2ZVwiLCBcImxvY2F0aW9uXCIsIFwic2Vuc2l0aXZlXCIsIFwic3RyaWN0XCIsIFwic3R5bGVcIiwgXCJ0b1wiLCBcImlubmVyUmVmXCJdKTtcclxuXHJcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoX19Sb3V0ZXJDb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xyXG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxOYXZMaW5rPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xyXG4gICAgdmFyIGN1cnJlbnRMb2NhdGlvbiA9IGxvY2F0aW9uUHJvcCB8fCBjb250ZXh0LmxvY2F0aW9uO1xyXG4gICAgdmFyIHRvTG9jYXRpb24gPSBub3JtYWxpemVUb0xvY2F0aW9uKHJlc29sdmVUb0xvY2F0aW9uKHRvLCBjdXJyZW50TG9jYXRpb24pLCBjdXJyZW50TG9jYXRpb24pO1xyXG4gICAgdmFyIHBhdGggPSB0b0xvY2F0aW9uLnBhdGhuYW1lOyAvLyBSZWdleCB0YWtlbiBmcm9tOiBodHRwczovL2dpdGh1Yi5jb20vcGlsbGFyanMvcGF0aC10by1yZWdleHAvYmxvYi9tYXN0ZXIvaW5kZXguanMjTDIwMlxyXG5cclxuICAgIHZhciBlc2NhcGVkUGF0aCA9IHBhdGggJiYgcGF0aC5yZXBsYWNlKC8oWy4rKj89XiE6JHt9KClbXFxdfC9cXFxcXSkvZywgXCJcXFxcJDFcIik7XHJcbiAgICB2YXIgbWF0Y2ggPSBlc2NhcGVkUGF0aCA/IG1hdGNoUGF0aChjdXJyZW50TG9jYXRpb24ucGF0aG5hbWUsIHtcclxuICAgICAgcGF0aDogZXNjYXBlZFBhdGgsXHJcbiAgICAgIGV4YWN0OiBleGFjdCxcclxuICAgICAgc2Vuc2l0aXZlOiBzZW5zaXRpdmUsXHJcbiAgICAgIHN0cmljdDogc3RyaWN0XHJcbiAgICB9KSA6IG51bGw7XHJcbiAgICB2YXIgaXNBY3RpdmUgPSAhIShpc0FjdGl2ZVByb3AgPyBpc0FjdGl2ZVByb3AobWF0Y2gsIGN1cnJlbnRMb2NhdGlvbikgOiBtYXRjaCk7XHJcbiAgICB2YXIgY2xhc3NOYW1lID0gaXNBY3RpdmUgPyBqb2luQ2xhc3NuYW1lcyhjbGFzc05hbWVQcm9wLCBhY3RpdmVDbGFzc05hbWUpIDogY2xhc3NOYW1lUHJvcDtcclxuICAgIHZhciBzdHlsZSA9IGlzQWN0aXZlID8gX2V4dGVuZHMoe30sIHN0eWxlUHJvcCwge30sIGFjdGl2ZVN0eWxlKSA6IHN0eWxlUHJvcDtcclxuXHJcbiAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7XHJcbiAgICAgIFwiYXJpYS1jdXJyZW50XCI6IGlzQWN0aXZlICYmIGFyaWFDdXJyZW50IHx8IG51bGwsXHJcbiAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lLFxyXG4gICAgICBzdHlsZTogc3R5bGUsXHJcbiAgICAgIHRvOiB0b0xvY2F0aW9uXHJcbiAgICB9LCByZXN0KTsgLy8gUmVhY3QgMTUgY29tcGF0XHJcblxyXG5cclxuICAgIGlmIChmb3J3YXJkUmVmU2hpbSQxICE9PSBmb3J3YXJkUmVmJDEpIHtcclxuICAgICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcHJvcHMuaW5uZXJSZWYgPSBpbm5lclJlZjtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMaW5rLCBwcm9wcyk7XHJcbiAgfSk7XHJcbn0pO1xyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xyXG4gIE5hdkxpbmsuZGlzcGxheU5hbWUgPSBcIk5hdkxpbmtcIjtcclxuICB2YXIgYXJpYUN1cnJlbnRUeXBlID0gUHJvcFR5cGVzLm9uZU9mKFtcInBhZ2VcIiwgXCJzdGVwXCIsIFwibG9jYXRpb25cIiwgXCJkYXRlXCIsIFwidGltZVwiLCBcInRydWVcIl0pO1xyXG4gIE5hdkxpbmsucHJvcFR5cGVzID0gX2V4dGVuZHMoe30sIExpbmsucHJvcFR5cGVzLCB7XHJcbiAgICBcImFyaWEtY3VycmVudFwiOiBhcmlhQ3VycmVudFR5cGUsXHJcbiAgICBhY3RpdmVDbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgICBhY3RpdmVTdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcclxuICAgIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcclxuICAgIGV4YWN0OiBQcm9wVHlwZXMuYm9vbCxcclxuICAgIGlzQWN0aXZlOiBQcm9wVHlwZXMuZnVuYyxcclxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0LFxyXG4gICAgc2Vuc2l0aXZlOiBQcm9wVHlwZXMuYm9vbCxcclxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2wsXHJcbiAgICBzdHlsZTogUHJvcFR5cGVzLm9iamVjdFxyXG4gIH0pO1xyXG59XHJcblxyXG5leHBvcnQgeyBCcm93c2VyUm91dGVyLCBIYXNoUm91dGVyLCBMaW5rLCBOYXZMaW5rIH07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlYWN0LXJvdXRlci1kb20uanMubWFwXHJcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTcuMC4yXG4gKiByZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7dmFyIGw9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj02MDEwMyxwPTYwMTA2O2V4cG9ydHMuRnJhZ21lbnQ9NjAxMDc7ZXhwb3J0cy5TdHJpY3RNb2RlPTYwMTA4O2V4cG9ydHMuUHJvZmlsZXI9NjAxMTQ7dmFyIHE9NjAxMDkscj02MDExMCx0PTYwMTEyO2V4cG9ydHMuU3VzcGVuc2U9NjAxMTM7dmFyIHU9NjAxMTUsdj02MDExNjtcbmlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3Ipe3ZhciB3PVN5bWJvbC5mb3I7bj13KFwicmVhY3QuZWxlbWVudFwiKTtwPXcoXCJyZWFjdC5wb3J0YWxcIik7ZXhwb3J0cy5GcmFnbWVudD13KFwicmVhY3QuZnJhZ21lbnRcIik7ZXhwb3J0cy5TdHJpY3RNb2RlPXcoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTtleHBvcnRzLlByb2ZpbGVyPXcoXCJyZWFjdC5wcm9maWxlclwiKTtxPXcoXCJyZWFjdC5wcm92aWRlclwiKTtyPXcoXCJyZWFjdC5jb250ZXh0XCIpO3Q9dyhcInJlYWN0LmZvcndhcmRfcmVmXCIpO2V4cG9ydHMuU3VzcGVuc2U9dyhcInJlYWN0LnN1c3BlbnNlXCIpO3U9dyhcInJlYWN0Lm1lbW9cIik7dj13KFwicmVhY3QubGF6eVwiKX12YXIgeD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7XG5mdW5jdGlvbiB5KGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT14JiZhW3hdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9ZnVuY3Rpb24geihhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1cbnZhciBBPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxCPXt9O2Z1bmN0aW9uIEMoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9Qjt0aGlzLnVwZGF0ZXI9Y3x8QX1DLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0MucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YSl0aHJvdyBFcnJvcih6KDg1KSk7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtDLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtcbmZ1bmN0aW9uIEQoKXt9RC5wcm90b3R5cGU9Qy5wcm90b3R5cGU7ZnVuY3Rpb24gRShhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1CO3RoaXMudXBkYXRlcj1jfHxBfXZhciBGPUUucHJvdG90eXBlPW5ldyBEO0YuY29uc3RydWN0b3I9RTtsKEYsQy5wcm90b3R5cGUpO0YuaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7dmFyIEc9e2N1cnJlbnQ6bnVsbH0sSD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEk9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIEooYSxiLGMpe3ZhciBlLGQ9e30saz1udWxsLGg9bnVsbDtpZihudWxsIT1iKWZvcihlIGluIHZvaWQgMCE9PWIucmVmJiYoaD1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihrPVwiXCIrYi5rZXkpLGIpSC5jYWxsKGIsZSkmJiFJLmhhc093blByb3BlcnR5KGUpJiYoZFtlXT1iW2VdKTt2YXIgZz1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWcpZC5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxnKXtmb3IodmFyIGY9QXJyYXkoZyksbT0wO208ZzttKyspZlttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWZ9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGUgaW4gZz1hLmRlZmF1bHRQcm9wcyxnKXZvaWQgMD09PWRbZV0mJihkW2VdPWdbZV0pO3JldHVybnskJHR5cGVvZjpuLHR5cGU6YSxrZXk6ayxyZWY6aCxwcm9wczpkLF9vd25lcjpHLmN1cnJlbnR9fVxuZnVuY3Rpb24gSyhhLGIpe3JldHVybnskJHR5cGVvZjpuLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTChhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09bn1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiK2EucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIE09L1xcLysvZztmdW5jdGlvbiBOKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKFwiXCIrYS5rZXkpOmIudG9TdHJpbmcoMzYpfVxuZnVuY3Rpb24gTyhhLGIsYyxlLGQpe3ZhciBrPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1rfHxcImJvb2xlYW5cIj09PWspYT1udWxsO3ZhciBoPSExO2lmKG51bGw9PT1hKWg9ITA7ZWxzZSBzd2l0Y2goayl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpoPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBuOmNhc2UgcDpoPSEwfX1pZihoKXJldHVybiBoPWEsZD1kKGgpLGE9XCJcIj09PWU/XCIuXCIrTihoLDApOmUsQXJyYXkuaXNBcnJheShkKT8oYz1cIlwiLG51bGwhPWEmJihjPWEucmVwbGFjZShNLFwiJCYvXCIpK1wiL1wiKSxPKGQsYixjLFwiXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KSk6bnVsbCE9ZCYmKEwoZCkmJihkPUsoZCxjKyghZC5rZXl8fGgmJmgua2V5PT09ZC5rZXk/XCJcIjooXCJcIitkLmtleSkucmVwbGFjZShNLFwiJCYvXCIpK1wiL1wiKSthKSksYi5wdXNoKGQpKSwxO2g9MDtlPVwiXCI9PT1lP1wiLlwiOmUrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGc9XG4wO2c8YS5sZW5ndGg7ZysrKXtrPWFbZ107dmFyIGY9ZStOKGssZyk7aCs9TyhrLGIsYyxmLGQpfWVsc2UgaWYoZj15KGEpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxnPTA7IShrPWEubmV4dCgpKS5kb25lOylrPWsudmFsdWUsZj1lK04oayxnKyspLGgrPU8oayxiLGMsZixkKTtlbHNlIGlmKFwib2JqZWN0XCI9PT1rKXRocm93IGI9XCJcIithLEVycm9yKHooMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PWI/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6YikpO3JldHVybiBofWZ1bmN0aW9uIFAoYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGU9W10sZD0wO08oYSxlLFwiXCIsXCJcIixmdW5jdGlvbihhKXtyZXR1cm4gYi5jYWxsKGMsYSxkKyspfSk7cmV0dXJuIGV9XG5mdW5jdGlvbiBRKGEpe2lmKC0xPT09YS5fc3RhdHVzKXt2YXIgYj1hLl9yZXN1bHQ7Yj1iKCk7YS5fc3RhdHVzPTA7YS5fcmVzdWx0PWI7Yi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KX1pZigxPT09YS5fc3RhdHVzKXJldHVybiBhLl9yZXN1bHQ7dGhyb3cgYS5fcmVzdWx0O312YXIgUj17Y3VycmVudDpudWxsfTtmdW5jdGlvbiBTKCl7dmFyIGE9Ui5jdXJyZW50O2lmKG51bGw9PT1hKXRocm93IEVycm9yKHooMzIxKSk7cmV0dXJuIGF9dmFyIFQ9e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6UixSZWFjdEN1cnJlbnRCYXRjaENvbmZpZzp7dHJhbnNpdGlvbjowfSxSZWFjdEN1cnJlbnRPd25lcjpHLElzU29tZVJlbmRlcmVyQWN0aW5nOntjdXJyZW50OiExfSxhc3NpZ246bH07XG5leHBvcnRzLkNoaWxkcmVuPXttYXA6UCxmb3JFYWNoOmZ1bmN0aW9uKGEsYixjKXtQKGEsZnVuY3Rpb24oKXtiLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sYyl9LGNvdW50OmZ1bmN0aW9uKGEpe3ZhciBiPTA7UChhLGZ1bmN0aW9uKCl7YisrfSk7cmV0dXJuIGJ9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7cmV0dXJuIFAoYSxmdW5jdGlvbihhKXtyZXR1cm4gYX0pfHxbXX0sb25seTpmdW5jdGlvbihhKXtpZighTChhKSl0aHJvdyBFcnJvcih6KDE0MykpO3JldHVybiBhfX07ZXhwb3J0cy5Db21wb25lbnQ9QztleHBvcnRzLlB1cmVDb21wb25lbnQ9RTtleHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPVQ7XG5leHBvcnRzLmNsb25lRWxlbWVudD1mdW5jdGlvbihhLGIsYyl7aWYobnVsbD09PWF8fHZvaWQgMD09PWEpdGhyb3cgRXJyb3IoeigyNjcsYSkpO3ZhciBlPWwoe30sYS5wcm9wcyksZD1hLmtleSxrPWEucmVmLGg9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihrPWIucmVmLGg9Ry5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGQ9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBnPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGYgaW4gYilILmNhbGwoYixmKSYmIUkuaGFzT3duUHJvcGVydHkoZikmJihlW2ZdPXZvaWQgMD09PWJbZl0mJnZvaWQgMCE9PWc/Z1tmXTpiW2ZdKX12YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZS5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxmKXtnPUFycmF5KGYpO2Zvcih2YXIgbT0wO208ZjttKyspZ1ttXT1hcmd1bWVudHNbbSsyXTtlLmNoaWxkcmVuPWd9cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLnR5cGUsXG5rZXk6ZCxyZWY6ayxwcm9wczplLF9vd25lcjpofX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6cixfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6YixfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnEsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX07ZXhwb3J0cy5jcmVhdGVFbGVtZW50PUo7ZXhwb3J0cy5jcmVhdGVGYWN0b3J5PWZ1bmN0aW9uKGEpe3ZhciBiPUouYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifTtleHBvcnRzLmNyZWF0ZVJlZj1mdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fTtleHBvcnRzLmZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnQscmVuZGVyOmF9fTtleHBvcnRzLmlzVmFsaWRFbGVtZW50PUw7XG5leHBvcnRzLmxhenk9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnYsX3BheWxvYWQ6e19zdGF0dXM6LTEsX3Jlc3VsdDphfSxfaW5pdDpRfX07ZXhwb3J0cy5tZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOnUsdHlwZTphLGNvbXBhcmU6dm9pZCAwPT09Yj9udWxsOmJ9fTtleHBvcnRzLnVzZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VDYWxsYmFjayhhLGIpfTtleHBvcnRzLnVzZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUNvbnRleHQoYSxiKX07ZXhwb3J0cy51c2VEZWJ1Z1ZhbHVlPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVzZUVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlRWZmZWN0KGEsYil9O2V4cG9ydHMudXNlSW1wZXJhdGl2ZUhhbmRsZT1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFMoKS51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixjKX07XG5leHBvcnRzLnVzZUxheW91dEVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlTGF5b3V0RWZmZWN0KGEsYil9O2V4cG9ydHMudXNlTWVtbz1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlTWVtbyhhLGIpfTtleHBvcnRzLnVzZVJlZHVjZXI9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBTKCkudXNlUmVkdWNlcihhLGIsYyl9O2V4cG9ydHMudXNlUmVmPWZ1bmN0aW9uKGEpe3JldHVybiBTKCkudXNlUmVmKGEpfTtleHBvcnRzLnVzZVN0YXRlPWZ1bmN0aW9uKGEpe3JldHVybiBTKCkudXNlU3RhdGUoYSl9O2V4cG9ydHMudmVyc2lvbj1cIjE3LjAuMlwiO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjAuMjAuMlxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgZixnLGgsaztpZihcIm9iamVjdFwiPT09dHlwZW9mIHBlcmZvcm1hbmNlJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgcGVyZm9ybWFuY2Uubm93KXt2YXIgbD1wZXJmb3JtYW5jZTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBsLm5vdygpfX1lbHNle3ZhciBwPURhdGUscT1wLm5vdygpO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHAubm93KCktcX19XG5pZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgdD1udWxsLHU9bnVsbCx3PWZ1bmN0aW9uKCl7aWYobnVsbCE9PXQpdHJ5e3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dCghMCxhKTt0PW51bGx9Y2F0Y2goYil7dGhyb3cgc2V0VGltZW91dCh3LDApLGI7fX07Zj1mdW5jdGlvbihhKXtudWxsIT09dD9zZXRUaW1lb3V0KGYsMCxhKToodD1hLHNldFRpbWVvdXQodywwKSl9O2c9ZnVuY3Rpb24oYSxiKXt1PXNldFRpbWVvdXQoYSxiKX07aD1mdW5jdGlvbigpe2NsZWFyVGltZW91dCh1KX07ZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3JldHVybiExfTtrPWV4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oKXt9fWVsc2V7dmFyIHg9d2luZG93LnNldFRpbWVvdXQseT13aW5kb3cuY2xlYXJUaW1lb3V0O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSl7dmFyIHo9XG53aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWU7XCJmdW5jdGlvblwiIT09dHlwZW9mIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IHJlcXVlc3RBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9yZWFjdGpzLm9yZy9saW5rL3JlYWN0LXBvbHlmaWxsc1wiKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgeiYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgY2FuY2VsQW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vcmVhY3Rqcy5vcmcvbGluay9yZWFjdC1wb2x5ZmlsbHNcIil9dmFyIEE9ITEsQj1udWxsLEM9LTEsRD01LEU9MDtleHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuIGV4cG9ydHMudW5zdGFibGVfbm93KCk+PVxuRX07az1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbihhKXswPmF8fDEyNTxhP2NvbnNvbGUuZXJyb3IoXCJmb3JjZUZyYW1lUmF0ZSB0YWtlcyBhIHBvc2l0aXZlIGludCBiZXR3ZWVuIDAgYW5kIDEyNSwgZm9yY2luZyBmcmFtZSByYXRlcyBoaWdoZXIgdGhhbiAxMjUgZnBzIGlzIG5vdCBzdXBwb3J0ZWRcIik6RD0wPGE/TWF0aC5mbG9vcigxRTMvYSk6NX07dmFyIEY9bmV3IE1lc3NhZ2VDaGFubmVsLEc9Ri5wb3J0MjtGLnBvcnQxLm9ubWVzc2FnZT1mdW5jdGlvbigpe2lmKG51bGwhPT1CKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO0U9YStEO3RyeXtCKCEwLGEpP0cucG9zdE1lc3NhZ2UobnVsbCk6KEE9ITEsQj1udWxsKX1jYXRjaChiKXt0aHJvdyBHLnBvc3RNZXNzYWdlKG51bGwpLGI7fX1lbHNlIEE9ITF9O2Y9ZnVuY3Rpb24oYSl7Qj1hO0F8fChBPSEwLEcucG9zdE1lc3NhZ2UobnVsbCkpfTtnPWZ1bmN0aW9uKGEsYil7Qz1cbngoZnVuY3Rpb24oKXthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSxiKX07aD1mdW5jdGlvbigpe3koQyk7Qz0tMX19ZnVuY3Rpb24gSChhLGIpe3ZhciBjPWEubGVuZ3RoO2EucHVzaChiKTthOmZvcig7Oyl7dmFyIGQ9Yy0xPj4+MSxlPWFbZF07aWYodm9pZCAwIT09ZSYmMDxJKGUsYikpYVtkXT1iLGFbY109ZSxjPWQ7ZWxzZSBicmVhayBhfX1mdW5jdGlvbiBKKGEpe2E9YVswXTtyZXR1cm4gdm9pZCAwPT09YT9udWxsOmF9XG5mdW5jdGlvbiBLKGEpe3ZhciBiPWFbMF07aWYodm9pZCAwIT09Yil7dmFyIGM9YS5wb3AoKTtpZihjIT09Yil7YVswXT1jO2E6Zm9yKHZhciBkPTAsZT1hLmxlbmd0aDtkPGU7KXt2YXIgbT0yKihkKzEpLTEsbj1hW21dLHY9bSsxLHI9YVt2XTtpZih2b2lkIDAhPT1uJiYwPkkobixjKSl2b2lkIDAhPT1yJiYwPkkocixuKT8oYVtkXT1yLGFbdl09YyxkPXYpOihhW2RdPW4sYVttXT1jLGQ9bSk7ZWxzZSBpZih2b2lkIDAhPT1yJiYwPkkocixjKSlhW2RdPXIsYVt2XT1jLGQ9djtlbHNlIGJyZWFrIGF9fXJldHVybiBifXJldHVybiBudWxsfWZ1bmN0aW9uIEkoYSxiKXt2YXIgYz1hLnNvcnRJbmRleC1iLnNvcnRJbmRleDtyZXR1cm4gMCE9PWM/YzphLmlkLWIuaWR9dmFyIEw9W10sTT1bXSxOPTEsTz1udWxsLFA9MyxRPSExLFI9ITEsUz0hMTtcbmZ1bmN0aW9uIFQoYSl7Zm9yKHZhciBiPUooTSk7bnVsbCE9PWI7KXtpZihudWxsPT09Yi5jYWxsYmFjaylLKE0pO2Vsc2UgaWYoYi5zdGFydFRpbWU8PWEpSyhNKSxiLnNvcnRJbmRleD1iLmV4cGlyYXRpb25UaW1lLEgoTCxiKTtlbHNlIGJyZWFrO2I9SihNKX19ZnVuY3Rpb24gVShhKXtTPSExO1QoYSk7aWYoIVIpaWYobnVsbCE9PUooTCkpUj0hMCxmKFYpO2Vsc2V7dmFyIGI9SihNKTtudWxsIT09YiYmZyhVLGIuc3RhcnRUaW1lLWEpfX1cbmZ1bmN0aW9uIFYoYSxiKXtSPSExO1MmJihTPSExLGgoKSk7UT0hMDt2YXIgYz1QO3RyeXtUKGIpO2ZvcihPPUooTCk7bnVsbCE9PU8mJighKE8uZXhwaXJhdGlvblRpbWU+Yil8fGEmJiFleHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkKCkpOyl7dmFyIGQ9Ty5jYWxsYmFjaztpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7Ty5jYWxsYmFjaz1udWxsO1A9Ty5wcmlvcml0eUxldmVsO3ZhciBlPWQoTy5leHBpcmF0aW9uVGltZTw9Yik7Yj1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlP08uY2FsbGJhY2s9ZTpPPT09SihMKSYmSyhMKTtUKGIpfWVsc2UgSyhMKTtPPUooTCl9aWYobnVsbCE9PU8pdmFyIG09ITA7ZWxzZXt2YXIgbj1KKE0pO251bGwhPT1uJiZnKFUsbi5zdGFydFRpbWUtYik7bT0hMX1yZXR1cm4gbX1maW5hbGx5e089bnVsbCxQPWMsUT0hMX19dmFyIFc9aztleHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O1xuZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9Qcm9maWxpbmc9bnVsbDtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihhKXthLmNhbGxiYWNrPW51bGx9O2V4cG9ydHMudW5zdGFibGVfY29udGludWVFeGVjdXRpb249ZnVuY3Rpb24oKXtSfHxRfHwoUj0hMCxmKFYpKX07ZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiBQfTtleHBvcnRzLnVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIEooTCl9O1xuZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaChQKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj1QfXZhciBjPVA7UD1iO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7UD1jfX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9yZXF1ZXN0UGFpbnQ9VztleHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBjPVA7UD1hO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7UD1jfX07XG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yz8oYz1jLmRlbGF5LGM9XCJudW1iZXJcIj09PXR5cGVvZiBjJiYwPGM/ZCtjOmQpOmM9ZDtzd2l0Y2goYSl7Y2FzZSAxOnZhciBlPS0xO2JyZWFrO2Nhc2UgMjplPTI1MDticmVhaztjYXNlIDU6ZT0xMDczNzQxODIzO2JyZWFrO2Nhc2UgNDplPTFFNDticmVhaztkZWZhdWx0OmU9NUUzfWU9YytlO2E9e2lkOk4rKyxjYWxsYmFjazpiLHByaW9yaXR5TGV2ZWw6YSxzdGFydFRpbWU6YyxleHBpcmF0aW9uVGltZTplLHNvcnRJbmRleDotMX07Yz5kPyhhLnNvcnRJbmRleD1jLEgoTSxhKSxudWxsPT09SihMKSYmYT09PUooTSkmJihTP2goKTpTPSEwLGcoVSxjLWQpKSk6KGEuc29ydEluZGV4PWUsSChMLGEpLFJ8fFF8fChSPSEwLGYoVikpKTtyZXR1cm4gYX07XG5leHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1QO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPVA7UD1iO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXtQPWN9fX07XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxudmFyIFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xyXG52YXIgcmVhY3Rfcm91dGVyX2RvbV8xID0gcmVxdWlyZShcInJlYWN0LXJvdXRlci1kb21cIik7XHJcbnZhciBhYm91dF8xID0gcmVxdWlyZShcIi4vY29tcG9uZW50cy9hYm91dFwiKTtcclxudmFyIG1haW5wYWdlXzEgPSByZXF1aXJlKFwiLi9jb21wb25lbnRzL21haW5wYWdlXCIpO1xyXG52YXIgbmF2XzEgPSByZXF1aXJlKFwiLi9jb21wb25lbnRzL25hdlwiKTtcclxudmFyIGZhcV8xID0gcmVxdWlyZShcIi4vY29tcG9uZW50cy9mYXFcIik7XHJcbnZhciBmb290ZXJfMSA9IHJlcXVpcmUoXCIuL2NvbXBvbmVudHMvZm9vdGVyXCIpO1xyXG52YXIgQXBwID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KHJlYWN0X3JvdXRlcl9kb21fMS5IYXNoUm91dGVyLCBudWxsLFxyXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQobmF2XzEuZGVmYXVsdCwgbnVsbCksXHJcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChyZWFjdF9yb3V0ZXJfZG9tXzEuU3dpdGNoLCBudWxsLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KHJlYWN0X3JvdXRlcl9kb21fMS5Sb3V0ZSwgeyBleGFjdDogdHJ1ZSwgcGF0aDogJy8nLCBjb21wb25lbnQ6IG1haW5wYWdlXzEuZGVmYXVsdCB9KSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChyZWFjdF9yb3V0ZXJfZG9tXzEuUm91dGUsIHsgcGF0aDogJy9mYXEnLCBjb21wb25lbnQ6IGZhcV8xLmRlZmF1bHQgfSksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQocmVhY3Rfcm91dGVyX2RvbV8xLlJvdXRlLCB7IHBhdGg6ICcvYWJvdXQnLCBjb21wb25lbnQ6IGFib3V0XzEuZGVmYXVsdCB9KSksXHJcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChmb290ZXJfMS5kZWZhdWx0LCBudWxsKSkpO1xyXG59O1xyXG5leHBvcnRzLmRlZmF1bHQgPSBBcHA7XHJcbiIsIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbnZhciBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcclxudmFyIEFib3V0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgaWQ6ICdhYm91dC1jb250YWluZXInIH0sXHJcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogJ2Fib3V0LWgxJyB9LFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDFcIiwgbnVsbCwgXCJUaGUgUHVycG9zZSBvZiBUaGlzIFdlYnBhZ2VcIikpLFxyXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6ICdwLWNvbnRhaW5lcicgfSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwgbnVsbCwgXCJJIGFtIHN1cnByaXNlZCB0aGF0IHRoZXJlIGlzIG5vdCBhIHNpbXBsZSB3ZWJwYWdlIG91dCB0aGVyZSB0aGF0IHNob3dzIGNvdmFyaWFuY2VzIG9yIGNvcnJlbGF0aW9ucyBvZiBwb3B1bGFyIGNyeXB0b2N1cnJlbmNpZXMgYWdhaW5zdCBCaXRjb2luLiBJdCBpcyB1bmRlbmlhYmxlIHRoYXQgaXQgZmVlbHMgbGlrZSB0aGVyZSBhcmUgc3Ryb25nIHJlbGF0aW9uc2hpcHMgYW1vbmdzdCB0aGVzZSBjb2lucyB3aXRoIEJpdGNvaW4sIGJ1dCBob3cgcXVhbnRpdGF0aXZlbHkgc3Ryb25nPyBZb3UgY2FuIGZpbmQgY2hhcnRzIG91dCB0aGVyZSwgZm9yIGV4YW1wbGUgRVRIQlRDIG9yIEJpdGNvaW4gRG9taW5hbmNlLCBidXQgdGhleSBvbmx5IGxpZnQgb25lIGNvcm5lciBvZiB0aGlzIHZlaWwuIFNvbWV0aW1lcyB5b3UganVzdCB3YW50IGEgc2ltcGxlIG51bWJlciBpbnN0ZWFkIG9mIHR1cmdpZGx5IGRyYXduIHRlY2huaWNhbCBhbmFseXNpcy5cIiksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIG51bGwsIFwiSSB0aG91Z2h0IGl0IHdhcyBpbXBvcnRhbnQgdG8gZGV0ZXJtaW5lIGJvdGggaG93IHN0cm9uZ2x5IHRoZXNlIGNyeXB0b2N1cnJlbmNpZXMgd2VyZSBjb3JyZWxhdGVkIHRvIEJUQyhjb3JyZWxhdGlvbiBjb2VmZmVjaWVudCkgYW5kIHRoZSBtYWduaXR1ZGUgb2YgdGhlaXIgdmFyaWFuY2UgZnJvbSB0aGVpciBtZWFucyhjb3ZhcmlhbmNlKS4gV2Uga25vdyBzbWFsbGVyIGNvaW5zIHRlbmQgdG8gYmUgbW9yZSB2b2xhdGlsZSB0aGFuIEJUQyBzaW5jZSB0aGV5IGFyZSB1c3VhbGx5IG1vcmUgbGlxdWlkKHZlcnkgbGl0dGxlIEJUQyBpcyBhY3R1YWxseSB0cmFkZWQgb24gZXhjaGFuZ2VzKSB3aXRoIHNtYWxsZXIgbWFya2V0IGNhcHMuIFNvIGlmIEkgdGhvdWdodCB0aGF0IEJUQyBtYXkgZ28gdXAsIHdoeSBub3QgaW5zdGVhZCBmaW5kIGEgY29pbiB3aXRoIGEgaGlnaGVyIHZvbGF0aWxpdHksIGhpZ2ggY292YXJpYW5jZSBhbmQgaGlnaCBjb3JyZWxhdGlvbiBpbnN0ZWFkPyBPZiBjb3Vyc2UgSSB3b3VsZCBsaWtlbHkgc3RpbGwgcmVzZWFyY2ggc29tZSBiYXNpYyB0ZWNobmljYWwgYW5kIGZ1bmRhbWVudGFsIGFuYWx5c2lzLiBOb3QgZmluYW5jaWFsIGFkdmljZS5cIiksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIG51bGwsIFwiVGhpcyB3ZWJwYWdlIG9ubHkgZmV0Y2hlcyBkYXRhIGZyb20gMzAgZGF5cyBvZiB0aGUgbWFya2V0LiBCdXQgYSBtb250aCBpcyBhIGxvbmcgdGltZSBpbiB0aGUgaGlnaGx5IGVycmF0aWMgYW5kIHVucHJlZGljdGFibGUgY3J5cHRvd29ybGQuIEJlY2F1c2UgdGhpcyBwYWdlIGlzIHB1cmVseSBmcm9udCBlbmQgaXQgbmVlZHMgdG8gZmV0Y2ggYXBpIGRhdGEgZXZlcnkgdGltZSBpcyBpdCBsb2FkZWQuIFdoZW4gSSBnaXZlIGl0IGEgYmFja2VuZCBzZXJ2ZXIgc29vbiBJIHNob3VsZCBiZSBhYmxlIHRvIGRvIGRhaWx5IGxhcmdlIGNhbGN1bGF0aW9ucyBvZiBodW5kcmVkcyBvZiBkYXlzIGEgc2luZ2xlIHRpbWUgZWFjaCBkYXkuIEknZCBhbHNvIGxpa2UgdG8gaW5jcmVhc2UgdGhlIGFtb3VudCBvZiBjdXJyZW5jaWVzIHRvIDEwMCB0byBwb3RlbnRpYWxseSBkaXNjb3ZlciBzb21lIGhpZGRlbiBzdXJwcmlzZXMgaW4gdGhlIGRhdGEuXCIpKSkpO1xyXG59O1xyXG5leHBvcnRzLmRlZmF1bHQgPSBBYm91dDtcclxuIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxudmFyIFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xyXG52YXIgcmVhY3RfbWF0aGpheDNfMSA9IHJlcXVpcmUoXCJyZWFjdC1tYXRoamF4M1wiKTtcclxuLy9pJ20gZ2VuZXJhdGluZyB0aGVzZSBzdHJpbmdzIGZyb20gaHR0cDovL2F0b211cmwubmV0L21hdGgvIFxyXG52YXIgY292YXJpYW5jZSA9ICckQ292W1gsICBCVENdPVxcXFxzdW1fe2k9MX1eezMwfVxcXFxmcmFje3soWF9pIC0gXFxcXG92ZXJsaW5le1h9KX0g4ouFeyhCVENfaSAtIFxcXFxvdmVybGluZXtCVEN9KX19ezMwfSQnO1xyXG52YXIgY29ycmVsYXRpb24gPSAnJM+BX3tYLCBCVEN9PVxcXFxmcmFje0NvdltYLCBCVENdfXt7XFxcXHNpZ21hX1h94ouFe1xcXFxzaWdtYV97QlRDfX19JCc7XHJcbnZhciBtZWFuID0gXCIkXFxcXG92ZXJsaW5le1h9PUVbWF09XFxcXGZyYWN7MTAwfXszMH1cXHUyMkM1XFxcXHN1bV97aT0xfV57MzB9XFxcXGZyYWN7e1hfe2krMX0te1hfaX19fXtYX2l9JFwiO1xyXG52YXIgdmFyaWFuY2UgPSBcIiRWYXJbWF0gPSBFW1heezJ9XSAtIEVbWF1eezJ9JFwiO1xyXG52YXIgdm9sYXRpbGl0eSA9IFwiJFxcdTAzQzNfe1h9ID0gU0RbWF0gPSBcXFxcc3FydHtWYXJbWF19JFwiO1xyXG52YXIgdmFyaWFuY2Vwcm9vZiA9IFwiJENvdltYLCBYXSA9IEVbKFhfe2l9LUVbWF0pXFx1MjJDNShYX3tpfS1FW1hdKV0gPSBFWyhYX3tpfS1FW1hdKV57Mn1dID0gVmFyW1hdJFwiO1xyXG52YXIgdmFyaWFuY2Vwcm9vZjIgPSBcIiRcXHUwM0MxX3tYLCBYfT1cXFxcZnJhY3tDb3ZbWCwgWF19e1xcdTAzQzNfe1h9IFxcdTIyQzUgXFx1MDNDM197WH19ID0gXFxcXGZyYWN7VmFyW1hdfXtWYXJbWF19ID0gMSRcIjtcclxudmFyIEZBUSA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGlkOiAnZmFxLWNvbnRhaW5lcicgfSxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnZmFxLWgxJyB9LFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDFcIiwgbnVsbCwgXCJGcmVxdWVudGx5IEFza2VkIFF1ZXN0aW9uc1wiKSksXHJcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogJ2Rlc2MtbWVhbicgfSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImgyXCIsIG51bGwsIFwiV2hhdCBpcyBFeHBlY3RlZCBSZXR1cm4/XCIpLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCBudWxsLCBcIlRoaXMgcmVwcmVzZW50cyB0aGUgZXhwZWN0ZWQgcGVyY2VudCBvZiBnYWluIG9yIGxvc3MgZWFjaCBkYXkuIEl0IGlzIHRoZSB3ZWlnaHRlZCBhdmVyYWdlIG9mIHJlY2VudCByZXR1cm5zLiBBbHNvIGNhbGxlZCB0aGUgbWVhbiwgaXQgaXMgY2FsY3VsYXRlZCBieSBzdW1taW5nIHRoZSByZWFsaXplZCBkYWlseSByZXR1cm5zIGFuZCBkaXZpZGluZyBieSB0aGUgbnVtYmVyIG9mIHBlcmlvZHMuIFRoZSByZXR1cm5zIGFyZSB0aGUgcGVyY2VudGFnZSBpbmNyZWFzZXMgaW4gdGhlIHZhbHVlIG9mIHRoZSBhc3NldCBwZXIgZG9sbGFyIGluaXRpYWxseSBpbnZlc3RlZC4gSSBhbSBtdWx0aXBseWluZyBieSAxMDAgdG8gZ2V0IGEgbnVtYmVyIHRoYXQgbG9va3MgbGlrZSAyLjAwIHJhdGhlciB0aGFuIDAuMDIuIFRoZW4gZGl2aWRpbmcgYnkgMzAgYmVjYXVzZSBJIGFtIGNhbGN1bGF0aW5nIHRoZSBtZWFuIG92ZXIgMzAgZGF5cy4gTm90ZSB0aGF0IEknbSBmZXRjaGluZyAzMSBkYXlzIG9mIGRhdGEgYmVjYXVzZSB0aGUgZm9ybXVsYSB1c2VzIGkrMS5cIiksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJiclwiLCBudWxsKSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChyZWFjdF9tYXRoamF4M18xLmRlZmF1bHQuQ29udGV4dCwgeyBpbnB1dDogJ3RleCcsIHNjcmlwdDogXCJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9tYXRoamF4LzIuNy4wL01hdGhKYXguanNcIiwgb3B0aW9uczoge1xyXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VTdHlsZTogJ25vbmUnLFxyXG4gICAgICAgICAgICAgICAgICAgIGV4dGVuc2lvbnM6IFsndGV4MmpheC5qcyddLFxyXG4gICAgICAgICAgICAgICAgICAgIGpheDogWydpbnB1dC9UZVgnLCAnb3V0cHV0L0hUTUwtQ1NTJ10sXHJcbiAgICAgICAgICAgICAgICAgICAgdGV4MmpheDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpbmxpbmVNYXRoOiBbWyckJywgJyQnXSwgWydcXFxcKCcsICdcXFxcKSddXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheU1hdGg6IFtbJyQkJywgJyQkJ10sIFsnXFxcXFsnLCAnXFxcXF0nXV0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb2Nlc3NFc2NhcGVzOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgVGVYOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4dGVuc2lvbnM6IFsnQU1TbWF0aC5qcycsICdBTVNzeW1ib2xzLmpzJywgJ25vRXJyb3JzLmpzJywgJ25vVW5kZWZpbmVkLmpzJ11cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9IH0sXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KHJlYWN0X21hdGhqYXgzXzEuZGVmYXVsdC5IdG1sLCB7IGh0bWw6IG1lYW4gfSkpLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYnJcIiwgbnVsbCksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiLCBudWxsLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImxpXCIsIG51bGwsIFwiRXhwZWN0ZWQgcmV0dXJuIGNhbiBiZSBwb3NpdGl2ZSBvciBuZWdhdGl2ZS4gXCIpLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImxpXCIsIG51bGwsIFwiQSBwb3NpdGl2ZSBudW1iZXIgbGlrZWx5IGluZGljYXRlcyBhbiB1cHRyZW5kIHdoaWxlIGEgbmVnYXRpdmUgbnVtYmVyIGxpa2VseSBpbmRpY2F0ZXMgYSBkb3dudHJlbmQuXCIpKSksXHJcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogJ2Rlc2MtdmFyJyB9LFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDJcIiwgbnVsbCwgXCJXaGF0IGlzIFZhcmlhbmNlP1wiKSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwgbnVsbCwgXCJWYXJpYW5jZSBpcyB0aGUgZXhwZWN0ZWQgc3F1YXJlZCBkZXZpYXRpb24gZnJvbSB0aGUgbWVhbi4gSXQgaXMgYSAgbWVhc3VyZSBvZiB0aGUgZGlzcGVyc2lvbiBvZiByZXR1cm5zLiBUaGUgbWV0aG9kIEkndmUgdXNlZCB0byBjYWxjdWxhdGUgdGhlIHZhcmlhbmNlIG9mIGFuIGFzc2V0IGlzIHRoZSBtZWFuIG9mIHRoZSBzcXVhcmUgbWludXMgdGhlIHNxdWFyZSBvZiB0aGUgbWVhbi5cIiksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJiclwiLCBudWxsKSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChyZWFjdF9tYXRoamF4M18xLmRlZmF1bHQuQ29udGV4dCwgeyBpbnB1dDogJ3RleCcsIHNjcmlwdDogXCJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9tYXRoamF4LzIuNy4wL01hdGhKYXguanNcIiwgb3B0aW9uczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlU3R5bGU6ICdub25lJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXh0ZW5zaW9uczogWyd0ZXgyamF4LmpzJ10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGpheDogWydpbnB1dC9UZVgnLCAnb3V0cHV0L0hUTUwtQ1NTJ10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleDJqYXg6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlubGluZU1hdGg6IFtbJyQnLCAnJCddLCBbJ1xcXFwoJywgJ1xcXFwpJ11dLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheU1hdGg6IFtbJyQkJywgJyQkJ10sIFsnXFxcXFsnLCAnXFxcXF0nXV0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9jZXNzRXNjYXBlczogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgVGVYOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHRlbnNpb25zOiBbJ0FNU21hdGguanMnLCAnQU1Tc3ltYm9scy5qcycsICdub0Vycm9ycy5qcycsICdub1VuZGVmaW5lZC5qcyddXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9IH0sXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChyZWFjdF9tYXRoamF4M18xLmRlZmF1bHQuSHRtbCwgeyBodG1sOiB2YXJpYW5jZSB9KSkpLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYnJcIiwgbnVsbCksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIG51bGwsIFwiQWx0aG91Z2ggbm90IHVzdWFsbHkgdXNlZCBkaXJlY3RseSB0byBtYWtlIG9ic2VydmF0aW9ucyBhYm91dCBhbiBhc3NldCwgaXQgaXMgdXNlZCB3aXRoaW4gdGhlIGNhbGN1bGF0aW9ucyBvZiB2b2xhdGlsaXR5LCBjb3ZhcmlhbmNlIGFuZCBjb3JyZWxhdGlvbi4gSSBhZGRlZCB2YXJpYW5jZSBmb3IgY29tcGxldGVuZXNzIGFuZCB0byBwb2ludCBvdXQgdGhhdCB0aGUgdmFyaWFuY2UgYW5kIGNvdmFyaWFuY2Ugb2YgQlRDIGFyZSBlcXVhbC4gVGhlcmVmb3JlIHRoZSBjb3JyZWxhdGlvbiB3aWxsIGFsc28gYmUgMS4gVGhhdCBtZWFucyBteSBjYWxjdWxhdGlvbnMgb24gdGhpcyB3ZWJzaXRlIGFyZSByaWdodCFcIiksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJiclwiLCBudWxsKSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChyZWFjdF9tYXRoamF4M18xLmRlZmF1bHQuQ29udGV4dCwgeyBpbnB1dDogJ3RleCcsIHNjcmlwdDogXCJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9tYXRoamF4LzIuNy4wL01hdGhKYXguanNcIiwgb3B0aW9uczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlU3R5bGU6ICdub25lJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXh0ZW5zaW9uczogWyd0ZXgyamF4LmpzJ10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGpheDogWydpbnB1dC9UZVgnLCAnb3V0cHV0L0hUTUwtQ1NTJ10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleDJqYXg6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlubGluZU1hdGg6IFtbJyQnLCAnJCddLCBbJ1xcXFwoJywgJ1xcXFwpJ11dLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheU1hdGg6IFtbJyQkJywgJyQkJ10sIFsnXFxcXFsnLCAnXFxcXF0nXV0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9jZXNzRXNjYXBlczogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgVGVYOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHRlbnNpb25zOiBbJ0FNU21hdGguanMnLCAnQU1Tc3ltYm9scy5qcycsICdub0Vycm9ycy5qcycsICdub1VuZGVmaW5lZC5qcyddXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9IH0sXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChyZWFjdF9tYXRoamF4M18xLmRlZmF1bHQuSHRtbCwgeyBodG1sOiB2YXJpYW5jZXByb29mIH0pKSksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJiclwiLCBudWxsKSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChyZWFjdF9tYXRoamF4M18xLmRlZmF1bHQuQ29udGV4dCwgeyBpbnB1dDogJ3RleCcsIHNjcmlwdDogXCJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9tYXRoamF4LzIuNy4wL01hdGhKYXguanNcIiwgb3B0aW9uczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlU3R5bGU6ICdub25lJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXh0ZW5zaW9uczogWyd0ZXgyamF4LmpzJ10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGpheDogWydpbnB1dC9UZVgnLCAnb3V0cHV0L0hUTUwtQ1NTJ10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleDJqYXg6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlubGluZU1hdGg6IFtbJyQnLCAnJCddLCBbJ1xcXFwoJywgJ1xcXFwpJ11dLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheU1hdGg6IFtbJyQkJywgJyQkJ10sIFsnXFxcXFsnLCAnXFxcXF0nXV0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9jZXNzRXNjYXBlczogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgVGVYOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHRlbnNpb25zOiBbJ0FNU21hdGguanMnLCAnQU1Tc3ltYm9scy5qcycsICdub0Vycm9ycy5qcycsICdub1VuZGVmaW5lZC5qcyddXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9IH0sXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChyZWFjdF9tYXRoamF4M18xLmRlZmF1bHQuSHRtbCwgeyBodG1sOiB2YXJpYW5jZXByb29mMiB9KSkpLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYnJcIiwgbnVsbCksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiLCBudWxsLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImxpXCIsIG51bGwsIFwiVmFyaWFuY2UgY2Fubm90IGJlIG5lZ2F0aXZlIGFuZCB3aWxsIHVzdWFsbHkgYmUgbGFyZ2UuXCIpLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImxpXCIsIG51bGwsIFwiVGhlcmUgYXJlIG11bHRpcGxlIHdheXMgdG8gY2FsY3VsYXRlIHZhcmlhbmNlLlwiKSkpLFxyXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6ICdkZXNjLXZvbCcgfSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImgyXCIsIG51bGwsIFwiV2hhdCBpcyBWb2xhdGlsaXR5P1wiKSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwgbnVsbCwgXCJWb2xhdGlsaXR5LCBvciBzdGFuZGFyZCBkZXZpYXRpb24gaW4gbm9uLWZpbmFuY2UgdGVybXMsIGlzIGEgbWVhc3VyZSBvZiB0aGUgZGlzcGVyc2lvbiBvZiByZXR1cm5zIGZvciBhbiBhc3NldC4gSXQgaXMgdGhlIGJhY2tib25lIG9mIHBvcHVsYXIgbWFya2V0IGluY2lkYXRvcnMgc3VjaCBhcyBib2xsaW5nZXIgYmFuZHMgYW5kIG90aGVyIGNvbmZpZGVuY2UgaW50ZXJ2YWxzLiBJdCBpcyBjYWxjdWxhdGVkIHNpbXBseSB2aWEgdGhlIHNxdWFyZSByb290IG9mIHRoZSB2YXJpYW5jZS5cIiksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJiclwiLCBudWxsKSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChyZWFjdF9tYXRoamF4M18xLmRlZmF1bHQuQ29udGV4dCwgeyBpbnB1dDogJ3RleCcsIHNjcmlwdDogXCJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9tYXRoamF4LzIuNy4wL01hdGhKYXguanNcIiwgb3B0aW9uczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlU3R5bGU6ICdub25lJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXh0ZW5zaW9uczogWyd0ZXgyamF4LmpzJ10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGpheDogWydpbnB1dC9UZVgnLCAnb3V0cHV0L0hUTUwtQ1NTJ10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleDJqYXg6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlubGluZU1hdGg6IFtbJyQnLCAnJCddLCBbJ1xcXFwoJywgJ1xcXFwpJ11dLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheU1hdGg6IFtbJyQkJywgJyQkJ10sIFsnXFxcXFsnLCAnXFxcXF0nXV0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9jZXNzRXNjYXBlczogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgVGVYOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHRlbnNpb25zOiBbJ0FNU21hdGguanMnLCAnQU1Tc3ltYm9scy5qcycsICdub0Vycm9ycy5qcycsICdub1VuZGVmaW5lZC5qcyddXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9IH0sXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChyZWFjdF9tYXRoamF4M18xLmRlZmF1bHQuSHRtbCwgeyBodG1sOiB2b2xhdGlsaXR5IH0pKSksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJiclwiLCBudWxsKSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInVsXCIsIG51bGwsXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwibGlcIiwgbnVsbCwgXCJWb2xhdGlsaXR5IGNhbm5vdCBiZSBuZWdhdGl2ZSBhcyBpdCBpcyB0aGUgcmVzdWx0IG9mIGEgc3F1YXJlIHJvb3QuXCIpLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImxpXCIsIG51bGwsIFwiSGlnaCB2b2xhdGlsaXR5IGluZGljYXRlcyBhIGxhcmdlIHByaWNlIHJhbmdlIHdoaWxlIGxvdyB2b2xhdGlsaXR5IGluZGljYWVzIGEgc21hbGwgcHJpY2UgcmFuZ2UuXCIpKSksXHJcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogJ2Rlc2MtY292JyB9LFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDJcIiwgbnVsbCwgXCJXaGF0IGlzIENvdmFyaWFuY2U/XCIpLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCBudWxsLCBcIkNvdmFyaWFuY2UgbWVhc3VyZXMgdGhlIGV4dGVudCBvciBtYWduaXR1ZGUgdG8gd2hpY2ggdHdvIHZhcmlhYmxlcyBmbHVjdHVhdGUgb3IgbW92ZSB0b2dldGhlci4gSXQgaXMgbm90IG5vcm1hbGl6ZWQgc28gaXQgY291bGQgYmUgaGFyZCB0byB1c2UgdGhlIHZhcmlhYmxlIGFzIGl0IGlzLlwiKSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImJyXCIsIG51bGwpLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KHJlYWN0X21hdGhqYXgzXzEuZGVmYXVsdC5Db250ZXh0LCB7IGlucHV0OiAndGV4Jywgc2NyaXB0OiBcImh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL21hdGhqYXgvMi43LjAvTWF0aEpheC5qc1wiLCBvcHRpb25zOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VTdHlsZTogJ25vbmUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBleHRlbnNpb25zOiBbJ3RleDJqYXguanMnXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgamF4OiBbJ2lucHV0L1RlWCcsICdvdXRwdXQvSFRNTC1DU1MnXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4MmpheDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5saW5lTWF0aDogW1snJCcsICckJ10sIFsnXFxcXCgnLCAnXFxcXCknXV0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5TWF0aDogW1snJCQnLCAnJCQnXSwgWydcXFxcWycsICdcXFxcXSddXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2Nlc3NFc2NhcGVzOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBUZVg6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4dGVuc2lvbnM6IFsnQU1TbWF0aC5qcycsICdBTVNzeW1ib2xzLmpzJywgJ25vRXJyb3JzLmpzJywgJ25vVW5kZWZpbmVkLmpzJ11cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0gfSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KHJlYWN0X21hdGhqYXgzXzEuZGVmYXVsdC5IdG1sLCB7IGh0bWw6IGNvdmFyaWFuY2UgfSkpKSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImJyXCIsIG51bGwpLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwidWxcIiwgbnVsbCxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCBudWxsLCBcIklmIHRoZSBjb3ZhcmlhbmNlIGlzIHBvc2l0aXZlLCB0aGVuIHRoZSB0d28gdmFyaWFibGVzIHRlbmQgdG8gbW92ZSB0b2dldGhlci4gSGlnaCBjb3ZhcmlhbmNlIG1lYXN1cmVzIGhpZ2ggdmFyaWF0aW9uIGZyb20gdGhlaXIgZXhwZWN0ZWQgdmFsdWVzLiBcIiksXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwibGlcIiwgbnVsbCwgXCJJZiB0aGUgY292YXJpYW5jZSBpcyBuZWdhdGl2ZSwgdGhlbiB0aGUgdHdvIHZhcmlhYmxlcyB0ZW5kIHRvIG1vdmUgaW4gb3Bwb3NpdGUgZGlyZWN0aW9ucy4gTG93IGNvdmFyaWFuY2UgbWVhc3VyZXMgbG93IHZhcmlhdGlvbiBmcm9tIHRoZWlyIGV4cGVjdGVkIHZhbHVlcy5cIiksXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwibGlcIiwgbnVsbCwgXCJJZiB0aGUgY292YXJpYW5jZSBpcyAwLCB0aGVuIHRoZXJlIGlzIG5vIGxpbmVhciByZWxhdGlvbnNoaXAgYmV0d2VlbiB0aGUgdHdvIHZhcmlhYmxlcy5cIikpKSxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnZGVzYy1jb3InIH0sXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoMlwiLCBudWxsLCBcIldoYXQgaXMgQ29ycmVsYXRpb24/XCIpLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCBudWxsLCBcIkNvcnJlbGF0aW9uLCBzcGVjaWZpY2FsbHkgdGhlIGNvcnJlbGF0aW9uIGNvZWZmZWNpZW50IGhlcmUsIGlzIGEgdW5pdGxlc3MgbWVhc3VyZSBvZiB0aGUgc3RyZW5ndGggYW5kIGRpcmVjdGlvbiBvZiB0aGUgbGluZWFyIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHR3byB2YXJpYWJsZXMuIEl0IGlzIG1vcmUgdXNlZnVsIHRoYW4gY292YXJpYW5jZSBiZWNhdXNlIGl0IGlzIGRpbWVuc2lvbmxlc3MgYW5kIG5vcm1hbGl6ZWQgYmV0d2VlbiAtMSBhbmQgMS4gSXQgaXMgb2J0YWluZWQgYnkgZGl2aWRpbmcgdGhlIGNvdmFyaWFuY2Ugb2YgdHdvIHZhcmlhYmxlcyBieSB0aGUgcHJvZHVjdCBvZiB0aGVpciBzdGFuZGFyZCBkZXZpYXRpb25zOlwiKSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImJyXCIsIG51bGwpLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KHJlYWN0X21hdGhqYXgzXzEuZGVmYXVsdC5Db250ZXh0LCB7IGlucHV0OiAndGV4Jywgc2NyaXB0OiBcImh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL21hdGhqYXgvMi43LjAvTWF0aEpheC5qc1wiLCBvcHRpb25zOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZVN0eWxlOiAnbm9uZScsXHJcbiAgICAgICAgICAgICAgICAgICAgZXh0ZW5zaW9uczogWyd0ZXgyamF4LmpzJ10sXHJcbiAgICAgICAgICAgICAgICAgICAgamF4OiBbJ2lucHV0L1RlWCcsICdvdXRwdXQvSFRNTC1DU1MnXSxcclxuICAgICAgICAgICAgICAgICAgICB0ZXgyamF4OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlubGluZU1hdGg6IFtbJyQnLCAnJCddLCBbJ1xcXFwoJywgJ1xcXFwpJ11dLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5TWF0aDogW1snJCQnLCAnJCQnXSwgWydcXFxcWycsICdcXFxcXSddXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc0VzY2FwZXM6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBUZVg6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXh0ZW5zaW9uczogWydBTVNtYXRoLmpzJywgJ0FNU3N5bWJvbHMuanMnLCAnbm9FcnJvcnMuanMnLCAnbm9VbmRlZmluZWQuanMnXVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0gfSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQocmVhY3RfbWF0aGpheDNfMS5kZWZhdWx0Lkh0bWwsIHsgaHRtbDogY29ycmVsYXRpb24gfSkpLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYnJcIiwgbnVsbCksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiLCBudWxsLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImxpXCIsIG51bGwsIFwiQSBjb3JyZWxhdGlvbiBvZiAxIGluZGljYXRlcyBwZXJmZWN0IHBvc2l0aXZlIGNvcnJlbGF0aW9uIGJldHdlZW4gdHdvIHZhcmlhYmxlcy4gVGhlIGNsb3NlciB0aGUgY29ycmVsYXRpb24gaXMgdG8gMSwgdGhlIG1vcmUgdGhlIHZhcmlhYmxlcyB0ZW5kIHRvIG1vdmUgdG9nZXRoZXIgaW4gdGhlIHNhbWUgZGlyZWN0aW9uXCIpLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImxpXCIsIG51bGwsIFwiQSBjb3JyZWxhdGlvbiAtMSBvZiBpbmRpY2F0ZXMgcGVyZmVjdCBuZWdhdGl2ZSBjb3JyZWxhdGlvbiBiZXR3ZWVuIHR3byB2YXJpYWJsZXMuIFRoZSBjbG9zZXIgdGhlIGNvcnJlbGF0aW9uIGlzIHRvIC0xLCB0aGUgbW9yZSB0aGUgdmFyaWFibGVzIHRlbmQgdG8gbW92ZSBpbiBvcHBvc2l0ZSBkaXJlY3Rpb25zLlwiKSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCBudWxsLCBcIkEgY29ycmVsYXRpb24gb2YgMCBpbmRpY2F0ZXMgbm8gbGluZWFyIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHR3byB2YXJpYWJsZXMuIE1vdmVtZW50IG9mIG9uZSB2YXJpYWJsZSBwcm92aWRlcyBubyBwcmVkaWN0aW9uIHJlZ2FyZGluZyB0aGUgbW92ZW1lbnQgb2YgdGhlIG90aGVyIHZhcmlhYmxlLlwiKSkpKSk7XHJcbn07XHJcbmV4cG9ydHMuZGVmYXVsdCA9IEZBUTtcclxuIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxudmFyIFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xyXG52YXIgRm9vdGVyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZm9vdGVyXCIsIG51bGwsXHJcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgXCJDcmVhdGVkIGJ5IFN0ZXZlbiBGYWJyaXppbyAyMDIxXCIpKSk7XHJcbn07XHJcbmV4cG9ydHMuZGVmYXVsdCA9IEZvb3RlcjtcclxuIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xyXG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XHJcbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcclxuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XHJcbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XHJcbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cclxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XHJcbiAgICB9KTtcclxufTtcclxudmFyIF9fZ2VuZXJhdG9yID0gKHRoaXMgJiYgdGhpcy5fX2dlbmVyYXRvcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIGJvZHkpIHtcclxuICAgIHZhciBfID0geyBsYWJlbDogMCwgc2VudDogZnVuY3Rpb24oKSB7IGlmICh0WzBdICYgMSkgdGhyb3cgdFsxXTsgcmV0dXJuIHRbMV07IH0sIHRyeXM6IFtdLCBvcHM6IFtdIH0sIGYsIHksIHQsIGc7XHJcbiAgICByZXR1cm4gZyA9IHsgbmV4dDogdmVyYigwKSwgXCJ0aHJvd1wiOiB2ZXJiKDEpLCBcInJldHVyblwiOiB2ZXJiKDIpIH0sIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiAoZ1tTeW1ib2wuaXRlcmF0b3JdID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzOyB9KSwgZztcclxuICAgIGZ1bmN0aW9uIHZlcmIobikgeyByZXR1cm4gZnVuY3Rpb24gKHYpIHsgcmV0dXJuIHN0ZXAoW24sIHZdKTsgfTsgfVxyXG4gICAgZnVuY3Rpb24gc3RlcChvcCkge1xyXG4gICAgICAgIGlmIChmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgZXhlY3V0aW5nLlwiKTtcclxuICAgICAgICB3aGlsZSAoXykgdHJ5IHtcclxuICAgICAgICAgICAgaWYgKGYgPSAxLCB5ICYmICh0ID0gb3BbMF0gJiAyID8geVtcInJldHVyblwiXSA6IG9wWzBdID8geVtcInRocm93XCJdIHx8ICgodCA9IHlbXCJyZXR1cm5cIl0pICYmIHQuY2FsbCh5KSwgMCkgOiB5Lm5leHQpICYmICEodCA9IHQuY2FsbCh5LCBvcFsxXSkpLmRvbmUpIHJldHVybiB0O1xyXG4gICAgICAgICAgICBpZiAoeSA9IDAsIHQpIG9wID0gW29wWzBdICYgMiwgdC52YWx1ZV07XHJcbiAgICAgICAgICAgIHN3aXRjaCAob3BbMF0pIHtcclxuICAgICAgICAgICAgICAgIGNhc2UgMDogY2FzZSAxOiB0ID0gb3A7IGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSA0OiBfLmxhYmVsKys7IHJldHVybiB7IHZhbHVlOiBvcFsxXSwgZG9uZTogZmFsc2UgfTtcclxuICAgICAgICAgICAgICAgIGNhc2UgNTogXy5sYWJlbCsrOyB5ID0gb3BbMV07IG9wID0gWzBdOyBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgIGNhc2UgNzogb3AgPSBfLm9wcy5wb3AoKTsgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEodCA9IF8udHJ5cywgdCA9IHQubGVuZ3RoID4gMCAmJiB0W3QubGVuZ3RoIC0gMV0pICYmIChvcFswXSA9PT0gNiB8fCBvcFswXSA9PT0gMikpIHsgXyA9IDA7IGNvbnRpbnVlOyB9XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wWzBdID09PSAzICYmICghdCB8fCAob3BbMV0gPiB0WzBdICYmIG9wWzFdIDwgdFszXSkpKSB7IF8ubGFiZWwgPSBvcFsxXTsgYnJlYWs7IH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDYgJiYgXy5sYWJlbCA8IHRbMV0pIHsgXy5sYWJlbCA9IHRbMV07IHQgPSBvcDsgYnJlYWs7IH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAodCAmJiBfLmxhYmVsIDwgdFsyXSkgeyBfLmxhYmVsID0gdFsyXTsgXy5vcHMucHVzaChvcCk7IGJyZWFrOyB9XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRbMl0pIF8ub3BzLnBvcCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIF8udHJ5cy5wb3AoKTsgY29udGludWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgb3AgPSBib2R5LmNhbGwodGhpc0FyZywgXyk7XHJcbiAgICAgICAgfSBjYXRjaCAoZSkgeyBvcCA9IFs2LCBlXTsgeSA9IDA7IH0gZmluYWxseSB7IGYgPSB0ID0gMDsgfVxyXG4gICAgICAgIGlmIChvcFswXSAmIDUpIHRocm93IG9wWzFdOyByZXR1cm4geyB2YWx1ZTogb3BbMF0gPyBvcFsxXSA6IHZvaWQgMCwgZG9uZTogdHJ1ZSB9O1xyXG4gICAgfVxyXG59O1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbnZhciBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcclxudmFyIHJlYWN0XzEgPSByZXF1aXJlKFwicmVhY3RcIik7XHJcbnZhciBNYWluUGFnZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgIC8vc29tZSBvZiB0aGVzZSB2YXJpYWJsZXMgSSBuZWVkIHRvIGtlZXAgb3V0c2lkZSB0aGUgZm9sbG93aW5nIGZ1bmN0aW9uIGJlY2F1c2UgSSByZWNhbGwgdGhlbSBjb25zaXN0YW50bHkgYWZ0ZXIgZXZlcnkgZmV0Y2guIFNvIEkgZGVjbGFyZWQgdGhlbSBhbGwgaGVyZSBzbyBJIGNhbiBmaW5kIHRoZW0gZWFzaWx5LlxyXG4gICAgdmFyIGRhdGEgPSBbXTtcclxuICAgIHZhciBidGNWb2xhdGlsaXR5ID0gMDtcclxuICAgIHZhciBidGNNZWFuID0gMDtcclxuICAgIHZhciBidGNQcmljZUFycmF5ID0gW107XHJcbiAgICB2YXIgYnRjUmV0dXJuc0FycmF5ID0gW107XHJcbiAgICB2YXIgYWx0UHJpY2VBcnJheSA9IFtdO1xyXG4gICAgdmFyIGFsdFJldHVybnNBcnJheSA9IFtdO1xyXG4gICAgdmFyIG1lYW4gPSAwO1xyXG4gICAgdmFyIG1lYW5PZlRoZVNxdWFyZSA9IDA7XHJcbiAgICB2YXIgdmFyaWFuY2UgPSAwO1xyXG4gICAgdmFyIHZvbGF0aWxpdHkgPSAwO1xyXG4gICAgdmFyIGNvdmFyaWFuY2UgPSAwO1xyXG4gICAgdmFyIGNvcnJlbGF0aW9uID0gMDtcclxuICAgIGZ1bmN0aW9uIEZldGNoTk9XKCkge1xyXG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGdvRmV0Y2g7XHJcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcclxuICAgICAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6IHJldHVybiBbNCAvKnlpZWxkKi8sIGZldGNoKFwiaHR0cHM6Ly9hcGkuY29pbmdlY2tvLmNvbS9hcGkvdjMvY29pbnMvbWFya2V0cz92c19jdXJyZW5jeT11c2Qmb3JkZXI9bWFya2V0X2NhcF9kZXNjJnBlcl9wYWdlPTUwJnBhZ2U9MSZzcGFya2xpbmU9ZmFsc2VcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXMpIHsgcmV0dXJuIHJlcy5qc29uKCk7IH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgX2xvb3BfMSA9IGZ1bmN0aW9uIChpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS5wdXNoKHJlc3VsdFtpXS5pZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG15VFIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0cicpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBteUNvaW4wID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBteUNvaW4wLmlubmVyVGV4dCA9IHJlc3VsdFtpXS5tYXJrZXRfY2FwX3Jhbms7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbXlUUi5hcHBlbmRDaGlsZChteUNvaW4wKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbXlDb2luMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbXlDb2luMS5pbm5lclRleHQgPSByZXN1bHRbaV0uc3ltYm9sO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG15VFIuY2xhc3NMaXN0LmFkZChyZXN1bHRbaV0uaWQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG15VFIuYXBwZW5kQ2hpbGQobXlDb2luMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG15Q29pbjIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG15Q29pbjIuaW5uZXJUZXh0ID0gcmVzdWx0W2ldLmN1cnJlbnRfcHJpY2UudG9GaXhlZCgyKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBteVRSLmFwcGVuZENoaWxkKG15Q29pbjIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBteUNvaW4zID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBteUNvaW4zLmlubmVyVGV4dCA9IHJlc3VsdFtpXS5tYXJrZXRfY2FwLnRvTG9jYWxlU3RyaW5nKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbXlUUi5hcHBlbmRDaGlsZChteUNvaW4zKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCd0Ym9keScpLmFwcGVuZENoaWxkKG15VFIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZldGNoKFwiaHR0cHM6Ly9hcGkuY29pbmdlY2tvLmNvbS9hcGkvdjMvY29pbnMvXCIgKyByZXN1bHRbaV0uaWQgKyBcIi9tYXJrZXRfY2hhcnQ/dnNfY3VycmVuY3k9dXNkJmRheXM9MzEmaW50ZXJ2YWw9ZGFpbHlcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlcykgeyByZXR1cm4gcmVzLmpzb24oKTsgfSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3VsdG8pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdFtpXS5pZCA9PT0gJ2ludGVybmV0LWNvbXB1dGVyJyB8fFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0W2ldLmlkID09PSAndXNkLWNvaW4nIHx8XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHRbaV0uaWQgPT09ICdiaW5hbmNlLXVzZCcgfHxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdFtpXS5pZCA9PT0gJ2RhaScgfHxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdFtpXS5pZCA9PT0gJ3RldGhlcicpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vZmlsbCBpbiBibGFuayBjZWxscyB3aXRoIC1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIHogPSAwOyB6IDwgNTsgeisrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGJsYW5rRWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBibGFua0VsZS5pbm5lclRleHQgPSAnJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLlwiICsgZGF0YVtpXSkuYXBwZW5kQ2hpbGQoYmxhbmtFbGUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsdFByaWNlQXJyYXkgPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgYSA9IDA7IGEgPCAzMTsgYSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbHRQcmljZUFycmF5LnB1c2gocmVzdWx0by5wcmljZXNbYV1bMV0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsdFJldHVybnNBcnJheSA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBiID0gMDsgYiA8IDMwOyBiKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZXR1cm5zID0gMTAwICogKChhbHRQcmljZUFycmF5W2IgKyAxXSAtIGFsdFByaWNlQXJyYXlbYl0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoYWx0UHJpY2VBcnJheVtiXSkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0UmV0dXJuc0FycmF5LnB1c2gocmV0dXJucyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLzM2MTQ2IC0gNTY1MDcgLyA1NjUwNyA9IC0uMzZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVhbiA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGQgPSAwOyBkIDwgMzA7IGQrKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVhbiArPSAoYWx0UmV0dXJuc0FycmF5W2RdIC8gMzApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lYW5PZlRoZVNxdWFyZSA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGMgPSAwOyBjIDwgMzA7IGMrKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVhbk9mVGhlU3F1YXJlICs9IE1hdGgucG93KChhbHRSZXR1cm5zQXJyYXlbY10pLCAyKSAvIDMwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyaWFuY2UgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2b2xhdGlsaXR5ID0gMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyaWFuY2UgPSBtZWFuT2ZUaGVTcXVhcmUgLSBNYXRoLnBvdyhtZWFuLCAyKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdm9sYXRpbGl0eSA9IE1hdGguc3FydCh2YXJpYW5jZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuZXdURCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld1RELmlubmVyVGV4dCA9IChtZWFuKS50b0ZpeGVkKDIpLnRvU3RyaW5nKCkgKyAnJSc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuXCIgKyBkYXRhW2ldKS5hcHBlbmRDaGlsZChuZXdURCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuZXdlclREID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3ZXJURC5pbm5lclRleHQgPSB2YXJpYW5jZS50b0ZpeGVkKDIpLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuXCIgKyBkYXRhW2ldKS5hcHBlbmRDaGlsZChuZXdlclREKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG5ld2VzdFREID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3ZXN0VEQuaW5uZXJUZXh0ID0gdm9sYXRpbGl0eS50b0ZpeGVkKDIpLnRvU3RyaW5nKCkgKyAnJSc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuXCIgKyBkYXRhW2ldKS5hcHBlbmRDaGlsZChuZXdlc3RURCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHRbaV0uaWQgPT09ICdiaXRjb2luJykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnRjTWVhbiA9IG1lYW47XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBidGNWb2xhdGlsaXR5ID0gdm9sYXRpbGl0eTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ0Y1JldHVybnNBcnJheSA9IGFsdFJldHVybnNBcnJheTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgMzA7IGorKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ0Y1ByaWNlQXJyYXkucHVzaChyZXN1bHRvLnByaWNlc1tqXVsxXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY292YXJpYW5jZSA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvcnJlbGF0aW9uID0gMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCAzMDsgaysrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3ZhcmlhbmNlICs9ICgoKGFsdFJldHVybnNBcnJheVtrXSAtIG1lYW4pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKiAoYnRjUmV0dXJuc0FycmF5W2tdIC0gYnRjTWVhbikpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyAzMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29ycmVsYXRpb24gPSBjb3ZhcmlhbmNlIC8gKGJ0Y1ZvbGF0aWxpdHkgKiB2b2xhdGlsaXR5KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGFub3RoZXJURCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFub3RoZXJURC5pbm5lclRleHQgPSBjb3ZhcmlhbmNlLnRvRml4ZWQoMikudG9TdHJpbmcoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5cIiArIGRhdGFbaV0pLmFwcGVuZENoaWxkKGFub3RoZXJURCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBmaW5hbFREID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmluYWxURC5pbm5lclRleHQgPSBjb3JyZWxhdGlvbi50b0ZpeGVkKDUpLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuXCIgKyBkYXRhW2ldKS5hcHBlbmRDaGlsZChmaW5hbFREKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDUwOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfbG9vcF8xKGkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KV07XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBnb0ZldGNoID0gX2Euc2VudCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qL107XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgO1xyXG4gICAgcmVhY3RfMS51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIEZldGNoTk9XKCk7XHJcbiAgICB9LCBbXSk7XHJcbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBpZDogJ21haW4tY29udGFpbmVyJyB9LFxyXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoMVwiLCBudWxsLCBcIkJpdGNvaW4gQ292YXJpYW5jZXMgYW5kIENvcnJlbGF0aW9uc1wiKSxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDRcIiwgbnVsbCwgXCJCYXNlZCBvZmYgb2YgdGhlIGxhc3QgdGhpcnR5IGRhaWx5IGNsb3NlcyBvZiB0aGUgbWFya2V0XCIpLFxyXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0YWJsZVwiLCB7IGNsYXNzTmFtZTogJ2NvaW4tdGFibGUnIH0sXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0clwiLCB7IGNsYXNzTmFtZTogJ3RyMScgfSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0aFwiLCB7IGNsYXNzTmFtZTogJ3JhbmsnIH0sIFwiI1wiKSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0aFwiLCB7IGNsYXNzTmFtZTogJ25hbWUnIH0sIFwiTmFtZVwiKSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0aFwiLCB7IGNsYXNzTmFtZTogJ3ByaWNlJyB9LCBcIlByaWNlXCIpLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInRoXCIsIHsgY2xhc3NOYW1lOiAnbWFya2V0LWNhcCcgfSwgXCJNYXJrZXQgQ2FwXCIpLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInRoXCIsIHsgY2xhc3NOYW1lOiAncmV0dXJuJyB9LCBcIkVbWF1cIiksXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwidGhcIiwgeyBjbGFzc05hbWU6ICd2YXInIH0sIFwiVmFyXCIpLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInRoXCIsIHsgY2xhc3NOYW1lOiAnc2lnJyB9LCBcIlZvbFwiKSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0aFwiLCB7IGNsYXNzTmFtZTogJ2NvdmFyJyB9LCBcIkNvdmFyXCIpLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInRoXCIsIHsgY2xhc3NOYW1lOiAnY29yJyB9LCBcIkNvcnJcIikpLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwidGJvZHlcIiwgbnVsbCkpLFxyXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6ICdzcGFuLWNvbnRhaW5lcicgfSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgXCIqTm90ZSB0aGF0ICdTdGFibGUgQ29pbnMnIGRvIG5vdCBoYXZlIGRhdGEgY2FsY3VsYXRlZC4gSUNQIGRvZXMgbm90IGhhdmUgZW5vdWdoIGhpc3RvcmljYWwgZGF0YSBhdmFpbGFibGUuXCIpLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYnJcIiwgbnVsbCksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIG51bGwsIFwiKklmIHlvdSBzZWUgTmFOIHRyeSByZWZyZXNoaW5nIHRoZSBwYWdlLlwiKSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImJyXCIsIG51bGwpLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBudWxsLCBcIipDb2lucyBsaWtlIFNISUIgaGF2ZSBub256ZXJvIHByaWNlcy5cIikpKSk7XHJcbn07XHJcbmV4cG9ydHMuZGVmYXVsdCA9IE1haW5QYWdlO1xyXG4iLCJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG52YXIgUmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XHJcbnZhciByZWFjdF9yb3V0ZXJfZG9tXzEgPSByZXF1aXJlKFwicmVhY3Qtcm91dGVyLWRvbVwiKTtcclxudmFyIE5hdiA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcIm5hdlwiLCBudWxsLFxyXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiLCBudWxsLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwibGlcIiwgbnVsbCksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQocmVhY3Rfcm91dGVyX2RvbV8xLk5hdkxpbmssIHsgZXhhY3Q6IHRydWUsIGFjdGl2ZUNsYXNzbmFtZTogJ2FjdGl2ZScsIHRvOiAnLycgfSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCBudWxsLCBcIkhvbWVcIikpLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KHJlYWN0X3JvdXRlcl9kb21fMS5OYXZMaW5rLCB7IGFjdGl2ZWNsYXNzTmFtZTogJ2FjdGl2ZScsIHRvOiAnL2ZhcScgfSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCBudWxsLCBcIkZBUVwiKSksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQocmVhY3Rfcm91dGVyX2RvbV8xLk5hdkxpbmssIHsgYWN0aXZlQ2xhc3NOYW1lOiAnYWN0aXZlJywgdG86ICcvYWJvdXQnIH0sXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwibGlcIiwgbnVsbCwgXCJBYm91dFwiKSksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCBudWxsKSkpKTtcclxufTtcclxuZXhwb3J0cy5kZWZhdWx0ID0gTmF2O1xyXG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCIvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSAoZXhwb3J0cykgPT4ge1xuXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblx0fVxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG52YXIgUmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XHJcbnZhciBSZWFjdERPTSA9IHJlcXVpcmUoXCJyZWFjdC1kb21cIik7XHJcbnZhciBhcHBfMSA9IHJlcXVpcmUoXCIuL2FwcFwiKTtcclxuUmVhY3RET00ucmVuZGVyKFJlYWN0LmNyZWF0ZUVsZW1lbnQoYXBwXzEuZGVmYXVsdCwgbnVsbCksIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNyb290JykpO1xyXG4iXSwic291cmNlUm9vdCI6IiJ9